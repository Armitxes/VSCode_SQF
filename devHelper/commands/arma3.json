{
  "actionName": {
    "command": "actionName",
    "timestamp": "2021-01-22T21:34:09Z",
    "version": "0.50",
    "syntax": "<string>Name action",
    "docSyntax": "actionName action",
    "tags": "",
    "description": "Returns localized name of action.",
    "example": "'actionName' \"ReloadMagazine\"; // Returns \"Reload\"",
    "params": "<string>",
    "returns": "string"
  },
  "addAction": {
    "command": "addAction",
    "timestamp": "2021-01-22T21:22:08Z",
    "version": "0.50",
    "syntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip]",
    "docSyntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip]",
    "tags": "[AG] [EL]",
    "description": "Adds an entry to the action menu of an object. The action can only be activated when in proximity to the object 'and' looking at it. Adding an action to the player makes that action available to the player at all times. For event handling of user interaction see inGameUISetEventHandler.",
    "example": "// short and sweet player addAction [\"a useless action that does nothing\", {}]; player addAction [\"<t color='#FF0000'>This Useless Action Is RED</t>\", {hint \"RED\"}]; player addAction [\"Hint Hello!\", { hint format [\"Hello %1!\", name player] }]; player addAction [\"String Exec\", \"hint 'this is also compiled'\"];",
    "params": "agents <string> scheduled <anything> <number> <boolean> <boolean> key unscheduled <number> <number> <number> <number> <string> <string> agents <string> sqs <anything> <number> <boolean> <boolean> key unscheduled <number> <boolean> <string> <string>",
    "returns": "''script'' parameter)"
  },
  "addGoggles": {
    "command": "addGoggles",
    "timestamp": "2021-01-22T21:30:44Z",
    "version": "0.50",
    "syntax": "<object> addGoggles <string>",
    "docSyntax": "unit addGoggles type",
    "tags": "",
    "description": "Create a new item and try to link it into goggles (glasses) slot. Feature informative This command does 'not' add NVGs, which are hmd slot items (see linkItem instead).",
    "example": "player addGoggles \"G_Tactical_Clear\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addHandgunItem": {
    "command": "addHandgunItem",
    "timestamp": "2021-01-22T21:36:01Z",
    "version": "0.50",
    "syntax": "<object> addHandgunItem <string>",
    "docSyntax": "unit addHandgunItem item",
    "tags": "[AL] [EG]",
    "description": "Adds weapon item, including magazine, directly to the handgunWeapon. This is used for infantry weapons.",
    "example": "player addHandgunItem \"muzzle_snds_L\"; ",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addHeadgear": {
    "command": "addHeadgear",
    "timestamp": "2021-01-22T21:32:19Z",
    "version": "0.50",
    "syntax": "<object> addHeadgear <string>",
    "docSyntax": "unit addHeadgear item",
    "tags": "[AG] [EG]",
    "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.",
    "example": "player addHeadgear \"H_HelmetB\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addItem": {
    "command": "addItem",
    "timestamp": "2021-01-22T21:37:06Z",
    "version": "0.50",
    "syntax": "<object> addItem <string>",
    "docSyntax": "unit addItem item",
    "tags": "[AG] [EG]",
    "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.",
    "example": "// identical to bluforUnit linkItem \"NVGoggles\" addItem then assignItem makes the item go through through inventory storage and fail if storage space was missing bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addItemCargo": {
    "command": "addItemCargo",
    "timestamp": "2021-01-22T21:24:41Z",
    "version": "0.50",
    "syntax": "<object> addItemCargo <array>",
    "docSyntax": "box addItemCargo [item, count]",
    "tags": "[AL] [EL]",
    "description": "Creates new items and stores them in given container. Works with items, weapons, magazines, equipment and glasses but not backpacks. In the latter case use addBackpackCargo instead. For global variant see addItemCargoGlobal",
    "example": "supplyBox addItemCargo [\"optic_ARCO\", 10];",
    "params": "<object> <array> <string> <number>",
    "returns": "nothing"
  },
  "addItemCargoGlobal": {
    "command": "addItemCargoGlobal",
    "timestamp": "2021-01-22T21:34:53Z",
    "version": "0.50",
    "syntax": "<object> addItemCargoGlobal <array>",
    "docSyntax": "box addItemCargoGlobal [item, count]",
    "tags": "[AG] [EG]",
    "description": "Global variant of addItemCargo.",
    "example": "supplyBox addItemCargoGlobal [\"optic_Arco\", 10];",
    "params": "<object> <array> <string> <number>",
    "returns": "nothing"
  },
  "addMagazines": {
    "command": "addMagazines",
    "timestamp": "2021-01-22T21:29:11Z",
    "version": "0.50",
    "syntax": "<object> addMagazines [<string>, <number>]",
    "docSyntax": "unit addMagazines [magazineName, count]",
    "tags": "[AG] [EG]",
    "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.",
    "example": "player addMagazines [\"30Rnd_65x39_caseless_mag\", 3];",
    "params": "<object> <string> <number>",
    "returns": "nothing"
  },
  "addMissionEventHandler": {
    "command": "addMissionEventHandler",
    "timestamp": "2021-01-22T21:28:30Z",
    "version": "0.50",
    "syntax": "addMissionEventHandler [<string>, <code>, arguments]",
    "docSyntax": "addMissionEventHandler [event, expression, arguments]",
    "tags": "[EL]",
    "description": "Adds event handler attached to the current mission and returns event handler handle.",
    "example": "_id = _this }];",
    "params": "<string> <code> <array>",
    "returns": "number"
  },
  "addMusicEventHandler": {
    "command": "addMusicEventHandler",
    "timestamp": "2021-01-22T21:33:59Z",
    "version": "0.50",
    "syntax": "addMusicEventHandler [<string>, cfgmusic]",
    "docSyntax": "addMusicEventHandler [type, function]",
    "tags": "[EL]",
    "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Like addMissionEventHandler, the music event handler is attached to the mission.",
    "example": "private _ehID = addMusicEventHandler [\"MusicStart\", { hint str _this }];",
    "params": "<string> cfgmusic",
    "returns": "number"
  },
  "addPrimaryWeaponItem": {
    "command": "addPrimaryWeaponItem",
    "timestamp": "2021-01-22T21:43:43Z",
    "version": "0.50",
    "syntax": "<object> addPrimaryWeaponItem <string>",
    "docSyntax": "unit addPrimaryWeaponItem item",
    "tags": "[AL] [EG]",
    "description": "Adds weapon item, including magazine, directly to the primaryWeapon. This is used for infantry weapons.",
    "example": "player addPrimaryWeaponItem \"muzzle_snds_H\"; ",
    "params": "<object> <string>",
    "returns": "nothing | boolean"
  },
  "addSecondaryWeaponItem": {
    "command": "addSecondaryWeaponItem",
    "timestamp": "2021-01-22T21:24:38Z",
    "version": "0.50",
    "syntax": "<object> addSecondaryWeaponItem <string>",
    "docSyntax": "unit addSecondaryWeaponItem item",
    "tags": "[AL] [EG]",
    "description": "Adds weapon item, including magazine, directly to the secondaryWeapon. This is used for infantry weapons.",
    "example": "player addSecondaryWeaponItem \"muzzle_snds_L\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addUniform": {
    "command": "addUniform",
    "timestamp": "2021-01-22T21:45:56Z",
    "version": "0.50",
    "syntax": "<object> addUniform <string>",
    "docSyntax": "unit addUniform type",
    "tags": "[AG] [EG]",
    "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). Feature informative To check if a uniform is allowed use isUniformAllowed, and to force an incompatible uniform use forceAddUniform.",
    "example": "_unit addUniform \"U_B_CombatUniform_mcam\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addVest": {
    "command": "addVest",
    "timestamp": "2021-01-22T21:37:05Z",
    "version": "0.50",
    "syntax": "<object> addVest <string>",
    "docSyntax": "unit addVest type",
    "tags": "[AG] [EG]",
    "description": "Create a new vest and try to link it into vest slot.",
    "example": "player addVest \"V_TacVest_blk_POLICE\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "allDeadMen": {
    "command": "allDeadMen",
    "timestamp": "2021-01-22T21:36:58Z",
    "version": "0.50",
    "syntax": "'allDeadMen'",
    "docSyntax": "'allDeadMen'",
    "tags": "",
    "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.",
    "example": "{ deleteVehicle _x } forEach allDeadMen; ",
    "params": "",
    "returns": "array"
  },
  "allMapMarkers": {
    "command": "allMapMarkers",
    "timestamp": "2021-01-22T21:36:01Z",
    "version": "0.50",
    "syntax": "'allMapMarkers'",
    "docSyntax": "'allMapMarkers'",
    "tags": "",
    "description": "Returns all markers in map including user placed markers (_USER_DEFINED #). brbr Since Arma 3 v1.58 User defined markers have the following name \nformat: brhl_USER_DEFINED #PlayerID/MarkerID/ChannelID \nwhere: * PlayerID - unique network id of the player in \"PlayerConnected\" and \"PlayerDisconnected\" EHs * MarkerID - a marker counter id * ChannelID - id of the chat channel on which marker was placed (see currentChannel) For custom waypoint position (LShift+LMB) see customWaypointPosition",
    "example": "_markers = allMapMarkers;",
    "params": "",
    "returns": "array | string"
  },
  "allSites": {
    "command": "allSites",
    "timestamp": "2021-01-22T21:29:36Z",
    "version": "0.50",
    "syntax": "'allSites'",
    "docSyntax": "'allSites'",
    "tags": "",
    "description": "Return all sites in map. Feature Warning This command is considered deprecated and is no longer supported",
    "example": "_allSites = allSites;",
    "params": "",
    "returns": "array"
  },
  "animateDoor": {
    "command": "animateDoor",
    "timestamp": "2021-01-22T21:28:31Z",
    "version": "0.50",
    "syntax": "<object> animateDoor <array>",
    "docSyntax": "object animateDoor [doorname, phase, instant]",
    "tags": "[AG] [EG]",
    "description": "Animates a door on a vehicle. Animation is defined in config file in AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not \nCargoRamp_Open: heli animateDoor [\"Door_L\", 1];Feature important animateDoor phase param will be \nrounded: anything >0.5 will be rounded to 1 and <=0.5 will be rounded to 0. Therefore it is not possible to open a door half way with this command \nclass AnimationSources { \n\tclass CargoRamp_Open { \n\t\tsource = \"user\"; animPeriod = 5; initPhase = 0; \n\t};\n\tclass Door_L { \n\t\tsource = \"door\"; animPeriod = 1.6; \n\t};\n \n};\nTo animate doors or other sources that have \"user\" controller, use animate command, or even better, animateSource (recommended). Sources with \"hit\" controller can be animated with setHitPointDamage command applied to the name contained in hitpoint property.",
    "example": "Taru animateDoor [\"Door_1_source\", 1];",
    "params": "<object> <array> <string> <number> <boolean>",
    "returns": "nothing"
  },
  "assignAsTurret": {
    "command": "assignAsTurret",
    "timestamp": "2021-01-22T21:31:04Z",
    "version": "0.50",
    "syntax": "<object> assignAsTurret [<object>, <array>]",
    "docSyntax": "unit assignAsTurret [vehicle, [turretPath]]",
    "tags": "",
    "description": "Assigns the soldier to turret. FeatureinformativeSee <AI Group Vehicle Management> for more information.",
    "example": "player assignAsTurret [BIS_vehicle, [0,1] ];",
    "params": "<object> <array> <object> <array>",
    "returns": "nothing"
  },
  "assignedItems": {
    "command": "assignedItems",
    "timestamp": "2021-01-22T21:35:46Z",
    "version": "0.50",
    "syntax": "assignedItems <object>",
    "docSyntax": "assignedItems unit",
    "tags": "",
    "description": "Get array with all assigned items. The resulting Array is sorted \nlike: [Map, Compass, Watch, Radio, GPS, NVG, Binoculars]. But if something is missing it get's omitted so you can not be sure that some element is at a constant index. To return stored items see items and itemsWithMagazines.",
    "example": "hint str assignedItems player;",
    "params": "<object>",
    "returns": "array"
  },
  "assignItem": {
    "command": "assignItem",
    "timestamp": "2021-01-22T21:28:04Z",
    "version": "0.50",
    "syntax": "<object> assignItem <string>",
    "docSyntax": "unit assignItem item",
    "tags": "[AG] [EG]",
    "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.",
    "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "backpack": {
    "command": "backpack",
    "timestamp": "2021-01-22T21:42:52Z",
    "version": "0.50",
    "syntax": "backpack <object>",
    "docSyntax": "backpack unit",
    "tags": "",
    "description": "Returns a class of a backpack.",
    "example": "_classname = backpack player;",
    "params": "<object>",
    "returns": "string"
  },
  "backpackCargo": {
    "command": "backpackCargo",
    "timestamp": "2021-01-22T21:30:37Z",
    "version": "0.50",
    "syntax": "backpackCargo <object>",
    "docSyntax": "backpackCargo box",
    "tags": "",
    "description": "Get array with backpacks from ammo box (or any general weapon holder container).",
    "example": "hint str backpackCargo vehicle player;",
    "params": "<object>",
    "returns": "array"
  },
  "backpackItems": {
    "command": "backpackItems",
    "timestamp": "2021-01-22T21:30:10Z",
    "version": "0.50",
    "syntax": "backpackItems <object>",
    "docSyntax": "backpackItems unit",
    "tags": "",
    "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.",
    "example": "backpackItems player; // returns e.g [\"hgun_P07_F\", \"Titan_AT\"]",
    "params": "<object>",
    "returns": "array"
  },
  "backpackMagazines": {
    "command": "backpackMagazines",
    "timestamp": "2021-01-22T21:44:29Z",
    "version": "0.50",
    "syntax": "backpackMagazines <object>",
    "docSyntax": "backpackMagazines unit",
    "tags": "",
    "description": "Get array with all magazines from backpack of the given unit.",
    "example": "backpackMagazines player;</code> br code[ \"Titan AT Missile(1/1)[id/cr:16/0](2x)\" ]",
    "params": "<object>",
    "returns": "array | string"
  },
  "BIS_fnc_addCommMenuItem": {
    "command": "BIS_fnc_addCommMenuItem",
    "timestamp": "2021-01-23T00:10:05Z",
    "version": "0.50",
    "syntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem",
    "docSyntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem",
    "tags": "[AL] [EL]",
    "description": "Add communication menu to the given unit. The item will be available in the Communication menu and visualized in comm menu icon area.",
    "example": "_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem; _supportHeli = [player,\"Support_Request_CAS_Heli\",nil,nil,\"\"] call BIS_fnc_addCommMenuItem; codecomment// don't show notification",
    "params": "<object> <string> <anything> <anything> <string>",
    "returns": "number | bis_fnc_removecommmenuitem"
  },
  "BIS_fnc_addRespawnPosition": {
    "command": "BIS_fnc_addRespawnPosition",
    "timestamp": "2021-01-22T23:06:26Z",
    "version": "0.50",
    "syntax": "[target, position, name] call BIS_fnc_addRespawnPosition",
    "docSyntax": "[target, position, name] call BIS_fnc_addRespawnPosition",
    "tags": "[EG]",
    "description": "Add a respawn position for the arma3 Respawn Menu.",
    "example": "[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;",
    "params": "<namespace> position3d <string>",
    "returns": "array | bis_fnc_removerespawnposition"
  },
  "BIS_fnc_call": {
    "command": "BIS_fnc_call",
    "timestamp": "2021-01-23T00:18:34Z",
    "version": "0.50",
    "syntax": "[<anything>, <<code>>] call BIS_fnc_call",
    "docSyntax": "[params, code] call BIS_fnc_call",
    "tags": "",
    "description": "Execute given code with or without parameter.",
    "example": "[nowiki[\"Hello\"], {_this select 0);}] call BIS_fnc_call;",
    "params": "<anything> <code> <code>",
    "returns": "anything"
  },
  "BIS_fnc_codePerformance": {
    "command": "BIS_fnc_codePerformance",
    "timestamp": "2021-01-23T00:59:10Z",
    "version": "0.50",
    "syntax": "[<string>, arguments, cycles, display] call BIS_fnc_codePerformance",
    "docSyntax": "[expression, arguments, cycles, display] call BIS_fnc_codePerformance",
    "tags": "",
    "description": "300px|rightMeasures how much time it takes to execute given expression. Results may vary based on overall performance; use this function to compare alternative scripting approaches rather than to measure specific values. Upon function execution, window with results is opened. The user then has a choice to copy the result into clipboard or not. br This function is using diag_codePerformance command. br Keep in mind that this takes string, and that you can't pass codestr _code</code> as string because that add's curly braces to the string.",
    "example": "testArray = []; [\"testArray = testArray + [1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray set [count testArray, 1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray pushBack 1\"] call BIS_fnc_codePerformance; ",
    "params": "<string> <anything> <number> <display>",
    "returns": "number"
  },
  "BIS_fnc_endMission": {
    "command": "BIS_fnc_endMission",
    "timestamp": "2021-01-23T09:00:07Z",
    "version": "0.50",
    "syntax": "[<string>, <number>, <string>, <boolean>, code] call BIS_fnc_endMission",
    "docSyntax": "[nextMission, endingId, displayText, isSuccess, code] call BIS_fnc_endMission",
    "tags": "[EL]",
    "description": "Ends mission with the specified ending. Always ends with a 4 seconds black out effect. Featureinformative''nextMission'' and ''endingId'' parameters are assembled together to define which ending is called, in format nextMission_endType.",
    "example": "[\"mission2\", 1, \"You won\"] call BIS_fnc_endMission; endMission \"mission2_1\"",
    "params": "<string> <number> <string> <boolean> <code> <boolean> closing false <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_error": {
    "command": "BIS_fnc_error",
    "timestamp": "2021-01-23T09:15:44Z",
    "version": "0.50",
    "syntax": "[formatted,param2,...,param10] call BIS_fnc_error",
    "docSyntax": "[param1,param2,...,param10] call BIS_fnc_error",
    "tags": "",
    "description": "Log error message and display it (bottom of the UI). If it is called from a function, it'll include the function name before your content.<br/> Output \nis: \"''750px|left|An error logged by BIS_fnc_error.",
    "example": "[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;",
    "params": "formatted <anything>",
    "returns": "string"
  },
  "BIS_fnc_guiMessage": {
    "command": "BIS_fnc_guiMessage",
    "timestamp": "2021-08-21T19:57:56Z",
    "version": "0.50",
    "syntax": "[<string>, <string>, <array>, <boolean>, <display>, <boolean>] spawn BIS_fnc_guiMessage",
    "docSyntax": "[message, header, position, isCancel, parent, pause] spawn BIS_fnc_guiMessage",
    "tags": "[EL]",
    "description": "Shows customized native message box to user.",
    "example": "sqf[\"Hello World\"] spawn BIS_fnc_guiMessage;</sqf>",
    "params": "<string> <string> <array> <boolean> <display> <boolean> <string> <string> <boolean> <display> <boolean> <boolean>",
    "returns": "array | boolean | true | false | number"
  },
  "BIS_fnc_log": {
    "command": "BIS_fnc_log",
    "timestamp": "2021-01-23T09:55:02Z",
    "version": "0.50",
    "syntax": "<anything> call BIS_fnc_log",
    "docSyntax": "param call BIS_fnc_log",
    "tags": "",
    "description": "Log debug message.FeatureInformative'allowFunctionsLog' has to be set to '1' in the description.ext for this function to work.",
    "example": "diag_tickTime call BIS_fnc_log;",
    "params": "<anything>",
    "returns": "boolean"
  },
  "BIS_fnc_MP": {
    "command": "BIS_fnc_MP",
    "timestamp": "2021-01-22T22:58:17Z",
    "version": "0.50",
    "syntax": "[params, functionName, target, isSpawn, isPersistent] call BIS_fnc_MP",
    "docSyntax": "[params, functionName, target, isSpawn, isPersistent] call BIS_fnc_MP",
    "tags": "",
    "description": "Send function for remote execution (and executes locally if conditions are met).",
    "example": "[\"Imma spamming your log!\", \"BIS_fnc_log\"] call BIS_fnc_MP;",
    "params": "<anything> <string> <object> <boolean> <boolean> <anything> function everyone <boolean> called",
    "returns": "array"
  },
  "BIS_fnc_removeCommMenuItem": {
    "command": "BIS_fnc_removeCommMenuItem",
    "timestamp": "2021-01-23T10:35:12Z",
    "version": "0.50",
    "syntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem",
    "docSyntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem",
    "tags": "[EL]",
    "description": "Remove an item from the communication menu.",
    "example": "[player,2] call BIS_fnc_removeCommMenuItem;",
    "params": "<object> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_removeRespawnPosition": {
    "command": "BIS_fnc_removeRespawnPosition",
    "timestamp": "2021-01-23T10:26:40Z",
    "version": "0.50",
    "syntax": "[target,id] call BIS_fnc_removeRespawnPosition",
    "docSyntax": "[target,id] call BIS_fnc_removeRespawnPosition",
    "tags": "[EG]",
    "description": "Remove a respawn position added by BIS_fnc_addRespawnPosition.",
    "example": "nowiki[</nowiki>west, 1] call BIS_fnc_removeRespawnPosition;",
    "params": "<namespace> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_showNotification": {
    "command": "BIS_fnc_showNotification",
    "timestamp": "2021-01-23T20:24:40Z",
    "version": "0.50",
    "syntax": "[template, arguments] call BIS_fnc_showNotification",
    "docSyntax": "[template, arguments] call BIS_fnc_showNotification",
    "tags": "[EL]",
    "description": "Show a config-defined notification.",
    "example": "[\"TaskSucceeded\", [\"\", \"Disable the nuke\"]] call BIS_fnc_showNotification;",
    "params": "<string> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_timeToString": {
    "command": "BIS_fnc_timeToString",
    "timestamp": "2021-01-23T20:33:20Z",
    "version": "0.50",
    "syntax": "[<number>, <string>] call BIS_fnc_timeToString",
    "docSyntax": "[time, format] call BIS_fnc_timeToString",
    "tags": "[AL] [EL]",
    "description": "This function returns a 24-hour time as a string (or array) from a decimal.",
    "example": "_time = 7.36; [_time] call BIS_fnc_timeToString; // 07:21:36",
    "params": "<number> <string>",
    "returns": "string | array"
  },
  "blufor": {
    "command": "blufor",
    "timestamp": "2021-01-22T21:44:31Z",
    "version": "0.50",
    "syntax": "blufor",
    "docSyntax": "blufor",
    "tags": "",
    "description": "Pre-defined variable for the blufor side.",
    "example": "if (side player == blufor) then { hint \"BLUFOR\"; };",
    "params": "",
    "returns": "side"
  },
  "boundingBoxReal": {
    "command": "boundingBoxReal",
    "timestamp": "2021-01-22T21:41:46Z",
    "version": "0.50",
    "syntax": "boundingBoxReal <<object>>",
    "docSyntax": "boundingBoxReal object",
    "tags": "[AG]",
    "description": "right|200px Returns a raw bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.br The alternative syntax allows to specify clipping type to be used, which in some cases could make the result even more precise.",
    "example": "sqf private _bbr = boundingBoxReal vehicle player; private _p1 = _bbr select 0; private _p2 = _bbr select 1; private _maxWidth = abs ((_p2 select 0) - (_p1 select 0)); private _maxLength = abs ((_p2 select 1) - (_p1 select 1)); private _maxHeight = abs ((_p2 select 2) - (_p1 select 2)); </sqf>",
    "params": "<object> <number> <object>",
    "returns": "positionrelative, as well as (since gviarma31.92size= 0.75) bounding box sphere radius, to format [nowiki[xmin, ymin, zmin],[xmax, ymax, zmax], boundingsphereradius]"
  },
  "buldozer_loadNewRoads": {
    "command": "buldozer_loadNewRoads",
    "timestamp": "2021-01-22T21:39:08Z",
    "version": "0.50",
    "syntax": "buldozer_loadNewRoads <string>",
    "docSyntax": "buldozer_loadNewRoads path",
    "tags": "",
    "description": "Generates new roads. Working only in buldozer.",
    "example": "_loaded = buldozer_loadNewRoads \"C:/A3/Map_Stratis/data/roads/\"",
    "params": "<string>",
    "returns": "boolean"
  },
  "buldozer_reloadOperMap": {
    "command": "buldozer_reloadOperMap",
    "timestamp": "2021-01-22T21:35:36Z",
    "version": "0.50",
    "syntax": "buldozer_reloadOperMap",
    "docSyntax": "buldozer_reloadOperMap",
    "tags": "",
    "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.",
    "example": "buldozer_reloadOperMap;",
    "params": "",
    "returns": "nothing"
  },
  "cancelSimpleTaskDestination": {
    "command": "cancelSimpleTaskDestination",
    "timestamp": "2021-01-22T21:56:20Z",
    "version": "0.50",
    "syntax": "cancelSimpleTaskDestination <task>",
    "docSyntax": "cancelSimpleTaskDestination task",
    "tags": "",
    "description": "Cancels a simple task destination.",
    "example": "cancelSimpleTaskDestination myTask; ",
    "params": "<task>",
    "returns": "nothing"
  },
  "className": {
    "command": "className",
    "timestamp": "2021-01-22T21:59:11Z",
    "version": "0.50",
    "syntax": "className <location>",
    "docSyntax": "className location",
    "tags": "",
    "description": "Returns short name of location. For config class name, see configName",
    "example": "_shortName = className myLocation;",
    "params": "<location>",
    "returns": "string"
  },
  "clearAllItemsFromBackpack": {
    "command": "clearAllItemsFromBackpack",
    "timestamp": "2021-01-22T22:01:02Z",
    "version": "0.50",
    "syntax": "clearAllItemsFromBackpack <object>",
    "docSyntax": "clearAllItemsFromBackpack unit",
    "tags": "",
    "description": "Removes all items from backpack of a unit.",
    "example": "clearAllItemsFromBackpack player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "clearBackpackCargo": {
    "command": "clearBackpackCargo",
    "timestamp": "2021-01-22T21:56:38Z",
    "version": "0.50",
    "syntax": "clearBackpackCargo <object>",
    "docSyntax": "clearBackpackCargo box",
    "tags": "",
    "description": "Removes all backpacks from ammo box (or any general weapon holder container).",
    "example": "clearBackpackCargo myBox;",
    "params": "<object>",
    "returns": "nothing"
  },
  "clearItemCargo": {
    "command": "clearItemCargo",
    "timestamp": "2021-01-22T21:55:39Z",
    "version": "0.50",
    "syntax": "clearItemCargo <object>",
    "docSyntax": "clearItemCargo box",
    "tags": "",
    "description": "Removes all items from ammo box (or any general weapon holder container).",
    "example": "clearItemCargo myBox;",
    "params": "<object>",
    "returns": "nothing"
  },
  "clearItemCargoGlobal": {
    "command": "clearItemCargoGlobal",
    "timestamp": "2021-01-22T22:02:16Z",
    "version": "0.50",
    "syntax": "clearItemCargoGlobal <object>",
    "docSyntax": "clearItemCargoGlobal box",
    "tags": "[AG] [EG]",
    "description": "Removes all items from ammo box (or any general weapon holder container). It also removes vests and uniforms.",
    "example": "clearItemCargoGlobal _ammoBox;",
    "params": "<object>",
    "returns": "nothing"
  },
  "commandArtilleryFire": {
    "command": "commandArtilleryFire",
    "timestamp": "2021-01-22T22:06:03Z",
    "version": "0.50",
    "syntax": "<object> commandArtilleryFire [positionagl, cfgmagazines, <number>]",
    "docSyntax": "unit commandArtilleryFire [position, type, rounds]",
    "tags": "[AL]",
    "description": "Orders an artillery unit to fire a burst on the given position (via the radio).",
    "example": "Mortar commandArtilleryFire [nowiki[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];",
    "params": "<object> positionagl cfgmagazines <number>",
    "returns": "nothing"
  },
  "createSite": {
    "command": "createSite",
    "timestamp": "2021-01-22T22:01:27Z",
    "version": "0.50",
    "syntax": "<string> createSite <position>",
    "docSyntax": "type createSite pos",
    "tags": "",
    "description": "Create a new site. Feature Warning This command is considered deprecated and is no longer supported",
    "example": "-",
    "params": "<string> <position>",
    "returns": "object"
  },
  "ctrlChecked": {
    "command": "ctrlChecked",
    "timestamp": "2021-01-22T22:07:34Z",
    "version": "0.50",
    "syntax": "ctrlChecked <<control>>",
    "docSyntax": "ctrlChecked control",
    "tags": "",
    "description": "Returns the current state of given CT_CHECKBOXES control. Since Arma 3 v1.72 it is possible to query multiple checkboxes by providing checkbox index. For more information see CT_CHECKBOXES.Feature Informative The hl\"CheckBoxesSelChanged\" control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command",
    "example": "ctrlChecked _control;",
    "params": "<control> <control> <number>",
    "returns": "boolean | true | false"
  },
  "ctrlHTMLLoaded": {
    "command": "ctrlHTMLLoaded",
    "timestamp": "2021-01-22T21:59:28Z",
    "version": "0.50",
    "syntax": "ctrlHTMLLoaded <control>",
    "docSyntax": "ctrlHTMLLoaded control",
    "tags": "",
    "description": "Returns true when HTML content was successfully loaded.",
    "example": "_control htmlLoad \"test.html\"; if (!ctrlHTMLLoaded _control) then { hint \"Loading test.html failed!\"; }; ",
    "params": "<control>",
    "returns": "boolean"
  },
  "ctrlIDC": {
    "command": "ctrlIDC",
    "timestamp": "2021-01-22T21:59:24Z",
    "version": "0.50",
    "syntax": "ctrlIDC <control>",
    "docSyntax": "ctrlIDC control",
    "tags": "",
    "description": "Returns control IDC.",
    "example": "ctrlIDC _ctrl;",
    "params": "<control>",
    "returns": "number"
  },
  "ctrlIDD": {
    "command": "ctrlIDD",
    "timestamp": "2021-01-22T21:59:36Z",
    "version": "0.50",
    "syntax": "ctrlIDD <display>",
    "docSyntax": "ctrlIDD display",
    "tags": "",
    "description": "Returns display IDD.",
    "example": "ctrlIDD findDisplay 46; //46",
    "params": "<display>",
    "returns": "number"
  },
  "ctrlSetChecked": {
    "command": "ctrlSetChecked",
    "timestamp": "2021-01-22T21:59:02Z",
    "version": "0.50",
    "syntax": "<<control>> ctrlSetChecked <boolean>",
    "docSyntax": "control ctrlSetChecked checked",
    "tags": "",
    "description": "Sets checked state of a CT_CHECKBOXES control.",
    "example": "_control ctrlSetChecked true;",
    "params": "<control> <boolean> <control> <array> <number> <boolean>",
    "returns": "nothing"
  },
  "ctrlTextHeight": {
    "command": "ctrlTextHeight",
    "timestamp": "2021-01-22T22:53:45Z",
    "version": "0.50",
    "syntax": "ctrlTextHeight <control>",
    "docSyntax": "ctrlTextHeight control",
    "tags": "",
    "description": "Returns the control text height. Supported control types \nare: * CT_STATIC * CT_STRUCTURED_TEXT * CT_EDIT Since Arma 3 v2.05.147765 control types \nadded: * CT_XKEYDESC * CT_XBUTTON * CT_SHORTCUTBUTTON * CT_BUTTON * CT_ACTIVETEXT",
    "example": "_h = ctrlTextHeight _ctrl;",
    "params": "<control>",
    "returns": "number"
  },
  "currentMagazineDetail": {
    "command": "currentMagazineDetail",
    "timestamp": "2021-01-22T22:50:00Z",
    "version": "0.50",
    "syntax": "currentMagazineDetail <object>",
    "docSyntax": "currentMagazineDetail object",
    "tags": "",
    "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.",
    "example": "_currentMagazineDetail = currentMagazineDetail player; cc\"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"",
    "params": "<object>",
    "returns": "string"
  },
  "customChat": {
    "command": "customChat",
    "timestamp": "2021-01-22T22:50:27Z",
    "version": "0.50",
    "syntax": "<object> customChat [custom, <string>]",
    "docSyntax": "unit customChat [customChannelID, message]",
    "tags": "[AG] [EL]",
    "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with assigned radio item (such as '''\"ItemRadio\"''') to see or transmit the messages. A radio item must have the property icsimulation CfgWeapons config.",
    "example": "_unit customChat [1, \"Hi, I am a custom chat message\"];",
    "params": "<object> custom <string>",
    "returns": "nothing"
  },
  "customRadio": {
    "command": "customRadio",
    "timestamp": "2021-01-22T22:43:44Z",
    "version": "0.50",
    "syntax": "<object> customRadio [custom, <string>]",
    "docSyntax": "unit customRadio [customChannelID, message]",
    "tags": "[AG] [EL]",
    "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol. Feature Important The unit must have an assigned radio item (such as '''\"ItemRadio\"''') to see or transmit the messages. A radio item must have the property icsimulation CfgWeapons config. Feature Informative When transmitting unit gets killed, transmission will be interrupted. However when receiving unit gets killed, the transmission continues to play.",
    "example": "_soldierOne customRadio [1, \"WordEnemy\"];",
    "params": "<object> custom <string>",
    "returns": "nothing"
  },
  "debriefingText": {
    "command": "debriefingText",
    "timestamp": "2021-01-22T22:48:17Z",
    "version": "0.50",
    "syntax": "debriefingText <string>",
    "docSyntax": "debriefingText end",
    "tags": "",
    "description": "Returns debriefing text of provided end.",
    "example": "_deathText = debriefingText \"endDeath\";",
    "params": "<string>",
    "returns": "string"
  },
  "deleteSite": {
    "command": "deleteSite",
    "timestamp": "2021-01-22T22:42:41Z",
    "version": "0.50",
    "syntax": "deleteSite <object>",
    "docSyntax": "deleteSite site",
    "tags": "",
    "description": "Removes the site. Feature Warning This command is considered deprecated and is no longer supported",
    "example": "-",
    "params": "<object>",
    "returns": "nothing"
  },
  "disableCollisionWith": {
    "command": "disableCollisionWith",
    "timestamp": "2021-01-22T22:51:53Z",
    "version": "0.50",
    "syntax": "<object> disableCollisionWith <object>",
    "docSyntax": "vehicle1 disableCollisionWith vehicle2",
    "tags": "[AL] [EG]",
    "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects. The collision is always disabled for both objects in the arguments, i.e. vehicle1 with vehicle2 and vehicle2 with vehicle1 FeatureimportantCommand has to be executed where objects are local, and as long as they don't change locality, the effect of this command will be global.br If the two objects are not local to the same computer, then it has to be executed on both computers to achieve the desired effect.br If one or both objects change locality, the command needs to be executed again on the new owner's machine(s) to maintain the effect. FeatureWarningEach object can contain only 1 reference to the object it disabled collision with. Thus trying to disable collisions with multiple objects will overwrite object previously set for disable collision",
    "example": "[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "distanceSqr": {
    "command": "distanceSqr",
    "timestamp": "2021-01-22T22:49:07Z",
    "version": "0.50",
    "syntax": "<object> distanceSqr <object>",
    "docSyntax": "var1 distanceSqr var2",
    "tags": "",
    "description": "Computes the WikipediaEuclidean_distance#Squared_Euclidean_distancesquared distance between two objects or positions.",
    "example": "player distanceSqr (leader player)",
    "params": "<object> <object>",
    "returns": "number"
  },
  "doArtilleryFire": {
    "command": "doArtilleryFire",
    "timestamp": "2021-01-22T22:47:40Z",
    "version": "0.50",
    "syntax": "<object> doArtilleryFire [positionagl, cfgmagazines, <number>]",
    "docSyntax": "unit doArtilleryFire [position, type, rounds]",
    "tags": "[AL]",
    "description": "Orders an artillery unit to fire a burst on the given position (silently).",
    "example": "Mortar doArtilleryFire [nowiki[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];",
    "params": "<object> positionagl cfgmagazines <number>",
    "returns": "nothing"
  },
  "doorPhase": {
    "command": "doorPhase",
    "timestamp": "2021-01-22T22:50:54Z",
    "version": "0.50",
    "syntax": "<object> <string>Phase door",
    "docSyntax": "object doorPhase door",
    "tags": "",
    "description": "Return animation phase of door on vehicle.",
    "example": "_phase = heli doorPhase \"door_L\";",
    "params": "<object> <string>",
    "returns": "number"
  },
  "drawIcon3D": {
    "command": "drawIcon3D",
    "timestamp": "2021-01-22T22:48:18Z",
    "version": "0.50",
    "syntax": "drawIcon3D [<string>, color, positionagl, <number>, <number>, <number>, <string>, shadow, <number>, <string>, <string>, <boolean>, <number>, <number>]",
    "docSyntax": "drawIcon3D [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]",
    "tags": "",
    "description": "Draws an icon at the given position in the game world. This command has to be executed every frame. Use the Draw3D Mission Event Handler (which is executed every frame if the user can see the icon).br In order for the results of this command to be visible through a custom camera, enable HUD with visual (render time scope) variant of position commands, such as getPosASLVisual. * The ''width'' and ''height'' parameters are multipliers for activeWidth and activeHeight set in config. So for example, if one needs to create an icon half the screen wide (icsafeZoneW / 2) and half the screen tall (icsafeZoneH / 2), divide these by the config values \nrespectfully: sqf private _iconWidth = (safeZoneW / 2) / getNumber (configFile >> \"CfgInGameUI\" >> \"Cursor\" >> \"activeWidth\"); private _iconHeight = (safeZoneH / 2) / getNumber (configFile >> \"CfgInGameUI\" >> \"Cursor\" >> \"activeHeight\"); </sqf>",
    "example": "Icon and text: sqf addMissionEventHandler [\"Draw3D\", { drawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASLVisual cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"]; }]; </sqf>",
    "params": "<string> positionagl <number> <number> <number> <string> 0 <number> <string> <string> <boolean> <number> <number>",
    "returns": "nothing"
  },
  "drawLine3D": {
    "command": "drawLine3D",
    "timestamp": "2021-01-22T22:52:28Z",
    "version": "0.50",
    "syntax": "drawLine3D [positionagl, positionagl, color]",
    "docSyntax": "drawLine3D [start, end, color]",
    "tags": "",
    "description": "Draws a line of a given colour between two 3D positions in the current frame. To be used mostly in a \"Draw3D\" mission event handler.",
    "example": "onEachFrame { drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]]; };",
    "params": "positionagl positionagl color",
    "returns": "nothing"
  },
  "enableCaustics": {
    "command": "enableCaustics",
    "timestamp": "2021-01-22T22:55:06Z",
    "version": "0.50",
    "syntax": "enableCaustics <boolean>",
    "docSyntax": "enableCaustics bool",
    "tags": "",
    "description": "Enable/disable caustics drawing.",
    "example": "enableCaustics true",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "enableCollisionWith": {
    "command": "enableCollisionWith",
    "timestamp": "2021-01-22T22:50:34Z",
    "version": "0.50",
    "syntax": "<object> enableCollisionWith <object>",
    "docSyntax": "vehicle1 enableCollisionWith vehicle2",
    "tags": "[AL] [EG]",
    "description": "Cancels the effects of disableCollisionWith. The collision is always enabled for both objects in the arguments, i.e. vehicle1 with vehicle2 and vehicle2 with vehicle1 FeatureWarningEach object can contain only 1 reference to the object it disabled collision with. This command sets this reference to null. Therefore the command might not work as expected when trying to enable collisions with some objects but not other.",
    "example": "[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "enableFatigue": {
    "command": "enableFatigue",
    "timestamp": "2021-01-22T22:49:55Z",
    "version": "0.50",
    "syntax": "<object> <boolean>Fatigue enable",
    "docSyntax": "unit enableFatigue enable",
    "tags": "[AL] [EG]",
    "description": "Enables/Disables the person's fatigue.",
    "example": "player enableFatigue false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "enableGunLights": {
    "command": "enableGunLights",
    "timestamp": "2021-04-20T08:27:40Z",
    "version": "0.50",
    "syntax": "<group> enableGunLights <boolean>",
    "docSyntax": "target enableGunLights state",
    "tags": "[AL] [EG]",
    "description": "Toggles the target group's gun light(s).",
    "example": "_group enableGunLights false;",
    "params": "<group> <boolean> <group> <string>",
    "returns": "nothing"
  },
  "eyeDirection": {
    "command": "eyeDirection",
    "timestamp": "2021-01-22T23:41:40Z",
    "version": "0.50",
    "syntax": "eyeDirection <object>",
    "docSyntax": "eyeDirection unit",
    "tags": "[AG]",
    "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).",
    "example": "can = \"Land_Can_V3_F\" createVehicle position player; onEachFrame { can setPosASL [ (eyePos player select 0) + (eyeDirection player select 0), (eyePos player select 1) + (eyeDirection player select 1), (eyePos player select 2) + (eyeDirection player select 2) ] } ",
    "params": "<object>",
    "returns": "array"
  },
  "firstBackpack": {
    "command": "firstBackpack",
    "timestamp": "2021-01-23T00:11:19Z",
    "version": "0.50",
    "syntax": "firstBackpack <object>",
    "docSyntax": "firstBackpack box",
    "tags": "",
    "description": "Returns the first stored backpack.",
    "example": "myVariable = firstBackpack myBox;",
    "params": "<object>",
    "returns": "object"
  },
  "forceWeaponFire": {
    "command": "forceWeaponFire",
    "timestamp": "2021-01-22T23:10:56Z",
    "version": "0.50",
    "syntax": "<object> forceWeaponFire [<string>, <string>]",
    "docSyntax": "unit forceWeaponFire [muzzle, firemode]",
    "tags": "[AL] [EG]",
    "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on player. See \nalso: BIS_fnc_fire",
    "example": "_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"]; _unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"]; _unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"]; _unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"]; _unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"]; _unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"]; _unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"]; _unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"]; _unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];",
    "params": "<object> <string> <string>",
    "returns": "nothing"
  },
  "freeLook": {
    "command": "freeLook",
    "timestamp": "2021-01-22T23:46:16Z",
    "version": "0.50",
    "syntax": "freeLook",
    "docSyntax": "freeLook",
    "tags": "",
    "description": "Returns if freelook is active on the current machine's controlled character.",
    "example": "if freeLook then { systemChat \"Quit looking around, soldier!\"; }; ",
    "params": "",
    "returns": "boolean | true | false"
  },
  "getArtilleryAmmo": {
    "command": "getArtilleryAmmo",
    "timestamp": "2021-01-22T23:12:03Z",
    "version": "0.50",
    "syntax": "getArtilleryAmmo <array>",
    "docSyntax": "getArtilleryAmmo artilleryList",
    "tags": "[AG]",
    "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.",
    "example": "if (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [ _mortar1, _mortar2, _mortar3, _mortar4 ]) then { hint \"Sir, we have white flares, Sir!\"; };",
    "params": "<array>",
    "returns": "array | string"
  },
  "getArtilleryComputerSettings": {
    "command": "getArtilleryComputerSettings",
    "timestamp": "2021-01-22T23:11:31Z",
    "version": "0.50",
    "syntax": "'getArtilleryComputerSettings'",
    "docSyntax": "'getArtilleryComputerSettings'",
    "tags": "",
    "description": "Returns settings from artillery computer currently opened by player.",
    "example": "hint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]",
    "params": "",
    "returns": "array"
  },
  "getBleedingRemaining": {
    "command": "getBleedingRemaining",
    "timestamp": "2021-01-23T00:59:34Z",
    "version": "0.50",
    "syntax": "getBleedingRemaining <object>",
    "docSyntax": "getBleedingRemaining unit",
    "tags": "",
    "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.",
    "example": "_bleedingRemaining = getBleedingRemaining _unit; ",
    "params": "<object>",
    "returns": "number"
  },
  "getBurningValue": {
    "command": "getBurningValue",
    "timestamp": "2021-01-22T23:14:58Z",
    "version": "0.50",
    "syntax": "getBurningValue <object>",
    "docSyntax": "getBurningValue unit",
    "tags": "",
    "description": "Returns how much the unit is exposed to fire damage.",
    "example": "private _fireDamage = getBurningValue player;",
    "params": "<object>",
    "returns": "number"
  },
  "getDescription": {
    "command": "getDescription",
    "timestamp": "2021-01-23T00:45:36Z",
    "version": "0.50",
    "syntax": "getDescription <object>",
    "docSyntax": "getDescription unit",
    "tags": "",
    "description": "Returns the string representation of unit as an four slots array.",
    "example": "getDescription player; cc(UAV Operator) ccreturns [\"B_soldier_UAV_F\", \"Combat Fatigues (MTP)\", \"Carrier Special Rig (Green)\", \"B_UAV_01_backpack_F\"]",
    "params": "<object>",
    "returns": "array | string"
  },
  "getFatigue": {
    "command": "getFatigue",
    "timestamp": "2021-01-23T00:55:39Z",
    "version": "0.50",
    "syntax": "getFatigue <object>",
    "docSyntax": "getFatigue unit",
    "tags": "[AG]",
    "description": "Returns fatigue of given unit.",
    "example": "value = getFatigue player; ",
    "params": "<object>",
    "returns": "number"
  },
  "getItemCargo": {
    "command": "getItemCargo",
    "timestamp": "2021-01-23T00:38:08Z",
    "version": "0.50",
    "syntax": "getItemCargo <object>",
    "docSyntax": "getItemCargo box",
    "tags": "[AG]",
    "description": "Returns all items names and count from ammo box (or any general weapon holder container).",
    "example": "hint str getItemCargo cursorTarget;",
    "params": "<object>",
    "returns": "array"
  },
  "getOxygenRemaining": {
    "command": "getOxygenRemaining",
    "timestamp": "2021-01-22T23:36:14Z",
    "version": "0.50",
    "syntax": "getOxygenRemaining <object>",
    "docSyntax": "getOxygenRemaining unit",
    "tags": "",
    "description": "Returns amount of remaining oxygen.",
    "example": "_oxygen = getOxygenRemaining player; ",
    "params": "<object>",
    "returns": "number"
  },
  "getPosASLW": {
    "command": "getPosASLW",
    "timestamp": "2021-01-23T00:29:25Z",
    "version": "0.50",
    "syntax": "getPosASLW <object>",
    "docSyntax": "getPosASLW obj",
    "tags": "[AG]",
    "description": "Returns the object position height above water surface (waves and pond objects included).",
    "example": "_pos = getPosASLW _diver; ",
    "params": "<object>",
    "returns": "positionaslw"
  },
  "goggles": {
    "command": "goggles",
    "timestamp": "2021-01-23T09:27:38Z",
    "version": "0.50",
    "syntax": "goggles <object>",
    "docSyntax": "goggles unit",
    "tags": "[AG]",
    "description": "Returns name of currently used goggles (for NVGoggles use hmd).",
    "example": "_goggles = goggles assaultDiver; //G_Diving ",
    "params": "<object>",
    "returns": "string"
  },
  "groupFromNetId": {
    "command": "groupFromNetId",
    "timestamp": "2021-01-23T09:04:12Z",
    "version": "0.50",
    "syntax": "groupFromNetId <string>",
    "docSyntax": "groupFromNetId id",
    "tags": "",
    "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.",
    "example": "_group = groupFromNetId \"4:45\";",
    "params": "<string>",
    "returns": "group"
  },
  "groupId": {
    "command": "groupId",
    "timestamp": "2021-01-23T09:13:50Z",
    "version": "0.50",
    "syntax": "<group>Id group",
    "docSyntax": "groupId group",
    "tags": "[AG]",
    "description": "Returns group name.",
    "example": "_name = groupId (group player);",
    "params": "<group>",
    "returns": "string"
  },
  "gusts": {
    "command": "gusts",
    "timestamp": "2021-01-23T09:00:57Z",
    "version": "0.50",
    "syntax": "'gusts'",
    "docSyntax": "'gusts'",
    "tags": "",
    "description": "Return the current gusts value. Scale is 0 to 1.",
    "example": "_gustsval = 'gusts'; ",
    "params": "",
    "returns": "number"
  },
  "handgunItems": {
    "command": "handgunItems",
    "timestamp": "2021-01-23T09:18:38Z",
    "version": "0.50",
    "syntax": "handgunItems <object>",
    "docSyntax": "handgunItems unit",
    "tags": "[AG]",
    "description": "Returns array with all items assigned to the handgunWeapon except magazines. Use handgunMagazine command for the latter. This command is used for infantry weapons only.",
    "example": "handgunItems player; /* [ \"muzzle_snds_L\", //silencer \"\", //laser \"\", //optics \"\" //bipod ] nowiki*/</nowiki> ",
    "params": "<object>",
    "returns": "array"
  },
  "handgunWeapon": {
    "command": "handgunWeapon",
    "timestamp": "2021-01-23T09:27:38Z",
    "version": "0.50",
    "syntax": "handgunWeapon <object>",
    "docSyntax": "handgunWeapon unit",
    "tags": "[AG]",
    "description": "Returns the name of a unit's handgun (an empty string if there is none).",
    "example": "hint handgunWeapon player; //\"hgun_P07_F\" ",
    "params": "<object>",
    "returns": "string"
  },
  "headgear": {
    "command": "headgear",
    "timestamp": "2021-01-23T09:15:02Z",
    "version": "0.50",
    "syntax": "headgear <object>",
    "docSyntax": "headgear unit",
    "tags": "[AG]",
    "description": "Returns headgear of unit.",
    "example": "hint headgear player; //H_HelmetB",
    "params": "<object>",
    "returns": "string"
  },
  "humidity": {
    "command": "humidity",
    "timestamp": "2021-01-23T09:03:46Z",
    "version": "0.50",
    "syntax": "'humidity'",
    "docSyntax": "'humidity'",
    "tags": "",
    "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.",
    "example": "currentHumidity = humidity; ",
    "params": "",
    "returns": "number"
  },
  "independent": {
    "command": "independent",
    "timestamp": "2021-01-23T09:13:44Z",
    "version": "0.50",
    "syntax": "independent",
    "docSyntax": "independent",
    "tags": "",
    "description": "Pre-defined variable for the independent side.",
    "example": "if (side _unit == independent) then { hint \"This is a independent unit!\"; };",
    "params": "",
    "returns": "side"
  },
  "inRangeOfArtillery": {
    "command": "inRangeOfArtillery",
    "timestamp": "2021-01-23T09:19:06Z",
    "version": "0.50",
    "syntax": "<position> inRangeOfArtillery <array>",
    "docSyntax": "pos inRangeOfArtillery nowiki[[</nowiki>unit], magazineType]",
    "tags": "[AG]",
    "description": "Returns true if all given units are able to fire at given position with given magazineType.",
    "example": "_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery nowiki[[</nowiki>myArtynowiki]</nowiki>, \"32Rnd_155mm_Mo_shells\"nowiki]</nowiki> ",
    "params": "<position> <array> <array> <object> <string>",
    "returns": "boolean"
  },
  "isAbleToBreathe": {
    "command": "isAbleToBreathe",
    "timestamp": "2021-01-23T08:55:49Z",
    "version": "0.50",
    "syntax": "isAbleToBreathe <object>",
    "docSyntax": "isAbleToBreathe unit",
    "tags": "",
    "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.",
    "example": "_canBreath = isAbleToBreathe player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isBleeding": {
    "command": "isBleeding",
    "timestamp": "2021-01-23T09:23:27Z",
    "version": "0.50",
    "syntax": "isBleeding <object>",
    "docSyntax": "isBleeding unit",
    "tags": "",
    "description": "Returns whether the unit is bleeding.",
    "example": "if (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }",
    "params": "<object>",
    "returns": "boolean"
  },
  "isBurning": {
    "command": "isBurning",
    "timestamp": "2021-01-23T09:23:20Z",
    "version": "0.50",
    "syntax": "isBurning <object>",
    "docSyntax": "isBurning unit",
    "tags": "",
    "description": "Returns whether the unit is burning. This returns true only if unit is damaged by nearby fire, it does 'not' check whether a fireplace is burning, use inflamed command for that.",
    "example": "if (isBurning player) then { player groupChat \"I'm burning!!\"; }",
    "params": "<object>",
    "returns": "boolean"
  },
  "isCopilotEnabled": {
    "command": "isCopilotEnabled",
    "timestamp": "2021-01-23T09:07:26Z",
    "version": "0.50",
    "syntax": "isCopilotEnabled <object>",
    "docSyntax": "isCopilotEnabled vehicle",
    "tags": "[AG]",
    "description": "Returns true if copilots actions are enabled.",
    "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; }; ",
    "params": "<object>",
    "returns": "boolean"
  },
  "isFlashlightOn": {
    "command": "isFlashlightOn",
    "timestamp": "2021-01-23T09:06:34Z",
    "version": "0.50",
    "syntax": "<object> isFlashlightOn <string>",
    "docSyntax": "unit isFlashlightOn weapon",
    "tags": "",
    "description": "Returns true if there is a linked and enabled flashlight on a given weapon.",
    "example": "player isFlashlightOn (currentWeapon player);",
    "params": "<object> <string>",
    "returns": "boolean"
  },
  "isIRLaserOn": {
    "command": "isIRLaserOn",
    "timestamp": "2021-01-23T09:25:26Z",
    "version": "0.50",
    "syntax": "<object> isIRLaserOn <string>",
    "docSyntax": "unit isIRLaserOn weapon",
    "tags": "",
    "description": "Returns true if there is a linked and enabled IR on the given weapon.",
    "example": "player isIRLaserOn currentWeapon player;",
    "params": "<object> <string>",
    "returns": "boolean"
  },
  "isLocalized": {
    "command": "isLocalized",
    "timestamp": "2021-01-23T08:55:17Z",
    "version": "0.50",
    "syntax": "isLocalized <string>",
    "docSyntax": "isLocalized stringName",
    "tags": "",
    "description": "Checks whether given ''stringName'' is localized.",
    "example": "sqf if (isLocalized \"STR_USRACT_ADJUST\") then { hint localize \"STR_USRACT_ADJUST\"; } else { hint \"STR_USRACT_ADJUST\"; diag_log \"ToDo: STR_USRACT_ADJUST is not localized\"; }; </sqf>",
    "params": "<string>",
    "returns": "boolean"
  },
  "isTouchingGround": {
    "command": "isTouchingGround",
    "timestamp": "2021-01-23T09:16:29Z",
    "version": "0.50",
    "syntax": "isTouchingGround <object>",
    "docSyntax": "isTouchingGround object",
    "tags": "[AG]",
    "description": "Returns true if object is touching the ground.",
    "example": "if (isTouchingGround player) then {hint \"Terraferma!\";}; ",
    "params": "<object>",
    "returns": "boolean"
  },
  "isTutHintsEnabled": {
    "command": "isTutHintsEnabled",
    "timestamp": "2021-01-23T09:17:54Z",
    "version": "0.50",
    "syntax": "'isTutHintsEnabled'",
    "docSyntax": "'isTutHintsEnabled'",
    "tags": "",
    "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).",
    "example": "hint str isTutHintsEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "itemCargo": {
    "command": "itemCargo",
    "timestamp": "2021-01-23T09:11:21Z",
    "version": "0.50",
    "syntax": "itemCargo <object>",
    "docSyntax": "itemCargo object",
    "tags": "[AG]",
    "description": "Get array with items from ammo box (or any general weapon holder container).",
    "example": "hint str itemCargo vestContainer player;",
    "params": "<object>",
    "returns": "array"
  },
  "language": {
    "command": "language",
    "timestamp": "2021-01-23T09:18:59Z",
    "version": "0.50",
    "syntax": "language",
    "docSyntax": "language",
    "tags": "",
    "description": "Returns current game language.",
    "example": "_myLanguage = language; codecomment// will return \"English\" if game language is set to English",
    "params": "",
    "returns": "supported languages for possible values"
  },
  "lightnings": {
    "command": "lightnings",
    "timestamp": "2021-01-23T10:08:56Z",
    "version": "0.50",
    "syntax": "'lightnings'",
    "docSyntax": "'lightnings'",
    "tags": "",
    "description": "Return the current lightnings value.",
    "example": "_lightningsVal = lightnings;",
    "params": "",
    "returns": "number"
  },
  "linearConversion": {
    "command": "linearConversion",
    "timestamp": "2021-01-23T10:08:41Z",
    "version": "0.50",
    "syntax": "linearConversion [<number>, <number>, <number>, <number>, <number>, clip]",
    "docSyntax": "linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]",
    "tags": "",
    "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what. Featurearma3Faster alternative to BIS_fnc_linearConversion.",
    "example": "// Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be 55 linearConversion [0,1,0.55,0,100]; // but if given value is 1.1 it will return 110 linearConversion [0,1,1.1,0,100,false]; // or if clipping is true it will return 100 linearConversion [0,1,1.1,0,100,true];",
    "params": "<number> <number> <number> <number> <number> <boolean>",
    "returns": "number"
  },
  "linkItem": {
    "command": "linkItem",
    "timestamp": "2021-01-23T10:00:44Z",
    "version": "0.50",
    "syntax": "<object> linkItem <string>",
    "docSyntax": "unit linkItem item",
    "tags": "[AG] [EG]",
    "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.",
    "example": "bluforUnit linkItem \"NVGoggles\"; opforUnit linkItem \"NVGoggles_OPFOR\"; independentUnit linkItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "load": {
    "command": "load",
    "timestamp": "2021-01-23T09:55:36Z",
    "version": "0.50",
    "syntax": "load <object>",
    "docSyntax": "load unit",
    "tags": "",
    "description": "Returns the percentage of fullness of a unit's cargo. Output is usually in range 0..1, but can be higher after using certain scripting commands (like addWeaponWithAttachmentsCargoGlobal) which ignore load values when adding items. FeatureinformativeSee HashLink#Example 2 for load calculation.",
    "example": "sqfload player;</sqf>",
    "params": "<object>",
    "returns": "number"
  },
  "loadAbs": {
    "command": "loadAbs",
    "timestamp": "2021-01-23T09:55:50Z",
    "version": "0.50",
    "syntax": "loadAbs <object>",
    "docSyntax": "loadAbs unit",
    "tags": "",
    "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.",
    "example": "_weight = 'loadAbs' player;",
    "params": "<object>",
    "returns": "number"
  },
  "loadBackpack": {
    "command": "loadBackpack",
    "timestamp": "2021-01-23T09:54:45Z",
    "version": "0.50",
    "syntax": "loadBackpack <object>",
    "docSyntax": "loadBackpack unit",
    "tags": "",
    "description": "Returns current percentage of mass from items stored in a backpack relative to the maximum capacity of the backpack.br It is equivalent to this \nformula: code_loadBackpack = massOfAllItemsInBackpack / getContainerMaxLoad backpack player;</code>",
    "example": "private _myVariable = loadBackpack myUnit;",
    "params": "<object>",
    "returns": "number"
  },
  "loadUniform": {
    "command": "loadUniform",
    "timestamp": "2021-01-23T10:09:19Z",
    "version": "0.50",
    "syntax": "loadUniform <object>",
    "docSyntax": "loadUniform unit",
    "tags": "",
    "description": "Returns current percentage of mass from items stored in a uniform relative to the maximum capacity of the uniform. br It is equivalent to this \nformula: code_loadUniform nowiki=</nowiki> massOfAllItemsInUniform / getContainerMaxLoad uniform player;</code>",
    "example": "_weight = loadUniform player;",
    "params": "<object>",
    "returns": "number"
  },
  "loadVest": {
    "command": "loadVest",
    "timestamp": "2021-01-23T10:04:15Z",
    "version": "0.50",
    "syntax": "loadVest <object>",
    "docSyntax": "loadVest unit",
    "tags": "",
    "description": "Returns current percentage of mass from items stored in a vest relative to the maximum capacity of the vest. br It is equivalent to this \nformula: code_loadVest nowiki=</nowiki> massOfAllItemsInVest / getContainerMaxLoad vest player;</code>",
    "example": "_weight = loadVest player",
    "params": "<object>",
    "returns": "number"
  },
  "magazineCargo": {
    "command": "magazineCargo",
    "timestamp": "2021-01-23T10:08:09Z",
    "version": "0.50",
    "syntax": "magazineCargo <object>",
    "docSyntax": "magazineCargo object",
    "tags": "",
    "description": "Get array with magazines from ammo box (or any general weapon holder container).",
    "example": "hint str magazineCargo uniformContainer cursorTarget;",
    "params": "<object>",
    "returns": "array"
  },
  "magazinesDetail": {
    "command": "magazinesDetail",
    "timestamp": "2021-01-23T09:57:29Z",
    "version": "0.50",
    "syntax": "magazinesDetail <object>",
    "docSyntax": "magazinesDetail vehicle",
    "tags": "",
    "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids for the primary gunner. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.",
    "example": "_magazinesDetail = magazinesDetail player; codecomment/* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\", \"Chemlight (Green)(1/1)[id/cr:10000020/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\", \"RGO Grenade(1/1)[id/cr:10000016/0]\", \"RGO Grenade(1/1)[id/cr:10000017/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000070/0]\", \"PCML Missile(1/1)[id/cr:10000072/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000001/0]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000013/0]\" ] nowiki*/",
    "params": "<object> <object> <boolean> <boolean>",
    "returns": "array"
  },
  "mineActive": {
    "command": "mineActive",
    "timestamp": "2021-01-23T10:03:46Z",
    "version": "0.50",
    "syntax": "mineActive <object>",
    "docSyntax": "mineActive obj",
    "tags": "[AG]",
    "description": "Checks if the given mine is active.",
    "example": "if (mineActive _mine) then {hint \"BOOM!\"};",
    "params": "<object>",
    "returns": "boolean"
  },
  "nearSupplies": {
    "command": "nearSupplies",
    "timestamp": "2021-01-23T10:12:51Z",
    "version": "0.50",
    "syntax": "positionagl nearSupplies <number>",
    "docSyntax": "origin nearSupplies radius",
    "tags": "",
    "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.",
    "example": "_list = player nearSupplies 50;",
    "params": "positionagl <number>",
    "returns": "array | object"
  },
  "netId": {
    "command": "netId",
    "timestamp": "2021-01-23T10:04:32Z",
    "version": "0.50",
    "syntax": "netId <object>",
    "docSyntax": "netId var",
    "tags": "",
    "description": "Unique ID of object or group. As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See \nalso: BIS_fnc_objectVar",
    "example": "_playerNetId = netId player;",
    "params": "<object>",
    "returns": "string"
  },
  "objectFromNetId": {
    "command": "objectFromNetId",
    "timestamp": "2021-01-23T10:07:39Z",
    "version": "0.50",
    "syntax": "objectFromNetId <string>",
    "docSyntax": "objectFromNetId id",
    "tags": "",
    "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.",
    "example": "objectFromNetId \"2:3\"",
    "params": "<string>",
    "returns": "object"
  },
  "opfor": {
    "command": "opfor",
    "timestamp": "2021-01-23T10:23:33Z",
    "version": "0.50",
    "syntax": "opfor",
    "docSyntax": "opfor",
    "tags": "",
    "description": "Pre-defined variable for the opfor side.",
    "example": "if (side player == opfor) then { hint \"OPFOR\"; };",
    "params": "",
    "returns": "side"
  },
  "particlesQuality": {
    "command": "particlesQuality",
    "timestamp": "2021-01-23T10:33:00Z",
    "version": "0.50",
    "syntax": "'particlesQuality'",
    "docSyntax": "'particlesQuality'",
    "tags": "[EL]",
    "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high",
    "example": "_currentQuality = particlesQuality;",
    "params": "",
    "returns": "number"
  },
  "playSound3D": {
    "command": "playSound3D",
    "timestamp": "2021-01-23T10:35:25Z",
    "version": "0.50",
    "syntax": "playSound3D [<string>, <object>, <boolean>, positionasl, <number>, <number>, <number>, <number>, <boolean>]",
    "docSyntax": "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance, offset, local]",
    "tags": "[AG] [EG]",
    "description": "Plays positional sound with given ''filename'' on every computer on network.",
    "example": "playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]",
    "params": "<string> <object> <boolean> positionasl <number> <number> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "ppEffectForceInNVG": {
    "command": "ppEffectForceInNVG",
    "timestamp": "2021-01-23T10:29:25Z",
    "version": "0.50",
    "syntax": "<number> ppEffectForceInNVG <boolean>",
    "docSyntax": "ppHandle ppEffectForceInNVG force",
    "tags": "[EL]",
    "description": "Forces use of <Post process effects> in NVG.",
    "example": "_ppGrain ppEffectForceInNVG true;",
    "params": "<number> <boolean>",
    "returns": "nothing"
  },
  "primaryWeaponItems": {
    "command": "primaryWeaponItems",
    "timestamp": "2021-01-23T10:29:11Z",
    "version": "0.50",
    "syntax": "primaryWeaponItems <object>",
    "docSyntax": "primaryWeaponItems unit",
    "tags": "",
    "description": "Returns array with all items assigned to the primaryWeapon except magazines. Use primaryWeaponMagazine command for the latter. This command is used for infantry weapons only.",
    "example": "primaryWeaponItems player; /* [ \"muzzle_snds_H\", //silencer \"acc_pointer_IR\", //laser \"optic_Aco\", //optics \"bipod_01_F_blk\" //bipod ] nowiki*/</nowiki> ",
    "params": "<object>",
    "returns": "array"
  },
  "profileName": {
    "command": "profileName",
    "timestamp": "2021-01-23T10:38:42Z",
    "version": "0.50",
    "syntax": "'profileName'",
    "docSyntax": "'profileName'",
    "tags": "",
    "description": "Returns currently chosen user profile name. For Steam profile name see profileNameSteam.",
    "example": "_myInGameProfileName = profileName;",
    "params": "",
    "returns": "string"
  },
  "rainbow": {
    "command": "rainbow",
    "timestamp": "2021-01-23T10:25:32Z",
    "version": "0.50",
    "syntax": "rainbow",
    "docSyntax": "rainbow",
    "tags": "",
    "description": "Returns the current rainbow intensity.",
    "example": "private _intensity = rainbow;",
    "params": "",
    "returns": "number"
  },
  "removeAllActions": {
    "command": "removeAllActions",
    "timestamp": "2021-01-23T10:29:12Z",
    "version": "0.50",
    "syntax": "removeAllActions <object>",
    "docSyntax": "removeAllActions unit",
    "tags": "[AG] [EL]",
    "description": "Removes all unit's user added actions. Feature informative This command's syntax was icunit removeAllActions number from arma3 v0.50 to v1.06.",
    "example": "removeAllActions player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllAssignedItems": {
    "command": "removeAllAssignedItems",
    "timestamp": "2021-01-23T10:30:07Z",
    "version": "0.50",
    "syntax": "removeAllAssignedItems <object>",
    "docSyntax": "removeAllAssignedItems unit",
    "tags": "[AL] [EG]",
    "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which does not include goggles or headgear.br Use removeGoggles and removeHeadgear for those.",
    "example": "removeAllAssignedItems player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllContainers": {
    "command": "removeAllContainers",
    "timestamp": "2021-01-23T10:29:22Z",
    "version": "0.50",
    "syntax": "removeAllContainers <object>",
    "docSyntax": "removeAllContainers unit",
    "tags": "",
    "description": "Removes all containers from the unit.",
    "example": "removeAllContainers player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllMissionEventHandlers": {
    "command": "removeAllMissionEventHandlers",
    "timestamp": "2021-01-23T10:27:40Z",
    "version": "0.50",
    "syntax": "removeAllMissionEventHandlers <string>",
    "docSyntax": "removeAllMissionEventHandlers type",
    "tags": "[EL]",
    "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler. Feature important Prior to GVIarma32.08 this command would also reset the Event Handler creation index to 0.",
    "example": "removeAllMissionEventHandlers \"Loaded\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "removeAllMusicEventHandlers": {
    "command": "removeAllMusicEventHandlers",
    "timestamp": "2021-01-23T10:36:49Z",
    "version": "0.50",
    "syntax": "removeAllMusicEventHandlers <string>",
    "docSyntax": "removeAllMusicEventHandlers type",
    "tags": "",
    "description": "Removes all music track event handlers of given type.",
    "example": "removeAllMusicEventHandlers \"MusicStart\"",
    "params": "<string>",
    "returns": "nothing"
  },
  "removeGoggles": {
    "command": "removeGoggles",
    "timestamp": "2021-01-23T10:37:38Z",
    "version": "0.50",
    "syntax": "removeGoggles <object>",
    "docSyntax": "removeGoggles unit",
    "tags": "[AG] [EG]",
    "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.",
    "example": "removeGoggles assaultDiver;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeHeadgear": {
    "command": "removeHeadgear",
    "timestamp": "2021-01-23T10:42:07Z",
    "version": "0.50",
    "syntax": "removeHeadgear <object>",
    "docSyntax": "removeHeadgear unit",
    "tags": "[AG] [EG]",
    "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.",
    "example": "removeHeadgear player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeItem": {
    "command": "removeItem",
    "timestamp": "2021-01-23T10:38:06Z",
    "version": "0.50",
    "syntax": "<object> removeItem <string>",
    "docSyntax": "unit removeItem item",
    "tags": "[AG] [EG]",
    "description": "Removes item from the inventory.",
    "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removeItems": {
    "command": "removeItems",
    "timestamp": "2021-01-23T10:39:22Z",
    "version": "0.50",
    "syntax": "<object> removeItems <string>",
    "docSyntax": "unit removeItems item",
    "tags": "[AG] [EG]",
    "description": "Removes all items with given class name from the inventory.",
    "example": "player removeItems \"FirstAidKit\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removeMissionEventHandler": {
    "command": "removeMissionEventHandler",
    "timestamp": "2021-01-23T10:29:25Z",
    "version": "0.50",
    "syntax": "removeMissionEventHandler [<string>, <number>]",
    "docSyntax": "removeMissionEventHandler [type, index]",
    "tags": "[EL]",
    "description": "Removes mission event handler added by addMissionEventHandler.",
    "example": "private _eventHandlerId = addMissionEventHandler [\"Ended\", { diag_log \"mission complete\"; }]; cc... removeMissionEventHandler [\"Ended\", _eventHandlerId];",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "removeMusicEventHandler": {
    "command": "removeMusicEventHandler",
    "timestamp": "2021-01-23T10:35:44Z",
    "version": "0.50",
    "syntax": "removeMusicEventHandler [<string>, <number>]",
    "docSyntax": "removeMusicEventHandler [type, id]",
    "tags": "",
    "description": "Removes specified music track event handler.",
    "example": "removeMusicEventHandler [\"MusicStart\", 12];",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "removeUniform": {
    "command": "removeUniform",
    "timestamp": "2021-01-23T10:29:55Z",
    "version": "0.50",
    "syntax": "removeUniform <object>",
    "docSyntax": "removeUniform unit",
    "tags": "[AG] [EG]",
    "description": "Removes uniform from unit.",
    "example": "removeUniform player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeVest": {
    "command": "removeVest",
    "timestamp": "2021-01-23T10:41:51Z",
    "version": "0.50",
    "syntax": "removeVest <object>",
    "docSyntax": "removeVest unit",
    "tags": "[AG] [EG]",
    "description": "Removes vest from unit.",
    "example": "removeVest player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "resetSubgroupDirection": {
    "command": "resetSubgroupDirection",
    "timestamp": "2021-01-23T10:35:25Z",
    "version": "0.50",
    "syntax": "resetSubgroupDirection <object>",
    "docSyntax": "resetSubgroupDirection unit",
    "tags": "",
    "description": "Sets formation direction of a group relative to current direction of the group leader. The group units will change their positions to form new formation if new formation direction is different (approx +/- 15 degrees). Does the same \n\tas:br code_grp setFormDir getDir leader _grp;</code>",
    "example": "resetSubgroupDirection myUnit;",
    "params": "<object>",
    "returns": "nothing"
  },
  "revealMine": {
    "command": "revealMine",
    "timestamp": "2021-01-23T10:41:30Z",
    "version": "0.50",
    "syntax": "<side> revealMine <object>",
    "docSyntax": "side revealMine mine",
    "tags": "",
    "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)",
    "example": "west revealMine _mine;",
    "params": "<side> <object>",
    "returns": "nothing"
  },
  "saveJoysticks": {
    "command": "saveJoysticks",
    "timestamp": "2021-01-23T10:39:16Z",
    "version": "0.50",
    "syntax": "saveJoysticks",
    "docSyntax": "saveJoysticks",
    "tags": "",
    "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.",
    "example": "saveJoysticks;",
    "params": "",
    "returns": "nothing"
  },
  "secondaryWeaponItems": {
    "command": "secondaryWeaponItems",
    "timestamp": "2021-01-23T10:35:47Z",
    "version": "0.50",
    "syntax": "secondaryWeaponItems <object>",
    "docSyntax": "secondaryWeaponItems unit",
    "tags": "",
    "description": "Returns array with all items assigned to the secondaryWeapon except magazines. Use secondaryWeaponMagazine command for the latter. This command is used for infantry weapons only.",
    "example": "secondaryWeaponItems player; //[\"\",\"\",\"\",\"\"] ",
    "params": "<object>",
    "returns": "array"
  },
  "sendAUMessage": {
    "command": "sendAUMessage",
    "timestamp": "2021-01-23T20:22:55Z",
    "version": "0.50",
    "syntax": "sendAUMessage [<array>, <string>]",
    "docSyntax": "sendAUMessage [clientList, command]",
    "tags": "",
    "description": "Send the command to the list of clients.",
    "example": "sendAUMessage nowiki[[</nowiki>dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"];",
    "params": "<array> <string>",
    "returns": "nothing"
  },
  "setAmmo": {
    "command": "setAmmo",
    "timestamp": "2021-01-23T20:31:07Z",
    "version": "0.50",
    "syntax": "<object> setAmmo [cfgweapons, <number>]",
    "docSyntax": "unit setAmmo [weaponOrMuzzle, count]",
    "tags": "[AL] [EG]",
    "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon or muzzle.",
    "example": "player setAmmo [handgunWeapon player, 10];",
    "params": "<object> cfgweapons <number>",
    "returns": "nothing"
  },
  "setApertureNew": {
    "command": "setApertureNew",
    "timestamp": "2021-01-23T20:21:32Z",
    "version": "0.50",
    "syntax": "setApertureNew [<number>, <number>, <number>, <number>]",
    "docSyntax": "setApertureNew [minimum, standard, maximum, luminance]",
    "tags": "[EL]",
    "description": "Sets custom camera aperture when HDR is enabled ([-1] to do it automatically). nowiki`minimum` should be <= `standard` and <= `maximum`</nowiki>. Feature Informative If HDR is enabled (it is enabled by default), when setAperture value is used it also forces setApertureNew to the following \nvalues: [value, value, value, 1]. Execute setApertureNew after setAperture to override this default mechanic.",
    "example": "setApertureNew [0.3, 0.2, 0.1, 1];",
    "params": "<number> <number> <number> <number>",
    "returns": "nothing"
  },
  "setBleedingRemaining": {
    "command": "setBleedingRemaining",
    "timestamp": "2021-01-23T20:26:06Z",
    "version": "0.50",
    "syntax": "<object> setBleedingRemaining <number>",
    "docSyntax": "unit setBleedingRemaining time",
    "tags": "",
    "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >nowiki=</nowiki> 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.",
    "example": "_unit setBleedingRemaining 60; ",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setCompassOscillation": {
    "command": "setCompassOscillation",
    "timestamp": "2021-01-23T20:27:34Z",
    "version": "0.50",
    "syntax": "setCompassOscillation [<number>, <number>, <number>]",
    "docSyntax": "setCompassOscillation [angle, frequencyMin, frequencyMax]",
    "tags": "[EL]",
    "description": "This command sets random heading on the player's compass (both in map and in 3D view) with given frequency, which is also randomised.",
    "example": "setCompassOscillation [rad 90, 1, 1];",
    "params": "<number> <number> <number>",
    "returns": "nothing"
  },
  "setDebriefingText": {
    "command": "setDebriefingText",
    "timestamp": "2021-01-23T20:19:51Z",
    "version": "0.50",
    "syntax": "<string> setDebriefingText [<string>, <string>]",
    "docSyntax": "endType setDebriefingText [title, description]",
    "tags": "",
    "description": "Sets debriefing title, text, subtitle, picture and background for a mission ending. The end type could be the engine-defined (\"CONTINUE\", \"KILLED\", \"LOSER\", \"END1\", \"END2\", \"END3\", \"END4\", \"END5\", \"END6\"), config-defined (see CfgDebriefing) or, with an alternative syntax of this command, any 400px 400px",
    "example": "_currentObjective = (taskDescription (currentTask player)) select 2; \"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];",
    "params": "<string> <string> <string> <string> <string> <string> <string> <string> <string>",
    "returns": "nothing"
  },
  "setFatigue": {
    "command": "setFatigue",
    "timestamp": "2021-01-23T20:31:28Z",
    "version": "0.50",
    "syntax": "<object> setFatigue <number>",
    "docSyntax": "unit setFatigue value",
    "tags": "[AG] [EL]",
    "description": "Sets the person's fatigue, from 0 to 1.",
    "example": "player setFatigue 1;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setGusts": {
    "command": "setGusts",
    "timestamp": "2021-01-23T20:36:31Z",
    "version": "0.50",
    "syntax": "<number> setGusts <number>",
    "docSyntax": "time setGusts value",
    "tags": "[EL]",
    "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.",
    "example": "60 'setGusts' 0.75; ",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setHorizonParallaxCoef": {
    "command": "setHorizonParallaxCoef",
    "timestamp": "2021-01-23T20:28:56Z",
    "version": "0.50",
    "syntax": "setHorizonParallaxCoef <number>",
    "docSyntax": "setHorizonParallaxCoef coef",
    "tags": "",
    "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).",
    "example": "setHorizonParallaxCoef 1;",
    "params": "<number>",
    "returns": "nothing"
  },
  "setHUDMovementLevels": {
    "command": "setHUDMovementLevels",
    "timestamp": "2021-01-23T20:30:57Z",
    "version": "0.50",
    "syntax": "setHUDMovementLevels [<number>, <number>, <number>, <number>, <number>, <number>, <object>]",
    "docSyntax": "setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]",
    "tags": "",
    "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.",
    "example": "setHUDMovementLevels [20, 30, -1, -1, 0.23, 2.1, [0,0,0]]",
    "params": "<number> <number> <number> <number> <number> <number> <object>",
    "returns": "nothing"
  },
  "setLightAttenuation": {
    "command": "setLightAttenuation",
    "timestamp": "2021-01-23T20:21:03Z",
    "version": "0.50",
    "syntax": "<object> setLightAttenuation <array>",
    "docSyntax": "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]",
    "tags": "[AL] [EL]",
    "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). ''start'' param represents distance, where the attenuation starts to take effects (dist nowiki=</nowiki> distance - start).",
    "example": "myLight setLightAttenuation [2, 4, 4, 0, 9, 10];",
    "params": "<object> <array> <number> <number> <number> <number> <number> <number>",
    "returns": "nothing"
  },
  "setLightDayLight": {
    "command": "setLightDayLight",
    "timestamp": "2021-01-23T20:21:37Z",
    "version": "0.50",
    "syntax": "<object> setLightDayLight <boolean>",
    "docSyntax": "light setLightDayLight bool",
    "tags": "[AL] [EL]",
    "description": "Sets if light can be used during the day.",
    "example": "myLight setLightDayLight true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setLightFlareMaxDistance": {
    "command": "setLightFlareMaxDistance",
    "timestamp": "2021-01-23T20:21:16Z",
    "version": "0.50",
    "syntax": "<object> setLightFlareMaxDistance <number>",
    "docSyntax": "light setLightFlareMaxDistance distance",
    "tags": "[AL] [EL]",
    "description": "Sets max distance where the flare is visible.",
    "example": "myLight setLightFlareMaxDistance 500;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setLightFlareSize": {
    "command": "setLightFlareSize",
    "timestamp": "2021-01-23T20:35:59Z",
    "version": "0.50",
    "syntax": "<object> setLightFlareSize <number>",
    "docSyntax": "light setLightFlareSize size",
    "tags": "[AL] [EL]",
    "description": "Sets relative size of the flare for the light.",
    "example": "myLight setLightFlareSize 5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setLightIntensity": {
    "command": "setLightIntensity",
    "timestamp": "2021-01-23T20:28:48Z",
    "version": "0.50",
    "syntax": "<object> setLightIntensity <number>",
    "docSyntax": "light setLightIntensity value",
    "tags": "[AL] [EL]",
    "description": "Sets intensity of light.",
    "example": "myLight setLightIntensity 4;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setLightnings": {
    "command": "setLightnings",
    "timestamp": "2021-01-23T20:27:02Z",
    "version": "0.50",
    "syntax": "<number> setLightnings <number>",
    "docSyntax": "time setLightnings value",
    "tags": "",
    "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.brbr 'NOTE': This command will have no effect (even though the value of left|600px",
    "example": "1800 setLightnings 0.7;",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setLightUseFlare": {
    "command": "setLightUseFlare",
    "timestamp": "2021-01-23T20:23:19Z",
    "version": "0.50",
    "syntax": "<object> setLightUseFlare <boolean>",
    "docSyntax": "light setLightUseFlare bool",
    "tags": "[AL] [EL]",
    "description": "Sets if light has flare.",
    "example": "myLight setLightUseFlare true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setLocalWindParams": {
    "command": "setLocalWindParams",
    "timestamp": "2021-01-23T20:23:01Z",
    "version": "0.50",
    "syntax": "setLocalWindParams [<number>, <number>]",
    "docSyntax": "setLocalWindParams [strength, diameter]",
    "tags": "",
    "description": "Sets parameters for helicopter rotor wash. It affects the visual effect of a rotor's downwash, such as blown particles, vegetation wind effect and area size.",
    "example": "setLocalWindParams [10, 5];",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setObjectMaterial": {
    "command": "setObjectMaterial",
    "timestamp": "2021-01-23T20:23:23Z",
    "version": "0.50",
    "syntax": "<object> setObjectMaterial <array>",
    "docSyntax": "obj setObjectMaterial [selectionNumber, material]",
    "tags": "[AG] [EL]",
    "description": "Sets material of object selection. The selection number is defined through the hiddenselection[]nowiki=</nowiki>{} array in the vehicle's config (starting with 0).",
    "example": "car setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"]; car setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];",
    "params": "<object> <array> <number> <string>",
    "returns": "nothing"
  },
  "setObjectViewDistance": {
    "command": "setObjectViewDistance",
    "timestamp": "2021-01-23T20:27:21Z",
    "version": "0.50",
    "syntax": "setObjectViewDistance <number>",
    "docSyntax": "setObjectViewDistance objectDistance",
    "tags": "[EL]",
    "description": "Sets the rendering distance of objects and shadows.",
    "example": "setObjectViewDistance 2000;",
    "params": "<number> <number> <number>",
    "returns": "nothing"
  },
  "setOxygenRemaining": {
    "command": "setOxygenRemaining",
    "timestamp": "2021-01-23T20:32:29Z",
    "version": "0.50",
    "syntax": "<object> setOxygenRemaining <number>",
    "docSyntax": "unit setOxygenRemaining value",
    "tags": "",
    "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.",
    "example": "player 'setOxygenRemaining' 0; // Drowns player",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setParticleClass": {
    "command": "setParticleClass",
    "timestamp": "2021-01-23T20:27:19Z",
    "version": "0.50",
    "syntax": "<object> setParticleClass <string>",
    "docSyntax": "source setParticleClass className",
    "tags": "[AG] [EL]",
    "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use simple expressions, they will not be evaluated by this command, which might make the whole class unusable in script.",
    "example": "_source01 = \"#particlesource\" createVehicleLocal _pos01; _source01 setParticleClass \"ObjectDestructionFire1Smallx\"; _source01 attachTo [_object,[0,0,0]]; ",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "setPosASLW": {
    "command": "setPosASLW",
    "timestamp": "2021-01-23T20:36:21Z",
    "version": "0.50",
    "syntax": "<object> setPosASLW positionaslw",
    "docSyntax": "obj setPosASLW pos",
    "tags": "[AG] [EG]",
    "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.",
    "example": "_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];",
    "params": "<object> positionaslw",
    "returns": "nothing"
  },
  "setRainbow": {
    "command": "setRainbow",
    "timestamp": "2021-01-23T20:26:40Z",
    "version": "0.50",
    "syntax": "<number> setRainbow <number>",
    "docSyntax": "time setRainbow value",
    "tags": "",
    "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
    "example": "360 setRainbow 1;",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setRandomLip": {
    "command": "setRandomLip",
    "timestamp": "2021-01-23T20:35:33Z",
    "version": "0.50",
    "syntax": "<object> setRandomLip <boolean>",
    "docSyntax": "unit setRandomLip bool",
    "tags": "[AG] [EL]",
    "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it is talking.",
    "example": "player setRandomLip true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setShadowDistance": {
    "command": "setShadowDistance",
    "timestamp": "2021-01-23T20:29:49Z",
    "version": "0.50",
    "syntax": "setShadowDistance <number>",
    "docSyntax": "setShadowDistance value",
    "tags": "[EL]",
    "description": "Sets the shadows rendering distance.",
    "example": "'setShadowDistance' 1000",
    "params": "<number>",
    "returns": "nothing"
  },
  "setSystemOfUnits": {
    "command": "setSystemOfUnits",
    "timestamp": "2021-01-23T20:34:44Z",
    "version": "0.50",
    "syntax": "setSystemOfUnits <number>",
    "docSyntax": "setSystemOfUnits value",
    "tags": "[EL]",
    "description": "Set system of units. This will only impact gauges from advanced flight model. FeatureimportantThis command is \nbuggy: any value other than 0 (metric) will display both units at the same time.",
    "example": "if (player in _myHelicopter) then { setSystemOfUnits 2; };",
    "params": "<number>",
    "returns": "nothing"
  },
  "setUserActionText": {
    "command": "setUserActionText",
    "timestamp": "2021-01-24T00:02:42Z",
    "version": "0.50",
    "syntax": "<object> setUserActionText [<number>, <string>, <string>, <string>]",
    "docSyntax": "object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]",
    "tags": "[AG] [EL]",
    "description": "right|350px Changes user added action (see addAction) menu item text. brbr",
    "example": "_id = player addAction [\"Hello\", \"\"]; player setUserActionText [_id, \"Good Bye\"];",
    "params": "<object> <number> <string> <string> <string>",
    "returns": "nothing"
  },
  "setVehicleAmmoDef": {
    "command": "setVehicleAmmoDef",
    "timestamp": "2021-01-24T00:51:35Z",
    "version": "0.50",
    "syntax": "<object> setVehicleAmmoDef <number>",
    "docSyntax": "unit setVehicleAmmoDef value",
    "tags": "[AL] [EG]",
    "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.",
    "example": "player setVehicleAmmoDef 0;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setWaves": {
    "command": "setWaves",
    "timestamp": "2021-01-24T01:04:21Z",
    "version": "0.50",
    "syntax": "<number> setWaves <number>",
    "docSyntax": "time setWaves value",
    "tags": "[EL]",
    "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.brbr 'NOTE': This command will have no effect (even though the value of left|600px",
    "example": "180 setWaves .5;",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setWaypointName": {
    "command": "setWaypointName",
    "timestamp": "2021-01-24T01:00:13Z",
    "version": "0.50",
    "syntax": "<waypoint> setWaypointName <string>",
    "docSyntax": "waypoint setWaypointName name",
    "tags": "",
    "description": "Changes the waypoint name.",
    "example": "[_grp,2] setWaypointName \"myName\";",
    "params": "<waypoint> <string>",
    "returns": "nothing"
  },
  "setWindDir": {
    "command": "setWindDir",
    "timestamp": "2021-01-24T00:02:46Z",
    "version": "0.50",
    "syntax": "<number> setWindDir <number>",
    "docSyntax": "time setWindDir value",
    "tags": "[EG]",
    "description": "Changes the wind direction smoothly.",
    "example": "60 'setWindDir' 180;",
    "params": "<number> <number> position2d",
    "returns": "nothing"
  },
  "setWindForce": {
    "command": "setWindForce",
    "timestamp": "2021-01-24T00:41:46Z",
    "version": "0.50",
    "syntax": "<number> setWindForce <number>",
    "docSyntax": "time setWindForce wind",
    "tags": "",
    "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.",
    "example": "1800 setWindForce 0.5 ",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setWindStr": {
    "command": "setWindStr",
    "timestamp": "2021-01-24T00:37:40Z",
    "version": "0.50",
    "syntax": "<number> setWindStr <number>",
    "docSyntax": "time setWindStr value",
    "tags": "",
    "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
    "example": "60 'setWindStr' 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds ",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "showChat": {
    "command": "showChat",
    "timestamp": "2021-01-24T00:16:54Z",
    "version": "0.50",
    "syntax": "showChat <boolean>",
    "docSyntax": "showChat bool",
    "tags": "[EL]",
    "description": "Shows/hides the whole chat window.",
    "example": "showChat false;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "shownArtilleryComputer": {
    "command": "shownArtilleryComputer",
    "timestamp": "2021-01-24T01:09:35Z",
    "version": "0.50",
    "syntax": "'shownArtilleryComputer'",
    "docSyntax": "'shownArtilleryComputer'",
    "tags": "",
    "description": "Checks whether the player has the artillery computer currently open.",
    "example": "if ( 'shownArtilleryComputer' ) then { hint \"Artillery Computer shown on screen\"; }; ",
    "params": "",
    "returns": "boolean"
  },
  "simulSetHumidity": {
    "command": "simulSetHumidity",
    "timestamp": "2021-01-24T00:01:51Z",
    "version": "0.50",
    "syntax": "simulSetHumidity <number>",
    "docSyntax": "simulSetHumidity humidity",
    "tags": "",
    "description": "Sets simul cloud cover. This command does not affect overcast value. FeatureWarningThis command is no longer available.",
    "example": "simulSetHumidity 1;",
    "params": "<number>",
    "returns": "nothing"
  },
  "simulWeatherSync": {
    "command": "simulWeatherSync",
    "timestamp": "2021-01-24T00:03:32Z",
    "version": "0.50",
    "syntax": "'simulWeatherSync'",
    "docSyntax": "'simulWeatherSync'",
    "tags": "",
    "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.",
    "example": "simulWeatherSync;",
    "params": "",
    "returns": "nothing"
  },
  "soldierMagazines": {
    "command": "soldierMagazines",
    "timestamp": "2021-01-24T00:00:17Z",
    "version": "0.50",
    "syntax": "soldierMagazines <object>",
    "docSyntax": "soldierMagazines unit",
    "tags": "",
    "description": "Get array with all magazines of the given unit.",
    "example": "soldierMagazines player;</code> br code[ \"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](5x)\", \"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\", \"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\", \"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\", \"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\", \"Chemlight (Green)(1/1)[id/cr:14/0](2x)\", \"Titan AT Missile(1/1)[id/cr:16/0](2x)\" ]",
    "params": "<object>",
    "returns": "array | string"
  },
  "stance": {
    "command": "stance",
    "timestamp": "2021-01-24T00:52:14Z",
    "version": "0.50",
    "syntax": "stance <object>",
    "docSyntax": "stance unit",
    "tags": "[AG]",
    "description": "Returns the stance of the given unit.",
    "example": "if (stance player == \"STAND\") then {hint \"I am standing!\"};",
    "params": "<object>",
    "returns": "object)"
  },
  "swimInDepth": {
    "command": "swimInDepth",
    "timestamp": "2021-01-24T00:01:41Z",
    "version": "0.50",
    "syntax": "<object> swimInDepth <number>",
    "docSyntax": "unit swimInDepth value",
    "tags": "",
    "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.",
    "example": "soldier swimInDepth -20;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "synchronizedTriggers": {
    "command": "synchronizedTriggers",
    "timestamp": "2021-01-24T00:01:27Z",
    "version": "0.50",
    "syntax": "synchronizedTriggers <waypoint>",
    "docSyntax": "synchronizedTriggers waypoint",
    "tags": "",
    "description": "Returns the list of triggers synchronized with a given waypoint.",
    "example": "synchronizedTriggers _someWaypoint;",
    "params": "<waypoint>",
    "returns": "array"
  },
  "synchronizedWaypoints": {
    "command": "synchronizedWaypoints",
    "timestamp": "2021-01-24T00:30:35Z",
    "version": "0.50",
    "syntax": "synchronizedWaypoints <object>",
    "docSyntax": "synchronizedWaypoints obj",
    "tags": "",
    "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.",
    "example": "synchronizedWaypoints _someTrigger;",
    "params": "<object>",
    "returns": "array"
  },
  "unassignItem": {
    "command": "unassignItem",
    "timestamp": "2021-01-24T10:42:18Z",
    "version": "0.50",
    "syntax": "<object> unassignItem <string>",
    "docSyntax": "unit unassignItem item",
    "tags": "[AG] [EG]",
    "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.",
    "example": "_bluforUnit unassignItem \"NVGoggles\"; _bluforUnit removeItem \"NVGoggles\"; _opforUnit unassignItem \"NVGoggles_OPFOR\"; _opforUnit removeItem \"NVGoggles_OPFOR\"; _independentUnit unassignItem \"NVGoggles_INDEP\"; _independentUnit removeItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "underwater": {
    "command": "underwater",
    "timestamp": "2021-01-24T10:38:48Z",
    "version": "0.50",
    "syntax": "underwater <object>",
    "docSyntax": "underwater object",
    "tags": "",
    "description": "Returns whether the object is fully underwaterFeature Informative This command works well with Arma 3 mini-submarines, which was the primary design goal most likely",
    "example": "_isUnderwater = underwater vehicle player;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "uniform": {
    "command": "uniform",
    "timestamp": "2021-01-24T10:46:19Z",
    "version": "0.50",
    "syntax": "uniform <object>",
    "docSyntax": "uniform unit",
    "tags": "[AG]",
    "description": "Returns name of uniform.",
    "example": "_uniform = uniform _unit;",
    "params": "<object>",
    "returns": "string"
  },
  "uniformItems": {
    "command": "uniformItems",
    "timestamp": "2021-01-24T10:43:36Z",
    "version": "0.50",
    "syntax": "uniformItems <object>",
    "docSyntax": "uniformItems unit",
    "tags": "",
    "description": "Get array with all items (of any kind, even weapons) from uniform.",
    "example": "uniformItems player;</code> br code[ \"FirstAidKit\", \"30Rnd_65x39_caseless_mag\", \"30Rnd_65x39_caseless_mag\", \"30Rnd_65x39_caseless_mag\" ]",
    "params": "<object>",
    "returns": "array"
  },
  "uniformMagazines": {
    "command": "uniformMagazines",
    "timestamp": "2021-01-24T10:43:42Z",
    "version": "0.50",
    "syntax": "uniformMagazines <object>",
    "docSyntax": "uniformMagazines unit",
    "tags": "",
    "description": "Get array with all magazines from uniform of the given unit.",
    "example": "uniformMagazines player;</code> br code[ \"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)\" ]",
    "params": "<object>",
    "returns": "array | string"
  },
  "velocityModelSpace": {
    "command": "velocityModelSpace",
    "timestamp": "2021-01-24T10:47:50Z",
    "version": "0.50",
    "syntax": "velocityModelSpace <object>",
    "docSyntax": "velocityModelSpace vehicle",
    "tags": "",
    "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.",
    "example": "velocityModelSpace _chopper; comment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\"; ",
    "params": "<object>",
    "returns": "array"
  },
  "vest": {
    "command": "vest",
    "timestamp": "2021-01-24T10:47:37Z",
    "version": "0.50",
    "syntax": "vest <object>",
    "docSyntax": "vest unit",
    "tags": "[AG]",
    "description": "nameof vest.",
    "example": "_myVest = vest player;",
    "params": "<object>",
    "returns": "string"
  },
  "vestItems": {
    "command": "vestItems",
    "timestamp": "2021-01-24T10:45:14Z",
    "version": "0.50",
    "syntax": "vestItems <object>",
    "docSyntax": "vestItems unit",
    "tags": "",
    "description": "Get array with all items (of any kind, even weapons) from vest.",
    "example": "vestItems player;</code> code[ \"30Rnd_65x39_caseless_mag\", \"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\", \"16Rnd_9x21_Mag\", \"HandGrenade\", \"HandGrenade\", \"SmokeShell\", \"SmokeShellGreen\", \"Chemlight_green\", \"Chemlight_green\" ]",
    "params": "<object>",
    "returns": "array"
  },
  "vestMagazines": {
    "command": "vestMagazines",
    "timestamp": "2021-01-24T10:42:10Z",
    "version": "0.50",
    "syntax": "vestMagazines <object>",
    "docSyntax": "vestMagazines unit",
    "tags": "",
    "description": "Get array with all magazines from vest of the given unit.",
    "example": "vestMagazines player;</code> br code[ \"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:4/0](2x)\", \"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\", \"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\", \"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\", \"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\", \"Chemlight (Green)(1/1)[id/cr:14/0](2x)\" ]",
    "params": "<object>",
    "returns": "array | string"
  },
  "waves": {
    "command": "waves",
    "timestamp": "2021-01-24T10:43:47Z",
    "version": "0.50",
    "syntax": "'waves'",
    "docSyntax": "'waves'",
    "tags": "",
    "description": "Return waves value.",
    "example": "waveIntensity = waves;",
    "params": "",
    "returns": "number"
  },
  "waypointName": {
    "command": "waypointName",
    "timestamp": "2021-01-24T10:40:23Z",
    "version": "0.50",
    "syntax": "<waypoint>Name waypoint",
    "docSyntax": "waypointName waypoint",
    "tags": "",
    "description": "Gets the waypoint name.",
    "example": "_wpName = waypointName [_grp,2]; ",
    "params": "<waypoint>",
    "returns": "string"
  },
  "weaponAccessories": {
    "command": "weaponAccessories",
    "timestamp": "2021-01-24T10:42:11Z",
    "version": "0.50",
    "syntax": "<object> <string>Accessories weapon",
    "docSyntax": "unit weaponAccessories weapon",
    "tags": "",
    "description": "Get array with all items linked to a given weapon. Feature important This command does not return loaded magazines, see weaponsItems",
    "example": "player weaponAccessories primaryWeapon player; //[\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]",
    "params": "<object> <string>",
    "returns": "array"
  },
  "weaponCargo": {
    "command": "weaponCargo",
    "timestamp": "2021-01-24T10:40:32Z",
    "version": "0.50",
    "syntax": "weaponCargo <object>",
    "docSyntax": "weaponCargo box",
    "tags": "",
    "description": "Get array with weapons from ammo box (or any general weapon holder container).",
    "example": "hint str weaponCargo backpackContainer player;",
    "params": "<object>",
    "returns": "array | string"
  },
  "weaponLowered": {
    "command": "weaponLowered",
    "timestamp": "2021-01-24T10:45:05Z",
    "version": "0.50",
    "syntax": "weaponLowered <object>",
    "docSyntax": "weaponLowered unit",
    "tags": "",
    "description": "Returns true if given soldier's weapon is lowered. Feature important This command will 'always' return false if player is sprinting, even without a weapon. Alternatively, the weapon raised state could be obtained via animationState command hl...slow... vs hl...sras...",
    "example": "isWeaponLowered = weaponLowered player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "windDir": {
    "command": "windDir",
    "timestamp": "2021-01-24T10:44:58Z",
    "version": "0.50",
    "syntax": "windDir",
    "docSyntax": "windDir",
    "tags": "",
    "description": "Returns the current wind azimuth.",
    "example": "|</nowiki> <windDir > 315) [[then> { hint \"I feel a southern wind\"; // wind going 'from' South 'to' North };",
    "params": "",
    "returns": "number"
  },
  "windStr": {
    "command": "windStr",
    "timestamp": "2021-01-24T10:39:14Z",
    "version": "0.50",
    "syntax": "'windStr'",
    "docSyntax": "'windStr'",
    "tags": "",
    "description": "Returns the current wind strength.",
    "example": "10 setWindStr (0.5 * windStr);",
    "params": "",
    "returns": "number"
  },
  "BIS_fnc_spawn": {
    "command": "BIS_fnc_spawn",
    "timestamp": "2021-01-23T20:17:12Z",
    "version": "0.56",
    "syntax": "[<anything>, <<code>>] spawn BIS_fnc_spawn",
    "docSyntax": "[params, code] spawn BIS_fnc_spawn",
    "tags": "",
    "description": "Execute given code with or without parameter.",
    "example": "nowiki[</nowiki>[\"Hello\"], {_this select 0);}] spawn BIS_fnc_spawn;",
    "params": "<anything> <code> <code>",
    "returns": "nothing"
  },
  "compileFinal": {
    "command": "compileFinal",
    "timestamp": "2021-01-22T22:05:22Z",
    "version": "0.56",
    "syntax": "compileFinal <string>",
    "docSyntax": "compileFinal expression",
    "tags": "",
    "description": "Compile expression and makes it final, preventing it \nfrom: * repeated compile or compileFinal * removal by nil * remote rewrite using publicVariable, publicVariableClient and publicVariableServer Feature Informative This feature is only available in retail version of Arma 3",
    "example": "myCode nowiki=</nowiki> compileFinal \"a nowiki=</nowiki> a + 1\"; call myCode;br ccRepeated compile won't have any effect myCode = compileFinal \"a nowiki=</nowiki> a + 2\";br ccDuplicate code will be final as well myDuplicateCode = myCode; ",
    "params": "<string>",
    "returns": "code"
  },
  "difficulty": {
    "command": "difficulty",
    "timestamp": "2021-01-22T22:47:27Z",
    "version": "0.56",
    "syntax": "'difficulty'",
    "docSyntax": "'difficulty'",
    "tags": "",
    "description": "Returns high-level selected difficulty mode. Returned value will \nbe: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)",
    "example": "value = difficulty;",
    "params": "",
    "returns": "number"
  },
  "getAmmoCargo": {
    "command": "getAmmoCargo",
    "timestamp": "2021-01-23T00:39:13Z",
    "version": "0.56",
    "syntax": "getAmmoCargo <object>",
    "docSyntax": "getAmmoCargo vehicle",
    "tags": "[AG]",
    "description": "Returns the amount (1 is full) of ammo resources in the cargo space of a rearm vehicle. Feature Informative Since Arma 3 v1.96 the return value for vehicles that are not configured to have ability to rearm other vehicles is -1. (Prior to that the value was negative infinity)",
    "example": "value = getAmmoCargo myVehicleName;",
    "params": "<object>",
    "returns": "number | alive | isnull"
  },
  "getArtilleryETA": {
    "command": "getArtilleryETA",
    "timestamp": "2021-01-23T00:00:47Z",
    "version": "0.56",
    "syntax": "<object> getArtilleryETA [positionagls, <string>]",
    "docSyntax": "unit getArtilleryETA [targetPosition, magazineType]",
    "tags": "[AG]",
    "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.",
    "example": "_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];",
    "params": "<object> positionagls <string>",
    "returns": "number"
  },
  "getFuelCargo": {
    "command": "getFuelCargo",
    "timestamp": "2021-01-22T23:27:51Z",
    "version": "0.56",
    "syntax": "getFuelCargo <object>",
    "docSyntax": "getFuelCargo vehicle",
    "tags": "[AG]",
    "description": "Returns the fuel amount (1 is full) in the cargo space of a refueling vehicle. Feature Informative Since Arma 3 v1.96 the return value for vehicles that are not configured to have ability to refuel other vehicles is -1. (Prior to that the value was negative infinity)",
    "example": "value = getFuelCargo myVehicleName;",
    "params": "<object>",
    "returns": "number | alive | isnull"
  },
  "getRepairCargo": {
    "command": "getRepairCargo",
    "timestamp": "2021-01-23T00:59:24Z",
    "version": "0.56",
    "syntax": "getRepairCargo <object>",
    "docSyntax": "getRepairCargo vehicle",
    "tags": "[AG]",
    "description": "Returns the amount (1 is full) of repair resources in the cargo space of a repair vehicle. Feature Informative Since Arma 3 v1.96 the return value for vehicles that are not configured to have ability to repair other vehicles is -1. (Prior to that the value was negative infinity)",
    "example": "value = getRepairCargo vehicleName;",
    "params": "<object>",
    "returns": "number | alive | isnull"
  },
  "BIS_fnc_arrayShuffle": {
    "command": "BIS_fnc_arrayShuffle",
    "timestamp": "2021-01-23T00:57:45Z",
    "version": "0.58",
    "syntax": "<array> call BIS_fnc_arrayShuffle",
    "docSyntax": "array call BIS_fnc_arrayShuffle",
    "tags": "",
    "description": "Return a new array with randomized order of elements from input array.",
    "example": "[1,2,3] call BIS_fnc_arrayShuffle; codecomment// can return '[1,2,3]', [3,1,2], [2,3,1], [1,3,2], [2,1,3] or [3,2,1]",
    "params": "<array>",
    "returns": "array"
  },
  "BIS_fnc_endLoadingScreen": {
    "command": "BIS_fnc_endLoadingScreen",
    "timestamp": "2021-01-23T09:09:46Z",
    "version": "0.58",
    "syntax": "<string> call BIS_fnc_endLoadingScreen",
    "docSyntax": "screenId call BIS_fnc_endLoadingScreen",
    "tags": "",
    "description": "Unregister a loading screen. When none other remains, end the loading.",
    "example": "[\"myLoadingScreen\", \"Loading… wait for my splendid™ mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;",
    "params": "<string>",
    "returns": "boolean"
  },
  "BIS_fnc_loadInventory": {
    "command": "BIS_fnc_loadInventory",
    "timestamp": "2021-01-23T10:07:03Z",
    "version": "0.58",
    "syntax": "param call BIS_fnc_loadInventory",
    "docSyntax": "param call BIS_fnc_loadInventory",
    "tags": "",
    "description": "Adds a predefined loadout (either via CfgVehicles, CfgRespawnInventory, or a custom inventory saved via BIS_fnc_saveInventory) to a specified unit.",
    "example": "loadout = [player, configFile >> \"CfgVehicles\" >> \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; // gives BLUFOR Squad Leader's loadout to player unit",
    "params": "config",
    "returns": "boolean"
  },
  "BIS_fnc_sortBy": {
    "command": "BIS_fnc_sortBy",
    "timestamp": "2021-01-23T20:23:14Z",
    "version": "0.58",
    "syntax": "[<array>, <array>, _x, <string>, <code>] call BIS_fnc_sortBy",
    "docSyntax": "[array, parameters, algorithm, direction, filter] call BIS_fnc_sortBy",
    "tags": "",
    "description": "Sorts an array according to given algorithm. See sort for simple sorts.",
    "example": "// sort numbers from lowest to highest _sortedNumbers = [nowiki[1,-80,0,480,15,-40], [], {_x}, \"ASCEND\"] call BIS_fnc_sortBy;",
    "params": "<array> <array> _x <string> <code>",
    "returns": "array"
  },
  "BIS_fnc_startLoadingScreen": {
    "command": "BIS_fnc_startLoadingScreen",
    "timestamp": "2021-01-23T20:17:52Z",
    "version": "0.58",
    "syntax": "[<string>, <string>] call BIS_fnc_startLoadingScreen",
    "docSyntax": "[screenId, layout] call BIS_fnc_startLoadingScreen",
    "tags": "",
    "description": "Register a loading screen. Start the loading when it is the first one registered.",
    "example": "[\"myLoadingScreen\", \"Loading… wait for my splendid™ mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;",
    "params": "<string> <string>",
    "returns": "boolean"
  },
  "lbSetTooltip": {
    "command": "lbSetTooltip",
    "timestamp": "2021-01-23T09:26:44Z",
    "version": "0.58",
    "syntax": "lbSetTooltip <array>",
    "docSyntax": "lbSetTooltip [idc, index, tooltip]",
    "tags": "",
    "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
    "example": "lbSetTooltip [101, 1, \"tooltip\"];",
    "params": "<array> <number> <number> <string> <control> <array> <number> <string>",
    "returns": "nothing"
  },
  "canAdd": {
    "command": "canAdd",
    "timestamp": "2021-01-22T21:58:47Z",
    "version": "0.70",
    "syntax": "<<object>> canAdd <string>",
    "docSyntax": "object canAdd item",
    "tags": "",
    "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit. Since Arma 3 v2.09 this command will count unit storage space as whole, instead of as biggest container, when multiple items are queried.",
    "example": "if (player canAdd \"FirstAidKit\") then { player addItem \"FirstAidKit\"; } else { hint \"Not enough space\"; }; ",
    "params": "<object> <string> <object> <string> <number>",
    "returns": "boolean"
  },
  "handgunMagazine": {
    "command": "handgunMagazine",
    "timestamp": "2021-01-23T09:09:22Z",
    "version": "0.70",
    "syntax": "handgunMagazine <object>",
    "docSyntax": "handgunMagazine unit",
    "tags": "[AG]",
    "description": "Collects all loaded magazines from all handgunWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
    "example": "hint str handgunMagazine player; cc[\"16Rnd_9x21_Mag\"]",
    "params": "<object>",
    "returns": "array"
  },
  "isStreamFriendlyUIEnabled": {
    "command": "isStreamFriendlyUIEnabled",
    "timestamp": "2021-01-23T09:25:49Z",
    "version": "0.70",
    "syntax": "'isStreamFriendlyUIEnabled'",
    "docSyntax": "'isStreamFriendlyUIEnabled'",
    "tags": "",
    "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).",
    "example": "hint str isStreamFriendlyUIEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "primaryWeaponMagazine": {
    "command": "primaryWeaponMagazine",
    "timestamp": "2021-01-23T10:25:36Z",
    "version": "0.70",
    "syntax": "primaryWeaponMagazine <object>",
    "docSyntax": "primaryWeaponMagazine unit",
    "tags": "",
    "description": "Collects all loaded magazines from all primaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
    "example": "hint str primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"] ",
    "params": "<object>",
    "returns": "array"
  },
  "removeAllHandgunItems": {
    "command": "removeAllHandgunItems",
    "timestamp": "2021-01-23T10:33:32Z",
    "version": "0.70",
    "syntax": "removeAllHandgunItems <object>",
    "docSyntax": "removeAllHandgunItems unit",
    "tags": "[AL] [EG]",
    "description": "Removes all items from handgunWeapon, except magazine.",
    "example": "removeAllHandgunItems player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllPrimaryWeaponItems": {
    "command": "removeAllPrimaryWeaponItems",
    "timestamp": "2021-01-23T10:31:47Z",
    "version": "0.70",
    "syntax": "removeAllPrimaryWeaponItems <object>",
    "docSyntax": "removeAllPrimaryWeaponItems unit",
    "tags": "[AL] [EG]",
    "description": "Removes all items from primaryWeapon, except magazine.",
    "example": "removeAllPrimaryWeaponItems player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeHandgunItem": {
    "command": "removeHandgunItem",
    "timestamp": "2021-01-23T10:22:51Z",
    "version": "0.70",
    "syntax": "<object> removeHandgunItem <string>",
    "docSyntax": "unit removeHandgunItem item",
    "tags": "[AL] [EG]",
    "description": "Removes given weapon item, including magazine, from the handgunWeapon",
    "example": "player removeHandgunItem \"muzzle_snds_L\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removePrimaryWeaponItem": {
    "command": "removePrimaryWeaponItem",
    "timestamp": "2021-01-23T10:38:16Z",
    "version": "0.70",
    "syntax": "<object> removePrimaryWeaponItem <string>",
    "docSyntax": "unit removePrimaryWeaponItem item",
    "tags": "[AL] [EG]",
    "description": "Removes given weapon item, including magazine, from the primaryWeapon.",
    "example": "player removePrimaryWeaponItem \"acc_flashlight\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "secondaryWeaponMagazine": {
    "command": "secondaryWeaponMagazine",
    "timestamp": "2021-01-23T10:34:46Z",
    "version": "0.70",
    "syntax": "secondaryWeaponMagazine <object>",
    "docSyntax": "secondaryWeaponMagazine unit",
    "tags": "",
    "description": "Collects all loaded magazines from all secondaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
    "example": "hint str secondaryWeaponMagazine player; //[\"NLAW_F\"] ",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_respawnTickets": {
    "command": "BIS_fnc_respawnTickets",
    "timestamp": "2021-01-23T10:37:21Z",
    "version": "0.74",
    "syntax": "[target, tickets, dynamicTarget] call BIS_fnc_respawnTickets",
    "docSyntax": "[target, tickets, dynamicTarget] call BIS_fnc_respawnTickets",
    "tags": "[EG]",
    "description": "Manage respawn tickets used by Tickets respawn template.br When player dies, number of tickets is decreased by 1. The most local tickets are always used. \nExample: When you first add tickets to player's side, they will be affected. If you later define tickets also to player's group, they will completely replace the side tickets. When player runs out of the tickets, his respawn is disabled. If you use also ''EndMission'' respawn template, the mission will automatically end once tickets in all name spaces are exhausted.",
    "example": "[west, 5] call BIS_fnc_respawnTickets;",
    "params": "receiver <number> <boolean>",
    "returns": "number"
  },
  "isSteamMission": {
    "command": "isSteamMission",
    "timestamp": "2021-01-23T09:28:52Z",
    "version": "0.74",
    "syntax": "'isSteamMission'",
    "docSyntax": "'isSteamMission'",
    "tags": "",
    "description": "Returns true if the current mission is a Steam Workshop mission.",
    "example": "if (isSteamMission) then { hint \"Thank you for subscribing to my mission on Steam!\"; } else { hint \"Thank you for downloading my mission off the Internet!\"; };",
    "params": "",
    "returns": "boolean"
  },
  "markAsFinishedOnSteam": {
    "command": "markAsFinishedOnSteam",
    "timestamp": "2021-01-23T10:02:24Z",
    "version": "0.74",
    "syntax": "'markAsFinishedOnSteam'",
    "docSyntax": "'markAsFinishedOnSteam'",
    "tags": "",
    "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.",
    "example": "markAsFinishedOnSteam; endMission \"END1\";",
    "params": "",
    "returns": "boolean"
  },
  "tvAdd": {
    "command": "tvAdd",
    "timestamp": "2021-01-24T10:42:23Z",
    "version": "0.74",
    "syntax": "tvAdd [<number>, <array>, <string>]",
    "docSyntax": "tvAdd [idc, pathParent, text]",
    "tags": "",
    "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See <Tree View Path> for more information.",
    "example": "_index = _ctrl tvAdd [nowiki[], \"Parent Item\"];",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "number"
  },
  "tvClear": {
    "command": "tvClear",
    "timestamp": "2021-01-24T10:47:29Z",
    "version": "0.74",
    "syntax": "tvClear <number>",
    "docSyntax": "tvClear idc",
    "tags": "[AL] [EL]",
    "description": "Removes all items from Tree View with given idc.",
    "example": "tvClear 101;",
    "params": "<number> <control>",
    "returns": "nothing"
  },
  "tvCollapse": {
    "command": "tvCollapse",
    "timestamp": "2021-01-24T10:46:25Z",
    "version": "0.74",
    "syntax": "tvCollapse <array>",
    "docSyntax": "tvCollapse [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
    "example": "tvCollapse [101, [0]];",
    "params": "<array> <number> <array> <control> <array>",
    "returns": "nothing"
  },
  "tvCollapseAll": {
    "command": "tvCollapseAll",
    "timestamp": "2021-01-24T10:42:17Z",
    "version": "0.74",
    "syntax": "tvCollapseAll <number>",
    "docSyntax": "tvCollapseAll idc",
    "tags": "[AL] [EL]",
    "description": "Collapses all tree items for the given Tree View.",
    "example": "tvCollapseAll 101;",
    "params": "<number> <control>",
    "returns": "nothing"
  },
  "tvCount": {
    "command": "tvCount",
    "timestamp": "2021-01-24T10:40:16Z",
    "version": "0.74",
    "syntax": "tvCount [<number>, <array>]",
    "docSyntax": "tvCount [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Returns children count on given path. IDC means id of parent Tree View.",
    "example": "tvCount [101, [0]];",
    "params": "<number> <array> <control> <array>",
    "returns": "number"
  },
  "tvCurSel": {
    "command": "tvCurSel",
    "timestamp": "2021-01-24T10:38:42Z",
    "version": "0.74",
    "syntax": "tvCurSel <number>",
    "docSyntax": "tvCurSel idc",
    "tags": "[AL] [EL]",
    "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
    "example": "tvCurSel 101;",
    "params": "<number> <control>",
    "returns": "array"
  },
  "tvData": {
    "command": "tvData",
    "timestamp": "2021-01-24T10:41:09Z",
    "version": "0.74",
    "syntax": "tvData [<number>, numbers]",
    "docSyntax": "tvData [idc, path]",
    "tags": "",
    "description": "Returns string data from item on given path. IDC means id of parent CT_TREE.",
    "example": "sqftvData [101, [0]];</sqf>",
    "params": "<number> numbers <control> numbers",
    "returns": "string"
  },
  "tvDelete": {
    "command": "tvDelete",
    "timestamp": "2021-01-24T10:41:14Z",
    "version": "0.74",
    "syntax": "tvDelete <array>",
    "docSyntax": "tvDelete [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Removes an item with given <Tree View Path> from Tree View. Feature important The paths of other items on the same branch after delete operation are updated accordingly and may change. Therefore, when deleting multiple entries, start with the one with the highest index and proceed in reverse order.",
    "example": "tvDelete [101, [0, 0]];",
    "params": "<array> <number> <array> <control> <array>",
    "returns": "nothing"
  },
  "tvExpand": {
    "command": "tvExpand",
    "timestamp": "2021-01-24T10:41:41Z",
    "version": "0.74",
    "syntax": "tvExpand [<number>, <array>]",
    "docSyntax": "tvExpand [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
    "example": "tvExpand [101, [0]];",
    "params": "<number> <array> <control> <array>",
    "returns": "nothing"
  },
  "tvExpandAll": {
    "command": "tvExpandAll",
    "timestamp": "2021-01-24T10:38:56Z",
    "version": "0.74",
    "syntax": "tvExpandAll <number>",
    "docSyntax": "tvExpandAll idc",
    "tags": "[AL] [EL]",
    "description": "Expands all tree items for the given Tree View.",
    "example": "tvExpandAll 101;",
    "params": "<number> <control>",
    "returns": "nothing"
  },
  "tvPicture": {
    "command": "tvPicture",
    "timestamp": "2021-01-24T10:38:58Z",
    "version": "0.74",
    "syntax": "tvPicture [<number>, <array>]",
    "docSyntax": "tvPicture [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
    "example": "tvPicture [101, [0]];",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "tvSetColor": {
    "command": "tvSetColor",
    "timestamp": "2021-01-24T10:40:34Z",
    "version": "0.74",
    "syntax": "tvSetColor [<number>, <array>, <array>]",
    "docSyntax": "tvSetColor [idc, path, color]",
    "tags": "",
    "description": "Sets text color on given Tree View Item",
    "example": "tvSetColor [101, [0,0], [1,0,0,1]];",
    "params": "<number> <array> <array> <control> <array> <array>",
    "returns": "nothing"
  },
  "tvSetCurSel": {
    "command": "tvSetCurSel",
    "timestamp": "2021-01-24T10:40:09Z",
    "version": "0.74",
    "syntax": "tvSetCurSel [<number>, <array>]",
    "docSyntax": "tvSetCurSel [idc, path]",
    "tags": "",
    "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (''available since Arma 3 v1.56'')",
    "example": "tvSetCurSel [101, [0]];",
    "params": "<number> <array> <control> <array>",
    "returns": "nothing"
  },
  "tvSetData": {
    "command": "tvSetData",
    "timestamp": "2021-01-24T10:45:46Z",
    "version": "0.74",
    "syntax": "tvSetData [<number>, <array>, <string>]",
    "docSyntax": "tvSetData [idc, path, data]",
    "tags": "[AL] [EL]",
    "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
    "example": "tvSetData [101, [0], \"Test data\"];",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "tvSetPicture": {
    "command": "tvSetPicture",
    "timestamp": "2021-01-24T10:45:34Z",
    "version": "0.74",
    "syntax": "tvSetPicture [<number>, <array>, <string>]",
    "docSyntax": "tvSetPicture [idc, path, name]",
    "tags": "",
    "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
    "example": "tvSetPicture [101, [0], \"picture\"];",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "tvSetPictureColor": {
    "command": "tvSetPictureColor",
    "timestamp": "2021-01-24T10:38:28Z",
    "version": "0.74",
    "syntax": "tvSetPictureColor [<number>, <array>, color]",
    "docSyntax": "tvSetPictureColor [idc, path, color]",
    "tags": "[AL] [EL]",
    "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.",
    "example": "tvSetPictureColor [101, [0,2], [1,0,1,1]];",
    "params": "<number> <array> color <control> <array> color",
    "returns": "nothing"
  },
  "tvSetTooltip": {
    "command": "tvSetTooltip",
    "timestamp": "2021-01-24T10:44:12Z",
    "version": "0.74",
    "syntax": "tvSetTooltip <array>",
    "docSyntax": "tvSetTooltip [idc, path, text]",
    "tags": "[AL] [EL]",
    "description": "Sets the tooltip text associated with the specified tree view path.",
    "example": "tvSetTooltip [101, [0,2], \"This is a tooltip\"];",
    "params": "<array> <number> <array> <string> <control> <array> <array> <string>",
    "returns": "nothing"
  },
  "tvSetValue": {
    "command": "tvSetValue",
    "timestamp": "2021-01-24T10:43:43Z",
    "version": "0.74",
    "syntax": "tvSetValue [<number>, <array>, <number>]",
    "docSyntax": "tvSetValue [idc, path, val]",
    "tags": "[AL] [EL]",
    "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
    "example": "tvSetValue [101, [0], 555];",
    "params": "<number> <array> <number> <control> <array> <number>",
    "returns": "nothing"
  },
  "tvSort": {
    "command": "tvSort",
    "timestamp": "2021-01-24T10:44:15Z",
    "version": "0.74",
    "syntax": "<control> tvSort [<array>, <boolean>]",
    "docSyntax": "control tvSort [path, reversed]",
    "tags": "",
    "description": "Sorts all children of given path. Text of Tree View entries is used for sorting.",
    "example": "control tvSort [nowiki[0], true];",
    "params": "<control> <array> <boolean> <number> <array> <boolean>",
    "returns": "nothing"
  },
  "tvSortByValue": {
    "command": "tvSortByValue",
    "timestamp": "2021-01-24T10:42:45Z",
    "version": "0.74",
    "syntax": "<control> tvSortByValue <array>",
    "docSyntax": "control tvSortByValue [path, reversed]",
    "tags": "",
    "description": "Sorts all children of given path. Value of Tree View entries is used for sorting.",
    "example": "control tvSortByValue [nowiki[0], false];",
    "params": "<control> <array> <array> <boolean> <array> <number> <array> <boolean>",
    "returns": "nothing"
  },
  "tvText": {
    "command": "tvText",
    "timestamp": "2021-01-24T10:43:11Z",
    "version": "0.74",
    "syntax": "tvText <array>",
    "docSyntax": "tvText [idc, path]",
    "tags": "",
    "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
    "example": "tvText [101, [0]];",
    "params": "<array> <number> <array> <control> <array>",
    "returns": "string"
  },
  "tvTooltip": {
    "command": "tvTooltip",
    "timestamp": "2021-01-24T10:45:28Z",
    "version": "0.74",
    "syntax": "tvTooltip <array>",
    "docSyntax": "tvTooltip [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Gets the tooltip text associated with the specified tree view path.",
    "example": "_text = tvTooltip [101, [0,2]];",
    "params": "<array> <number> <array> <control> <array>",
    "returns": "string"
  },
  "tvValue": {
    "command": "tvValue",
    "timestamp": "2021-01-24T10:42:18Z",
    "version": "0.74",
    "syntax": "tvValue [<number>, <array>]",
    "docSyntax": "tvValue [idc, path]",
    "tags": "[AL] [EL]",
    "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
    "example": "tvValue [101, [0]];",
    "params": "<number> <array> <control> <array>",
    "returns": "number"
  },
  "addMagazineGlobal": {
    "command": "addMagazineGlobal",
    "timestamp": "2021-01-22T21:39:06Z",
    "version": "0.76",
    "syntax": "<object> addMagazineGlobal <string>",
    "docSyntax": "unit addMagazineGlobal magazineName",
    "tags": "[AG] [EG]",
    "description": "Adds magazine to a unit regardless of locality. This command can also be used to add magazine to a vehicle, like a static gun, for example.",
    "example": "player addMagazineGlobal \"30Rnd_65x39_caseless_mag\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addWeaponGlobal": {
    "command": "addWeaponGlobal",
    "timestamp": "2021-01-22T21:27:20Z",
    "version": "0.76",
    "syntax": "<object>addWeaponGlobal <string>",
    "docSyntax": "object addWeaponGlobal weapon",
    "tags": "[AG] [EG]",
    "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. This command can link items to respective slots as well, in which case the functionality is identical to linkItem. To make sure the added weapon is loaded and ready, add the magazine first. Feature Warning This command is broken when used on dedicated server",
    "example": "{ _x addMagazineGlobal \"Laserbatteries\"; _x addWeaponGlobal \"Laserdesignator\"; } forEach allUnits;",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "allUnitsUAV": {
    "command": "allUnitsUAV",
    "timestamp": "2021-01-22T21:23:17Z",
    "version": "0.76",
    "syntax": "allUnitsUAV",
    "docSyntax": "allUnitsUAV",
    "tags": "",
    "description": "Return a list of all UAV vehicles.",
    "example": "hint format [\"Number of UAV(s) on the map: %1\", count allUnitsUAV];",
    "params": "",
    "returns": "array | object"
  },
  "BIS_fnc_addToPairs": {
    "command": "BIS_fnc_addToPairs",
    "timestamp": "2021-01-22T23:05:11Z",
    "version": "0.76",
    "syntax": "[<array>, <string>, <number>, <boolean>] call BIS_fnc_addToPairs",
    "docSyntax": "[array, key, value, copyArray] call BIS_fnc_addToPairs",
    "tags": "",
    "description": "Adds given value to pair array, stored under unique key.brbr If value is \n\tfound:br a) both values are \nscalars: values are added and stored as a single scalarbr b) one or both values are \narray: values are added and stored as a single arraybr c) anything \nelse: an array is created and both values are stored therebrbr FeatureInformativeFunction by default modifies the input array. This can be overrriden by setting '_copyArray' param to true.",
    "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_addToPairs; // Returns [[\"apple\",3],[\"pear\",12]]",
    "params": "<array> <string> <number> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_consolidateArray": {
    "command": "BIS_fnc_consolidateArray",
    "timestamp": "2021-01-23T00:58:17Z",
    "version": "0.76",
    "syntax": "<array> call BIS_fnc_consolidateArray",
    "docSyntax": "array call BIS_fnc_consolidateArray",
    "tags": "",
    "description": "Finds duplicates in the given array of anything and consolidates them into an array of sub-arrays",
    "example": "[\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray; // Return: [nowiki[\"apple\",3],[\"pear\",2]]",
    "params": "<array>",
    "returns": "array | anything | number"
  },
  "BIS_fnc_findInPairs": {
    "command": "BIS_fnc_findInPairs",
    "timestamp": "2021-01-23T09:11:01Z",
    "version": "0.76",
    "syntax": "[<array>, <string>] call BIS_fnc_findInPairs",
    "docSyntax": "[array, key] call BIS_fnc_findInPairs",
    "tags": "",
    "description": "Searches the associative array for the first occurance of the key string and returns its index. Seach is not case sensitiv.",
    "example": "[[[\"apple\",3],[\"pear\",2]],\"apple\"] call BIS_fnc_findInPairs; // Returns 0",
    "params": "<array> <string>",
    "returns": "number"
  },
  "BIS_fnc_groupVehicles": {
    "command": "BIS_fnc_groupVehicles",
    "timestamp": "2021-01-23T08:56:46Z",
    "version": "0.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_groupVehicles",
    "docSyntax": "[target, assignedVeh] call BIS_fnc_groupVehicles",
    "tags": "",
    "description": "Returns all vehicles a group possesses, assigned vehicles can be included.",
    "example": "nowiki[</nowiki>group player, true] call BIS_fnc_groupVehicles;",
    "params": "<object> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_moduleSector": {
    "command": "BIS_fnc_moduleSector",
    "timestamp": "2021-01-23T10:40:50Z",
    "version": "0.76",
    "syntax": "<!-- [] call BIS_fnc_moduleSector -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSector -->",
    "tags": "",
    "description": "\nDescription: Initialize a sector module. Can be also used to get sector parameters. --- Get all sectors --- Parameter(s): \n0: BOOL \nReturns: ARRAY of OBJECTs --- Get number of sectors held by a side --- Parameter(s): \n0: SIDE \nReturns: NUMBER - number of sectors owned by the side --- Set sector owner --- Parameter(s): \n0: OBJECT - sector module \n1: SIDE \nReturns: BOOL --- Initialize --- Parameter(s): \n0: OBJECT - sector module \nReturns: NOTHING",
    "example": "[] call BIS_fnc_moduleSector;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_nearestRoad": {
    "command": "BIS_fnc_nearestRoad",
    "timestamp": "2021-01-23T10:28:52Z",
    "version": "0.76",
    "syntax": "[<position>'', <number>, <array>''] call BIS_fnc_nearestRoad",
    "docSyntax": "[center'', radius, blacklist''] call BIS_fnc_nearestRoad",
    "tags": "",
    "description": "Find the nearest road segment to certain position, within given radius.",
    "example": "_nearestRoad = [getPosATL player, 500] call BIS_fnc_nearestRoad;",
    "params": "<position> <number> <array>",
    "returns": "object | objnull"
  },
  "BIS_fnc_removeSupportLink": {
    "command": "BIS_fnc_removeSupportLink",
    "timestamp": "2021-01-23T10:34:11Z",
    "version": "0.76",
    "syntax": "[<object>, <object>] call BIS_fnc_removeSupportLink",
    "docSyntax": "[requester, provider] call BIS_fnc_removeSupportLink",
    "tags": "",
    "description": "Removes support types during a mission.",
    "example": "[requesterMod, providerMod] call BIS_fnc_removeSupportLink;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_taskState": {
    "command": "BIS_fnc_taskState",
    "timestamp": "2021-01-23T20:33:40Z",
    "version": "0.76",
    "syntax": "<string> call BIS_fnc_taskState",
    "docSyntax": "taskID call BIS_fnc_taskState",
    "tags": "[AG]",
    "description": "Returns task's state. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"task_1\" call BIS_fnc_taskState;",
    "params": "<string>",
    "returns": "string"
  },
  "connectTerminalToUAV": {
    "command": "connectTerminalToUAV",
    "timestamp": "2021-01-22T21:58:01Z",
    "version": "0.76",
    "syntax": "<object> connectTerminalToUAV <object>",
    "docSyntax": "person connectTerminalToUAV uav",
    "tags": "[AG] [EG]",
    "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.",
    "example": "bool = player connectTerminalToUAV uav1;",
    "params": "<object> <object>",
    "returns": "boolean | true"
  },
  "createVehicleCrew": {
    "command": "createVehicleCrew",
    "timestamp": "2021-01-22T22:07:16Z",
    "version": "0.76",
    "syntax": "createVehicleCrew <object>",
    "docSyntax": "createVehicleCrew vehicle",
    "tags": "",
    "description": "Creates vehicle crew corresponding to the provided vehicle's all non-FFV turrets gunners (if the turret needs one - config hasGunner without dontCreateAI) * does not create cargo * does not addVehicle to the created crew in the same way this normally happens when crewed vehicle created in the editor. See BIS_fnc_spawnVehicle to spawn a crew-full vehicle with group addition. FeatureimportantWhile a vehicle with a crew placed in editor will have all crew units of the rank hl\"PRIVATE\", this command will create the driver as hl\"LIEUTENANT\" and all turret units as hl\"SERGEANT\".",
    "example": "_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"]; createVehicleCrew _veh;",
    "params": "<object>",
    "returns": "group | nothing"
  },
  "getConnectedUAV": {
    "command": "getConnectedUAV",
    "timestamp": "2021-01-22T23:48:33Z",
    "version": "0.76",
    "syntax": "getConnectedUAV <object>",
    "docSyntax": "getConnectedUAV person",
    "tags": "",
    "description": "Returns UAV/UGV vehicle if person has connection to some UAV. To return the AI unit which player controls, see getConnectedUAVUnit.",
    "example": "getConnectedUAV player;",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "isUAVConnected": {
    "command": "isUAVConnected",
    "timestamp": "2021-01-23T09:11:43Z",
    "version": "0.76",
    "syntax": "isUAVConnected <object>",
    "docSyntax": "isUAVConnected uav",
    "tags": "",
    "description": "Returns true if UAV is connected to some terminal.",
    "example": "_isConnected = isUAVConnected cursorTarget;",
    "params": "<object>",
    "returns": "boolean"
  },
  "magazinesAmmo": {
    "command": "magazinesAmmo",
    "timestamp": "2021-01-23T10:03:50Z",
    "version": "0.76",
    "syntax": "magazinesAmmo <object>",
    "docSyntax": "magazinesAmmo vehicle",
    "tags": "",
    "description": "Returns all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.",
    "example": "_magazinesAmmo = magazinesAmmo player; codecomment/* [ [\"30Rnd_65x39_caseless_mag\",30], [\"30Rnd_65x39_caseless_mag\",30], [\"16Rnd_9x21_Mag\",16], [\"SmokeShellGreen\",1], [\"Chemlight_green\",1], [\"HandGrenade\",1] ] nowiki*/",
    "params": "<object> <object> <boolean>",
    "returns": "array | array | string | number"
  },
  "magazinesAmmoFull": {
    "command": "magazinesAmmoFull",
    "timestamp": "2021-01-23T10:06:54Z",
    "version": "0.76",
    "syntax": "magazinesAmmoFull <object>",
    "docSyntax": "magazinesAmmoFull entity",
    "tags": "",
    "description": "Returns array of arrays of all unit's or vehicle's magazines with extended information about them. The magazines returned are for primary gunner. If you need magazines for all turrets, see magazinesAllTurrets. Feature important This command does not return empty magazines from containers, only from the weapon. Use magazinesAmmoCargo instead.",
    "example": "toFixed 0; magazinesAmmoFull player; codecomment/* [ [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\",10000003,0], [\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\",10000016,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000008,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000009,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000010,0], [\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\",10000018,0], [\"HandGrenade\",1,false,-1,\"Vest\",10000019,0], [\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\",10000001,0], [\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\",10000011,0] ] nowiki*/",
    "params": "<object> <object> <boolean>",
    "returns": "array | array | string | number | boolean | number | string | currentmuzzle | number | tofixed | number"
  },
  "removeMagazineGlobal": {
    "command": "removeMagazineGlobal",
    "timestamp": "2021-01-23T10:31:47Z",
    "version": "0.76",
    "syntax": "<object> removeMagazineGlobal <string>",
    "docSyntax": "unit removeMagazineGlobal magazineName",
    "tags": "[AG] [EG]",
    "description": "Removes the magazine from the unit.",
    "example": "player removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removeWeaponGlobal": {
    "command": "removeWeaponGlobal",
    "timestamp": "2021-01-23T10:34:03Z",
    "version": "0.76",
    "syntax": "<object> removeWeaponGlobal <string>",
    "docSyntax": "unit removeWeaponGlobal weapon",
    "tags": "[AG] [EG]",
    "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.",
    "example": "{ _x removeWeaponGlobal \"Laserdesignator\"; } forEach allUnits;",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "weaponsItems": {
    "command": "weaponsItems",
    "timestamp": "2021-01-24T10:47:30Z",
    "version": "0.76",
    "syntax": "weaponsItems <object>",
    "docSyntax": "weaponsItems vehicle",
    "tags": "",
    "description": "150px|right|borderReturns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons. Feature Informative This command will return weapon magazines as well in format [magazineName, ammoCount], or empty array [] if weapon has no magazine * Since Arma 3 v1.22 it is possible to query weapon holders and ammo crates with this command. If the argument is a vehicle, the command will return vehicle's weapons. If the argument is a container, the command will act identical to weaponsItemsCargo. * Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with getUnitLoadout format for weapon items. * Since Arma 3 v2.02 the returned array can contains binocular weapon items.",
    "example": "hint str weaponsItems player;</code> code[ [\"arifle_MX_ACO_pointer_F\",\"muzzle_snds_H\",\"acc_pointer_IR\",\"optic_Aco\",[\"30Rnd_65x39_caseless_mag\",30],[],\"bipod_01_F_blk\"], [\"launch_NLAW_F\",\"\",\"\",\"\",[\"NLAW_F\",1],[],\"\"], [\"hgun_P07_F\",\"muzzle_snds_L\",\"\",\"\",[\"16Rnd_9x21_Mag\",11],[],\"\"] ]",
    "params": "<object>",
    "returns": "array | string | string | string | string | array | array | string"
  },
  "BIS_fnc_3DENCamera": {
    "command": "BIS_fnc_3DENCamera",
    "timestamp": "2021-01-22T22:02:24Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_3DENCamera",
    "docSyntax": "[mode] call BIS_fnc_3DENCamera",
    "tags": "",
    "description": "Moves Eden's camera depending on one of two \nmodes: * \"random\" - A random position over land preferring non forested areas * \"selected\" - The current selected Eden entity or users cursor position if nothing is selected",
    "example": "[\"selected\"] call BIS_fnc_3DENCamera;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENControlsHint": {
    "command": "BIS_fnc_3DENControlsHint",
    "timestamp": "2021-01-22T22:03:21Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_3DENControlsHint",
    "docSyntax": "[mode] call BIS_fnc_3DENControlsHint",
    "tags": "",
    "description": "Used by Eden to display control hints for the current Eden operation as seen in the bottom right corner of the Editor display.",
    "example": "[\"toggle\"] call BIS_fnc_3DENControlsHint; // toggle Eden controls hints",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENDrawLocations": {
    "command": "BIS_fnc_3DENDrawLocations",
    "timestamp": "2021-01-22T21:54:41Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_3DENDrawLocations",
    "docSyntax": "[] call BIS_fnc_3DENDrawLocations",
    "tags": "",
    "description": "Internal function used by <Eden Editor> to draw locations.",
    "example": "-",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_3DENInterface": {
    "command": "BIS_fnc_3DENInterface",
    "timestamp": "2021-01-22T21:54:54Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_3DENInterface -->",
    "docSyntax": "<!-- [] call BIS_fnc_3DENInterface -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_3DENStatusBar": {
    "command": "BIS_fnc_3DENStatusBar",
    "timestamp": "2021-01-22T21:54:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_3DENStatusBar -->",
    "docSyntax": "<!-- [] call BIS_fnc_3DENStatusBar -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_activateAddons": {
    "command": "BIS_fnc_activateAddons",
    "timestamp": "2021-01-22T23:09:47Z",
    "version": "1.00",
    "syntax": "[strings] call BIS_fnc_activateAddons",
    "docSyntax": "[addons] call BIS_fnc_activateAddons",
    "tags": "[SE]",
    "description": "Activate addons upon mission start. Doesn't work when the mission is already running.",
    "example": "[\"class_1\",\"class_2\"] call BIS_fnc_activateAddons;",
    "params": "strings",
    "returns": "strings - activated addons"
  },
  "BIS_fnc_addClassOO": {
    "command": "BIS_fnc_addClassOO",
    "timestamp": "2021-01-23T00:26:04Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_addClassOO",
    "docSyntax": "class call BIS_fnc_addClassOO",
    "tags": "",
    "description": "Registering a class for the OO scripting shell.",
    "example": "\"someOOClass\" call BIS_fnc_addClassOO;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_addScore": {
    "command": "BIS_fnc_addScore",
    "timestamp": "2021-01-22T23:23:21Z",
    "version": "1.00",
    "syntax": "[object, number] call BIS_fnc_addScore",
    "docSyntax": "[object, number] call BIS_fnc_addScore",
    "tags": "[SE]",
    "description": "Adds a set amount of points to the score of a unit ''(MP only)''",
    "example": "[player,20] call BIS_fnc_addScore;",
    "params": "",
    "returns": "number"
  },
  "BIS_fnc_addScriptedEventHandler": {
    "command": "BIS_fnc_addScriptedEventHandler",
    "timestamp": "2021-01-22T23:10:13Z",
    "version": "1.00",
    "syntax": "[<<string>space>, name, _thisscriptedeventhandler] call BIS_fnc_addScriptedEventHandler",
    "docSyntax": "[namespace, name, code] call BIS_fnc_addScriptedEventHandler",
    "tags": "",
    "description": "Adds a Scripted Event Handler and returns its ID. Additionally, the \"ScriptedEventHandlerAdded\" Scripted EH is called. For the full list of all available Scripted EHs see <Arma \n3: Scripted Event Handlers>.",
    "example": "[missionNamespace, \"event\", { hint \"Hello World\" }] call BIS_fnc_addScriptedEventHandler;",
    "params": "<namespace> <string> _thisscriptedeventhandler",
    "returns": "number"
  },
  "BIS_fnc_addStackedEventHandler": {
    "command": "BIS_fnc_addStackedEventHandler",
    "timestamp": "2021-01-22T23:09:19Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, <code>, <array>] call BIS_fnc_addStackedEventHandler",
    "docSyntax": "[id, event, code, arguments] call BIS_fnc_addStackedEventHandler",
    "tags": "[EL]",
    "description": "FeatureobsoleteEachFrame ! n/a !- ! \"PlayerConnected ! rowspan=\"2\" !Special variables _id, _uid, _name, _jip, _owner are provided and are available in _this array as well. params [\"_id\", \"_uid\", \"_name\", \"_jip\", \"_owner\"];!- ! \"PlayerDisconnected !- ! \"MapSingleClick ! Special variables _units, _pos, _alt, _shift are provided and are available in _this array as well. params [\"_units\", \"_pos\", \"_alt\", \"_shift\"];!- ! \"PreloadStarted ! n/a !- ! \"PreloadFinished ! n/a !}",
    "example": "[\"someId\", \"onEachFrame\", {hintSilent str time}] call BIS_fnc_addStackedEventHandler;",
    "params": "<string> <string> <code> <array>",
    "returns": "string"
  },
  "BIS_fnc_addSupportLink": {
    "command": "BIS_fnc_addSupportLink",
    "timestamp": "2021-01-22T23:40:00Z",
    "version": "1.00",
    "syntax": "[<object>, <object>, <object>] call BIS_fnc_addSupportLink",
    "docSyntax": "[requesterUnit, requesterMod, providerMod] call BIS_fnc_addSupportLink",
    "tags": "",
    "description": "Adds support types during a mission.",
    "example": "[player, BIS_requesterMod, BIS_providerMod ] call BIS_fnc_addSupportLink;",
    "params": "<object> <object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_addWeapon": {
    "command": "BIS_fnc_addWeapon",
    "timestamp": "2021-01-22T23:37:39Z",
    "version": "1.00",
    "syntax": "[<object>, cfgweapons, <number>, <number>] call BIS_fnc_addWeapon",
    "docSyntax": "[unit, weaponClassName, quantity, type] call BIS_fnc_addWeapon",
    "tags": "",
    "description": "Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in CfgWeapons). This function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually.",
    "example": "newGun = [player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon;",
    "params": "<object> cfgweapons <number> <number>",
    "returns": "string"
  },
  "BIS_fnc_advHint": {
    "command": "BIS_fnc_advHint",
    "timestamp": "2021-01-22T23:58:22Z",
    "version": "1.00",
    "syntax": "[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call BIS_fnc_advHint",
    "docSyntax": "[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call BIS_fnc_advHint",
    "tags": "",
    "description": "Shows advanced hint to player.",
    "example": "nowiki<\"Common\", \"GPS\"></nowiki> call BIS_fnc_advHint;",
    "params": "<array> <number> <string> <number> <string> <boolean> <boolean> <boolean> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_advHintArg": {
    "command": "BIS_fnc_advHintArg",
    "timestamp": "2021-01-22T23:08:57Z",
    "version": "1.00",
    "syntax": "[<array>,<string>,<string>] call BIS_fnc_advHintArg",
    "docSyntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg",
    "tags": "",
    "description": "Advanced hint arguments preprocess.",
    "example": "",
    "params": "<array> <string> <string>",
    "returns": "array"
  },
  "BIS_fnc_advHintCredits": {
    "command": "BIS_fnc_advHintCredits",
    "timestamp": "2021-01-22T23:41:56Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_advHintCredits",
    "docSyntax": "call BIS_fnc_advHintCredits",
    "tags": "",
    "description": "Advanced hint credits preprocessor.",
    "example": "call BIS_fnc_advHintCredits;",
    "params": "",
    "returns": "string"
  },
  "BIS_fnc_advHintFormat": {
    "command": "BIS_fnc_advHintFormat",
    "timestamp": "2021-01-22T23:10:54Z",
    "version": "1.00",
    "syntax": "[<string>,hint,<string>,<array>] call BIS_fnc_advHintFormat",
    "docSyntax": "[topic,hint,subHint,colour] call BIS_fnc_advHintFormat",
    "tags": "",
    "description": "Return formatted texts of a CfgHints hint.",
    "example": "[\"Arma3\",\"Feedback\",\"\",[0.5,0.3,0.6,1]] call BIS_fnc_advHintFormat;",
    "params": "<string> <string> <string> <array>",
    "returns": "array | config | string | string | string | string | string | number | boolean | true"
  },
  "BIS_fnc_aircraftSystemsInit": {
    "command": "BIS_fnc_aircraftSystemsInit",
    "timestamp": "2021-01-22T21:59:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_aircraftSystemsInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_aircraftSystemsInit -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - Init function to invoke scripted features required for Jets DLC content. \nExucution: - Call the function via int EH on each aircrfat config class \nEventhandlers: Eventhandlers { init = \"_this call BIS_fnc_AircraftSystemsInit\"; }; \nRequirments: - Compatible aircrfat must have a config definition for all sub-systems that will be invoked by this function example of cfgVehicles subclass definitions; \nclass AircraftAutomatedSystems { \n wingStateControl = 1; //enable automated wing state control to prevent player to take off with folded wings wingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"}; //foldable wing animation list wingStateFolded = 1; //animation state when folded wingStateUnFolded = 0; //animation state when un-folded wingAutoUnFoldSpeed = 40; //speed treshold when triger this feature, and unfold wings for player \n};\n Parameter(s): _this select \n0: mode (Scalar) \n0: plane/object \nReturns: nothing \nResult: Aircrfat additional functionality added",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_aircraftWingStateCheck": {
    "command": "BIS_fnc_aircraftWingStateCheck",
    "timestamp": "2021-01-22T21:57:47Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_aircraftWingStateCheck -->",
    "docSyntax": "<!-- [] call BIS_fnc_aircraftWingStateCheck -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This function is designed to prevent take off with folded wings on the Jets DLC aircraft that have such useraction/function enabled. \nExucution: - Call the function via int EH on each aircrfat config class \nEventhandlers: Eventhandlers { init = \"_this call BIS_fnc_AircraftSystemsInit\"; }; \nRequirments: - Compatible aircrfat must have a config definition for all subsytems that will be invoked by this function example of cfgVehicles subclass definitions; \nclass AircraftAutomatedSystems { \n wingStateControl = 1; //enable automated wing state control to prevent player to take off with folded wings wingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"}; //foldable wing animation list wingStateFolded = 1; //animation state when folded wingStateUnFolded = 0; //animation state when un-folded wingAutoUnFoldSpeed = 40; //speed treshold when triger this feature, and unfold wings for player \n};\n Parameter(s): _this select \n0: mode (Scalar) \n0: plane/object \nReturns: nothing \nResult: Aircrfat should not be able to take off/ fly with wings folded",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_alignTabs": {
    "command": "BIS_fnc_alignTabs",
    "timestamp": "2021-01-23T00:29:56Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_alignTabs",
    "docSyntax": "array call BIS_fnc_alignTabs",
    "tags": "",
    "description": "Align two columns divided by tabs. A tab counts for 8 characters.",
    "example": "[ [\"Player:\", str player], [\"Name:\", name player], [\"Type:\", typeOf player], [\"Location:\", str getPosATL player], [\"Direction:\", str getDir player] ] call BIS_fnc_alignTabs;",
    "params": "<array>",
    "returns": "string"
  },
  "BIS_fnc_allSynchronizedObjects": {
    "command": "BIS_fnc_allSynchronizedObjects",
    "timestamp": "2021-01-22T23:08:55Z",
    "version": "1.00",
    "syntax": "[<object>, <string>] call BIS_fnc_allSynchronizedObjects",
    "docSyntax": "[object, filter] call BIS_fnc_allSynchronizedObjects",
    "tags": "",
    "description": "Return all synchronized objects, including those synced to synced and so on.",
    "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_allSynchronizedObjects;",
    "params": "<object> <string>",
    "returns": "array"
  },
  "BIS_fnc_ambientAnim": {
    "command": "BIS_fnc_ambientAnim",
    "timestamp": "2021-01-23T00:58:25Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>, <object>, <boolean>, attach] call BIS_fnc_ambientAnim",
    "docSyntax": "[unit, animationSet, equipmentLevel, snapTo, interpolate, attachToLogic] call BIS_fnc_ambientAnim",
    "tags": "",
    "description": "Play set of ambient animations on given unit. If the unit should react to combat, use BIS_fnc_ambientAnimCombat instead. Feature Informative Animations can be cancelled using ic_unit call 'BIS_fnc_ambientAnim__terminate'.",
    "example": "[player, \"STAND1\", \"ASIS\"] call BIS_fnc_ambientAnim;",
    "params": "<object> <string> <string> <object> <boolean> attach",
    "returns": "nothing"
  },
  "BIS_fnc_ambientAnimCombat": {
    "command": "BIS_fnc_ambientAnimCombat",
    "timestamp": "2021-01-23T00:10:25Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>, <code>, <string>] call BIS_fnc_ambientAnimCombat",
    "docSyntax": "[unit, animationSet, equipmentLevel, condition, behaviour] call BIS_fnc_ambientAnimCombat",
    "tags": "",
    "description": "Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away. Feature Informative Animations can be cancelled using ic_unit call 'BIS_fnc_ambientAnim__terminate'.",
    "example": "[_unit, \"STAND\", \"FULL\", { (_this) < 5 }] call BIS_fnc_ambientAnimCombat;",
    "params": "<object> <string> <string> <code> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_ambientAnimGetParams": {
    "command": "BIS_fnc_ambientAnimGetParams",
    "timestamp": "2021-01-22T23:41:10Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_ambientAnimGetParams",
    "docSyntax": "animType call BIS_fnc_ambientAnimGetParams",
    "tags": "",
    "description": "Feeds params of given animset to BIS_fnc_ambientAnim.",
    "example": "_animParams = \"KNEEL\" call BIS_fnc_ambientAnimGetParams;",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_ambientFlyby": {
    "command": "BIS_fnc_ambientFlyby",
    "timestamp": "2021-01-23T00:25:43Z",
    "version": "1.00",
    "syntax": "[<position>, positionagl, <number>, speed, <string>, <side>] call BIS_fnc_ambientFlyby",
    "docSyntax": "[startPos, endPos, altitude, speedMode, classname, side] call BIS_fnc_ambientFlyby",
    "tags": "",
    "description": "Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches its destination. Feature Informative Created vehicle is set captive, making its side civilian.",
    "example": "// spawns a Littlebird that flies from position 200,200,50 to 250,250,75 at altitude 100 and normal speed [nowiki[200,200,50], [250,250,75]] call BIS_fnc_ambientFlyby;",
    "params": "<position> positionagl <number> speed <string> <side>",
    "returns": "boolean | true"
  },
  "BIS_fnc_animalBehaviour": {
    "command": "BIS_fnc_animalBehaviour",
    "timestamp": "2021-01-22T23:09:59Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_animalBehaviour",
    "docSyntax": "[animal] call BIS_fnc_animalBehaviour",
    "tags": "",
    "description": "Animal behaviour control. Called by Animals_F\\Data\\Scripts\\main.fsm.",
    "example": "[animal] call BIS_fnc_animalBehaviour;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_animalRandomization": {
    "command": "BIS_fnc_animalRandomization",
    "timestamp": "2021-01-23T00:21:38Z",
    "version": "1.00",
    "syntax": "animal call BIS_fnc_animalRandomization",
    "docSyntax": "animal call BIS_fnc_animalRandomization",
    "tags": "[AL] [EG]",
    "description": "Randomise animals skin.br Works \non: * \"Alsatian_Random_F\" * \"ButterFly_random\" * \"Cock_random_F\" * \"Fin_random_F\" * \"Goat_random_F\" * \"Sheep_random_F\" * \"Snake_random_F\"",
    "example": "myDog call BIS_fnc_animalRandomization;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_animalSiteSpawn": {
    "command": "BIS_fnc_animalSiteSpawn",
    "timestamp": "2021-01-23T00:05:43Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_<object>Spawn",
    "docSyntax": "[animalSite, classnamesToSpawn, radius] call BIS_fnc_animalSiteSpawn",
    "tags": "[SE]",
    "description": "Create an area that spawns animals. The animals will be created or deleted if a player is inside or outside the area's radius.",
    "example": "[ player, [\"rabbit_f\",\"turtle_f\",\"hen_random_f\"], 200] call BIS_fnc_animalSiteSpawn;",
    "params": "<array> <object> <array> <number>",
    "returns": "<script handle>"
  },
  "BIS_fnc_animViewer": {
    "command": "BIS_fnc_animViewer",
    "timestamp": "2021-01-22T23:18:52Z",
    "version": "1.00",
    "syntax": "[] call p1= mode: <String - (Optional, default \"Init\") |p2= arguments: [[Array> - (Optional, default []) -->",
    "docSyntax": "[] call p1= mode: <String - (Optional, default \"Init\") |p2= arguments: [[Array> - (Optional, default []) -->",
    "tags": "",
    "description": "Opens the Splendid&trade; Animation Viewer.",
    "example": "[] call BIS_fnc_animViewer;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_areEqualNotNil": {
    "command": "BIS_fnc_areEqualNotNil",
    "timestamp": "2021-01-22T23:05:21Z",
    "version": "1.00",
    "syntax": "[anything1, anything2, …] call BIS_fnc_areEqualNotNil",
    "docSyntax": "[anything1, anything2, …] call BIS_fnc_areEqualNotNil",
    "tags": "",
    "description": "Compares all elements of passed array between each other and returns true is all are defined and identical.br Very fast, different from BIS_fnc_areEqual in that nil values will not be considered equal to each other.",
    "example": "[nowiki[1, 2, [3, [4, 5]]], [1, 2, [3, [4, 5]]]] call BIS_fnc_areEqualNotNil; // true [nowiki[1, 2, [3, [4, nil]]], [1, 2, [3, [4, nil]]]] call BIS_fnc_areEqualNotNil; // false",
    "params": "<anything>",
    "returns": "boolean"
  },
  "BIS_fnc_areFriendly": {
    "command": "BIS_fnc_areFriendly",
    "timestamp": "2021-01-22T23:06:09Z",
    "version": "1.00",
    "syntax": "[<side>, <side>] call BIS_fnc_areFriendly",
    "docSyntax": "[side1, side2] call BIS_fnc_areFriendly",
    "tags": "",
    "description": "Function that takes two Sides and compares them, returning whether they are friendly or not.",
    "example": "_areFriendly = [west, east] call BIS_fnc_areFriendly;",
    "params": "<side> <side>",
    "returns": "boolean"
  },
  "BIS_fnc_baseVehicle": {
    "command": "BIS_fnc_baseVehicle",
    "timestamp": "2021-01-23T00:55:03Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_baseVehicle",
    "docSyntax": "class call BIS_fnc_baseVehicle",
    "tags": "",
    "description": "Returns base vehicle (i.e., vehicle which is not just derivative of other with different textures / animations).",
    "example": "[\"O_MBT_04_cannon_F\"] call BIS_fnc_baseVehicle;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_baseWeapon": {
    "command": "BIS_fnc_baseWeapon",
    "timestamp": "2021-01-22T23:06:48Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_baseWeapon",
    "docSyntax": "[weaponName] call BIS_fnc_baseWeapon",
    "tags": "",
    "description": "Determines base weapon class, with no attachments.",
    "example": "[\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; // Returns \"arifle_Mk20_F\"",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_basicBackpack": {
    "command": "BIS_fnc_basicBackpack",
    "timestamp": "2021-01-22T23:09:56Z",
    "version": "1.00",
    "syntax": "backPackClassName call BIS_fnc_basicBackpack",
    "docSyntax": "backPackClassName call BIS_fnc_basicBackpack",
    "tags": "",
    "description": "Determines basic backpack with no equipment present (ie empty).",
    "example": "baseBackpack = \"b_assaultpack_rgr_medic\" call BIS_fnc_basicBackpack; // returns \"b_assaultpack_rgr\", the base class",
    "params": "",
    "returns": "string"
  },
  "BIS_fnc_basicTask": {
    "command": "BIS_fnc_basicTask",
    "timestamp": "2021-01-22T23:34:43Z",
    "version": "1.00",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Featurearma3Internally used '.fsm'.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bezierLength": {
    "command": "BIS_fnc_bezierLength",
    "timestamp": "2021-01-22T23:10:52Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_bezierLength",
    "docSyntax": "[] call BIS_fnc_bezierLength",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_blackIn": {
    "command": "BIS_fnc_blackIn",
    "timestamp": "2021-01-22T23:08:44Z",
    "version": "1.00",
    "syntax": "[<string>, <boolean>, <number>] call BIS_fnc_blackIn",
    "docSyntax": "[id, smoothing, fadeSpeed] call BIS_fnc_blackIn",
    "tags": "",
    "description": "Unregister a black screen. When none other black screen is registered, fade it out.",
    "example": "[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackIn;",
    "params": "<string> <boolean> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_blackOut": {
    "command": "BIS_fnc_blackOut",
    "timestamp": "2021-01-23T00:10:57Z",
    "version": "1.00",
    "syntax": "[<string>, <boolean>, <number>] call BIS_fnc_blackOut",
    "docSyntax": "[id, smoothing, fadeSpeed] call BIS_fnc_blackOut",
    "tags": "",
    "description": "Register a black screen. Start the black screen when the first request is registered.",
    "example": "[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackOut;",
    "params": "<string> <boolean> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_bloodEffect": {
    "command": "BIS_fnc_bloodEffect",
    "timestamp": "2021-01-22T23:31:13Z",
    "version": "1.00",
    "syntax": "[10] call BIS_fnc_bloodEffect",
    "docSyntax": "[10] call BIS_fnc_bloodEffect",
    "tags": "",
    "description": "Adds the bleeding effect post-processing effect to the players screen.",
    "example": "[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds.",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_buildingPositions": {
    "command": "BIS_fnc_buildingPositions",
    "timestamp": "2021-01-22T23:55:17Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_buildingPositions",
    "docSyntax": "param call BIS_fnc_buildingPositions",
    "tags": "",
    "description": "Get all available positions within a building or structure.",
    "example": "[_building] call BIS_fnc_buildingPositions;",
    "params": "<object> <number>",
    "returns": "array"
  },
  "BIS_fnc_callScriptedEventHandler": {
    "command": "BIS_fnc_callScriptedEventHandler",
    "timestamp": "2021-01-23T00:00:07Z",
    "version": "1.00",
    "syntax": "[<<string>space>, name, <array>, returnResults] call BIS_fnc_callScriptedEventHandler",
    "docSyntax": "[namespace, name, arguments, returnResults] call BIS_fnc_callScriptedEventHandler",
    "tags": "",
    "description": "Calls all the codes assigned to scripted event handler with given name. Since GVIarma31.68 the code receives current EH id in the special \nvariable: _thisScriptedEventHandler",
    "example": "nowiki[</nowiki>missionNamespace, \"event\", [player, 123]] call BIS_fnc_callScriptedEventHandler;",
    "params": "<namespace> <string> <array> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_camera": {
    "command": "BIS_fnc_camera",
    "timestamp": "2021-01-23T00:59:37Z",
    "version": "1.00",
    "syntax": "[<string>, <anything>] call BIS_fnc_camera",
    "docSyntax": "[mode, parameter] call BIS_fnc_camera",
    "tags": "",
    "description": "Splendid™ Camera, ''\"Ultimate Screenshot Simulator\"''",
    "example": "[] call BIS_fnc_camera;",
    "params": "<string> <anything>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_deleted": {
    "command": "BIS_fnc_camera_deleted",
    "timestamp": "2021-01-22T23:06:34Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_deleted",
    "docSyntax": "[camera] call BIS_fnc_camera_deleted",
    "tags": "",
    "description": "Deletes given camera.",
    "example": "[BIS_camera] call BIS_fnc_camera_deleted;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_getCam": {
    "command": "BIS_fnc_camera_getCam",
    "timestamp": "2021-01-23T00:59:05Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getCam",
    "docSyntax": "[camera] call BIS_fnc_camera_getCam",
    "tags": "",
    "description": "Gets camera instance of camerea object",
    "example": "[BIS_camera] call BIS_fnc_camera_getCam;",
    "params": "<object>",
    "returns": "object"
  },
  "BIS_fnc_camera_getCinemaBordersEnabled": {
    "command": "BIS_fnc_camera_getCinemaBordersEnabled",
    "timestamp": "2021-01-22T23:13:15Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getCinemaBordersEnabled",
    "docSyntax": "[camera] call BIS_fnc_camera_getCinemaBordersEnabled",
    "tags": "",
    "description": "Check if camera uses cinema borders.",
    "example": "[BIS_camera] call BIS_fnc_camera_getCinemaBordersEnabled;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_camera_getFocus": {
    "command": "BIS_fnc_camera_getFocus",
    "timestamp": "2021-01-22T23:50:18Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getFocus",
    "docSyntax": "[camera] call BIS_fnc_camera_getFocus",
    "tags": "",
    "description": "Returns camera focus.",
    "example": "[BIS_camera] call BIS_fnc_camera_getFocus;",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_camera_getFOV": {
    "command": "BIS_fnc_camera_getFOV",
    "timestamp": "2021-01-23T00:17:59Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getFOV",
    "docSyntax": "[camera] call BIS_fnc_camera_getFOV",
    "tags": "",
    "description": "Gets FOV of camera.",
    "example": "[BIS_camera] call BIS_fnc_camera_getFOV;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_getHUDEnabled": {
    "command": "BIS_fnc_camera_getHUDEnabled",
    "timestamp": "2021-01-22T23:07:45Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getHUDEnabled",
    "docSyntax": "[camera] call BIS_fnc_camera_getHUDEnabled",
    "tags": "",
    "description": "Returns wether camera HUD is enabled.",
    "example": "[BIS_camera] call BIS_fnc_camera_getHUDEnabled;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_camera_getVisionMode": {
    "command": "BIS_fnc_camera_getVisionMode",
    "timestamp": "2021-01-22T23:05:00Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_getVisionMode",
    "docSyntax": "[camera] call BIS_fnc_camera_getVisionMode",
    "tags": "",
    "description": "Returns camera vision mode.",
    "example": "[BIS_camera] call BIS_fnc_camera_getVisionMode;",
    "params": "<object>",
    "returns": "number | br | br | br"
  },
  "BIS_fnc_camera_init": {
    "command": "BIS_fnc_camera_init",
    "timestamp": "2021-01-22T23:07:14Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_init",
    "docSyntax": "[camera] call BIS_fnc_camera_init",
    "tags": "",
    "description": "Initialises a camera.",
    "example": "[BIS_camera] call BIS_fnc_camera_init;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setCam": {
    "command": "BIS_fnc_camera_setCam",
    "timestamp": "2021-01-22T23:31:07Z",
    "version": "1.00",
    "syntax": "[<object>, <object>] call BIS_fnc_camera_setCam",
    "docSyntax": "[camera, cameraInstance] call BIS_fnc_camera_setCam",
    "tags": "",
    "description": "Sets camera instance of camera object.",
    "example": "[BIS_camera,BIS_camera_instance] call BIS_fnc_camera_setCam;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setCinemaBordersEnabled": {
    "command": "BIS_fnc_camera_setCinemaBordersEnabled",
    "timestamp": "2021-01-22T23:11:02Z",
    "version": "1.00",
    "syntax": "[<object>, <boolean>] call BIS_fnc_camera_setCinemaBordersEnabled",
    "docSyntax": "[camera, enabled] call BIS_fnc_camera_setCinemaBordersEnabled",
    "tags": "",
    "description": "Sets cinema borders.",
    "example": "[BIS_camera,true] call BIS_fnc_camera_setCinemaBordersEnabled;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setFocus": {
    "command": "BIS_fnc_camera_setFocus",
    "timestamp": "2021-01-22T23:24:27Z",
    "version": "1.00",
    "syntax": "[<object>, <array>] call BIS_fnc_camera_setFocus",
    "docSyntax": "[camera, focusValues] call BIS_fnc_camera_setFocus",
    "tags": "",
    "description": "Sets camera focus.",
    "example": "sqf[BIS_camera, [0.5,0.5]] call BIS_fnc_camera_setFocus;</sqf>",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setFOV": {
    "command": "BIS_fnc_camera_setFOV",
    "timestamp": "2021-01-22T23:06:02Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_camera_setFOV",
    "docSyntax": "[camera, FOV] call BIS_fnc_camera_setFOV",
    "tags": "",
    "description": "Sets the FOV of given camera.",
    "example": "[BIS_camera,0.5] call BIS_fnc_camera_setFOV;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setHUDEnabled": {
    "command": "BIS_fnc_camera_setHUDEnabled",
    "timestamp": "2021-01-22T23:59:44Z",
    "version": "1.00",
    "syntax": "[<object>, <boolean>] call BIS_fnc_camera_setHUDEnabled",
    "docSyntax": "[camera, state] call BIS_fnc_camera_setHUDEnabled",
    "tags": "",
    "description": "Enables or disables camera HUD.",
    "example": "[BIS_camera,true] call BIS_fnc_camera_setHUDEnabled;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_setVisionMode": {
    "command": "BIS_fnc_camera_setVisionMode",
    "timestamp": "2021-01-22T23:11:30Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_camera_setVisionMode",
    "docSyntax": "[camera, mode] call BIS_fnc_camera_setVisionMode",
    "tags": "",
    "description": "Sets camera vision mode.",
    "example": "[BIS_camera,1] call BIS_fnc_camera_setVisionMode;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_camera_tick": {
    "command": "BIS_fnc_camera_tick",
    "timestamp": "2021-01-22T23:07:54Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_camera_tick",
    "docSyntax": "[camera] call BIS_fnc_camera_tick",
    "tags": "",
    "description": "Ticks a camera. Updates position and view mode.",
    "example": "[BIS_camera] call BIS_fnc_camera_tick;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_cameraOld": {
    "command": "BIS_fnc_cameraOld",
    "timestamp": "2021-01-22T23:09:24Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_cameraOld",
    "docSyntax": "[target] call BIS_fnc_cameraOld",
    "tags": "",
    "description": "Classic camera script, replaced by the Splendid™ BIS_fnc_camera.",
    "example": "nowiki[</nowiki>player] call BIS_fnc_cameraOld; // starts the camera on the player",
    "params": "<object>",
    "returns": "script handle"
  },
  "BIS_fnc_cargoTurretIndex": {
    "command": "BIS_fnc_cargoTurretIndex",
    "timestamp": "2021-01-23T00:09:18Z",
    "version": "1.00",
    "syntax": "[<object>, person] call BIS_fnc_cargoTurretIndex",
    "docSyntax": "[vehicle, personOrTurretPath] call BIS_fnc_cargoTurretIndex",
    "tags": "",
    "description": "Return cargo index of a person turret and the other way around.",
    "example": "private _vehicle = vehicle player; private _turretCargoIndex = [_vehicle, [0, 1]] call BIS_fnc_cargoTurretIndex; private _playerTurretPath = [_vehicle, player] call BIS_fnc_cargoTurretIndex;",
    "params": "<object> person",
    "returns": "array | number"
  },
  "BIS_fnc_carrier01CatapultActionAdd": {
    "command": "BIS_fnc_carrier01CatapultActionAdd",
    "timestamp": "2021-01-22T21:59:23Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CatapultActionAdd -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CatapultActionAdd -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01CatapultActionRemove": {
    "command": "BIS_fnc_carrier01CatapultActionRemove",
    "timestamp": "2021-01-22T22:04:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CatapultActionRemove -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CatapultActionRemove -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01CatapultID": {
    "command": "BIS_fnc_carrier01CatapultID",
    "timestamp": "2021-01-22T21:59:25Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CatapultID -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CatapultID -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01CatapultLockTo": {
    "command": "BIS_fnc_carrier01CatapultLockTo",
    "timestamp": "2021-01-22T22:02:40Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CatapultLockTo -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CatapultLockTo -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01CrewInAnim": {
    "command": "BIS_fnc_carrier01CrewInAnim",
    "timestamp": "2021-01-22T21:57:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CrewInAnim -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CrewInAnim -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01CrewPlayAnim": {
    "command": "BIS_fnc_carrier01CrewPlayAnim",
    "timestamp": "2021-01-22T22:03:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01CrewPlayAnim -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01CrewPlayAnim -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01EdenDelete": {
    "command": "BIS_fnc_carrier01EdenDelete",
    "timestamp": "2021-01-22T22:01:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01EdenDelete -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01EdenDelete -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to delete dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will delete carrier parts in EDEN editor after main object is deleted. \nExucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor \n};\n \nRequirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: carrier Base/object and \n1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Aircraft Carrier's parts are deleted in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01EdenInit": {
    "command": "BIS_fnc_carrier01EdenInit",
    "timestamp": "2021-01-22T21:56:08Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01EdenInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01EdenInit -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to assemble dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will update initial init setup on EDEN editor invoked. \nExucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor \n};\n \nRequirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: carrier Base/object and \n1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Aircraft Carrier's possition is updated in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01Init": {
    "command": "BIS_fnc_carrier01Init",
    "timestamp": "2021-01-22T21:53:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01Init -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01Init -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_carrier01PosUpdate": {
    "command": "BIS_fnc_carrier01PosUpdate",
    "timestamp": "2021-01-22T22:02:42Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_carrier01PosUpdate -->",
    "docSyntax": "<!-- [] call BIS_fnc_carrier01PosUpdate -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to update dynamic aircraft carriers position in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will update initial object positions when player drggs the object in EDEN editor. \nExucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor \n};\n \nRequirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: carrier Base/object and \n1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Aircraft Carrier's possition is updated in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_changeSupportRadioChannel": {
    "command": "BIS_fnc_changeSupportRadioChannel",
    "timestamp": "2021-01-22T23:06:08Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_changeSupportRadioChannel -->",
    "docSyntax": "<!-- [] call BIS_fnc_changeSupportRadioChannel -->",
    "tags": "",
    "description": "\nDescription: Changes the radio channel for Support module-related protocol. Parameter(s): _this select \n0: SIDE - Affected side _this select \n1: ANY - Channel setting \nReturns: nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_cinemaBorder": {
    "command": "BIS_fnc_cinemaBorder",
    "timestamp": "2021-01-22T23:08:14Z",
    "version": "1.00",
    "syntax": "[<number>, <number>, <boolean>, <boolean>] call BIS_fnc_cinemaBorder",
    "docSyntax": "[mode, duration, sound, view] call BIS_fnc_cinemaBorder",
    "tags": "",
    "description": "Creates cinematic borders. Player cannot move during cutscene.",
    "example": "[1, 2, true, true ] call BIS_fnc_cinemaBorder;",
    "params": "<number> <number> <boolean> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_clamp": {
    "command": "BIS_fnc_clamp",
    "timestamp": "2021-01-22T23:11:43Z",
    "version": "1.00",
    "syntax": "[<number>, <number>, <number>] call BIS_fnc_clamp",
    "docSyntax": "[value, min, max] call BIS_fnc_clamp",
    "tags": "",
    "description": "Clamps provided value within min..max range.",
    "example": "[5, 0, 10] call BIS_fnc_clamp; // returns 5 [0, 0, 10] call BIS_fnc_clamp; // returns 0 [10, 0, 10] call BIS_fnc_clamp; // returns 10 [-5, 0, 10] call BIS_fnc_clamp; // returns 0 [15, 0, 10] call BIS_fnc_clamp; // returns 10 [5, '10', 3] call BIS_fnc_clamp; // returns 10 ",
    "params": "<number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_clampVector": {
    "command": "BIS_fnc_clampVector",
    "timestamp": "2021-01-22T23:06:07Z",
    "version": "1.00",
    "syntax": "[<vector3d>, <number>, <number>] call BIS_fnc_clampVector",
    "docSyntax": "[vector, min, max] call BIS_fnc_clampVector",
    "tags": "",
    "description": "Clamps vector values between provided min/max boundaries. Feature Informative This function can be used to clamp any Array of Numbers (even though it is not its main usage).",
    "example": "private _newVelocity = [velocity vehicle player, -100, 100] call BIS_fnc_clampVector; vehicle player setVelocity _newVelocity;",
    "params": "<vector3d> <number> <number>",
    "returns": "vector3d"
  },
  "BIS_fnc_colorConfigToRGBA": {
    "command": "BIS_fnc_colorConfigToRGBA",
    "timestamp": "2021-01-22T23:18:00Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_colorConfigToRGBA",
    "docSyntax": "configColor call BIS_fnc_colorConfigToRGBA",
    "tags": "",
    "description": "Converts config color format to RGBA array of numbers.",
    "example": "[\"0.5 + 0.25\",0,0,1] call BIS_fnc_colorConfigToRGBA; codecomment// returns [0.75,0,0,1]",
    "params": "<array>",
    "returns": "color (rgba) - format [r, g, b, a]"
  },
  "BIS_fnc_colorRGBAtoHTML": {
    "command": "BIS_fnc_colorRGBAtoHTML",
    "timestamp": "2021-01-22T23:22:06Z",
    "version": "1.00",
    "syntax": "color call BIS_fnc_colorRGBAtoHTML",
    "docSyntax": "colorArray call BIS_fnc_colorRGBAtoHTML",
    "tags": "",
    "description": "Converts RGBA color format to #AARRGGBB HTML color format.",
    "example": "[0,0,0,1] call BIS_fnc_colorRGBAtoHTML; codecomment// will return #FF000000",
    "params": "color",
    "returns": "string"
  },
  "BIS_fnc_colorRGBAtoTexture": {
    "command": "BIS_fnc_colorRGBAtoTexture",
    "timestamp": "2021-01-22T23:05:20Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_colorRGBAtoTexture",
    "docSyntax": "color call BIS_fnc_colorRGBAtoTexture",
    "tags": "",
    "description": "Converts RGB color format to procedural texture, e.g hl[0,0,0,1] becomes hl\"#(argb,8,8,3)color(0,0,0,1)\".br Values are in range 0..1.",
    "example": "_texture = [0,0,0,1] call BIS_fnc_colorRGBAtoTexture;",
    "params": "<array>",
    "returns": "string"
  },
  "BIS_fnc_configPath": {
    "command": "BIS_fnc_configPath",
    "timestamp": "2021-01-23T00:50:39Z",
    "version": "1.00",
    "syntax": "[<array>, format, strict] call BIS_fnc_configPath",
    "docSyntax": "[config, format, strict] call BIS_fnc_configPath",
    "tags": "",
    "description": "Returns config path to given entry in given format.",
    "example": "[\"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"] call BIS_fnc_configPath; cc[\"configFile\",\"CfgVehicles\",\"Car\"]",
    "params": "<array> <array> <boolean>",
    "returns": "array | string | config"
  },
  "BIS_fnc_controlConfigs": {
    "command": "BIS_fnc_controlConfigs",
    "timestamp": "2021-01-22T23:06:00Z",
    "version": "1.00",
    "syntax": "[<display>,<config>] call BIS_fnc_controlConfigs",
    "docSyntax": "[display,path] call BIS_fnc_controlConfigs",
    "tags": "",
    "description": "Return config paths to all display controls.",
    "example": "[ findDisplay 313, configFile >> \"Display3DEN\" ] call BIS_fnc_controlConfigs;",
    "params": "<display> <config>",
    "returns": "array | control1 | configpath1 | control2 | configpath2 | controln | configpathn"
  },
  "BIS_fnc_createLogRecord": {
    "command": "BIS_fnc_createLogRecord",
    "timestamp": "2021-01-23T00:17:58Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>] call BIS_fnc_createLogRecord",
    "docSyntax": "[owner, title, text] call BIS_fnc_createLogRecord",
    "tags": "[AL] [EL]",
    "description": "Create a dated, timed diary record in the owner's \"Log\" subject.",
    "example": "[player, \"Title\", \"This is a log entry. Have fun!\"] call BIS_fnc_createLogRecord;",
    "params": "<object> <string> <string>",
    "returns": "string"
  },
  "BIS_fnc_createObjectOO": {
    "command": "BIS_fnc_createObjectOO",
    "timestamp": "2021-01-22T23:21:40Z",
    "version": "1.00",
    "syntax": "[<string>,<array>] call BIS_fnc_createObjectOO",
    "docSyntax": "[class,params] call BIS_fnc_createObjectOO",
    "tags": "",
    "description": "Instantiates an object of a certain class.",
    "example": "[\"someOOClass\", [1,2,3]] call BIS_fnc_createObjectOO;",
    "params": "<string> <array>",
    "returns": "logic"
  },
  "BIS_fnc_credits_movie": {
    "command": "BIS_fnc_credits_movie",
    "timestamp": "2021-01-22T23:10:55Z",
    "version": "1.00",
    "syntax": "[<display>, <number>] call BIS_fnc_credits_movie",
    "docSyntax": "[display, mode] call BIS_fnc_credits_movie",
    "tags": "",
    "description": "Movie credits function. Feature Informative To display the credits in full screen, use the following \ncode: code[] spawn {br disableSerialization;br ccCreate creditsbr (findDisplay 46) createDisplay \"RscCredits\";br [] call BIS_fnc_credits_movie;br};</code>",
    "example": "[] spawn BIS_fnc_credits_movie;",
    "params": "<display> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_credits_movieConfig": {
    "command": "BIS_fnc_credits_movieConfig",
    "timestamp": "2021-01-22T23:13:24Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_credits_movieConfig -->",
    "docSyntax": "<!-- [] call BIS_fnc_credits_movieConfig -->",
    "tags": "",
    "description": "\nFile: fn_credits_movieConfig.sqf \nDescription: Movie credits config preprocessor. Parameter(s): _this select \n0: Number - Index of item in config (CfgCredits >> CreditsMovie >> item) Returned \nvalue: \n_array: Array _array select \n0: String - Position name (and tags) as structured text. _array select \n1: String - Names (and tags) as structured text. _array select \n2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_credits_movieSupport": {
    "command": "BIS_fnc_credits_movieSupport",
    "timestamp": "2021-01-22T23:17:17Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_credits_movieSupport -->",
    "docSyntax": "<!-- [] call BIS_fnc_credits_movieSupport -->",
    "tags": "",
    "description": "\nFile: fn_credits_movieSupport.sqf \nDescription: Movie credits supporters preprocessor. Parameter(s): None. Returned \nvalue: \n_array: Array _array select \n0: String - Position name (and tags) as structured text. _array select \n1: String - Names (and tags) as structured text - 1st paragraph. _array select \n2: String - Names (and tags) as structured text - 2nd paragraph. _array select \n3: String - Names (and tags) as structured text - 3rd paragraph. _array select \n4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef)",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_ctrlFitToTextHeight": {
    "command": "BIS_fnc_ctrlFitToTextHeight",
    "timestamp": "2021-01-22T23:42:16Z",
    "version": "1.00",
    "syntax": "[<control>,<number>,<number>] call BIS_fnc_ctrlFitToTextHeight",
    "docSyntax": "[control,offset,time] call BIS_fnc_ctrlFitToTextHeight",
    "tags": "",
    "description": "Resize structured text control to fit its text height.",
    "example": "_height = [_ctrl, 1.5, 3] call BIS_fnc_ctrlFitToTextHeight;",
    "params": "<control> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_ctrlSetScale": {
    "command": "BIS_fnc_ctrlSetScale",
    "timestamp": "2021-01-22T23:05:40Z",
    "version": "1.00",
    "syntax": "[<control>,<number>,<number>] spawn BIS_fnc_ctrlSetScale",
    "docSyntax": "[control,scale,time] spawn BIS_fnc_ctrlSetScale",
    "tags": "",
    "description": "Scale a control while maintaining its centering.",
    "example": "_finalPos = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlSetScale;",
    "params": "<control> <number> <number>",
    "returns": "array"
  },
  "BIS_fnc_ctrlTextHeight": {
    "command": "BIS_fnc_ctrlTextHeight",
    "timestamp": "2021-01-22T23:04:58Z",
    "version": "1.00",
    "syntax": "[<control>] call BIS_fnc_ctrlTextHeight",
    "docSyntax": "[control] call BIS_fnc_ctrlTextHeight",
    "tags": "",
    "description": "Resize control according to it is text.",
    "example": "[_ctrl] call BIS_fnc_ctrlTextHeight;",
    "params": "<control>",
    "returns": "boolean | true"
  },
  "BIS_fnc_damageChanged": {
    "command": "BIS_fnc_damageChanged",
    "timestamp": "2021-01-23T09:18:12Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_damageChanged",
    "docSyntax": "call BIS_fnc_damageChanged",
    "tags": "",
    "description": "Handle effects caused by changing of damage.",
    "example": "call BIS_fnc_damageChanged;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_damagePulsing": {
    "command": "BIS_fnc_damagePulsing",
    "timestamp": "2021-01-23T08:59:12Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_damagePulsing",
    "docSyntax": "call BIS_fnc_damagePulsing",
    "tags": "",
    "description": "Game pulsing damage effect.",
    "example": "call BIS_fnc_damagePulsing;",
    "params": "",
    "returns": "script handle"
  },
  "BIS_fnc_debugConsoleExec": {
    "command": "BIS_fnc_debugConsoleExec",
    "timestamp": "2021-01-23T09:02:18Z",
    "version": "1.00",
    "syntax": "[<number>, <code>] call BIS_fnc_debugConsoleExec",
    "docSyntax": "[target, code] call BIS_fnc_debugConsoleExec",
    "tags": "",
    "description": "Executes Debug Console code.",
    "example": "[1,{hint \"Hello Players!\"}] call BIS_fnc_debugConsoleExec;",
    "params": "<number> <code>",
    "returns": "nothing"
  },
  "BIS_fnc_debugProfile": {
    "command": "BIS_fnc_debugProfile",
    "timestamp": "2021-01-23T09:04:22Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_debugProfile",
    "docSyntax": "call BIS_fnc_debugProfile",
    "tags": "",
    "description": "Purges user profile from unwanted asked to delete profileNamespace variable 'BIS_fnc_diagAAR_data'.",
    "example": "call BIS_fnc_debugProfile;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_decodeFlags": {
    "command": "BIS_fnc_decodeFlags",
    "timestamp": "2021-01-23T09:00:51Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_decodeFlags",
    "docSyntax": "scalar call BIS_fnc_decodeFlags",
    "tags": "",
    "description": "Decodes a single scalar into array of unique binary flags with indexes between 0-15.",
    "example": "_decodedFlags = 13 call BIS_fnc_decodeFlags;//Returns [0,2,3]",
    "params": "<number>",
    "returns": "array | bis_fnc_encodeflags"
  },
  "BIS_fnc_decodeFlags2": {
    "command": "BIS_fnc_decodeFlags2",
    "timestamp": "2021-01-23T09:05:21Z",
    "version": "1.00",
    "syntax": "[<number>, <number>] call BIS_fnc_decodeFlags2",
    "docSyntax": "[value, size] call BIS_fnc_decodeFlags2",
    "tags": "",
    "description": "Decodes a single scalar into array of unique binary flags (zeroes or ones). Feature Informative The maximal decodable number is '16777215' (2sup24</sup> - 1).",
    "example": "private _result = 13 call BIS_fnc_decodeFlags2; // returns [1,0,1,1]",
    "params": "<number> <number>",
    "returns": "array | number"
  },
  "BIS_fnc_decodeFlags4": {
    "command": "BIS_fnc_decodeFlags4",
    "timestamp": "2021-01-23T09:12:36Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_decodeFlags4",
    "docSyntax": "[] call BIS_fnc_decodeFlags4",
    "tags": "",
    "description": "Decodes a single scalar into array of unique 4-state flags (values 0,1,2,3). Max. number that can be decoded is 16777215 (= 4^12 - 1). An optional parameter can by supplied to resize the output. \nSyntax: ------- \n\t_flags:array = \n\t_encodedFlags:scalar call BIS_fnc_decodeFlags4; \n\t_flags:array = [\n\t_encodedFlags:scalar,\n\t_size:scalar] call BIS_fnc_decodeFlags4; \nExample: -------- [1,0,2,3] = 225 call BIS_fnc_decodeFlags4; [1,0,2,3,0,0,0,0] = [225,8] call BIS_fnc_decodeFlags4; \nExplanation: ------------ 225 -> 11 10 00 01 -> [1,0,2,3]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_decodeFlags8": {
    "command": "BIS_fnc_decodeFlags8",
    "timestamp": "2021-01-23T09:14:59Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_decodeFlags8",
    "docSyntax": "[] call BIS_fnc_decodeFlags8",
    "tags": "",
    "description": "Decodes a single scalar into array of unique 8-state flags (values 0,1,2,3,4,5,6,7). Max. number that can be decoded is 16777215 (= 8^8 - 1). An optional parameter can by supplied to resize the output. \nSyntax: ------- \n\t_flags:array = \n\t_encodedFlags:scalar call BIS_fnc_decodeFlags8; \n\t_flags:array = [\n\t_encodedFlags:scalar,\n\t_size:scalar] call BIS_fnc_decodeFlags8; \nExample: -------- [7,2,3,0,1] = 4311 call BIS_fnc_decodeFlags8; [7,2,3,0,1,0,0,0] = [4311,8] call BIS_fnc_decodeFlags8; \nExplanation: ------------ 4311 -> 0001 0000 1101 0111 -> 001 000 011 010 111 -> [7,2,3,0,1]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_deleteCounter": {
    "command": "BIS_fnc_deleteCounter",
    "timestamp": "2021-01-23T09:19:45Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_deleteCounter -->",
    "docSyntax": "<!-- [] call BIS_fnc_deleteCounter -->",
    "tags": "",
    "description": "\nAuthor: Killzone_Kid \nDescription: Delete given counter Parameter(s): \n0: STRING - variable name of counter ARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace \nReturns: NOTHING */ #define VAR_SPACES [currentNamespace, objNull, displayNull, controlNull, grpNull, locationNull, taskNull, teamMemberNull]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_deleteInventory": {
    "command": "BIS_fnc_deleteInventory",
    "timestamp": "2021-01-23T09:07:33Z",
    "version": "1.00",
    "syntax": "[<object>,<array>] call BIS_fnc_deleteInventory",
    "docSyntax": "[unit,input] call BIS_fnc_deleteInventory",
    "tags": "",
    "description": "Delete loadout saved using BIS_fnc_saveInventory.",
    "example": "[ player, [missionNamespace, \"BIS_inv\"] ] call BIS_fnc_deleteInventory;",
    "params": "<object> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_deleteVehicleCrew": {
    "command": "BIS_fnc_deleteVehicleCrew",
    "timestamp": "2021-01-23T09:04:35Z",
    "version": "1.00",
    "syntax": "[<object>, <object>] call BIS_fnc_deleteVehicleCrew",
    "docSyntax": "[vehicle, crewMember] call BIS_fnc_deleteVehicleCrew",
    "tags": "",
    "description": "Deletes specific crew member directly from the vehicle.",
    "example": "[BIS_tank, gunner BIS_tank] call BIS_fnc_deleteVehicleCrew;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_deltaTime": {
    "command": "BIS_fnc_deltaTime",
    "timestamp": "2021-01-23T09:04:47Z",
    "version": "1.00",
    "syntax": "[<string>, <boolean>] call BIS_fnc_deltaTime",
    "docSyntax": "[id, clear] call BIS_fnc_deltaTime",
    "tags": "",
    "description": "Calculates and returns the time's delta between previous and current call to this function. Feature Informative This commands internally uses time. For accurate-critical time measurement, use diag_tickTime.",
    "example": "[\"TAG_duration\"] call BIS_fnc_deltaTime; // Defines the starting point cc... private _duration1 = [\"TAG_duration\"] call BIS_fnc_deltaTime; // Gets time between starting point and now cc... private _duration2 = [\"TAG_duration\"] call BIS_fnc_deltaTime; // Gets time between _duration1 and now [\"TAG_duration\", true] call BIS_fnc_deltaTime; // deletes the global variable \"TAG_duration\"",
    "params": "<string> <boolean>",
    "returns": "number | true"
  },
  "BIS_fnc_diagAAR": {
    "command": "BIS_fnc_diagAAR",
    "timestamp": "2021-01-23T08:58:01Z",
    "version": "1.00",
    "syntax": "[<string>, arguments] call BIS_fnc_diagAAR",
    "docSyntax": "[mode, arguments] call BIS_fnc_diagAAR",
    "tags": "",
    "description": "Fill an 'AAR' (After Action Review) display with data and Event Handlers.br Featureimportant BIS_fnc_diagAARrecord 'must' have been previously executed to have data to display.",
    "example": "[\"Init\", [_anAARDisplay]] call BIS_fnc_diagAAR;",
    "params": "<string> onkeydown",
    "returns": "script handle"
  },
  "BIS_fnc_diagAARrecord": {
    "command": "BIS_fnc_diagAARrecord",
    "timestamp": "2021-01-23T09:19:56Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagAARrecord",
    "docSyntax": "call BIS_fnc_diagAARrecord",
    "tags": "",
    "description": "Starts recording units position and events for an 'AAR' (After Action Review).br The following keys must be added to <Description.ext> for AAR to work \nproperly: diagAAR = 1; // to enable diag AAR diagAARauthor = 1; // if description.ext/dev == profileName, allows the creator to debug himself diagAARunits = 2; // which units to \nrecord: // 1 = units player // 2 = allunits + alldead // any other value = player diagAARdelay = 3; // delay between recording stepsThe function data can be accessed with icprofileNamespace getVariable \"BIS_fnc_diagAAR_data\".",
    "example": "call BIS_fnc_diagAARrecord;",
    "params": "",
    "returns": "number | execfsm"
  },
  "BIS_fnc_diagBulletCam": {
    "command": "BIS_fnc_diagBulletCam",
    "timestamp": "2021-01-23T09:03:04Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_diagBulletCam",
    "docSyntax": "unit call BIS_fnc_diagBulletCam",
    "tags": "",
    "description": "Add a \"bullet camera\" to shots fired by the specified unit.",
    "example": "player call BIS_fnc_diagBulletCam;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_diagConfig": {
    "command": "BIS_fnc_diagConfig",
    "timestamp": "2021-01-23T09:14:36Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagConfig -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagConfig -->",
    "tags": "",
    "description": "\nDescription: Prints config entries. Parameter(s): \n0: CONFIG - config class which will be searched (\ndefault: configFile) \n1: STRING or ARRAY - entry name(s) whose values will be printed \n2: STRING - scan mode, can be one of \nfollowing: \"controls\" - recursively scans controls in root, class controls, class controlsBackground and in RscControlsGroup controls (type = 15). \"turrets\" - recursively scans vehicles's turrets. \"weapons\" - scans weapon muzzles and modes. (default) - scans just class roots. \nReturns: STRING Results are printed to debug log and wiki compatible table is copied to clipboard.",
    "example": "[] call BIS_fnc_diagConfig;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagFindMissingAuthors": {
    "command": "BIS_fnc_diagFindMissingAuthors",
    "timestamp": "2021-01-23T09:05:58Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagFindMissingAuthors",
    "docSyntax": "call BIS_fnc_diagFindMissingAuthors",
    "tags": "",
    "description": "Copies a list of objects to the clipboard which miss the author attribute.",
    "example": "call BIS_fnc_diagFindMissingAuthors;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_diagHit": {
    "command": "BIS_fnc_diagHit",
    "timestamp": "2021-01-23T09:17:43Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagHit",
    "docSyntax": "call BIS_fnc_diagHit",
    "tags": "",
    "description": "Tracks received wounds. (getNumber (missionConfigFile >> \"diagHit\") > 0) has to be true.",
    "example": "call BIS_fnc_diagHit;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_diagJIRAlink": {
    "command": "BIS_fnc_diagJIRAlink",
    "timestamp": "2021-01-23T09:05:40Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_diagJIRAlink",
    "docSyntax": "[] call BIS_fnc_diagJIRAlink",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagKey": {
    "command": "BIS_fnc_diagKey",
    "timestamp": "2021-01-23T08:59:50Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagKey",
    "docSyntax": "call BIS_fnc_diagKey",
    "tags": "",
    "description": "Tracks pressed keys. (getNumber (missionConfigFile >> \"diagKey\") > 0) has to be true.",
    "example": "call BIS_fnc_diagKey;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_diagKeyLayout": {
    "command": "BIS_fnc_diagKeyLayout",
    "timestamp": "2021-01-23T08:57:43Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagKeyLayout -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagKeyLayout -->",
    "tags": "",
    "description": "\nDescription: Exports default key layout to wiki template. Parameter(s): _this select \n0: STRING - category, can be one of following \"\" - all controls in game \"All\" \"BasicInfantryControls\" \"Car\" \"Air\" \"Helicopter\" \"Submarine\" \"Buldozer\" \"UserActions\" _this select \n1: STRING - selection method, can be one of following \"\" - single tap \"double\" - double tap \"LCtrl\" - with left control pressed \"RCtrl\" - with right control pressed \"LShift\" - with left shift pressed \"RShift\" - with right shift pressed \nReturns: STRING - wiki export text (also copied to clipboard)",
    "example": "[] call BIS_fnc_diagKeyLayout;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagKeyTest": {
    "command": "BIS_fnc_diagKeyTest",
    "timestamp": "2021-01-23T09:15:36Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_diagKeyTest",
    "docSyntax": "mode call BIS_fnc_diagKeyTest",
    "tags": "",
    "description": "Returns all user actions according to mode.",
    "example": "0 call BIS_fnc_diagKeyTest;",
    "params": "<number>",
    "returns": "string"
  },
  "BIS_fnc_diagKnownAsTarget": {
    "command": "BIS_fnc_diagKnownAsTarget",
    "timestamp": "2021-01-23T09:09:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagKnownAsTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagKnownAsTarget -->",
    "tags": "",
    "description": "\nFile: fn_diagKnownAsTarget.sqf \nDescription: Visualize and profile which units know about one specific unit and how much they do. Calling function again stops diagnostics. Parameter(s): _this select \n0: profile unit (Object) [default player] _this select \n1: radius (Scalar - meters) [default 1000m] \nReturns: -",
    "example": "[] call BIS_fnc_diagKnownAsTarget;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagKnownTargets": {
    "command": "BIS_fnc_diagKnownTargets",
    "timestamp": "2021-01-23T08:56:45Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_diagKnownTargets",
    "docSyntax": "[target, radius] call BIS_fnc_diagKnownTargets",
    "tags": "",
    "description": "Visualize and profile which units one specific unit knows about and how much. Calling function again stops diagnostics.",
    "example": "call BIS_fnc_diagKnownTargets;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_diagLoop": {
    "command": "BIS_fnc_diagLoop",
    "timestamp": "2021-01-23T09:03:08Z",
    "version": "1.00",
    "syntax": "[<<number>>,delay] spawn BIS_fnc_diagLoop",
    "docSyntax": "[code,delay] spawn BIS_fnc_diagLoop",
    "tags": "",
    "description": "Runs scripted loop. Repeated call terminates previous loops.",
    "example": "[{systemChat \"Loop!\"}, 0.5] spawn BIS_fnc_diagLoop;",
    "params": "<code> <number>",
    "returns": "spawn handle"
  },
  "BIS_fnc_diagMacros": {
    "command": "BIS_fnc_diagMacros",
    "timestamp": "2021-01-23T08:58:14Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagMacros -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagMacros -->",
    "tags": "",
    "description": "\nDescription: Exports config macros. Parameter(s): \n0: CONFIG or ARRAY - config container to be searched (e.g. configFile >> \"CfgVehicles\") or list of classes or classnames \n1: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"]) 2 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\") \nReturns: STRING",
    "example": "[] call BIS_fnc_diagMacros;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMacrosAuthor": {
    "command": "BIS_fnc_diagMacrosAuthor",
    "timestamp": "2021-01-23T09:01:53Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagMacrosAuthor -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagMacrosAuthor -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_diagMacrosAuthor;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMacrosEditorPreview": {
    "command": "BIS_fnc_diagMacrosEditorPreview",
    "timestamp": "2021-01-23T09:12:21Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_diagMacrosEditorPreview",
    "docSyntax": "[] call BIS_fnc_diagMacrosEditorPreview",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMacrosMapSize": {
    "command": "BIS_fnc_diagMacrosMapSize",
    "timestamp": "2021-01-23T08:57:13Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagMacrosMapSize -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagMacrosMapSize -->",
    "tags": "",
    "description": "\nDescription: Prints mapSize values based on real object size and copies it to clipboard. Mission has to be running on order to get the values. Parameter(s): \n0: CONFIG or ARRAY - either config container, or list of classes or classnames \n1: STRING - output mode, can be on of \nfollowing: \"wiki\" - wiki table \"config\" - #define macros with model dimension values \"config_current\" - #define macros with current config values \n2: ARRAY - list of classnames which will be excluded from the scan \nReturns: STRING",
    "example": "[] call BIS_fnc_diagMacrosMapSize;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMacrosNameSound": {
    "command": "BIS_fnc_diagMacrosNameSound",
    "timestamp": "2021-01-23T09:25:38Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagMacrosNameSound",
    "docSyntax": "call BIS_fnc_diagMacrosNameSound",
    "tags": "",
    "description": "Detects vehicle types and prints their radio protocol definitions to clipboard.",
    "example": "call BIS_fnc_diagMacrosNameSound;",
    "params": "",
    "returns": "string"
  },
  "BIS_fnc_diagMacrosSimpleObject": {
    "command": "BIS_fnc_diagMacrosSimpleObject",
    "timestamp": "2021-01-23T09:22:23Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_diagMacrosSimpleObject",
    "docSyntax": "[] call BIS_fnc_diagMacrosSimpleObject",
    "tags": "",
    "description": "Generates simple object config data. \nParameters: \n0: OBJECT or ARRAY - ground position where ground objects will be created (\ndefault: position calculated 15 meters away from player) \n1: SCALAR or BOOL - autolog mode (\ndefault: false) 0 or false - no autolog, results will be only stored in clipboard 1 or true - autolog on, results will be stored in \\A3\\macros_CfgVehicles_simpleObject_auto_A3.hpp file. 2 - autlog on + world name, random number and custom suffix are appended to name of generated file to prevent overwriting and provide extra info \n2: ARRAY - classes you want to scan, use [] to scan all (\ndefault: []). \n3: OBJECT or ARRAY - sea position where ground objects will be created (\ndefault: position calculated 15 meters away from player) \n4: STRING - custom suffix added to filename if autolog is used (\ndefault: \"\"). \nExample: bis_scriptHandle = [] spawn BIS_fnc_diagMacrosSimpleObject; Expected output per class (animate and hide arrays can have varying amount of elements): #define CFGVEHICLES_SIMPLEOBJECT_class_F\\ class SimpleObject\\ {\\ animate[] =\\ {\\ {\"animationName1\", 1},\\ {\"animationName2\", 2}\\ };\\ hide[] =\\ {\\ \"animationSelection1\",\\ \"animationSelection2\"\\ };\\ verticalOffsetAsl = 0;\\ };",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMacrosVerify": {
    "command": "BIS_fnc_diagMacrosVerify",
    "timestamp": "2021-01-23T09:26:08Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_diagMacrosVerify -->",
    "docSyntax": "<!-- [] call BIS_fnc_diagMacrosVerify -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_diagMacrosVerify;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_diagMissionPositions": {
    "command": "BIS_fnc_diagMissionPositions",
    "timestamp": "2021-01-23T08:58:30Z",
    "version": "1.00",
    "syntax": "[''<config>, <boolean>, <boolean>''] call BIS_fnc_diagMissionPositions",
    "docSyntax": "[''configPath, allUnits, isCampaign''] call BIS_fnc_diagMissionPositions",
    "tags": "",
    "description": "Displays positions of units from all missions",
    "example": "nowiki[</nowiki>configFile >> \"CfgMissions\", true, false] call BIS_fnc_diagMissionPositions;",
    "params": "<config> <boolean> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_diagMissionWeapons": {
    "command": "BIS_fnc_diagMissionWeapons",
    "timestamp": "2021-01-23T09:17:58Z",
    "version": "1.00",
    "syntax": "[<boolean>] call BIS_fnc_diagMissionWeapons",
    "docSyntax": "[clipboard] call BIS_fnc_diagMissionWeapons",
    "tags": "",
    "description": "Lists all weapons and magazines available in a mission.",
    "example": "true call BIS_fnc_diagMissionWeapons;",
    "params": "<boolean>",
    "returns": "array"
  },
  "BIS_fnc_diagPreview": {
    "command": "BIS_fnc_diagPreview",
    "timestamp": "2021-01-23T08:59:18Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, <number>, <position>] call BIS_fnc_diagPreview",
    "docSyntax": "[container, parentClass, distance, startPos] call BIS_fnc_diagPreview",
    "tags": "",
    "description": "Previews selected classes from given container.",
    "example": "[ \"CfgVehicles\", \"Car\", 15, [0,0,0] ] call BIS_fnc_diagPreview;",
    "params": "<string> <string> <number> <position>",
    "returns": "array"
  },
  "BIS_fnc_diagPreviewCycle": {
    "command": "BIS_fnc_diagPreviewCycle",
    "timestamp": "2021-01-23T09:18:32Z",
    "version": "1.00",
    "syntax": "[<string>, <position>, vector, <display>] call BIS_fnc_diagPreviewCycle",
    "docSyntax": "[container, position, vector, display] call BIS_fnc_diagPreviewCycle",
    "tags": "",
    "description": "Previews selected class from the list. When 'cheat1' is activated, classnames will be shown instead of display names.",
    "example": "[ \"CfgVehicles\"] call BIS_fnc_diagPreviewCycle;",
    "params": "<string> <position> pitch <display>",
    "returns": "boolean"
  },
  "BIS_fnc_diagPreviewVehicleCrew": {
    "command": "BIS_fnc_diagPreviewVehicleCrew",
    "timestamp": "2021-01-23T09:17:26Z",
    "version": "1.00",
    "syntax": "[<string>, <array>, distance] call BIS_fnc_diagPreviewVehicleCrew",
    "docSyntax": "[class, numVeh, distance] call BIS_fnc_diagPreviewVehicleCrew",
    "tags": "",
    "description": "Creates vehicles with their crew.",
    "example": "[\"B_MRAP_01_F\", [5,5], 10] call BIS_fnc_diagPreviewVehicleCrew;",
    "params": "<string> <array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_diagRadio": {
    "command": "BIS_fnc_diagRadio",
    "timestamp": "2021-01-23T09:04:23Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_diagRadio;",
    "docSyntax": "call BIS_fnc_diagRadio;",
    "tags": "",
    "description": "Tracks played radio sentences.",
    "example": "call BIS_fnc_diagRadio;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_diagVehicleIcons": {
    "command": "BIS_fnc_diagVehicleIcons",
    "timestamp": "2021-01-23T09:10:52Z",
    "version": "1.00",
    "syntax": "[''<string>, <position>, <control>''] call BIS_fnc_diagVehicleIcons",
    "docSyntax": "[''parentClass, position, map''] call BIS_fnc_diagVehicleIcons",
    "tags": "",
    "description": "Previews all vehicle icons on map. FeatureWarningThis function is broken as it uses bad arguments for BIS_fnc_returnParents ('line 35', ic\"\" instead of ictrue&nbsp;)",
    "example": "[\"all\", getPos player] call BIS_fnc_diagVehicleIcons;",
    "params": "<string> <position> <control>",
    "returns": "nothing"
  },
  "BIS_fnc_diagWiki": {
    "command": "BIS_fnc_diagWiki",
    "timestamp": "2021-01-23T09:21:04Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_diagWiki",
    "docSyntax": "[mode] call BIS_fnc_diagWiki",
    "tags": "",
    "description": "Scans specific config folder and outputs the values in wiki format.",
    "example": "[\"RadioProtocol_Sent\"] call BIS_fnc_diagWiki;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_dirtEffect": {
    "command": "BIS_fnc_dirtEffect",
    "timestamp": "2021-01-23T08:56:49Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_dirtEffect",
    "docSyntax": "[unit, damage] call BIS_fnc_dirtEffect",
    "tags": "[EL]",
    "description": "Screen dirt (texture) postprocess. Displays dust PP according to damage obtained from near explosion; takes array from \"Explosion\" event handler.",
    "example": "nowiki[</nowiki>nil, 0.5] call BIS_fnc_dirtEffect;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_disableLoading": {
    "command": "BIS_fnc_disableLoading",
    "timestamp": "2021-01-23T09:01:13Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_disableLoading",
    "docSyntax": "call BIS_fnc_disableLoading",
    "tags": "",
    "description": "Disables the load/restart button. Currently only for BIS_fnc_cinemaBorder used within the Prologue and Survive campaigns. Only works in single player.",
    "example": "call BIS_fnc_disableLoading;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_disableSaving": {
    "command": "BIS_fnc_disableSaving",
    "timestamp": "2021-01-23T08:59:28Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_disableSaving",
    "docSyntax": "id call BIS_fnc_disableSaving",
    "tags": "",
    "description": "Controls the disabling of saving, stacking each request to prevent saving being enabled too early.",
    "example": "\"savingID\" call BIS_fnc_disableSaving;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_door": {
    "command": "BIS_fnc_door",
    "timestamp": "2021-01-23T08:59:45Z",
    "version": "1.00",
    "syntax": "[<object>, <number>, <number>] call BIS_fnc_door",
    "docSyntax": "[building, doorIndex, animationPhase] call BIS_fnc_door",
    "tags": "[AG] [EG]",
    "description": "Changes animation phase of given door.",
    "example": "[_building, 5, 1] call BIS_fnc_door;",
    "params": "<object> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_doorClose": {
    "command": "BIS_fnc_doorClose",
    "timestamp": "2021-01-23T09:27:35Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>, <string>, <number>] call BIS_fnc_doorClose",
    "docSyntax": "[building, doorAnimation, handleDownAnimation, doorHandleUpAnimation, animationPhase] call BIS_fnc_doorClose",
    "tags": "[AG] [EG]",
    "description": "Close a door with an animated doorhandle.",
    "example": "[building,\"doorAnimation\",\"animationUp\",\"animationDown\",1] call BIS_fnc_doorClose;",
    "params": "<object> <string> <string> <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_doorNoHandleClose": {
    "command": "BIS_fnc_doorNoHandleClose",
    "timestamp": "2021-01-22T21:53:01Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_doorNoHandleClose",
    "docSyntax": "[] call BIS_fnc_doorNoHandleClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_doorNoHandleOpen": {
    "command": "BIS_fnc_doorNoHandleOpen",
    "timestamp": "2021-01-23T08:59:38Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_doorNoHandleOpen",
    "docSyntax": "[] call BIS_fnc_doorNoHandleOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_doorOpen": {
    "command": "BIS_fnc_doorOpen",
    "timestamp": "2021-01-23T09:01:05Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>, <string>, <number>] call BIS_fnc_doorOpen",
    "docSyntax": "[building, doorAnimation, upDownAnimation, downUpAnimation, animationPhase] call BIS_fnc_doorOpen",
    "tags": "[AG] [EG]",
    "description": "Open a door with an animated doorhandle. Feature Informative This function uses animate internally.",
    "example": "[_house, \"door_1_rot\", nil, nil, 0.25] call BIS_fnc_doorOpen;",
    "params": "<object> <string> <string> <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_drawAO": {
    "command": "BIS_fnc_drawAO",
    "timestamp": "2021-01-23T09:10:18Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_drawAO",
    "docSyntax": "[triggers, distance] call BIS_fnc_drawAO",
    "tags": "",
    "description": "Draws a dashed line around the outer edges of a trigger.",
    "example": "[Trigger1] call BIS_fnc_drawAO; // draws a dashed line around trigger1's outer edge, with 50m between each line",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_drawMinefields": {
    "command": "BIS_fnc_drawMinefields",
    "timestamp": "2021-01-23T09:14:07Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_drawMinefields",
    "docSyntax": "call BIS_fnc_drawMinefields",
    "tags": "",
    "description": "Draw minefields on the map. Dynamically calculated from all mines positions. Distinguishes AP and AT minefields.",
    "example": "call BIS_fnc_drawMinefields;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_drawRespawnPositions": {
    "command": "BIS_fnc_drawRespawnPositions",
    "timestamp": "2021-01-23T09:00:42Z",
    "version": "1.00",
    "syntax": "[<boolean>] call BIS_fnc_drawRespawnPositions",
    "docSyntax": "[state] call BIS_fnc_drawRespawnPositions",
    "tags": "",
    "description": "Draws respawn positions on the map which were added by BIS_fnc_addRespawnPosition.",
    "example": "[ true ] call BIS_fnc_drawRespawnPositions;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_earthquake": {
    "command": "BIS_fnc_earthquake",
    "timestamp": "2021-01-23T09:21:45Z",
    "version": "1.00",
    "syntax": "[<number>] spawn BIS_fnc_earthquake",
    "docSyntax": "[intensity] spawn BIS_fnc_earthquake",
    "tags": "[EL]",
    "description": "Earthquake simulation - now just camera shake and sound. Stamina is impacted by the earthquake too. Earthquake will last between 13 and 20 seconds. While earthquake is in progress missionNamespace variable BIS_fnc_earthquake_inprogress will be true.",
    "example": "[4] spawn BIS_fnc_earthquake;",
    "params": "<number>",
    "returns": "nothing"
  },
  "BIS_fnc_effectFired": {
    "command": "BIS_fnc_effectFired",
    "timestamp": "2021-01-23T09:00:21Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFired -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFired -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectFired;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredArtillery": {
    "command": "BIS_fnc_effectFiredArtillery",
    "timestamp": "2021-01-23T09:18:03Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredArtillery -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredArtillery -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectFiredArtillery;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredCruiseMissile": {
    "command": "BIS_fnc_effectFiredCruiseMissile",
    "timestamp": "2021-01-23T09:06:03Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_effectFiredCruiseMissile",
    "docSyntax": "[] call BIS_fnc_effectFiredCruiseMissile",
    "tags": "",
    "description": "Cruise Missile Start VFX BIS_fnc_effectFiredCruiseMissile \na: reyhard",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredFlares": {
    "command": "BIS_fnc_effectFiredFlares",
    "timestamp": "2021-01-23T09:04:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredFlares -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredFlares -->",
    "tags": "",
    "description": "pre/*Arma 2 flares, by Maddmatt",
    "example": "[] call BIS_fnc_effectFiredFlares;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredHeliRocket": {
    "command": "BIS_fnc_effectFiredHeliRocket",
    "timestamp": "2021-01-23T09:20:50Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredHeliRocket -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredHeliRocket -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectFiredHeliRocket;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredLongSmoke": {
    "command": "BIS_fnc_effectFiredLongSmoke",
    "timestamp": "2021-01-23T09:17:30Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_effectFiredLongSmoke",
    "docSyntax": "[] call BIS_fnc_effectFiredLongSmoke",
    "tags": "",
    "description": "This function does nothing.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_effectFiredRifle": {
    "command": "BIS_fnc_effectFiredRifle",
    "timestamp": "2021-01-23T08:57:50Z",
    "version": "1.00",
    "syntax": "[<object>, <nothing>, <nothing>, <nothing>, <string>] call BIS_fnc_effectFiredRifle",
    "docSyntax": "[unit, nil, nil, nil, ammoType] call BIS_fnc_effectFiredRifle",
    "tags": "[EL]",
    "description": "Used to add an effect to fired bullets. Should be executed from Fired Event Handler.",
    "example": "unit _this call BIS_fnc_effectFiredRifle; }];",
    "params": "<object> <nothing> <nothing> <nothing> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_effectFiredRocket": {
    "command": "BIS_fnc_effectFiredRocket",
    "timestamp": "2021-01-23T09:02:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredRocket -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredRocket -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectFiredRocket;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredSmokeLauncher": {
    "command": "BIS_fnc_effectFiredSmokeLauncher",
    "timestamp": "2021-01-23T09:24:04Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredSmokeLauncher -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredSmokeLauncher -->",
    "tags": "",
    "description": "pre/*Arma 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron",
    "example": "[] call BIS_fnc_effectFiredSmokeLauncher;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectFiredSmokeLauncher_boat": {
    "command": "BIS_fnc_effectFiredSmokeLauncher_boat",
    "timestamp": "2021-01-23T09:06:12Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectFiredSmokeLauncher_boat -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectFiredSmokeLauncher_boat -->",
    "tags": "",
    "description": "pre/*Arma 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron",
    "example": "[] call BIS_fnc_effectFiredSmokeLauncher_boat;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectKilled": {
    "command": "BIS_fnc_effectKilled",
    "timestamp": "2021-01-23T09:27:26Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectKilled -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectKilled -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectKilled;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectKilledAirDestruction": {
    "command": "BIS_fnc_effectKilledAirDestruction",
    "timestamp": "2021-01-23T09:02:01Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectKilledAirDestruction -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectKilledAirDestruction -->",
    "tags": "[SE]",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectKilledAirDestruction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectKilledAirDestructionStage2": {
    "command": "BIS_fnc_effectKilledAirDestructionStage2",
    "timestamp": "2021-01-23T09:23:53Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectKilledAirDestructionStage2 -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectKilledAirDestructionStage2 -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_effectKilledAirDestructionStage2;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectKilledSecondaries": {
    "command": "BIS_fnc_effectKilledSecondaries",
    "timestamp": "2021-01-23T09:09:09Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_effectKilledSecondaries -->",
    "docSyntax": "<!-- [] call BIS_fnc_effectKilledSecondaries -->",
    "tags": "[SE]",
    "description": "pre//Small secondary fuel explosions //By Maddmatt for Arma 2",
    "example": "[] call BIS_fnc_effectKilledSecondaries;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_effectPlankton": {
    "command": "BIS_fnc_effectPlankton",
    "timestamp": "2021-01-23T08:59:51Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_effectPlankton",
    "docSyntax": "call BIS_fnc_effectPlankton",
    "tags": "[EL]",
    "description": "Create underwater plankton particle effect.",
    "example": "call BIS_fnc_effectPlankton;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_EGSpectatorCameraPrepareTarget": {
    "command": "BIS_fnc_EGSpectatorCameraPrepareTarget",
    "timestamp": "2021-01-22T22:04:48Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorCameraPrepareTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorCameraPrepareTarget -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorCameraResetTarget": {
    "command": "BIS_fnc_EGSpectatorCameraResetTarget",
    "timestamp": "2021-01-22T21:55:53Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorCameraResetTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorCameraResetTarget -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorCameraSetTarget": {
    "command": "BIS_fnc_EGSpectatorCameraSetTarget",
    "timestamp": "2021-01-22T22:00:20Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorCameraSetTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorCameraSetTarget -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorCameraTick": {
    "command": "BIS_fnc_EGSpectatorCameraTick",
    "timestamp": "2021-01-22T21:55:40Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorCameraTick -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorCameraTick -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorDraw2D": {
    "command": "BIS_fnc_EGSpectatorDraw2D",
    "timestamp": "2021-01-22T22:03:20Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorDraw2D -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorDraw2D -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorDraw3D": {
    "command": "BIS_fnc_EGSpectatorDraw3D",
    "timestamp": "2021-01-22T21:57:04Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorDraw3D -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorDraw3D -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EGSpectatorGetUnitsToDraw": {
    "command": "BIS_fnc_EGSpectatorGetUnitsToDraw",
    "timestamp": "2021-01-22T21:54:19Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_EGSpectatorGetUnitsToDraw -->",
    "docSyntax": "<!-- [] call BIS_fnc_EGSpectatorGetUnitsToDraw -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_ejectionSeatRelease": {
    "command": "BIS_fnc_ejectionSeatRelease",
    "timestamp": "2021-01-22T22:48:03Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_ejectionSeatRelease -->",
    "docSyntax": "<!-- [] call BIS_fnc_ejectionSeatRelease -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - Additional option for player to separate from ejetor seat via user action. default ejection function will ato deploy parachute at 350 m altitude. This is a manual override. - Generic parachute used, currently only one model in game so no need to parametarize. \nExucution: - Call the function via user action defined on the ejector seat vehicle. \nExample: \nclass UserActions { \n\tclass Ejection_Seat_Eject { \n\t\tpriority = 0.05; shortcut = \"Eject\"; displayName = \"$STR_A3_action_deploy_parachute\"; condition = \"player in this\"; statement = \"[this] spawn BIS_fnc_ejectionSeatRelease\"; position = \"pilotcontrol\"; radius = 10; onlyforplayer = 1; showWindow = 0; hideOnUse = 1; \n\t};\n \n};\n \nRequirments: - Compatible ejector seat must have a user action set up to triger this fnc. Parameter(s): _this select \n0: mode (Scalar) \n0: ejector seat/object \nReturns: nothing \nResult: Pilot will be forced from ejection seat vehicle to parachute. Semi-authenthic behaviour.",
    "example": "[] call BIS_fnc_ejectionSeatRelease;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_enableSaving": {
    "command": "BIS_fnc_enableSaving",
    "timestamp": "2021-01-23T09:05:25Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_enableSaving",
    "docSyntax": "id call BIS_fnc_enableSaving",
    "tags": "",
    "description": "Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.",
    "example": "\"savingID\" call BIS_fnc_enableSaving;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_encodeFlags": {
    "command": "BIS_fnc_encodeFlags",
    "timestamp": "2021-01-23T09:11:34Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_encodeFlags",
    "docSyntax": "flags call BIS_fnc_encodeFlags",
    "tags": "",
    "description": "Encodes array of unique binary flags with indexes between 0-15 into a single scalar.",
    "example": "_encodedFlags = [0,2,3] call BIS_fnc_encodeFlags;//Returns 13",
    "params": "<array>",
    "returns": "number"
  },
  "BIS_fnc_encodeFlags2": {
    "command": "BIS_fnc_encodeFlags2",
    "timestamp": "2021-01-23T09:06:30Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_encodeFlags2",
    "docSyntax": "arrayOfNumbers call BIS_fnc_encodeFlags2",
    "tags": "",
    "description": "Encodes array of unique binary flags (zeroes or ones) into a single scalar. Feature important Note that the input array is in WikipediaEndianness#DefinitionBig Endian, meaning that the smallest value is 'to the left'.",
    "example": "private _result = [1,0,1,1] call BIS_fnc_encodeFlags2; hint str _result; // Displays 13",
    "params": "<array>",
    "returns": "number"
  },
  "BIS_fnc_encodeFlags4": {
    "command": "BIS_fnc_encodeFlags4",
    "timestamp": "2021-01-23T09:08:26Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_encodeFlags4",
    "docSyntax": "[] call BIS_fnc_encodeFlags4",
    "tags": "",
    "description": "Encodes array of unique 4-state flags (0,1,2,3) into a single number. \nSyntax: ------- \n\t_encodedFlags:scalar = \n\t_flags:array call BIS_fnc_encodeFlags4; \nExample: -------- 225 = [1,0,2,3] call BIS_fnc_encodeFlags4; \nExplanation: ------------ [1,0,2,3] -> 11 10 00 01 -> 225 [0,0,0,0,0,0,0,1] -> 01 00 00 00 00 00 00 00 -> 0100 0000 0000 0000 -> 16384",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_encodeFlags8": {
    "command": "BIS_fnc_encodeFlags8",
    "timestamp": "2021-01-23T09:00:20Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_encodeFlags8",
    "docSyntax": "[] call BIS_fnc_encodeFlags8",
    "tags": "",
    "description": "Encodes array of unique 8-state flags (0,1,2,3,4,5,6,7) into a single number. \nSyntax: ------- \n\t_encodedFlags:scalar = \n\t_flags:array call BIS_fnc_encodeFlags8; \nExample: -------- 4311 = [7,2,3,0,1] call BIS_fnc_encodeFlags8; \nExplanation: ------------ [7,2,3,0,1] -> 001 000 011 010 111 -> 0001 0000 1101 0111 -> 4311",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_endMissionServer": {
    "command": "BIS_fnc_endMissionServer",
    "timestamp": "2021-01-23T09:00:48Z",
    "version": "1.00",
    "syntax": "cfgdebriefing call BIS_fnc_endMissionServer",
    "docSyntax": "endType call BIS_fnc_endMissionServer",
    "tags": "[SE] [EG]",
    "description": "Ends the mission properly for all players in a multiplayer environment. FeatureInformativeThis function is somewhat deprecated for custom endings since GVIarma31.50 as remote-executing BIS_fnc_endMission allows for more \noptions: code[\"MyEnding\", true, 3] remoteExec [\"BIS_fnc_endMission\", 0, true];</code>",
    "example": "\"SideScore\" call BIS_fnc_endMissionServer;",
    "params": "cfgdebriefing",
    "returns": "boolean"
  },
  "BIS_fnc_enemyDetected": {
    "command": "BIS_fnc_enemyDetected",
    "timestamp": "2021-01-23T09:17:48Z",
    "version": "1.00",
    "syntax": "unit call BIS_fnc_enemyDetected",
    "docSyntax": "unit call BIS_fnc_enemyDetected",
    "tags": "",
    "description": "Returns true if unit knows about nearby enemy unit or driven vehicle.",
    "example": "_enemyDetected = _unit call BIS_fnc_enemyDetected;",
    "params": "unit",
    "returns": "boolean"
  },
  "BIS_fnc_enemySides": {
    "command": "BIS_fnc_enemySides",
    "timestamp": "2021-01-23T09:05:03Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_enemySides",
    "docSyntax": "input call BIS_fnc_enemySides",
    "tags": "",
    "description": "Returns sides hostile to the given side / object.",
    "example": "sqfplayer call BIS_fnc_enemySides;</sqf>",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_enemyTargets": {
    "command": "BIS_fnc_enemyTargets",
    "timestamp": "2021-01-23T09:27:25Z",
    "version": "1.00",
    "syntax": "unit call BIS_fnc_enemyTargets",
    "docSyntax": "unit call BIS_fnc_enemyTargets",
    "tags": "",
    "description": "Return list of nearby enemy targets for given unit.",
    "example": "_targets = _unit call BIS_fnc_enemyTargets;",
    "params": "unit",
    "returns": "array"
  },
  "BIS_fnc_errorParamsType": {
    "command": "BIS_fnc_errorParamsType",
    "timestamp": "2021-01-23T09:10:27Z",
    "version": "1.00",
    "syntax": "[value, method, expected] call BIS_fnc_errorParamsType",
    "docSyntax": "[value, method, expected] call BIS_fnc_errorParamsType",
    "tags": "[EL]",
    "description": "Displays a parameter type error message (using BIS_fnc_error) explaining the problem.",
    "example": "// Show error and abort if input is not of type ARRAY: _this _this, \"isEqualType\", []] call BIS_fnc_errorParamsType; };",
    "params": "<nil> <string> <nil>",
    "returns": "nothing"
  },
  "BIS_fnc_establishingShot": {
    "command": "BIS_fnc_establishingShot",
    "timestamp": "2021-01-23T09:07:36Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <number>, <number>, <number>, <number>, <array>, <number>, <boolean>,<number>] spawn BIS_fnc_establishingShot",
    "docSyntax": "[target, text, altitude, radius, angle, rotation, iconOptions, mode, fadeIn,waitTime] spawn BIS_fnc_establishingShot",
    "tags": "[AG] [EL]",
    "description": "Plays a fake UAV observational sequence which serves as an establishing shot.br left|400px",
    "example": "[player, \"I can see my house from here\", 500, 250, 75, 1, [], 0, true] spawn BIS_fnc_establishingShot;",
    "params": "<object> <string> <number> <number> <number> <number> <array> <number> <boolean> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_estimatedTimeLeft": {
    "command": "BIS_fnc_estimatedTimeLeft",
    "timestamp": "2021-01-23T09:03:17Z",
    "version": "1.00",
    "syntax": "[<number>] call BIS_fnc_estimatedTimeLeft",
    "docSyntax": "[time] call BIS_fnc_estimatedTimeLeft",
    "tags": "",
    "description": "Set mission countdown.",
    "example": "[180] call BIS_fnc_estimatedTimeLeft;",
    "params": "<number>",
    "returns": "number | estimatedendservertime"
  },
  "BIS_fnc_execFSM": {
    "command": "BIS_fnc_execFSM",
    "timestamp": "2021-01-23T08:58:23Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_execFSM",
    "docSyntax": "filename call BIS_fnc_execFSM",
    "tags": "",
    "description": "Execute the scripted FSM. Shell for execFSM command",
    "example": "_handle = nowiki[[</nowiki>_param1, _param2, ''etc..''], \"test.fsm\"] call BIS_fnc_execFSM;",
    "params": "<string> _this <fsm>",
    "returns": "number | fsm"
  },
  "BIS_fnc_execRemote": {
    "command": "BIS_fnc_execRemote",
    "timestamp": "2021-01-23T09:25:33Z",
    "version": "1.00",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "This function is now an alias to BIS_fnc_MP. FeatureimportantUse remoteExec and remoteExecCall instead!",
    "example": "See BIS_fnc_MP",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_executeStackedEventHandler": {
    "command": "BIS_fnc_executeStackedEventHandler",
    "timestamp": "2021-01-23T09:01:16Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_executeStackedEventHandler",
    "docSyntax": "[EHType] call BIS_fnc_executeStackedEventHandler",
    "tags": "",
    "description": "This function executes the stacked items. FeatureimportantShould not be called independently",
    "example": "[\"onEachFrame\"] call BIS_fnc_executeStackedEventHandler;",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_execVM": {
    "command": "BIS_fnc_execVM",
    "timestamp": "2021-01-23T09:28:09Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_execVM",
    "docSyntax": "filename call BIS_fnc_execVM",
    "tags": "[EL]",
    "description": "execVM desired script with desired argument(s). This function is only really useful when combined with BIS_fnc_MP to execute a script remotely.",
    "example": "\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;",
    "params": "<string> _this <string>",
    "returns": "script | scriptdone"
  },
  "BIS_fnc_exportCfgGroups": {
    "command": "BIS_fnc_exportCfgGroups",
    "timestamp": "2021-01-23T08:59:56Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_exportCfgGroups -->",
    "docSyntax": "<!-- [] call BIS_fnc_exportCfgGroups -->",
    "tags": "",
    "description": "\nDescription: Export group or object composition for use in CfgGroups. The result will be copied to clipboard. Parameter(s): \n0: position (for supported types see BIS_fnc_position). Screen center is used by default \n1: objects to be saved. Currently selected objects in curator are used by default ARRAY of OBJECTs - specific objects to be saved array in format used by nearEntities, which automatically get nearby objects \n0: STRING or ARRAY of STRINGS - object types \n1: NUMBER - radius in metres \nReturns: STRING",
    "example": "[] call BIS_fnc_exportCfgGroups;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_exportCfgHints": {
    "command": "BIS_fnc_exportCfgHints",
    "timestamp": "2021-01-23T09:11:04Z",
    "version": "1.00",
    "syntax": "[<string>, <string>] call BIS_fnc_exportCfgHints",
    "docSyntax": "[category, class] call BIS_fnc_exportCfgHints",
    "tags": "",
    "description": "Exports CfgHints to wiki format (see <:\n\tCategory:Arma \n3: Field Manual>).",
    "example": "[] call BIS_fnc_exportCfgHints;",
    "params": "<string> <string>",
    "returns": "string"
  },
  "BIS_fnc_exportCfgMagazines": {
    "command": "BIS_fnc_exportCfgMagazines",
    "timestamp": "2021-01-23T09:18:41Z",
    "version": "1.00",
    "syntax": "[<array>] spawn BIS_fnc_exportCfgMagazines",
    "docSyntax": "[classes] spawn BIS_fnc_exportCfgMagazines",
    "tags": "",
    "description": "Export list of magazines for Arma \n3: Assets.",
    "example": "[] spawn BIS_fnc_exportCfgMagazines; // exports <Arma 3 CfgMagazines>",
    "params": "<array>",
    "returns": "boolean"
  },
  "BIS_fnc_exportCfgPatches": {
    "command": "BIS_fnc_exportCfgPatches",
    "timestamp": "2021-01-23T09:03:12Z",
    "version": "1.00",
    "syntax": "[<string>,strings] call BIS_fnc_exportCfgPatches",
    "docSyntax": "[config,classes] call BIS_fnc_exportCfgPatches",
    "tags": "",
    "description": "Export list of addons for Community Wiki - Arma \n3: Assets.",
    "example": "call BIS_fnc_exportCfgPatches;",
    "params": "<string> strings",
    "returns": "boolean"
  },
  "BIS_fnc_exportCfgVehiclesAssetDB": {
    "command": "BIS_fnc_exportCfgVehiclesAssetDB",
    "timestamp": "2021-01-23T08:57:41Z",
    "version": "1.00",
    "syntax": "[<array>, <number>] call BIS_fnc_exportCfgVehiclesAssetDB",
    "docSyntax": "[side, category] call BIS_fnc_exportCfgVehiclesAssetDB",
    "tags": "",
    "description": "Copies CfgVehicles information to clipboard in wiki format.",
    "example": "[0] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles EAST> [1] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles WEST> [2] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles GUER> [3,0] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles CIV> [3,1] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles Structures> [3,2] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles Ruins & Wrecks> [3,3] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles Equipment> [3,4] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles EMPTY> [3,5] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles VR Objects> [3,6] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles Animals> [] spawn BIS_fnc_exportCfgVehiclesAssetDB; // exports <Arma 3 CfgVehicles Other>: ccUnknown, Enemy, Friendly, Modules, Empty, Ambient Life",
    "params": "<array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_exportCfgWeapons": {
    "command": "BIS_fnc_exportCfgWeapons",
    "timestamp": "2021-01-23T08:56:26Z",
    "version": "1.00",
    "syntax": "[<string>, <array>, strings] spawn BIS_fnc_exportCfgWeapons",
    "docSyntax": "[mode, patches, types] spawn BIS_fnc_exportCfgWeapons",
    "tags": "",
    "description": "Export list of weapons for Community Wiki Arma 3 Assets Category.",
    "example": " [\"Weapon\"] spawn BIS_fnc_exportCfgWeapons; // exports <Arma 3 CfgWeapons Weapons> [\"VehicleWeapon\"] spawn BIS_fnc_exportCfgWeapons; // exports <Arma 3 CfgWeapons Vehicle Weapons> [\"Item\"] spawn BIS_fnc_exportCfgWeapons; // exports <Arma 3 CfgWeapons Items> [\"Equipment\"] spawn BIS_fnc_exportCfgWeapons; // exports <Arma 3 CfgWeapons Equipment> [\"screenshots\"] spawn BIS_fnc_exportCfgWeapons; // exports screenshots [\"screenshotsTest\"] spawn BIS_fnc_exportCfgWeapons; // screenshots test mode, does nothing ",
    "params": "<string> <array> strings",
    "returns": "boolean | true"
  },
  "BIS_fnc_exportConfigHierarchy": {
    "command": "BIS_fnc_exportConfigHierarchy",
    "timestamp": "2021-01-23T09:08:14Z",
    "version": "1.00",
    "syntax": "[<config>,<string>] call BIS_fnc_exportConfigHierarchy",
    "docSyntax": "[config,class] call BIS_fnc_exportConfigHierarchy",
    "tags": "",
    "description": "Export config hierarchy of given config.",
    "example": "[ configFile >> \"CfgWeapons\" ] call BIS_fnc_exportConfigHierarchy;",
    "params": "<config> <string>",
    "returns": "string"
  },
  "BIS_fnc_exportFunctionsToWiki": {
    "command": "BIS_fnc_exportFunctionsToWiki",
    "timestamp": "2021-01-23T09:28:26Z",
    "version": "1.00",
    "syntax": "[<array>, <string>] spawn BIS_fnc_exportFunctionsToWiki",
    "docSyntax": "[filter, timestamp] spawn BIS_fnc_exportFunctionsToWiki",
    "tags": "",
    "description": "Export function descriptions to Community Wiki. Exported text will be copied to clipboard in XML format.br 'Wiki Admins' can import them using '<\n\tSpecial:Import>'.br If the page already exists, it will be replaced only when ''timestamp'' is newer. FeatureWarningThis function should no longer be used to mass-import functions since the template for function pages has changed drastically!",
    "example": "[] spawn BIS_fnc_exportFunctionsToWiki; // export all functions",
    "params": "<array> <string>",
    "returns": "string"
  },
  "BIS_fnc_exportGroupFormations": {
    "command": "BIS_fnc_exportGroupFormations",
    "timestamp": "2021-01-23T09:11:25Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_exportGroupFormations -->",
    "docSyntax": "<!-- [] call BIS_fnc_exportGroupFormations -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_exportGroupFormations;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_exportGUIBaseClasses": {
    "command": "BIS_fnc_exportGUIBaseClasses",
    "timestamp": "2021-01-23T09:21:19Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_exportGUIBaseClasses",
    "docSyntax": "mode call BIS_fnc_exportGUIBaseClasses",
    "tags": "",
    "description": "Export GUI macros and base classes to the clipboard.FeatureWarningThe exported the Eden Editor base classes have several inheritance issues. If you need the base classes you can get them [https://github.com/LarrowZurb/A3_GUI_Defines 'here']. Featureobsoleteimport keyword was introducedarma32.01.146644",
    "example": "\"all\" call BIS_fnc_exportGUIBaseClasses;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_exportInventory": {
    "command": "BIS_fnc_exportInventory",
    "timestamp": "2021-01-23T08:56:32Z",
    "version": "1.00",
    "syntax": "[unit, type, includeIdentity] call BIS_fnc_exportInventory",
    "docSyntax": "[unit, type, includeIdentity] call BIS_fnc_exportInventory",
    "tags": "",
    "description": "Exports unit's loadout as a copies it to clipboard.",
    "example": "[player, \"init\", true] call BIS_fnc_exportInventory;",
    "params": "<object> <string> <boolean>",
    "returns": "config"
  },
  "BIS_fnc_exportMapToBiTXT": {
    "command": "BIS_fnc_exportMapToBiTXT",
    "timestamp": "2021-01-23T09:11:05Z",
    "version": "1.00",
    "syntax": "[<number>, <number>, <number>] call BIS_fnc_exportMapToBiTXT",
    "docSyntax": "[resolution, size, zCoeff] call BIS_fnc_exportMapToBiTXT",
    "tags": "",
    "description": "Returns terrain height map to BiTXT (Universal Bistudio TXT) format, which can be imported to copied to clipboard. Featureimportant Be wary that 'this function is CPU-demanding' and may lock your computer for minutes!",
    "example": "[10, 10, 1] call BIS_fnc_exportMapToBiTXT;",
    "params": "<number> <number> <number>",
    "returns": "string"
  },
  "BIS_fnc_exportVehicle": {
    "command": "BIS_fnc_exportVehicle",
    "timestamp": "2021-01-23T09:04:08Z",
    "version": "1.00",
    "syntax": "[<object>,<string>] call BIS_fnc_exportVehicle",
    "docSyntax": "[vehicle,vehicleClass] call BIS_fnc_exportVehicle",
    "tags": "",
    "description": "Export vehicle settings",
    "example": "[BIS_tank,\"\"] call BIS_fnc_exportVehicle; //Returns \"[ _this, [\"\"Hex\"\",1], [\"\"showCamonetHull\"\",1,\"\"showCamonetTurret\"\",1] ] call BIS_fnc_initVehicle;\"",
    "params": "<object> <string>",
    "returns": "sqf code"
  },
  "BIS_fnc_fadeEffect": {
    "command": "BIS_fnc_fadeEffect",
    "timestamp": "2021-01-23T09:26:28Z",
    "version": "1.00",
    "syntax": "[<number>, blackOrWhite, <number>, <number>, cfgmusic, <string>, <number>] spawn BIS_fnc_fadeEffect",
    "docSyntax": "[fadeInOrOut, blackOrWhite, duration, blur, music, ending, success] spawn BIS_fnc_fadeEffect",
    "tags": "[EL]",
    "description": "Easily carry out complex fading. Default values will be used if parameters are not defined or set to nil.",
    "example": "[1, \"WHITE\", 5, 1] spawn BIS_fnc_fadeEffect;",
    "params": "<number> <string> <number> <number> cfgmusic <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_fatigueEffect": {
    "command": "BIS_fnc_fatigueEffect",
    "timestamp": "2021-01-23T09:19:29Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_fatigueEffect",
    "docSyntax": "call BIS_fnc_fatigueEffect",
    "tags": "",
    "description": "Effects for high fatigue values. Internal engine use only, as it relies on internal BIS_* variables.",
    "example": "call BIS_fnc_fatigueEffect;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_feedbackInit": {
    "command": "BIS_fnc_feedbackInit",
    "timestamp": "2021-01-23T09:18:09Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_feedbackInit",
    "docSyntax": "call BIS_fnc_feedbackInit",
    "tags": "",
    "description": "Init function for feedback system. Declaration of variables, eventhandlers, etc. for in-game effects. Engine use only.",
    "example": "call BIS_fnc_feedbackInit;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_feedbackMain": {
    "command": "BIS_fnc_feedbackMain",
    "timestamp": "2021-01-23T09:08:55Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_feedbackMain",
    "docSyntax": "[] call BIS_fnc_feedbackMain",
    "tags": "",
    "description": "Main feedback FSM, used for feedback effects (fatigue, drowning, injury etc.). Internal use only.",
    "example": "[] call BIS_fnc_feedbackMain;",
    "params": "",
    "returns": "number | execfsm"
  },
  "BIS_fnc_filterString": {
    "command": "BIS_fnc_filterString",
    "timestamp": "2021-01-23T08:56:15Z",
    "version": "1.00",
    "syntax": "[ text, filter ] call BIS_fnc_filterString",
    "docSyntax": "[ text, filter ] call BIS_fnc_filterString",
    "tags": "",
    "description": "Removes characters from a string based on the list of allowed characters.",
    "example": "nowiki[</nowiki>\"Player 1 @%!@$\"] call BIS_fnc_filterString; // returns \"Player1\"",
    "params": "<string> <string>",
    "returns": "string"
  },
  "BIS_fnc_findAllNestedElements": {
    "command": "BIS_fnc_findAllNestedElements",
    "timestamp": "2021-01-23T09:09:02Z",
    "version": "1.00",
    "syntax": "[<array>, <anything>] call BIS_fnc_findAllNestedElements",
    "docSyntax": "[array, query] call BIS_fnc_findAllNestedElements",
    "tags": "",
    "description": "Returns array of paths to all matching elements in deeply nested array, similar to BIS_fnc_findNestedElement but with all occurences.",
    "example": "_array = [nowiki[1, '2', 3], [nowiki[1, '2', 3], 1, '2', 3]]; _result = [_array, '2'] call BIS_fnc_findAllNestedElements; codecomment// returns [nowiki[0, 1], [1, 0, 1], [1, 2]]",
    "params": "<array> <anything>",
    "returns": "numbers - path to the first occurence of ''query''"
  },
  "BIS_fnc_findLookAt": {
    "command": "BIS_fnc_findLookAt",
    "timestamp": "2021-01-23T09:22:00Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_findLookAt",
    "docSyntax": "[] call BIS_fnc_findLookAt",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Given target location, calculates orientation vectors facing direction Parameter(s): _this select \n0: Object - The curve \nReturns: Array - In format [Dir Vector, Up Vector]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_findOverwatch": {
    "command": "BIS_fnc_findOverwatch",
    "timestamp": "2021-01-23T09:17:39Z",
    "version": "1.00",
    "syntax": "[position3d, <number>, <number>, <number>, position3d] call BIS_fnc_findOverwatch",
    "docSyntax": "[target, maxDistance, minDistance, minHeightAbove, searchCentre] call BIS_fnc_findOverwatch",
    "tags": "",
    "description": "Selects a position that provides overwatch onto another position.",
    "example": "nowiki[</nowiki>getPosATL enemyTank, 300, 75, 20, getPosATL player] call BIS_fnc_findOverwatch;",
    "params": "position3d <number> <number> <number> position3d",
    "returns": "position"
  },
  "BIS_fnc_fireSupport": {
    "command": "BIS_fnc_fireSupport",
    "timestamp": "2021-01-23T09:24:00Z",
    "version": "1.00",
    "syntax": "[<object>,<position>,<string>,<number>,<number>,<array>,<code>,<number>] spawn BIS_fnc_fireSupport",
    "docSyntax": "[arty,target,mag,radius,rounds,delay,conditionEnd,safezone] spawn BIS_fnc_fireSupport",
    "tags": "",
    "description": "Mortar/artillery fire support.",
    "example": "[BIS_Mortar,[3600,3600,0],\"\",100,24,10] spawn BIS_fnc_fireSupport;",
    "params": "<object> <position> <string> <number> <number> <array> <code> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_fireSupportCluster": {
    "command": "BIS_fnc_fireSupportCluster",
    "timestamp": "2021-01-23T09:25:16Z",
    "version": "1.00",
    "syntax": "[<position>,<string>,<number>,<array>,<array>,<code>,safezone,<number>,<number>,<array>] spawn BIS_fnc_fireSupportCluster",
    "docSyntax": "[position,ammo,radius,rounds,delay,conditionEnd,safezone,altitude,velocity,sounds] spawn BIS_fnc_fireSupportCluster",
    "tags": "",
    "description": "Virtual fire support - cluster shell.",
    "example": "[BIS_Player,\"G_40mm_HEDP\",100,[4,10],10] spawn BIS_fnc_fireSupportCluster;",
    "params": "<position> <string> <number> <array> <array> <code> <number> <number> <number> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_fireSupportVirtual": {
    "command": "BIS_fnc_fireSupportVirtual",
    "timestamp": "2021-01-23T09:11:28Z",
    "version": "1.00",
    "syntax": "[<position>, <string>, <number>, <number>, <array>, <code>, <number>, <number>, <number>, strings] spawn BIS_fnc_fireSupportVirtual",
    "docSyntax": "[target, mag, radius, rounds, delay, conditionEnd, safezone, alt, speed, sounds] spawn BIS_fnc_fireSupportVirtual",
    "tags": "",
    "description": "Fires virtual mortar/artillery fire support.",
    "example": "[BIS_Player, \"Sh_82mm_AMOS\", 100, 24, 10] spawn BIS_fnc_fireSupportVirtual;",
    "params": "<position> <string> <number> <number> <array> <code> <number> <number> <number> strings",
    "returns": "boolean | true"
  },
  "BIS_fnc_flamesEffect": {
    "command": "BIS_fnc_flamesEffect",
    "timestamp": "2021-01-23T09:27:00Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_flamesEffect",
    "docSyntax": "call BIS_fnc_flamesEffect",
    "tags": "",
    "description": "Flames (texture) postprocess.",
    "example": "call BIS_fnc_flamesEffect;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_forceEnd": {
    "command": "BIS_fnc_forceEnd",
    "timestamp": "2021-01-23T09:01:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_forceEnd -->",
    "docSyntax": "<!-- [] call BIS_fnc_forceEnd -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_forceEnd;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_friendlySides": {
    "command": "BIS_fnc_friendlySides",
    "timestamp": "2021-01-23T09:00:44Z",
    "version": "1.00",
    "syntax": "toCheck call BIS_fnc_friendlySides",
    "docSyntax": "toCheck call BIS_fnc_friendlySides",
    "tags": "",
    "description": "Returns sides allied to the given side / object.",
    "example": "player call BIS_fnc_friendlySides; codecomment// 'can' return [FRIENDLY,WEST,GUER,CIV]",
    "params": "side",
    "returns": "sides"
  },
  "BIS_fnc_functionMeta": {
    "command": "BIS_fnc_functionMeta",
    "timestamp": "2021-06-10T19:47:57Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_functionMeta",
    "docSyntax": "functionName call BIS_fnc_functionMeta",
    "tags": "",
    "description": "Returns function's meta data.",
    "example": "// returns [\"A3\\functions_f\\Debug\\fn_functionMeta.sqf\", \".sqf\", 0, false, false, false, \"A3\", \"Debug\", \"functionMeta\"] \"BIS_fnc_functionMeta\" call BIS_fnc_functionMeta;",
    "params": "<string>",
    "returns": "array | string | string | number | boolean | boolean | boolean | string | string | string"
  },
  "BIS_fnc_getAngleDelta": {
    "command": "BIS_fnc_getAngleDelta",
    "timestamp": "2021-01-23T09:03:31Z",
    "version": "1.00",
    "syntax": "[<number>, <number>] call BIS_fnc_getAngleDelta",
    "docSyntax": "[angleA, angleB] call BIS_fnc_getAngleDelta",
    "tags": "",
    "description": "Returns the smallest difference between two angles in degrees.",
    "example": "_delta = [90,193] call BIS_fnc_getAngleDelta;//-103",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_getCfg": {
    "command": "BIS_fnc_getCfg",
    "timestamp": "2021-01-23T09:11:49Z",
    "version": "1.00",
    "syntax": "<config> call BIS_fnc_getCfg",
    "docSyntax": "input call BIS_fnc_getCfg",
    "tags": "",
    "description": "Smart-return config (extension for BIS_fnc_getCfgXXXX functions). Can by called 2 \nways: * 1st way - passing config directly * 2nd way - passing array of strings or config and strings",
    "example": "( configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" ) call BIS_fnc_getCfg;",
    "params": "<config>",
    "returns": "config"
  },
  "BIS_fnc_getCfgData": {
    "command": "BIS_fnc_getCfgData",
    "timestamp": "2021-01-23T09:25:52Z",
    "version": "1.00",
    "syntax": "<config> call BIS_fnc_getCfgData",
    "docSyntax": "config call BIS_fnc_getCfgData",
    "tags": "",
    "description": "Smart-return number, text or array value from config.brbr- Default syntax works for any config.br - Alternative syntax is for comfortable working with mission description.ext.",
    "example": "_value = (configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" >> \"type\") call BIS_fnc_getCfgData;",
    "params": "<config>",
    "returns": "array | string | number | nil"
  },
  "BIS_fnc_getCfgDataArray": {
    "command": "BIS_fnc_getCfgDataArray",
    "timestamp": "2021-01-23T09:04:25Z",
    "version": "1.00",
    "syntax": "<config> call BIS_fnc_getCfgDataArray",
    "docSyntax": "config call BIS_fnc_getCfgDataArray",
    "tags": "",
    "description": "Gets an array defined in Config. If the value is not an array, it is retyped into one.brbr- Default syntax works for any config.br - Alternative syntax is for comfortable working with mission description.ext.",
    "example": "_array = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataArray;",
    "params": "<config>",
    "returns": "array | nil"
  },
  "BIS_fnc_getCfgDataBool": {
    "command": "BIS_fnc_getCfgDataBool",
    "timestamp": "2021-01-23T09:20:12Z",
    "version": "1.00",
    "syntax": "<config> call BIS_fnc_getCfgDataBool",
    "docSyntax": "config call BIS_fnc_getCfgDataBool",
    "tags": "",
    "description": "Gets a number defined in config and retype it into a boolean. Everything greater than 0 is true, otherwise it is false. * Default syntax works for any config * Alternative syntax is for comfortable working with mission's <Description.ext>.",
    "example": "_value = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataBool;",
    "params": "<config>",
    "returns": "boolean"
  },
  "BIS_fnc_getCfgDataObject": {
    "command": "BIS_fnc_getCfgDataObject",
    "timestamp": "2021-01-23T09:03:53Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_getCfgDataObject -->",
    "docSyntax": "<!-- [] call BIS_fnc_getCfgDataObject -->",
    "tags": "",
    "description": "\nDescription: Get the object defined in cfg by its name (global variable). Remark(s): * Can by called 2 \nways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): \n_this: CFG \n_this: ARRAY of STRINGS - missionConfigFile classes and an attribute. \nExample: * 1st way of \ncalling: _value = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgDataObject; * 2nd way of \ncalling: _value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject; \nReturns: OBJECT or OBJNULL",
    "example": "[] call BIS_fnc_getCfgDataObject;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_getCfgDataPool": {
    "command": "BIS_fnc_getCfgDataPool",
    "timestamp": "2021-01-23T09:03:06Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_getCfgDataPool -->",
    "docSyntax": "<!-- [] call BIS_fnc_getCfgDataPool -->",
    "tags": "",
    "description": "\nDescription: * Get array of attribute values out of the parent config class. * Attributes need to be in this \nformat: \"_n\", where n is an index number (starting from 0). * If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned. * Max. index supported is 99. * If more then 9 attributes used, 0-9 need to use leading zeroes. CFG \nexample: \nclass Timeline { \n\tclass StageA { \n\t\t_0[] = {2035,7,7,04,30\n\t};\n _1[] = {2035,7,7,06,15}; _2[] = {2035,7,7,18,35}; _3[] = {2035,7,8,09,05}; _4[] = {2035,7,8,13,25}; _5[] = {2035,7,8,17,10}; _6[] = {2035,7,8,21,40}; _7[] = {2035,7,9,19,55}; }; \n};\n Remark(s): * Can by called 2 \nways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): \n_this: CFG \n_this: ARRAY of STRINGS - missionConfigFile classes. \nExample: * 1st way of \ncalling: _array = (configfile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData; _array = (missionconfigfile >> \"Timeline\" >> \"StageA\") call BIS_fnc_getCfgData; * 2nd way of \ncalling: _array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData; \nReturns: ARRAY or nil, if parent class is not found",
    "example": "[] call BIS_fnc_getCfgDataPool;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_getCfgIsClass": {
    "command": "BIS_fnc_getCfgIsClass",
    "timestamp": "2021-01-23T09:22:20Z",
    "version": "1.00",
    "syntax": "<config> call BIS_fnc_getCfgIsClass",
    "docSyntax": "configEntry call BIS_fnc_getCfgIsClass",
    "tags": "",
    "description": "Return true if it is a class. Can by called in two \nways: * first way (general) works for any config * second way is for comfortable working with mission description.ext",
    "example": "_isClass = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call BIS_fnc_getCfgIsClass;",
    "params": "<config> <array>",
    "returns": "boolean | true"
  },
  "BIS_fnc_getCfgSubClasses": {
    "command": "BIS_fnc_getCfgSubClasses",
    "timestamp": "2021-01-23T08:59:14Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_getCfgSubClasses; -->",
    "docSyntax": "<!-- [] call BIS_fnc_getCfgSubClasses; -->",
    "tags": "",
    "description": "\nDescription: Return all child classes of given class. Remark(s): * Can by called 2 \nways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): \n_this: CFG \n_this: ARRAY of STRINGS - missionConfigFile classes and an attribute. \nExample: * 1st way of \ncalling: _subclasses = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call Bis_fnc_getCfgSubClasses; * 2nd way of \ncalling: _subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses; \nReturns: ARRAY (of STRINGS with sub-classes names)",
    "example": "private _allVehHitPoints = (configfile >> \"CfgVehicles\" >> \"C_Hatchback_01_sport_F\" >> \"HitPoints\") call BIS_fnc_getCfgSubClasses;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_getIntersectionsUnderCursor": {
    "command": "BIS_fnc_getIntersectionsUnderCursor",
    "timestamp": "2021-01-23T09:22:01Z",
    "version": "1.00",
    "syntax": "[positionasl, positionasl, ignoreObj1, ignoreObj2, sortMode, maxResults] call BIS_fnc_getIntersectionsUnderCursor",
    "docSyntax": "[begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults] call BIS_fnc_getIntersectionsUnderCursor",
    "tags": "",
    "description": "Returns intersections under cursor. For more information see lineIntersectsSurfaces.",
    "example": "[ eyePos player, aimPos chopper, player, chopper, true ] call BIS_fnc_getIntersectionsUnderCursor;",
    "params": "<array> positionasl positionasl <object> <object> <boolean> <number>",
    "returns": "array | surfacenormal | objnull"
  },
  "BIS_fnc_getName": {
    "command": "BIS_fnc_getName",
    "timestamp": "2021-01-23T09:27:10Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_getName",
    "docSyntax": "[object] call BIS_fnc_getName",
    "tags": "",
    "description": "Returns name of a unit. Name of unit is stored in it is namespace so it can be retrieved later, mainly for when unit dies. Name is stored in the variable 'BIS_fnc_getName_name'.",
    "example": "nowiki[</nowiki>player] call BIS_fnc_getName;",
    "params": "<object>",
    "returns": "string"
  },
  "BIS_fnc_getNetMode": {
    "command": "BIS_fnc_getNetMode",
    "timestamp": "2021-01-23T09:11:10Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_getNetMode",
    "docSyntax": "call BIS_fnc_getNetMode",
    "tags": "",
    "description": "Returns the current net mode as a string.",
    "example": "_netMode = call BIS_fnc_getNetMode;",
    "params": "",
    "returns": "string"
  },
  "BIS_fnc_getObjectBBD": {
    "command": "BIS_fnc_getObjectBBD",
    "timestamp": "2021-01-23T08:56:35Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_getObjectBBD",
    "docSyntax": "[object] call BIS_fnc_getObjectBBD",
    "tags": "",
    "description": "Get object boundingBoxReal max values and store them with setVariable [\"BIS_EGSpectator_objectBBD\", [maxWidth, maxLength, maxHeight]] for later calls.",
    "example": "nowiki[</nowiki>player] call BIS_fnc_getObjectBBD;",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_getParamValue": {
    "command": "BIS_fnc_getParamValue",
    "timestamp": "2021-01-23T09:02:10Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_getParamValue",
    "docSyntax": "paramClass call BIS_fnc_getParamValue",
    "tags": "",
    "description": "Returns the value of mission param given by the class name. This function is global and will return selected param value on any PC including JIP. For backward compatibility it also supports \"param1\" and \"param2\".",
    "example": "_viewDistance = \"ViewDistance\" call BIS_fnc_getParamValue;",
    "params": "<string> <string> <number>",
    "returns": "number"
  },
  "BIS_fnc_getRespawnMarkers": {
    "command": "BIS_fnc_getRespawnMarkers",
    "timestamp": "2021-01-23T09:17:00Z",
    "version": "1.00",
    "syntax": "[<side>,<boolean>] call BIS_fnc_getRespawnMarkers",
    "docSyntax": "[side,vehicleMarkers] call BIS_fnc_getRespawnMarkers",
    "tags": "",
    "description": "Returns all respawn markers for given side.",
    "example": "nowiki[</nowiki>west, false] call BIS_fnc_getRespawnMarkers;",
    "params": "<side> <boolean>",
    "returns": "strings - respawn markers of given side"
  },
  "BIS_fnc_getRespawnPositions": {
    "command": "BIS_fnc_getRespawnPositions",
    "timestamp": "2021-01-23T09:26:25Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_getRespawnPositions",
    "docSyntax": "input call BIS_fnc_getRespawnPositions",
    "tags": "",
    "description": "Return scripted respawn positions available for the given unit.",
    "example": "private _respawnPositions = missionNamespace call BIS_fnc_getRespawnPositions; // can be e.g [bis_o1, [1337, 4200, 0.01], \"myMarker\", myVehicle]",
    "params": "<object>",
    "returns": "array | position | object | string | bis_fnc_addrespawnposition"
  },
  "BIS_fnc_getServerVariable": {
    "command": "BIS_fnc_getServerVariable",
    "timestamp": "2021-01-23T08:58:44Z",
    "version": "1.00",
    "syntax": "[<namespace>, <string>, <anything>] call BIS_fnc_getServerVariable",
    "docSyntax": "[target, varName, default] call BIS_fnc_getServerVariable",
    "tags": "",
    "description": "Fetch a variable saved on server. Used when you want to share variables only to specific clients to prevent large traffic. Must be run in scheduled environment because communication with server takes some time.",
    "example": "[missionNamespace, \"BIS_someVar\", \"defaultValue\"] call BIS_fnc_getServerVariable;",
    "params": "<namespace> <string> <anything>",
    "returns": "anything"
  },
  "BIS_fnc_getTurrets": {
    "command": "BIS_fnc_getTurrets",
    "timestamp": "2021-01-23T08:56:12Z",
    "version": "1.00",
    "syntax": "[<object>, <config>] call BIS_fnc_getTurrets",
    "docSyntax": "[input, outputType] call BIS_fnc_getTurrets",
    "tags": "",
    "description": "Returns vehicle turrets.",
    "example": "[vehicle player] call BIS_fnc_getTurrets;",
    "params": "<object> <config>",
    "returns": "array"
  },
  "BIS_fnc_getUnitByUID": {
    "command": "BIS_fnc_getUnitByUID",
    "timestamp": "2021-01-23T09:25:51Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_getUnitByUID",
    "docSyntax": "playerUID call BIS_fnc_getUnitByUID",
    "tags": "",
    "description": "Returns player-controlled unit (if any) according to the provided player UID.",
    "example": "private _unitPlayedByUID550055 = \"550055\" call BIS_fnc_getUnitByUID;",
    "params": "<string>",
    "returns": "object"
  },
  "BIS_fnc_getVehicleCustomization": {
    "command": "BIS_fnc_getVehicleCustomization",
    "timestamp": "2021-01-23T08:57:28Z",
    "version": "1.00",
    "syntax": "[<object>, <string>] call BIS_fnc_getVehicleCustomization",
    "docSyntax": "[object, class] call BIS_fnc_getVehicleCustomization",
    "tags": "",
    "description": "Return vehicle customization settings.",
    "example": "[vehicle player] call BIS_fnc_getVehicleCustomization;",
    "params": "<object> <string>",
    "returns": "array | texture | animations"
  },
  "BIS_fnc_gridToPos": {
    "command": "BIS_fnc_gridToPos",
    "timestamp": "2021-01-23T09:05:06Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_gridToPos",
    "docSyntax": "gridPosition call BIS_fnc_gridToPos",
    "tags": "",
    "description": "Converts grid coordinates to world position. Featureimportant Correct results outside of the map area are not guaranteed.",
    "example": "_realPosition = \"183221\" call BIS_fnc_gridToPos;",
    "params": "<string>",
    "returns": "array | number"
  },
  "BIS_fnc_groupIndicator": {
    "command": "BIS_fnc_groupIndicator",
    "timestamp": "2021-01-23T09:05:32Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_groupIndicator",
    "docSyntax": "argument call BIS_fnc_groupIndicator",
    "tags": "[EL]",
    "description": "Displays Group Indicator (to the right of the screen in GVIarma31.82)",
    "example": "[] call BIS_fnc_groupIndicator; // starts group indicator",
    "params": "<array>",
    "returns": "nothing"
  },
  "BIS_fnc_guiEffectTiles": {
    "command": "BIS_fnc_guiEffectTiles",
    "timestamp": "2021-01-23T09:12:06Z",
    "version": "1.00",
    "syntax": "[<display>] call BIS_fnc_guiEffectTiles",
    "docSyntax": "[display] call BIS_fnc_guiEffectTiles",
    "tags": "",
    "description": "Used in dialogs to animate background UAV tiles. See notes for a full working example.",
    "example": "[ findDisplay 49] call BIS_fnc_guiEffectTiles ccdisplay 49 - pause menu",
    "params": "<display>",
    "returns": "boolean"
  },
  "BIS_fnc_GUInewsfeed": {
    "command": "BIS_fnc_GUInewsfeed",
    "timestamp": "2021-01-22T22:58:16Z",
    "version": "1.00",
    "syntax": "[<display>] call BIS_fnc_GUInewsfeed",
    "docSyntax": "[display] call BIS_fnc_GUInewsfeed",
    "tags": "",
    "description": "Load newsfeed.",
    "example": "[_display] call BIS_fnc_GUInewsfeed;",
    "params": "<display>",
    "returns": "boolean | true"
  },
  "BIS_fnc_hatchClose": {
    "command": "BIS_fnc_hatchClose",
    "timestamp": "2021-01-22T22:43:03Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_hatchClose",
    "docSyntax": "[] call BIS_fnc_hatchClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_hatchOpen": {
    "command": "BIS_fnc_hatchOpen",
    "timestamp": "2021-01-22T22:48:45Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_hatchOpen",
    "docSyntax": "[] call BIS_fnc_hatchOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_healing": {
    "command": "BIS_fnc_healing",
    "timestamp": "2021-01-23T09:02:08Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_healing",
    "docSyntax": "call BIS_fnc_healing",
    "tags": "",
    "description": "Healing postprocess. Supposed to give healing postprocess effects. FeatureWarningThis function is unfinished, must not and 'cannot' be used!",
    "example": "call BIS_fnc_healing; // do NOT use",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_healthEffects": {
    "command": "BIS_fnc_healthEffects",
    "timestamp": "2021-01-23T09:02:17Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_healthEffects",
    "docSyntax": "call BIS_fnc_healthEffects",
    "tags": "",
    "description": "Effects when player is hit. Parameters are sent by the HandleDamage event handler.",
    "example": "call BIS_fnc_healthEffects;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_HEXtoRGB": {
    "command": "BIS_fnc_HEXtoRGB",
    "timestamp": "2021-01-22T22:55:12Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_HEXtoRGB",
    "docSyntax": "[hexString] call BIS_fnc_HEXtoRGB",
    "tags": "",
    "description": "Convert hexcode color into RGBA array format.",
    "example": "[\"025D00FF\"] call BIS_fnc_HEXtoRGB; // [1,0.843138,0,1]",
    "params": "<string>",
    "returns": "numbers - array of '4' numbers in range 0..1"
  },
  "BIS_fnc_inAngleSector": {
    "command": "BIS_fnc_inAngleSector",
    "timestamp": "2021-01-23T10:06:49Z",
    "version": "1.00",
    "syntax": "[center, centerAngle, <number>, <array>] call BIS_fnc_inAngleSector",
    "docSyntax": "[center, centerAngle, sectorWidth, position] call BIS_fnc_inAngleSector",
    "tags": "",
    "description": "Checks if a position lies within an angle sector.br 700px",
    "example": "[ position player, getDir player, 30, position enemy_tank ] call BIS_fnc_inAngleSector;",
    "params": "<array> <number> <number> <array>",
    "returns": "boolean | true"
  },
  "BIS_fnc_incapacitatedEffect": {
    "command": "BIS_fnc_incapacitatedEffect",
    "timestamp": "2021-01-23T09:55:47Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_incapacitatedEffect",
    "docSyntax": "call BIS_fnc_incapacitatedEffect",
    "tags": "",
    "description": "A draft of incapacitated effects function. FeatureWarningDoes nothing, as the whole code is commented out.",
    "example": "call BIS_fnc_incapacitatedEffect;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_indicateBleeding": {
    "command": "BIS_fnc_indicateBleeding",
    "timestamp": "2021-01-23T10:06:53Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_indicateBleeding;",
    "docSyntax": "call BIS_fnc_indicateBleeding;",
    "tags": "",
    "description": "Shows a PP effect which indicates bleeding.br FeatureimportantDo not use,WIP!",
    "example": "call BIS_fnc_indicateBleeding;",
    "params": "",
    "returns": "nothing | true"
  },
  "BIS_fnc_initDisplay": {
    "command": "BIS_fnc_initDisplay",
    "timestamp": "2021-01-23T10:00:05Z",
    "version": "1.00",
    "syntax": "onload call BIS_fnc_initDisplay",
    "docSyntax": "parameters call BIS_fnc_initDisplay",
    "tags": "",
    "description": "This function is a central part of how BI handles UIs. For a full explanation see this page.",
    "example": "[\"onLoad\", _this, \"RscDisplayAAR\", \"GUI\", true] call (uiNamespace getVariable \"BIS_fnc_initDisplay\");",
    "params": "onload",
    "returns": "nothing"
  },
  "BIS_fnc_initExpo": {
    "command": "BIS_fnc_initExpo",
    "timestamp": "2021-01-23T09:58:32Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_initExpo",
    "docSyntax": "call BIS_fnc_initExpo",
    "tags": "",
    "description": "Disable parts of the main menu during public presentation. Press ControlsCtrlShiftU to toggle the lock.",
    "example": "call BIS_fnc_initExpo;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_initIntelObject": {
    "command": "BIS_fnc_initIntelObject",
    "timestamp": "2021-01-23T10:04:03Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_initIntelObject",
    "docSyntax": "[object] call BIS_fnc_initIntelObject",
    "tags": "",
    "description": "This function sets up an object as intel retrievable by the players by adding a \"Take Intel\" scripted eventhandler called ''\"IntelObjectFound\"'' that can be registered on the intel object. The event provides the parameters [object, caller] where ''object'' is the intel object and ''caller'' the person who picked it up. * A Zeus who has the intel object registered as a curator editable object can also receive feedback that the intel has been picked up if the scripted eventhandler called ''\"intelObjectFound\"'' was registered on the curator module. The event provides the parameters [zeus, caller, object] where ''zeus'' is the curator module, ''caller'' the person who picked it up and ''object'' is the intel object. The usage of these scripted event handlers is shown in 'Example 3'.br",
    "example": "[this] call BIS_fnc_initIntelObject; if (isServer) then { ccDiary picture: this setVariable [ \"RscAttributeDiaryRecord_texture\", \"a3\\structures_f_epc\\Items\\Documents\\Data\\document_secret_01_co.paa\", ccPath to picture true ]; // Diary Title and Description: [ this, \"RscAttributeDiaryRecord\", [\"New Intel\", \"The enemies have a cave troll!\"] ccArray in format [Title, Description] ] call BIS_fnc_setServerVariable; // Diary entry shared with (follows BIS_fnc_MP target rules): this setVariable [\"recipients\", west, true]; // Sides that can interact with the intel object: this setVariable [\"RscAttributeOwners\", [west], true]; };",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_initModules": {
    "command": "BIS_fnc_initModules",
    "timestamp": "2021-01-23T10:07:51Z",
    "version": "1.00",
    "syntax": "[modules] call BIS_fnc_initModules",
    "docSyntax": "[modules] call BIS_fnc_initModules",
    "tags": "",
    "description": "Wait until all modules using the <Arma 3 Module Framework> are initialized.",
    "example": "[module_1,module_2] call BIS_fnc_initModules;",
    "params": "modules",
    "returns": "boolean | true"
  },
  "BIS_fnc_initMultiplayer": {
    "command": "BIS_fnc_initMultiplayer",
    "timestamp": "2021-01-23T09:58:16Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_initMultiplayer",
    "docSyntax": "call BIS_fnc_initMultiplayer",
    "tags": "",
    "description": "Multiplayer mission init, executed automatically upon mission start. Featurearma3This is an internal function.",
    "example": "call BIS_fnc_initMultiplayer;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_initParams": {
    "command": "BIS_fnc_initParams",
    "timestamp": "2021-01-23T10:02:03Z",
    "version": "1.00",
    "syntax": "[modules] call BIS_fnc_initParams;",
    "docSyntax": "[modules] call BIS_fnc_initParams;",
    "tags": "",
    "description": "Initialize mission params and create log in the diary.",
    "example": "call BIS_fnc_initParams;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_initPlayable": {
    "command": "BIS_fnc_initPlayable",
    "timestamp": "2021-01-23T09:53:59Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_initPlayable -->",
    "docSyntax": "<!-- [] call BIS_fnc_initPlayable -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_initPlayable;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_initRespawn": {
    "command": "BIS_fnc_initRespawn",
    "timestamp": "2021-01-23T10:12:23Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_initRespawn -->",
    "docSyntax": "<!-- [] call BIS_fnc_initRespawn -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_initRespawn;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_initRespawnBackpack": {
    "command": "BIS_fnc_initRespawnBackpack",
    "timestamp": "2021-01-23T09:55:59Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_initRespawnBackpack",
    "docSyntax": "call BIS_fnc_initRespawnBackpack",
    "tags": "",
    "description": "Init respawn backpack. Whover \"assembles\" it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.",
    "example": "call BIS_fnc_initRespawnBackpack;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_initVehicleCrew": {
    "command": "BIS_fnc_initVehicleCrew",
    "timestamp": "2021-01-23T09:57:26Z",
    "version": "1.00",
    "syntax": "[<object>, <array>, <boolean>, <boolean>, <boolean>] call BIS_fnc_initVehicleCrew",
    "docSyntax": "[object, params, deleteCrew, anySeat, agents] call BIS_fnc_initVehicleCrew",
    "tags": "",
    "description": "Moves units into vehicle seats. When units don't exist, it will create them in a group of vehicle's side.",
    "example": "[ someVehicle, [player, \"driver\", 0], true, true ] call BIS_fnc_initVehicleCrew;",
    "params": "<object> <array> <boolean> <boolean> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_initVirtualUnit": {
    "command": "BIS_fnc_initVirtualUnit",
    "timestamp": "2021-01-23T09:53:52Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_initVirtualUnit",
    "docSyntax": "[object] call BIS_fnc_initVirtualUnit",
    "tags": "",
    "description": "Initialize virtual unit. Disable it, turn the camera upwards and save its correct side.",
    "example": "someObject call BIS_fnc_initVirtualUnit;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_initWorldScene": {
    "command": "BIS_fnc_initWorldScene",
    "timestamp": "2021-01-23T09:58:12Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_initWorldScene",
    "docSyntax": "[] call BIS_fnc_initWorldScene",
    "tags": "",
    "description": "\nAuthor: Karel Moricky \nDescription: Initialize world scene Parameter(s): ARRAY of CODEs - random code will be selected and called. The code should contain scene init \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_inString": {
    "command": "BIS_fnc_inString",
    "timestamp": "2021-01-23T10:08:35Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, caseSensitive] call BIS_fnc_inString",
    "docSyntax": "[searchTerm, searchText, caseSensitive] call BIS_fnc_inString",
    "tags": "",
    "description": "Find a string within a string.",
    "example": "[\"rabbit\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true",
    "params": "<string> <string> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_instructorFigure": {
    "command": "BIS_fnc_instructorFigure",
    "timestamp": "2021-01-22T22:44:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_instructorFigure -->",
    "docSyntax": "<!-- [] call BIS_fnc_instructorFigure -->",
    "tags": "",
    "description": "pre /******************************************************************************* \nVersion: 0.1 \nName: Instructor Figure \nDESCRIPTION: www. \nPARAMETERS: 1) function called - string, list of \nfunctions: - Init - Destroy 2) parameter for the function For more information see https://wiki.bistudio.com/index.php/A3_InstructorFigure RETURNED \nVALUE: depends on the function called \nTODO: + PlayTopic + Fade out New Intel text + wait for TAB press + use functions for dynamic text - kbTell support - logging + rework data structure (add, remove, search) - ContainerExists function + display only if difficulty is low + disableSerialization + GetTopics should return array, not just debuglog info + deny play more than one topic in a time + Localize + check and fix return values of functions + correct debuglog information - deny addtopic during playing + safe work with BIS_GroupCommunication - dont overwrite user menus + remove INSTRUCTOR FIGURE from BIS_GroupCommunication + PlayTopicRandom - rule exceeding selection of a previous sentence *******************************************************************************/ //Variables",
    "example": "[] call BIS_fnc_instructorFigure;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_interpolateWeather": {
    "command": "BIS_fnc_interpolateWeather",
    "timestamp": "2021-01-23T09:52:46Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_interpolateWeather -->",
    "docSyntax": "<!-- [] call BIS_fnc_interpolateWeather -->",
    "tags": "",
    "description": "\nDescription: Interpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions. Parameter(s): _this select \n0: array - _date1 [_year1,_month1,_day1,_hour1,_min1] _this select \n1: array - _weather1 [_overcast1,_fog1] _this select \n2: array - _date2 [_year2,_month2,_day2,_hour2,_min2] _this select \n3: array - _weather2 [_overcast2,_fog2] _this select \n4: array - _subjectDate [_year,_month,_day,_hour,_min] (\ndefault: current date) \nReturns: [_interpolatedOvercast,_interpolatedFog] \nExample: [_overcast,_fog] = [[2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00]] call BIS_fnc_interpolateWeather;",
    "example": "[] call BIS_fnc_interpolateWeather;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_inventoryExists": {
    "command": "BIS_fnc_inventoryExists",
    "timestamp": "2021-01-23T10:10:47Z",
    "version": "1.00",
    "syntax": "[<<string>space>, name] call BIS_fnc_inventoryExists",
    "docSyntax": "[source, name] call BIS_fnc_inventoryExists",
    "tags": "",
    "description": "Check if loadout with given name exists.",
    "example": "private _hasSuperLoadout = [missionNamespace, \"mySuperLoadout\"] call BIS_fnc_inventoryExists;",
    "params": "<namespace> <string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_isBuildingEnterable": {
    "command": "BIS_fnc_isBuildingEnterable",
    "timestamp": "2021-01-23T10:00:13Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_isBuildingEnterable",
    "docSyntax": "param call BIS_fnc_isBuildingEnterable",
    "tags": "",
    "description": "Check whether a building or structure has available positions defined within model.",
    "example": "[_building] call BIS_fnc_isBuildingEnterable;",
    "params": "<object> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_isCampaign": {
    "command": "BIS_fnc_isCampaign",
    "timestamp": "2021-01-23T09:59:20Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_isCampaign",
    "docSyntax": "[] call BIS_fnc_isCampaign",
    "tags": "",
    "description": "Checks to see if a mission is being run in a campaign.",
    "example": "[] call BIS_fnc_isCampaign;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_isDebugConsoleAllowed": {
    "command": "BIS_fnc_isDebugConsoleAllowed",
    "timestamp": "2021-01-23T09:55:57Z",
    "version": "1.00",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Returns true if debug console is allowed in current context",
    "example": "call BIS_fnc_isDebugConsoleAllowed;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_isDemo": {
    "command": "BIS_fnc_isDemo",
    "timestamp": "2021-01-23T09:56:04Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_isDemo",
    "docSyntax": "call BIS_fnc_isDemo",
    "tags": "",
    "description": "Returns true when game version is demo.",
    "example": "_isDemo = call BIS_fnc_isDemo;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_isEqualVector": {
    "command": "BIS_fnc_isEqualVector",
    "timestamp": "2021-01-23T10:07:31Z",
    "version": "1.00",
    "syntax": "[<array>, <array>, <number>] call BIS_fnc_isEqualVector",
    "docSyntax": "[vector1, vector2, tolerance] call BIS_fnc_isEqualVector",
    "tags": "",
    "description": "Checks whether two vectors are equal with given tolerance.",
    "example": "nowiki[</nowiki>[1,1,1],[2,2,2],1] call BIS_fnc_isEqualVector; // Returns true",
    "params": "<array> <array> <number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_isInsideArea": {
    "command": "BIS_fnc_isInsideArea",
    "timestamp": "2021-01-23T10:08:56Z",
    "version": "1.00",
    "syntax": "[<array>, <array>, <array> ] call BIS_fnc_isInsideArea",
    "docSyntax": "[center, size, position ] call BIS_fnc_isInsideArea",
    "tags": "",
    "description": "Detects whether a position is within a square area of given size about center.",
    "example": "// Check an area, centered on the player that is 10m wide and 10m tall _size = [5, 5]; _checkPos = getPos player; _inArea = [_checkPos, _size, _checkPos] call BIS_fnc_isInsideArea;",
    "params": "<array> <array> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_isInZoom": {
    "command": "BIS_fnc_isInZoom",
    "timestamp": "2021-01-23T10:05:15Z",
    "version": "1.00",
    "syntax": "[<number>, <number>] call BIS_fnc_isInZoom",
    "docSyntax": "[min, max] call BIS_fnc_isInZoom",
    "tags": "",
    "description": "Checks if map zoom level is in between given interval.",
    "example": "if ([0.001, 0.02] call BIS_fnc_isInZoom) then { hint \"Zoom level is in between 0.001 and 0.02\"; };",
    "params": "<number> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_isLoading": {
    "command": "BIS_fnc_isLoading",
    "timestamp": "2021-01-23T10:12:28Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_isLoading",
    "docSyntax": "call BIS_fnc_isLoading",
    "tags": "",
    "description": "Check if a loading screen is opened.",
    "example": "_isLoading = call BIS_fnc_isLoading;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_isUnitVirtual": {
    "command": "BIS_fnc_isUnitVirtual",
    "timestamp": "2021-01-23T09:57:20Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_isUnitVirtual",
    "docSyntax": "[object] call BIS_fnc_isUnitVirtual",
    "tags": "",
    "description": "Return if unit is virtual (used for example for Zeus players).",
    "example": "_isVirtual = someObject call BIS_fnc_isUnitVirtual;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_keyCode": {
    "command": "BIS_fnc_keyCode",
    "timestamp": "2021-01-23T10:03:13Z",
    "version": "1.00",
    "syntax": "input call BIS_fnc_keyCode",
    "docSyntax": "input call BIS_fnc_keyCode",
    "tags": "",
    "description": "Returns DIK code of a given key.",
    "example": "13 call BIS_fnc_keyCode; // Returns \"EQUALS\"",
    "params": "key",
    "returns": "string | number | array"
  },
  "BIS_fnc_keyHold": {
    "command": "BIS_fnc_keyHold",
    "timestamp": "2021-01-23T10:07:17Z",
    "version": "1.00",
    "syntax": "[<string>, <number>, <code>, <array>, <boolean>] spawn BIS_fnc_keyHold",
    "docSyntax": "[description, duration, condition, arguments, loaded] spawn BIS_fnc_keyHold",
    "tags": "[EL]",
    "description": "Allows for hold button interactions. Hold action is started by pressing the space bar.",
    "example": "[\"Hold that key!\",2,{alive player}] spawn BIS_fnc_keyHold;",
    "params": "<string> <number> <code> <array> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_lerp": {
    "command": "BIS_fnc_lerp",
    "timestamp": "2021-01-23T09:52:28Z",
    "version": "1.00",
    "syntax": "[<number>,<number>,<number>] call BIS_fnc_lerp",
    "docSyntax": "[currentValue,targetValue,alpha] call BIS_fnc_lerp",
    "tags": "",
    "description": "Linear floating point interpolation. WikipediaLinear_interpolationLinear Interpolation (Wikipedia)",
    "example": "[1,10,0.5] call BIS_fnc_lerp; // Returns 5.5",
    "params": "<number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_limitAmmunition": {
    "command": "BIS_fnc_limitAmmunition",
    "timestamp": "2021-01-23T10:07:11Z",
    "version": "1.00",
    "syntax": "[<object>,<array>,<array>,BackpackMags] call BIS_fnc_limitAmmunition",
    "docSyntax": "[unit,uniformMags,vestMags,BackpackMags] call BIS_fnc_limitAmmunition",
    "tags": "",
    "description": "Limits the number of magazines carried by individual unit. Each container (uniform, vest and backpack) can be limited separately or left untouched. The function limits the number of magazines of each unique ammo category in respective container. Items like First Aid Kit or Mine Detector are not affected by the functionbrbrSet the minimum and maximum values in an array, for example [0.5,1] will set the magazine count anywhere between 50-100% of default count.",
    "example": "player call BIS_fnc_limitAmmunition;",
    "params": "<object> <array> <array> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_limitItems": {
    "command": "BIS_fnc_limitItems",
    "timestamp": "2021-01-23T09:57:17Z",
    "version": "1.00",
    "syntax": "[<object>,<number>,<number>,<number>,<number>,<number>,<number>,<number>] call BIS_fnc_limitItems",
    "docSyntax": "[unit,chanceNVG,chanceBino,chanceGPS,chanceMap,chanceRadio,chanceCompass,chanceWatch] call BIS_fnc_limitItems",
    "tags": "",
    "description": "Keeps or removes unit's items (including NVGs and binocular/designator) based on probability user sets.",
    "example": "player call BIS_fnc_limitItems;",
    "params": "<object> <number> <number> <number> <number> <number> <number> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_limitSupport": {
    "command": "BIS_fnc_limitSupport",
    "timestamp": "2021-01-23T10:05:00Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <number>] call BIS_fnc_limitSupport",
    "docSyntax": "[module, supportType, quantity] call BIS_fnc_limitSupport",
    "tags": "",
    "description": "Limits support runs during a mission.",
    "example": "[reqModule, \"Transport\", -1] call BIS_fnc_limitSupport;",
    "params": "<object> <string> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_limitWeaponItems": {
    "command": "BIS_fnc_limitWeaponItems",
    "timestamp": "2021-01-23T09:51:59Z",
    "version": "1.00",
    "syntax": "[<object>,<number>,<number>,<number>,<number>,<number>] call BIS_fnc_limitWeaponItems",
    "docSyntax": "[unit,mode,chanceOptics,chanceAttach,chanceMuzzle,chanceUnderbarrel] call BIS_fnc_limitWeaponItems",
    "tags": "",
    "description": "Keeps or remove unit's weapon attachments based on probability user sets. Apply for primary, secondary or handgun weapon separately.",
    "example": "player call BIS_fnc_limitWeaponItems;",
    "params": "<object> <number> <number> <number> <number> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_liveFeed": {
    "command": "BIS_fnc_liveFeed",
    "timestamp": "2021-01-23T09:53:49Z",
    "version": "1.00",
    "syntax": "[<object>, <object>, local, <number>] call BIS_fnc_liveFeed",
    "docSyntax": "[source, target, receiver, effect] call BIS_fnc_liveFeed",
    "tags": "",
    "description": "Display a live feed. codeccLive feed \ndisplay: private _UAVFeedDisplay = uiNamespace getVariable \"BIS_fnc_PIP_RscPIP\";</code>",
    "example": "[myUAV, player, player, 2] call BIS_fnc_liveFeed;",
    "params": "<object> <object> local <number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_liveFeedEffects": {
    "command": "BIS_fnc_liveFeedEffects",
    "timestamp": "2021-01-23T10:05:38Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_liveFeedEffects",
    "docSyntax": "effect call BIS_fnc_liveFeedEffects",
    "tags": "",
    "description": "Add effect to the current live feed.",
    "example": "1 call BIS_fnc_liveFeedEffects;",
    "params": "<number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_liveFeedModuleEffects": {
    "command": "BIS_fnc_liveFeedModuleEffects",
    "timestamp": "2021-01-23T09:52:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_liveFeedModuleEffects -->",
    "docSyntax": "<!-- [] call BIS_fnc_liveFeedModuleEffects -->",
    "tags": "",
    "description": "\nDescription: Add effects to a live feed via a module. \nParameters: \n_this: OBJECT - Live Feed - Effects module */ // They ran me on a dedicated server. I stopped their function.",
    "example": "[] call BIS_fnc_liveFeedModuleEffects;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_liveFeedModuleInit": {
    "command": "BIS_fnc_liveFeedModuleInit",
    "timestamp": "2021-01-23T10:08:01Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_liveFeedModuleInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_liveFeedModuleInit -->",
    "tags": "",
    "description": "\nDescription: Display a live feed via a module. \nParameters: \n_this: OBJECT - Live Feed - Init module */ // Need not be run on dedicated servers",
    "example": "[] call BIS_fnc_liveFeedModuleInit;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_liveFeedModuleSetSource": {
    "command": "BIS_fnc_liveFeedModuleSetSource",
    "timestamp": "2021-01-23T09:53:10Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_liveFeedModuleSetSource -->",
    "docSyntax": "<!-- [] call BIS_fnc_liveFeedModuleSetSource -->",
    "tags": "",
    "description": "\nDescription: Set a live feed's source via a module. \nParameters: \n_this: OBJECT - Live Feed - Set Source module */ // <insert smart comment about dedicated servers he",
    "example": "[] call BIS_fnc_liveFeedModuleSetSource;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_liveFeedModuleSetTarget": {
    "command": "BIS_fnc_liveFeedModuleSetTarget",
    "timestamp": "2021-01-23T10:04:21Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_liveFeedModuleSetTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_liveFeedModuleSetTarget -->",
    "tags": "",
    "description": "\nDescription: Set a live feed's target via a module. \nParameters: \n_this: OBJECT - Live Feed - Set Target module */ // On dedicated servers, player is not you",
    "example": "[] call BIS_fnc_liveFeedModuleSetTarget;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_liveFeedSetSource": {
    "command": "BIS_fnc_liveFeedSetSource",
    "timestamp": "2021-01-23T10:06:18Z",
    "version": "1.00",
    "syntax": "source call BIS_fnc_liveFeedSetSource",
    "docSyntax": "source call BIS_fnc_liveFeedSetSource",
    "tags": "",
    "description": "Set the source of the current live feed.",
    "example": "[player, [0, 0.25, 1.6]] call BIS_fnc_liveFeedSetSource;",
    "params": "in",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_liveFeedSetTarget": {
    "command": "BIS_fnc_liveFeedSetTarget",
    "timestamp": "2021-01-23T09:53:51Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_liveFeedSetTarget",
    "docSyntax": "target call BIS_fnc_liveFeedSetTarget",
    "tags": "",
    "description": "Set the target of the current live feed.",
    "example": "player call BIS_fnc_liveFeedSetTarget;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_liveFeedTerminate": {
    "command": "BIS_fnc_liveFeedTerminate",
    "timestamp": "2021-01-23T10:07:51Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_liveFeedTerminate",
    "docSyntax": "call BIS_fnc_liveFeedTerminate",
    "tags": "",
    "description": "Terminate a live feed.",
    "example": "call BIS_fnc_liveFeedTerminate;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_loadClass": {
    "command": "BIS_fnc_loadClass",
    "timestamp": "2021-01-23T09:52:19Z",
    "version": "1.00",
    "syntax": "[input, defaultValue] call BIS_fnc_loadClass",
    "docSyntax": "[input, defaultValue] call BIS_fnc_loadClass",
    "tags": "",
    "description": "Searches for class in mission, campaign and then in global config file.",
    "example": "[ [\"bin\\config.bin\"], configFile >> \"Cfg3DEN\" >> \"Camera\"] call BIS_fnc_loadClass",
    "params": "strings config",
    "returns": "config"
  },
  "BIS_fnc_loadEntry": {
    "command": "BIS_fnc_loadEntry",
    "timestamp": "2021-01-23T09:53:07Z",
    "version": "1.00",
    "syntax": "[strings,<config>] call BIS_fnc_loadEntry",
    "docSyntax": "[path,defaultConfig] call BIS_fnc_loadEntry",
    "tags": "",
    "description": "Searches for config entry in mission, campaign and then in global config file.",
    "example": "[ [\"CfgWeapons\",\"hgun_Rook40_snds_F\",\"bullet3\"], configfile >> \"CfgWeapons\" >> \"hgun_Rook40_snds_F\" >> \"baseWeapon\" ] call BIS_fnc_loadEntry;",
    "params": "strings <config>",
    "returns": "array | number | string"
  },
  "BIS_fnc_loadFunctions": {
    "command": "BIS_fnc_loadFunctions",
    "timestamp": "2021-01-23T09:56:35Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, strings, <boolean>] call BIS_fnc_loadFunctions",
    "docSyntax": "[fileDirectory, prefix, nameVars, global] call BIS_fnc_loadFunctions",
    "tags": "",
    "description": "Compile scripts and save them into globally available functions. Defines _fnc_scriptName variable.",
    "example": "[\"scripts\\myDir\\\", \"MY_fnc_\", [\"script1\", \"script2\"], true] call BIS_fnc_loadFunctions;",
    "params": "<string> <string> strings <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_loadVehicle": {
    "command": "BIS_fnc_loadVehicle",
    "timestamp": "2021-01-23T10:04:46Z",
    "version": "1.00",
    "syntax": "[<object>,<array>] call BIS_fnc_loadVehicle",
    "docSyntax": "[object,target] call BIS_fnc_loadVehicle",
    "tags": "",
    "description": "Load vehicle look saved with BIS_fnc_saveVehicle.",
    "example": "[BIS_tank, [missionNamespace, \"BIS_someTankSave\"] ] call BIS_fnc_loadVehicle;",
    "params": "<object> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_localize": {
    "command": "BIS_fnc_localize",
    "timestamp": "2021-01-23T09:54:22Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_localize",
    "docSyntax": "localizationString call BIS_fnc_localize",
    "tags": "",
    "description": "Checks if passed string is localization key and if so, return the localized text. Else, returns the passed string itself.",
    "example": "sqf // assuming the stringtable contains a key \"STR_someString\" with the value \"Hello world\" \"STR_someString\" call BIS_fnc_localize; // returns \"Hello world\" // assuming the stringtable does not contain a key \"STR_anotherString\" \"STR_anotherString\" call BIS_fnc_localize; // returns \"STR_anotherString\" </sqf>",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_locationDescription": {
    "command": "BIS_fnc_locationDescription",
    "timestamp": "2021-01-23T09:59:50Z",
    "version": "1.00",
    "syntax": "<position> call BIS_fnc_locationDescription",
    "docSyntax": "position call BIS_fnc_locationDescription",
    "tags": "",
    "description": "Return location description (e.g. \"NE of Agia Marina\")",
    "example": "hint format [\"Player's position: %1\", player call BIS_fnc_locationDescription];",
    "params": "<position>",
    "returns": "string"
  },
  "BIS_fnc_lockedDoorNoHandleOpen": {
    "command": "BIS_fnc_lockedDoorNoHandleOpen",
    "timestamp": "2021-01-22T22:41:03Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_lockedDoorNoHandleOpen",
    "docSyntax": "[] call BIS_fnc_lockedDoorNoHandleOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_lockedDoorOpen": {
    "command": "BIS_fnc_lockedDoorOpen",
    "timestamp": "2021-01-22T22:44:35Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_lockedDoorOpen",
    "docSyntax": "[] call BIS_fnc_lockedDoorOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_locWeaponInfo": {
    "command": "BIS_fnc_locWeaponInfo",
    "timestamp": "2021-01-23T09:52:40Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_locWeaponInfo",
    "docSyntax": "call BIS_fnc_locWeaponInfo",
    "tags": "",
    "description": "Shows a utility tool checking length of weapon info texts.br500px",
    "example": "call BIS_fnc_locWeaponInfo;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_logFormat": {
    "command": "BIS_fnc_logFormat",
    "timestamp": "2021-01-23T09:52:57Z",
    "version": "1.00",
    "syntax": "[text, parameters] call BIS_fnc_logFormat",
    "docSyntax": "[text, parameters] call BIS_fnc_logFormat",
    "tags": "",
    "description": "Display debug message. FeatureInformative'allowFunctionsLog' has to be set to '1' in the <Description.ext> for this function to work.",
    "example": "[\"My logged name: %1, My position: %2\", name player, getPos player] call BIS_fnc_logFormat; // RPT output: cc12:34:56 \"BIS_fnc_log: [BIS_fnc_debugConsoleExec] My logged name: Miller, My position: [4866.73,21947.9,0.00143433]\"",
    "params": "<string> <anything>",
    "returns": "boolean | true"
  },
  "BIS_fnc_logFormatServer": {
    "command": "BIS_fnc_logFormatServer",
    "timestamp": "2021-01-23T09:53:55Z",
    "version": "1.00",
    "syntax": "[<string>, argument1, argument2, ...] call BIS_fnc_logFormatServer",
    "docSyntax": "[text, argument1, argument2, ...] call BIS_fnc_logFormatServer",
    "tags": "",
    "description": "Logs (using playerUID, _fnc_scriptName, provided text) to 'server'nowiki's .RPT. In singleplayer, allowFunctionsLog must be enabled.",
    "example": "private _currentFPS = diag_fps; if (_currentFPS < 10) then { [\"Player %1 has performance issues (%2 FPS)\", name player, _currentFPS] call BIS_fnc_logFormatServer; };",
    "params": "<string> <anything>",
    "returns": "boolean | true"
  },
  "BIS_fnc_magazinesEntityType": {
    "command": "BIS_fnc_magazinesEntityType",
    "timestamp": "2021-01-23T09:59:00Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_magazinesEntityType",
    "docSyntax": "class call BIS_fnc_magazinesEntityType",
    "tags": "",
    "description": "Return object's magazines as defined in config. Scans also turrets and pylons.",
    "example": "\"O_MBT_04_cannon_F\" call BIS_fnc_magazinesEntityType; //Returns [\"20Rnd_125mm_APFSDS_T_Green\",\"12Rnd_125mm_HEAT_T_Green\",\"12Rnd_125mm_HE_T_Green\",\"1000Rnd_762x51_Belt_Green\",\"1000Rnd_762x51_Belt_Green\",\"500Rnd_127x99_mag_Tracer_Yellow\",\"SmokeLauncherMag\"]",
    "params": "<string>",
    "returns": "strings"
  },
  "BIS_fnc_mapAnimAdd": {
    "command": "BIS_fnc_mapAnimAdd",
    "timestamp": "2021-01-23T10:10:07Z",
    "version": "1.00",
    "syntax": "[<number>, <number>, <position>, <number>, <number>, <number>, <position>] call BIS_fnc_mapAnimAdd",
    "docSyntax": "[duration, toZoom, toPosition, interpModeZoom, interpModePosition, fromZoom, fromPosition] call BIS_fnc_mapAnimAdd",
    "tags": "[AL] [EL]",
    "description": "Similar to mapAnimAdd, yet it provides additional parameters to allow for a non-linear zoom and various position interpolation modes.",
    "example": "openMap true; // The function won't work if the map is not open [2.0, 0.05, getPos player] call BIS_fnc_mapAnimAdd;",
    "params": "<number> <number> <position> <number> <number> <number> <position>",
    "returns": "nothing"
  },
  "BIS_fnc_mapAnimClear": {
    "command": "BIS_fnc_mapAnimClear",
    "timestamp": "2021-01-23T10:00:58Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_mapAnimClear",
    "docSyntax": "[] call BIS_fnc_mapAnimClear",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Same as mapAnimClear \nParameters: Nothing \nReturns: Nothing \nExamples: [] call BIS_fnc_mapAnimClear;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_mapAnimDone": {
    "command": "BIS_fnc_mapAnimDone",
    "timestamp": "2021-01-23T09:57:54Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_mapAnimDone",
    "docSyntax": "[] call BIS_fnc_mapAnimDone",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Same as mapAnimAdd but with possibility for non linear zoom and position interpolation modes \nParameters: Nothing \nReturns: Bool - False if map animation is in progress, true if not \nExamples: [] call BIS_fnc_mapAnimDone;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_mapSize": {
    "command": "BIS_fnc_mapSize",
    "timestamp": "2021-01-23T09:58:14Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_mapSize",
    "docSyntax": "terrainName call BIS_fnc_mapSize",
    "tags": "",
    "description": "Returns map size from config. Do not confuse with worldSize. The engine command calculates the map size and doesn't read it from config.",
    "example": "\"Altis\" call BIS_fnc_mapSize;",
    "params": "<string>",
    "returns": "number"
  },
  "BIS_fnc_markerToTrigger": {
    "command": "BIS_fnc_markerToTrigger",
    "timestamp": "2021-01-23T10:03:02Z",
    "version": "1.00",
    "syntax": "[<string>, <object>'', <boolean>''] call BIS_fnc_markerToTrigger",
    "docSyntax": "[markerName, trigger'', localChange''] call BIS_fnc_markerToTrigger",
    "tags": "",
    "description": "Makes an existing or new marker cover a trigger area.",
    "example": "_createdMarker = [\"marker1\", myTrigger] call BIS_fnc_markerToTrigger;",
    "params": "<string> <object> <boolean>",
    "returns": "string"
  },
  "BIS_fnc_markWaypoints": {
    "command": "BIS_fnc_markWaypoints",
    "timestamp": "2021-01-23T09:54:25Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_markWaypoints -->",
    "docSyntax": "<!-- [] call BIS_fnc_markWaypoints -->",
    "tags": "",
    "description": "\nDescription: Creates a marker on each uncompleted waypoint and marks it checked after completing that WP. \nNote: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality Parameter(s): _this select \n0: OBJECT - unit who will have its waypoints marked _this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint, %1 is used for WP number (default \"\") _this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints, %1 is used for WP number (default [\"%1\", \"%1\"]) _this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"]) _this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"]) _this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75]) \nReturns: NOTHING",
    "example": "[] call BIS_fnc_markWaypoints;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_missileLaunchPositionFix": {
    "command": "BIS_fnc_missileLaunchPositionFix",
    "timestamp": "2021-01-23T09:53:29Z",
    "version": "1.00",
    "syntax": "[<object>, <object>, <object>, <object>] call BIS_fnc_missileLaunchPositionFix",
    "docSyntax": "[vehicle, projectile, selection, projectileType] call BIS_fnc_missileLaunchPositionFix",
    "tags": "",
    "description": "Workaround fix for ATGM/SAM launch positions",
    "example": "[_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix;",
    "params": "<object> <object> <object> <object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_missionConversations": {
    "command": "BIS_fnc_missionConversations",
    "timestamp": "2021-01-23T09:57:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_missionConversations -->",
    "docSyntax": "<!-- [] call BIS_fnc_missionConversations -->",
    "tags": "",
    "description": "\nDescription: Header function of local mission conversations Parameter(s): \n0: STRING - unique mode 1 (Optional): ANY - additional params \nReturns: BOOL",
    "example": "[] call BIS_fnc_missionConversations;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_missionConversationsLocal": {
    "command": "BIS_fnc_missionConversationsLocal",
    "timestamp": "2021-01-23T09:53:26Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_missionConversationsLocal",
    "docSyntax": "call BIS_fnc_missionConversationsLocal",
    "tags": "",
    "description": "Feature Informative This function is blank and does nothing.",
    "example": "call BIS_fnc_missionConversationsLocal",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_missionFlow": {
    "command": "BIS_fnc_missionFlow",
    "timestamp": "2021-01-23T09:52:51Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_missionFlow",
    "docSyntax": "call BIS_fnc_missionFlow",
    "tags": "",
    "description": "This function is automatically run in post-init by a CfgFunctions declaration. If the mission contains a missionFlow.fsm file, it will be loaded, otherwise an empty, default one will be used.",
    "example": "call BIS_fnc_missionFlow;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_missionHandlers": {
    "command": "BIS_fnc_missionHandlers",
    "timestamp": "2021-01-23T09:53:16Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_missionHandlers -->",
    "docSyntax": "<!-- [] call BIS_fnc_missionHandlers -->",
    "tags": "",
    "description": "pre#define VAR_RELOADS (missionname + \"_reloads_\" + str ismultiplayer) //--- Mission end type and rating",
    "example": "[] call BIS_fnc_missionHandlers;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_missionRespawnType": {
    "command": "BIS_fnc_missionRespawnType",
    "timestamp": "2021-01-23T09:58:10Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_missionRespawnType",
    "docSyntax": "type call BIS_fnc_missionRespawnType",
    "tags": "",
    "description": "Return respawn type defined in <Description.ext>. Can return as Number (e.g 1) or String (e.g \"BIRD\").",
    "example": "_respawnAsNumber = 0 call BIS_fnc_missionRespawnType;",
    "params": "<number>",
    "returns": "number | string"
  },
  "BIS_fnc_missionTasks": {
    "command": "BIS_fnc_missionTasks",
    "timestamp": "2021-01-23T10:07:49Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_missionTasks -->",
    "docSyntax": "<!-- [] call BIS_fnc_missionTasks -->",
    "tags": "",
    "description": "\nDescription: Header function of local mission tasks. Automatically declares following \nvariables: \n_taskID: STRING \n_taskState: STRING \n_taskExists: BOOL Parameter(s): \n0: STRING - unique mode 1 (Optional): ANY - additional params 2 (Optional): CODE - specific task function (\ndefault: \"BIS_fnc_missionTasksLocal\") \nReturns: BOOL",
    "example": "[] call BIS_fnc_missionTasks;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_missionTasksLocal": {
    "command": "BIS_fnc_missionTasksLocal",
    "timestamp": "2021-01-23T10:03:16Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_missionTasksLocal",
    "docSyntax": "call BIS_fnc_missionTasksLocal",
    "tags": "",
    "description": "Feature Informative This function is blank and does nothing.",
    "example": "call BIS_fnc_missionTasksLocal;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_missionTimeLeft": {
    "command": "BIS_fnc_missionTimeLeft",
    "timestamp": "2021-01-23T09:55:48Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_missionTimeLeft",
    "docSyntax": "call BIS_fnc_missionTimeLeft",
    "tags": "",
    "description": "Returns time in seconds until the mission end. Remaining time can be set using estimatedTimeLeft command or using BIS_fnc_countdown.",
    "example": "call BIS_fnc_missionTimeLeft;",
    "params": "",
    "returns": "number"
  },
  "BIS_fnc_moduleAI": {
    "command": "BIS_fnc_moduleAI",
    "timestamp": "2021-01-23T10:05:35Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleAI -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleAI -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleAI;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleAmmo": {
    "command": "BIS_fnc_moduleAmmo",
    "timestamp": "2021-01-23T10:05:23Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleAmmo -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleAmmo -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleAmmo;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleAnimals": {
    "command": "BIS_fnc_moduleAnimals",
    "timestamp": "2021-01-23T10:11:35Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleAnimals -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleAnimals -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleAnimals;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleArsenal": {
    "command": "BIS_fnc_moduleArsenal",
    "timestamp": "2021-01-23T09:58:42Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleArsenal -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleArsenal -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleArsenal;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleBleedTickets": {
    "command": "BIS_fnc_moduleBleedTickets",
    "timestamp": "2021-01-23T10:10:04Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleBleedTickets -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleBleedTickets -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleBleedTickets;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleBootcampStage": {
    "command": "BIS_fnc_moduleBootcampStage",
    "timestamp": "2021-01-23T09:55:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleBootcampStage -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleBootcampStage -->",
    "tags": "",
    "description": "\nDescription: Change the current Stage in Bootcamp MP Guided Mode Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules \nReturns: NONE */ // Parameters",
    "example": "[] call BIS_fnc_moduleBootcampStage;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCAS": {
    "command": "BIS_fnc_moduleCAS",
    "timestamp": "2021-01-23T10:06:47Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCAS -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCAS -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCAS;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleChat": {
    "command": "BIS_fnc_moduleChat",
    "timestamp": "2021-01-23T10:07:12Z",
    "version": "1.00",
    "syntax": "[<object>, objects, <boolean>] call BIS_fnc_moduleChat",
    "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleChat",
    "tags": "[EL]",
    "description": "Make a list of units use any *chat command (groupChat, vehicleChat, sideChat, commandChat, globalChat).",
    "example": "myLogic setVariable [\"Channel\", \"2\"]; myLogic setVariable [\"Text\", \"Hello everyone, this is side chat!\"]; [myLogic, [player], true] call BIS_fnc_moduleChat;",
    "params": "<object> objects <boolean>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_moduleCombatGetIn": {
    "command": "BIS_fnc_moduleCombatGetIn",
    "timestamp": "2021-01-23T09:58:59Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCombatGetIn -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCombatGetIn -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCombatGetIn;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCountdown": {
    "command": "BIS_fnc_moduleCountdown",
    "timestamp": "2021-01-23T10:08:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCountdown -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCountdown -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCountdown;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCoverMap": {
    "command": "BIS_fnc_moduleCoverMap",
    "timestamp": "2021-01-23T10:00:12Z",
    "version": "1.00",
    "syntax": "[<object>,<array>,<boolean>] call BIS_fnc_moduleCoverMap",
    "docSyntax": "[centerUnit,units,init] call BIS_fnc_moduleCoverMap",
    "tags": "[EG]",
    "description": "Covers the map except for a defined area. This function was designed to be used by the Modules framework, but it can also be used without the module. The effect does not move with the centerObject.brbrIt is essential for the function to work that 'centerObject' has the variable 'objectArea' defined.br iccenterObject 500px",
    "example": "centerObject setVariable [\"objectArea\",[1000, 1000, 0, false, 0]]; [_centerObject,[],truenoWiki]</noWiki> call BIS_fnc_moduleCoverMap; // Covers the whole map except an area of 1000 m by 1000 m, can be used to dynamically change size of the area during mission",
    "params": "<object> <array> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleCreateDiaryRecord": {
    "command": "BIS_fnc_moduleCreateDiaryRecord",
    "timestamp": "2021-01-23T09:55:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCreateDiaryRecord -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCreateDiaryRecord -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCreateDiaryRecord;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCreateProjectile": {
    "command": "BIS_fnc_moduleCreateProjectile",
    "timestamp": "2021-01-23T09:54:02Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCreateProjectile -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCreateProjectile -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCreateProjectile;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCurator": {
    "command": "BIS_fnc_moduleCurator",
    "timestamp": "2021-01-23T09:58:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCurator -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCurator -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCurator;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddAddons": {
    "command": "BIS_fnc_moduleCuratorAddAddons",
    "timestamp": "2021-01-23T09:53:44Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddAddons -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddAddons -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddAddons;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddCameraArea": {
    "command": "BIS_fnc_moduleCuratorAddCameraArea",
    "timestamp": "2021-01-23T09:56:12Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddCameraArea -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddCameraArea -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddCameraArea;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddEditableObjects": {
    "command": "BIS_fnc_moduleCuratorAddEditableObjects",
    "timestamp": "2021-01-23T09:55:39Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditableObjects -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditableObjects -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddEditableObjects;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddEditingArea": {
    "command": "BIS_fnc_moduleCuratorAddEditingArea",
    "timestamp": "2021-01-23T09:56:45Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditingArea -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditingArea -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddEditingArea;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddEditingAreaPlayers": {
    "command": "BIS_fnc_moduleCuratorAddEditingAreaPlayers",
    "timestamp": "2021-01-23T10:03:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditingAreaPlayers -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddEditingAreaPlayers -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddEditingAreaPlayers;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddIcon": {
    "command": "BIS_fnc_moduleCuratorAddIcon",
    "timestamp": "2021-01-23T09:54:52Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddIcon -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddIcon -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddIcon;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorAddPoints": {
    "command": "BIS_fnc_moduleCuratorAddPoints",
    "timestamp": "2021-01-23T10:10:35Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorAddPoints -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorAddPoints -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorAddPoints;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetAttributes": {
    "command": "BIS_fnc_moduleCuratorSetAttributes",
    "timestamp": "2021-01-23T09:54:48Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetAttributes -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetAttributes -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetAttributes;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetCamera": {
    "command": "BIS_fnc_moduleCuratorSetCamera",
    "timestamp": "2021-01-23T09:53:56Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetCamera -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetCamera -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetCamera;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetCoefs": {
    "command": "BIS_fnc_moduleCuratorSetCoefs",
    "timestamp": "2021-01-23T09:56:05Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetCoefs -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetCoefs -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetCoefs;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetCostsDefault": {
    "command": "BIS_fnc_moduleCuratorSetCostsDefault",
    "timestamp": "2021-01-23T10:06:41Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsDefault -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsDefault -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetCostsDefault;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetCostsSide": {
    "command": "BIS_fnc_moduleCuratorSetCostsSide",
    "timestamp": "2021-01-23T09:53:52Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsSide -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsSide -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetCostsSide;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetCostsVehicleClass": {
    "command": "BIS_fnc_moduleCuratorSetCostsVehicleClass",
    "timestamp": "2021-01-23T10:11:28Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsVehicleClass -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetCostsVehicleClass -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetCostsVehicleClass;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetEditingAreaType": {
    "command": "BIS_fnc_moduleCuratorSetEditingAreaType",
    "timestamp": "2021-01-23T09:51:59Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetEditingAreaType -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetEditingAreaType -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetEditingAreaType;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCuratorSetObjectCost": {
    "command": "BIS_fnc_moduleCuratorSetObjectCost",
    "timestamp": "2021-01-23T09:52:20Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleCuratorSetObjectCost -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleCuratorSetObjectCost -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleCuratorSetObjectCost;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleDamage": {
    "command": "BIS_fnc_moduleDamage",
    "timestamp": "2021-01-23T09:54:46Z",
    "version": "1.00",
    "syntax": "[<object>, objects, <boolean>] call BIS_fnc_moduleDamage",
    "docSyntax": "[logic, vehicles, isActivated] call BIS_fnc_moduleDamage",
    "tags": "",
    "description": "Damage given vehicles. FeatureInformativeRegarding \nlocality: if a hitpoint is defined,brIconlocalArgument32 setHitPointDamage is used. Else,br IconglobalArgument32 setDamage is used.",
    "example": "[myLogic, vehicle player, true] call BIS_fnc_moduleDamage;",
    "params": "<object> objects <boolean>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_moduleDate": {
    "command": "BIS_fnc_moduleDate",
    "timestamp": "2021-01-23T10:10:36Z",
    "version": "1.00",
    "syntax": "[<object>, objNull, <boolean>] call BIS_fnc_moduleDate",
    "docSyntax": "[logic, objNull, activated] call BIS_fnc_moduleDate",
    "tags": "",
    "description": "Used by the Date module.",
    "example": "[logic, objNull, true] call BIS_fnc_moduleDate;",
    "params": "<object> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleDiary": {
    "command": "BIS_fnc_moduleDiary",
    "timestamp": "2021-01-23T10:00:38Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleDiary -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleDiary -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleDiary;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleDoorOpen": {
    "command": "BIS_fnc_moduleDoorOpen",
    "timestamp": "2021-01-23T09:58:07Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleDoorOpen -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleDoorOpen -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleDoorOpen;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleEffectsBubbles": {
    "command": "BIS_fnc_moduleEffectsBubbles",
    "timestamp": "2021-01-23T10:11:44Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_moduleEffectsBubbles",
    "docSyntax": "[module] call BIS_fnc_moduleEffectsBubbles",
    "tags": "",
    "description": "Creates underwater bubble effect on defined place (called usually by BIS_fnc_moduleEffectsEmitterCreator).FeatureInformativeMainly meant to be used by modules available in <Eden Editor>",
    "example": "[BIS_module] call BIS_fnc_moduleEffectsBubbles;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleEffectsEmitterCreator": {
    "command": "BIS_fnc_moduleEffectsEmitterCreator",
    "timestamp": "2021-01-23T09:59:08Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleEffectsEmitterCreator -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleEffectsEmitterCreator -->",
    "tags": "",
    "description": "\nFile: fn_moduleEffectsEmitterCreator.sqf \nDescription: Module function. Creates particle emitters and calls effect function. Parameter(s): _this select 0 (Object) - Module logic. _this select 1 (String) - Function name. _this select 2 (Number) - Optional - Number of emitters. Returned \nvalue: None.",
    "example": "[] call BIS_fnc_moduleEffectsEmitterCreator;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleEffectsFire": {
    "command": "BIS_fnc_moduleEffectsFire",
    "timestamp": "2021-01-23T09:58:13Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_moduleEffectsFire",
    "docSyntax": "[module] call BIS_fnc_moduleEffectsFire",
    "tags": "",
    "description": "Creates fire on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator). FeatureInformativeMainly meant to be used by modules available in <Eden Editor>",
    "example": "[BIS_module] call BIS_fnc_moduleEffectsFire;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleEffectsPlankton": {
    "command": "BIS_fnc_moduleEffectsPlankton",
    "timestamp": "2021-01-23T10:06:55Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_moduleEffectsPlankton",
    "docSyntax": "[module] call BIS_fnc_moduleEffectsPlankton",
    "tags": "",
    "description": "Creates underwater plankton effect around player (called usually by BIS_fnc_moduleEffectsEmitterCreator).FeatureInformativeMainly meant to be used by modules available in <Eden Editor>",
    "example": "[BIS_module] call BIS_fnc_moduleEffectsPlankton;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleEffectsShells": {
    "command": "BIS_fnc_moduleEffectsShells",
    "timestamp": "2021-01-23T10:12:36Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_moduleEffectsShells",
    "docSyntax": "[module] call BIS_fnc_moduleEffectsShells",
    "tags": "",
    "description": "Creates empty ammo cartridges on position of the module logic. FeatureInformativeMainly meant to be used by modules available in <Eden Editor>.",
    "example": "[BIS_module] call BIS_fnc_moduleEffectsShells;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleEffectsSmoke": {
    "command": "BIS_fnc_moduleEffectsSmoke",
    "timestamp": "2021-01-23T10:07:34Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_moduleEffectsSmoke",
    "docSyntax": "[module] call BIS_fnc_moduleEffectsSmoke",
    "tags": "",
    "description": "Creates smoke on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).FeatureInformativeMainly meant to be used by modules available in <Eden Editor>",
    "example": "[BIS_module] call BIS_fnc_moduleEffectsSmoke;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleEndMission": {
    "command": "BIS_fnc_moduleEndMission",
    "timestamp": "2021-01-23T09:54:49Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleEndMission -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleEndMission -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleEndMission;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleExecute": {
    "command": "BIS_fnc_moduleExecute",
    "timestamp": "2021-01-23T10:02:38Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleExecute -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleExecute -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleExecute;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDBalloonAirDestruction": {
    "command": "BIS_fnc_moduleFDBalloonAirDestruction",
    "timestamp": "2021-01-23T09:53:34Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDBalloonAirDestruction -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDBalloonAirDestruction -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDBalloonAirDestruction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDBalloonWaterDestruction": {
    "command": "BIS_fnc_moduleFDBalloonWaterDestruction",
    "timestamp": "2021-01-23T09:53:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDBalloonWaterDestruction -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDBalloonWaterDestruction -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDBalloonWaterDestruction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDCPClear": {
    "command": "BIS_fnc_moduleFDCPClear",
    "timestamp": "2021-01-23T09:56:36Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDCPClear -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDCPClear -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDCPClear;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDCPIn": {
    "command": "BIS_fnc_moduleFDCPIn",
    "timestamp": "2021-01-23T09:53:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDCPIn -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDCPIn -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDCPIn;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDCPOut": {
    "command": "BIS_fnc_moduleFDCPOut",
    "timestamp": "2021-01-23T09:58:56Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDCPOut -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDCPOut -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDCPOut;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDFadeMarker": {
    "command": "BIS_fnc_moduleFDFadeMarker",
    "timestamp": "2021-01-23T09:52:55Z",
    "version": "1.00",
    "syntax": "[<string>, <number>] spawn BIS_fnc_moduleFDFadeMarker",
    "docSyntax": "[markerName, alpha] spawn BIS_fnc_moduleFDFadeMarker",
    "tags": "",
    "description": "Gradually change the alpha of the given marker.",
    "example": "[\"tankMarker\", 0.25] spawn BIS_fnc_moduleFDFadeMarker;",
    "params": "<string> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleFDSkeetDestruction": {
    "command": "BIS_fnc_moduleFDSkeetDestruction",
    "timestamp": "2021-01-23T10:04:06Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDSkeetDestruction -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDSkeetDestruction -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDSkeetDestruction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFDStatsClear": {
    "command": "BIS_fnc_moduleFDStatsClear",
    "timestamp": "2021-01-23T10:01:04Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFDStatsClear -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFDStatsClear -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFDStatsClear;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFiringDrill": {
    "command": "BIS_fnc_moduleFiringDrill",
    "timestamp": "2021-01-23T09:58:08Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFiringDrill -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFiringDrill -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleFiringDrill;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFriendlyFire": {
    "command": "BIS_fnc_moduleFriendlyFire",
    "timestamp": "2021-01-23T09:59:31Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleFriendlyFire -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleFriendlyFire -->",
    "tags": "",
    "description": "pre/******************************************************************************* \nVersion: 2.0 \nName: Friendly Fire \nAuthor: Zozo \nDESCRIPTION: Handles the friendly fire. Use either the module interface in the editor, or call individual functions. \nPARAMETERS: 1) function called - string, list of \nfunctions: - Init - Destroy - AddUnits - RemoveUnits - ChangePriority - ListActiveUnit 2) parameter for the function RETURNED \nVALUE: depends on the function called \nEXAMPLES: // Initializes the module if not added in editor // No units are directly checked for friendly fire, but renegade state is checked anyway _ret = [ \"Init\", [] ] call BIS_fnc_moduleFriendlyFire // Initializes the module if not added in editor // BIS_vip1, BIS_vip2, BIS_noVip units are directly checked for friendly fire x = [ \"Init\", [ [ BIS_vip1, BIS_vip2, BIS_noVip],true ] ] call BIS_fnc_moduleFriendlyFire // De-initializes the module _ret = [ \"Destroy\" ] call BIS_fnc_moduleFriendlyFire // Add BIS_vip3 unit to be checked for friendly fire x = [ \"AddUnits\", [ [BIS_vip3] ] ] call BIS_fnc_moduleFriendlyFire // Remove BIS_vip1 unit from active units x = [ \"RemoveUnits\", [ [ BIS_vip1 ] ] ] call BIS_fnc_moduleFriendlyFire // set another priority for a vehicle- if it is hit once, considered as friendly fire x = [ \"ChangePriority\", [BIS_vip,1] ] call BIS_fnc_moduleFriendlyFire ******************************************************************************",
    "example": "[] call BIS_fnc_moduleFriendlyFire;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleFuel": {
    "command": "BIS_fnc_moduleFuel",
    "timestamp": "2021-01-23T10:10:52Z",
    "version": "1.00",
    "syntax": "[<object>, objects, <boolean>] call BIS_fnc_moduleFuel",
    "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleFuel",
    "tags": "[AL] [EG]",
    "description": "Set fuel of linked units' 'vehicles'. FeatureInformativeRegarding \nlocality: unit's 'vehicle' must be local to the machine, the unit itself can be remote.",
    "example": "[myLogic, [unit1, unit2, vehicle1], true] call BIS_fnc_moduleFuel;",
    "params": "<object> objects <boolean>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_moduleGenericRadio": {
    "command": "BIS_fnc_moduleGenericRadio",
    "timestamp": "2021-01-23T09:51:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleGenericRadio -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleGenericRadio -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleGenericRadio;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleGrenade": {
    "command": "BIS_fnc_moduleGrenade",
    "timestamp": "2021-01-23T10:10:17Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleGrenade",
    "docSyntax": "[] call BIS_fnc_moduleGrenade",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleGroupID": {
    "command": "BIS_fnc_moduleGroupID",
    "timestamp": "2021-01-23T10:01:00Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleGroupID -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleGroupID -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleGroupID;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHandle": {
    "command": "BIS_fnc_moduleHandle",
    "timestamp": "2021-01-23T09:52:16Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleHandle -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleHandle -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleHandle;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHealth": {
    "command": "BIS_fnc_moduleHealth",
    "timestamp": "2021-01-23T10:01:02Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleHealth -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleHealth -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleHealth;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHint": {
    "command": "BIS_fnc_moduleHint",
    "timestamp": "2021-01-23T09:52:09Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleHint -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleHint -->",
    "tags": "",
    "description": "\nDescription: Show a hint to all players of side Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules \nReturns: NONE */ // Parameters",
    "example": "[] call BIS_fnc_moduleHint;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHQ": {
    "command": "BIS_fnc_moduleHQ",
    "timestamp": "2021-01-23T10:07:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleHQ -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleHQ -->",
    "tags": "",
    "description": "\nDescription: Register or return side HQ speaker Parameter(s): \n0: OBJECT - register the HQ SIDE - return HQ of the side \nReturns: OBJECT - the HQ",
    "example": "[] call BIS_fnc_moduleHQ;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleInit": {
    "command": "BIS_fnc_moduleInit",
    "timestamp": "2021-01-23T10:40:26Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleInit -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleInit;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMine": {
    "command": "BIS_fnc_moduleMine",
    "timestamp": "2021-01-23T10:41:24Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMine -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMine -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMine;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMissionName": {
    "command": "BIS_fnc_moduleMissionName",
    "timestamp": "2021-01-23T10:26:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMissionName -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMissionName -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMissionName;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMode": {
    "command": "BIS_fnc_moduleMode",
    "timestamp": "2021-01-23T10:24:57Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMode -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMode -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMode;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleModules": {
    "command": "BIS_fnc_moduleModules",
    "timestamp": "2021-01-23T10:36:39Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleModules -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleModules -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleModules;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeDefense": {
    "command": "BIS_fnc_moduleMPTypeDefense",
    "timestamp": "2021-01-23T10:28:17Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeDefense -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeDefense -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMPTypeDefense;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeGameMaster": {
    "command": "BIS_fnc_moduleMPTypeGameMaster",
    "timestamp": "2021-01-23T10:38:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeGameMaster -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeGameMaster -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMPTypeGameMaster;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeGroundSupport": {
    "command": "BIS_fnc_moduleMPTypeGroundSupport",
    "timestamp": "2021-01-22T22:52:10Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeGroundSupport -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeGroundSupport -->",
    "tags": "",
    "description": "pre// Debug log",
    "example": "[] call BIS_fnc_moduleMPTypeGroundSupport;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeGroundSupportBase": {
    "command": "BIS_fnc_moduleMPTypeGroundSupportBase",
    "timestamp": "2021-01-22T22:57:36Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeGroundSupportBase -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeGroundSupportBase -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMPTypeGroundSupportBase;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeSectorControl": {
    "command": "BIS_fnc_moduleMPTypeSectorControl",
    "timestamp": "2021-01-23T10:25:24Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeSectorControl -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeSectorControl -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMPTypeSectorControl;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleMPTypeSeize": {
    "command": "BIS_fnc_moduleMPTypeSeize",
    "timestamp": "2021-01-23T10:23:56Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleMPTypeSeize -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleMPTypeSeize -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleMPTypeSeize;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjective": {
    "command": "BIS_fnc_moduleObjective",
    "timestamp": "2021-01-23T10:26:54Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjective -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjective -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjective;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveFind": {
    "command": "BIS_fnc_moduleObjectiveFind",
    "timestamp": "2021-01-23T10:25:07Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveFind -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveFind -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveFind;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveGetIn": {
    "command": "BIS_fnc_moduleObjectiveGetIn",
    "timestamp": "2021-01-23T10:39:28Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveGetIn -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveGetIn -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveGetIn;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveMove": {
    "command": "BIS_fnc_moduleObjectiveMove",
    "timestamp": "2021-01-23T10:23:32Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveMove -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveMove -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveMove;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveRaceCP": {
    "command": "BIS_fnc_moduleObjectiveRaceCP",
    "timestamp": "2021-01-23T10:32:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceCP -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceCP -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveRaceCP;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveRaceFinish": {
    "command": "BIS_fnc_moduleObjectiveRaceFinish",
    "timestamp": "2021-01-23T10:24:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceFinish -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceFinish -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveRaceFinish;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveRaceStart": {
    "command": "BIS_fnc_moduleObjectiveRaceStart",
    "timestamp": "2021-01-23T10:26:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceStart -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveRaceStart -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveRaceStart;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveSector": {
    "command": "BIS_fnc_moduleObjectiveSector",
    "timestamp": "2021-01-23T10:33:09Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveSector -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveSector -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveSector;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleObjectiveTarget": {
    "command": "BIS_fnc_moduleObjectiveTarget",
    "timestamp": "2021-01-23T10:26:43Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleObjectiveTarget -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleObjectiveTarget -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleObjectiveTarget;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_modulePositioning": {
    "command": "BIS_fnc_modulePositioning",
    "timestamp": "2021-01-23T10:27:54Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_modulePositioning -->",
    "docSyntax": "<!-- [] call BIS_fnc_modulePositioning -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_modulePositioning;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_modulePoster": {
    "command": "BIS_fnc_modulePoster",
    "timestamp": "2021-01-23T10:41:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_modulePoster -->",
    "docSyntax": "<!-- [] call BIS_fnc_modulePoster -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_modulePoster;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_modulePostprocess": {
    "command": "BIS_fnc_modulePostprocess",
    "timestamp": "2021-01-23T10:31:27Z",
    "version": "1.00",
    "syntax": "-<!-- [] call BIS_fnc_modulePostprocess; -->",
    "docSyntax": "-<!-- [] call BIS_fnc_modulePostprocess; -->",
    "tags": "",
    "description": "FeatureInformativeThis function is used by the Post-Process module.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_moduleProjectile": {
    "command": "BIS_fnc_moduleProjectile",
    "timestamp": "2021-01-23T10:26:48Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleProjectile -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleProjectile -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleProjectile;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_modulePunishment": {
    "command": "BIS_fnc_modulePunishment",
    "timestamp": "2021-01-23T10:34:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_modulePunishment -->",
    "docSyntax": "<!-- [] call BIS_fnc_modulePunishment -->",
    "tags": "",
    "description": "\nDescription: Make a unit play a punishment animation Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules \nReturns: NONE */ // Parameters",
    "example": "[] call BIS_fnc_modulePunishment;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRadioChannelCreate": {
    "command": "BIS_fnc_moduleRadioChannelCreate",
    "timestamp": "2021-01-23T10:37:01Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRadioChannelCreate -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRadioChannelCreate -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleRadioChannelCreate;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRank": {
    "command": "BIS_fnc_moduleRank",
    "timestamp": "2021-01-23T10:36:53Z",
    "version": "1.00",
    "syntax": "[<object>, <array>, <boolean>] call BIS_fnc_moduleRank",
    "docSyntax": "[logic, units, activated] call BIS_fnc_moduleRank",
    "tags": "",
    "description": "Used by the Set Rank module.",
    "example": "[logic,nowiki[</nowiki>player]] call BIS_fnc_moduleRank;",
    "params": "<object> <array> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleRating": {
    "command": "BIS_fnc_moduleRating",
    "timestamp": "2021-01-23T10:33:01Z",
    "version": "1.00",
    "syntax": "[<object>, objects, <boolean>] call BIS_fnc_moduleRating",
    "docSyntax": "[logic, units, activated] call BIS_fnc_moduleRating",
    "tags": "",
    "description": "Function used by the Rating module.",
    "example": "[myLogic, units group player, true] call BIS_fnc_moduleRating;",
    "params": "<object> objects <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleRemoteControl": {
    "command": "BIS_fnc_moduleRemoteControl",
    "timestamp": "2021-01-23T10:42:19Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRemoteControl -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRemoteControl -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleRemoteControl;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRespawnInventory": {
    "command": "BIS_fnc_moduleRespawnInventory",
    "timestamp": "2021-01-23T10:32:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRespawnInventory -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRespawnInventory -->",
    "tags": "",
    "description": "\nDescription: Set respawn loadouts a curator can assign to players Parameter(s): \n0: OBJECT - curator logic \n1: BOOL - true to make all loadouts availale, false to base them on units the curator can place \nReturns: BOOL",
    "example": "[] call BIS_fnc_moduleRespawnInventory;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRespawnPosition": {
    "command": "BIS_fnc_moduleRespawnPosition",
    "timestamp": "2021-01-23T10:24:09Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRespawnPosition -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRespawnPosition -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleRespawnPosition;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRespawnTickets": {
    "command": "BIS_fnc_moduleRespawnTickets",
    "timestamp": "2021-01-23T10:24:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRespawnTickets -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRespawnTickets -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleRespawnTickets;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleRespawnVehicle": {
    "command": "BIS_fnc_moduleRespawnVehicle",
    "timestamp": "2021-01-23T10:23:45Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleRespawnVehicle -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleRespawnVehicle -->",
    "tags": "",
    "description": "\nDescription: Set vehicle respawn, compatible both with SP and MP. Parameter(s): \n0: OBJECT - vehicle \n1: NUMBER - respawn delay in seconds (default is 0) BOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn \n2: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled) \n3: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited) \n4: CODE - code executed upon respawn. Passed arguments are [newVehicle,oldVehicle]. The old vehicle is deleted only after this code is completed. \n5: POSITION - type of respawn \nposition: 0 = where it started 1 = where it was destroyed 2 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\") 3 = on BLUFOR respawn marker 4 = on OPFOR respawn marker 5 = on Independent respawn marker 6 = on Civilian respawn marker 7 = on side respawn marker of unit which destroyed the vehicle \n6: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest) \n7: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect) \n8: BOOL - true to show notifcation when the vehicle is respawned \nReturns: BOOL",
    "example": "[] call BIS_fnc_moduleRespawnVehicle;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSaveGame": {
    "command": "BIS_fnc_moduleSaveGame",
    "timestamp": "2021-01-23T10:23:50Z",
    "version": "1.00",
    "syntax": "[<nothing>,<nothing>,<boolean>] call BIS_fnc_moduleSaveGame",
    "docSyntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame",
    "tags": "",
    "description": "Saves the game. Saving has to be enabled.",
    "example": "call BIS_fnc_moduleSaveGame;",
    "params": "<nothing> <nothing> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleSFX": {
    "command": "BIS_fnc_moduleSFX",
    "timestamp": "2021-01-23T10:36:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleSFX -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSFX -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleSFX;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleShowHide": {
    "command": "BIS_fnc_moduleShowHide",
    "timestamp": "2021-01-23T10:31:38Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleShowHide -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleShowHide -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleShowHide;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSimulationManager": {
    "command": "BIS_fnc_moduleSimulationManager",
    "timestamp": "2021-01-23T10:42:06Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleSimulationManager -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSimulationManager -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleSimulationManager;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSimulationManager_grab": {
    "command": "BIS_fnc_moduleSimulationManager_grab",
    "timestamp": "2021-01-23T10:39:36Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleSimulationManager_grab",
    "docSyntax": "[] call BIS_fnc_moduleSimulationManager_grab",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSiteInit": {
    "command": "BIS_fnc_moduleSiteInit",
    "timestamp": "2021-01-23T10:29:14Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleSiteInit",
    "docSyntax": "[] call BIS_fnc_moduleSiteInit",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSkill": {
    "command": "BIS_fnc_moduleSkill",
    "timestamp": "2021-01-23T10:27:43Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleSkill -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSkill -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleSkill;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSkiptime": {
    "command": "BIS_fnc_moduleSkiptime",
    "timestamp": "2021-01-23T10:23:20Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleSkiptime -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSkiptime -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleSkiptime;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSound": {
    "command": "BIS_fnc_moduleSound",
    "timestamp": "2021-01-23T10:23:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleSound -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleSound -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleSound;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleStrategicMapImage": {
    "command": "BIS_fnc_moduleStrategicMapImage",
    "timestamp": "2021-01-23T10:38:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleStrategicMapImage -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleStrategicMapImage -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleStrategicMapImage;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleStrategicMapInit": {
    "command": "BIS_fnc_moduleStrategicMapInit",
    "timestamp": "2021-01-23T10:34:04Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleStrategicMapInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleStrategicMapInit -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleStrategicMapInit;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleStrategicMapMission": {
    "command": "BIS_fnc_moduleStrategicMapMission",
    "timestamp": "2021-01-23T10:26:01Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleStrategicMapMission -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleStrategicMapMission -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleStrategicMapMission;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleStrategicMapOpen": {
    "command": "BIS_fnc_moduleStrategicMapOpen",
    "timestamp": "2021-01-23T10:23:57Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleStrategicMapOpen -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleStrategicMapOpen -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleStrategicMapOpen;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleStrategicMapORBAT": {
    "command": "BIS_fnc_moduleStrategicMapORBAT",
    "timestamp": "2021-01-23T10:26:36Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleStrategicMapORBAT -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleStrategicMapORBAT -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleStrategicMapORBAT;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSupportsInitProvider": {
    "command": "BIS_fnc_moduleSupportsInitProvider",
    "timestamp": "2021-01-23T10:41:32Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleSupportsInitProvider",
    "docSyntax": "[] call BIS_fnc_moduleSupportsInitProvider",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSupportsInitProviderVirtual": {
    "command": "BIS_fnc_moduleSupportsInitProviderVirtual",
    "timestamp": "2021-01-23T10:23:18Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleSupportsInitProviderVirtual",
    "docSyntax": "[] call BIS_fnc_moduleSupportsInitProviderVirtual",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSupportsInitRequester": {
    "command": "BIS_fnc_moduleSupportsInitRequester",
    "timestamp": "2021-01-23T10:26:47Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleSupportsInitRequester",
    "docSyntax": "[] call BIS_fnc_moduleSupportsInitRequester",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTaskCreate": {
    "command": "BIS_fnc_moduleTaskCreate",
    "timestamp": "2021-01-23T10:29:50Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTaskCreate -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTaskCreate -->",
    "tags": "",
    "description": "\nDescription: Create Task module function",
    "example": "[] call BIS_fnc_moduleTaskCreate;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTaskSetDescription": {
    "command": "BIS_fnc_moduleTaskSetDescription",
    "timestamp": "2021-01-23T10:25:24Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTaskSetDescription -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTaskSetDescription -->",
    "tags": "",
    "description": "\nDescription: Set Task Description module function",
    "example": "[] call BIS_fnc_moduleTaskSetDescription;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTaskSetDestination": {
    "command": "BIS_fnc_moduleTaskSetDestination",
    "timestamp": "2021-01-23T10:26:02Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTaskSetDestination -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTaskSetDestination -->",
    "tags": "",
    "description": "\nDescription: Set Task Destination module function",
    "example": "[] call BIS_fnc_moduleTaskSetDestination;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTaskSetState": {
    "command": "BIS_fnc_moduleTaskSetState",
    "timestamp": "2021-01-23T10:23:23Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTaskSetState -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTaskSetState -->",
    "tags": "",
    "description": "\nDescription: Set Task State module function",
    "example": "[] call BIS_fnc_moduleTaskSetState;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTimeMultiplier": {
    "command": "BIS_fnc_moduleTimeMultiplier",
    "timestamp": "2021-01-23T10:38:38Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleTimeMultiplier",
    "docSyntax": "[] call BIS_fnc_moduleTimeMultiplier",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTracers": {
    "command": "BIS_fnc_moduleTracers",
    "timestamp": "2021-01-23T10:25:18Z",
    "version": "1.00",
    "syntax": "[<object>, <boolean>] call BIS_fnc_moduleTracers",
    "docSyntax": "[logic, activated] call BIS_fnc_moduleTracers",
    "tags": "",
    "description": "Function used by the Tracers module.",
    "example": "[myLogic, true] call BIS_fnc_moduleTracers;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleTrident": {
    "command": "BIS_fnc_moduleTrident",
    "timestamp": "2021-01-23T10:36:31Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTrident -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTrident -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleTrident;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTriggers": {
    "command": "BIS_fnc_moduleTriggers",
    "timestamp": "2021-01-23T10:34:51Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTriggers -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTriggers -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleTriggers;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTTCPTrigger": {
    "command": "BIS_fnc_moduleTTCPTrigger",
    "timestamp": "2021-01-23T10:36:25Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTTCPTrigger -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTTCPTrigger -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleTTCPTrigger;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTTCPTriggerBehind": {
    "command": "BIS_fnc_moduleTTCPTriggerBehind",
    "timestamp": "2021-01-23T10:26:58Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTTCPTriggerBehind -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTTCPTriggerBehind -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleTTCPTriggerBehind;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleTTStatsClear": {
    "command": "BIS_fnc_moduleTTStatsClear",
    "timestamp": "2021-01-23T10:38:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleTTStatsClear -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleTTStatsClear -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleTTStatsClear;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleUnits": {
    "command": "BIS_fnc_moduleUnits",
    "timestamp": "2021-01-23T10:37:26Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleUnits -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleUnits -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleUnits;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleUnlockArea": {
    "command": "BIS_fnc_moduleUnlockArea",
    "timestamp": "2021-01-23T10:28:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleUnlockArea -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleUnlockArea -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleUnlockArea;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleUnlockObject": {
    "command": "BIS_fnc_moduleUnlockObject",
    "timestamp": "2021-01-23T10:39:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleUnlockObject -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleUnlockObject -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleUnlockObject;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleVanguardFob": {
    "command": "BIS_fnc_moduleVanguardFob",
    "timestamp": "2021-01-23T10:27:38Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleVanguardFob",
    "docSyntax": "[] call BIS_fnc_moduleVanguardFob",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleVanguardObjective": {
    "command": "BIS_fnc_moduleVanguardObjective",
    "timestamp": "2021-01-23T10:26:21Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleVanguardObjective",
    "docSyntax": "[] call BIS_fnc_moduleVanguardObjective",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleVanguardScorePersistence": {
    "command": "BIS_fnc_moduleVanguardScorePersistence",
    "timestamp": "2021-01-23T10:26:18Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_moduleVanguardScorePersistence",
    "docSyntax": "[] call BIS_fnc_moduleVanguardScorePersistence",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleVolume": {
    "command": "BIS_fnc_moduleVolume",
    "timestamp": "2021-01-23T10:26:29Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleVolume -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleVolume -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleVolume;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleWeather": {
    "command": "BIS_fnc_moduleWeather",
    "timestamp": "2021-01-23T10:23:37Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleWeather -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleWeather -->",
    "tags": "",
    "description": "\nDescription: Set overcast and fog Parameter(s): \n0: STRING - mode, can be one of following \"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission) \n1: BOOL - true to enbale, false to disable \nReturns: Nothing \"isDelayEnabled\" \nReturns: true if delayed activation is enabled, otherwise false \"commit\" - apply weather changes \nReturns: Nothing",
    "example": "[] call BIS_fnc_moduleWeather;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleZoneProtection": {
    "command": "BIS_fnc_moduleZoneProtection",
    "timestamp": "2021-01-23T10:30:30Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleZoneProtection -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleZoneProtection -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleZoneProtection;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleZoneRestriction": {
    "command": "BIS_fnc_moduleZoneRestriction",
    "timestamp": "2021-01-23T10:23:58Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_moduleZoneRestriction -->",
    "docSyntax": "<!-- [] call BIS_fnc_moduleZoneRestriction -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_moduleZoneRestriction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moveAction": {
    "command": "BIS_fnc_moveAction",
    "timestamp": "2021-01-23T10:24:31Z",
    "version": "1.00",
    "syntax": "[<object>'', <boolean>''] call BIS_fnc_moveAction",
    "docSyntax": "[unit'', returnConfig''] call BIS_fnc_moveAction",
    "tags": "",
    "description": "Return current move action (used in playAction, playActionNow and switchAction) Parameter(s): \n0: OBJECT 1 (Optional): BOOL - true to return config path of the action, false to return just the action name (\ndefault: false) \nReturns: STRING or ARRAY",
    "example": "_actionName = [player, false] call BIS_fnc_moveAction; _actionConfig = [player, true] call BIS_fnc_moveAction;",
    "params": "<object> <boolean>",
    "returns": "config | string"
  },
  "BIS_fnc_moveToRespawnPosition": {
    "command": "BIS_fnc_moveToRespawnPosition",
    "timestamp": "2021-01-23T10:23:24Z",
    "version": "1.00",
    "syntax": "[<object>, positionagl, <boolean>] call BIS_fnc_moveToRespawnPosition",
    "docSyntax": "[unit, position, canBeDead] call BIS_fnc_moveToRespawnPosition",
    "tags": "[AL]",
    "description": "Move given unit to given respawn position. Units moved to height nowiki>=</nowiki> 30m will start on parachute. Position [0,0,0] is blacklisted. This function must be executed where unit to be moved is local.",
    "example": "[player, \"SpawnMarker1\"] call BIS_fnc_moveToRespawnPosition;",
    "params": "<object> positionagl <boolean>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_multiplySquareMatrixByVector": {
    "command": "BIS_fnc_multiplySquareMatrixByVector",
    "timestamp": "2021-01-23T10:24:49Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_multiplySquareMatrixByVector",
    "docSyntax": "[] call BIS_fnc_multiplySquareMatrixByVector",
    "tags": "",
    "description": "* \nAuthor: Zozo * Multiplies the square matrix by a \nvector: A(m,m) x V(m) * * \nArguments: * \n0: _matrix ARRAY (multi-dimensional) * \n1: _vector ARRAY ([x,y,z] or [x,y,z,1]) * * Return \nValue: * ARRAY [x,y,z] * * \nExample: * [_transformMatrix, vectorDir player] call BIS_multiplySquareMatrixVector *",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_neutralizeUnit": {
    "command": "BIS_fnc_neutralizeUnit",
    "timestamp": "2021-01-23T10:38:13Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_neutralizeUnit",
    "docSyntax": "object call BIS_fnc_neutralizeUnit",
    "tags": "",
    "description": "Neutralize an object by intrinsic \nmeans: * soldiers are blown up by mine * vehicles are shelled by artillery * air units are hit by AA missile * underwater units are simply killed. FeatureInformativeallowDamage will 'not' prevent the unit getting killed.",
    "example": "cursorTarget call BIS_fnc_neutralizeUnit;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_objectHeight": {
    "command": "BIS_fnc_objectHeight",
    "timestamp": "2021-01-23T10:25:39Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_objectHeight",
    "docSyntax": "object call BIS_fnc_objectHeight",
    "tags": "",
    "description": "Return object height defined by its bounding box and eventual offset fix. For the following classes an offset is used. {! class=\"wikitable\" !- ! z-\noffset: -0.1 !! z-\noffset: -0.08 !- ! * \"box_east_support_f\" * \"box_ind_support_f\" * \"box_nato_support_f\" * \"box_east_ammoord_f\" * \"box_ind_ammoord_f\" * \"box_nato_ammoord_f\" * \"box_east_ammo_f\" * \"box_ind_ammo_f\" * \"box_nato_ammo_f ! * \"box_east_wpslaunch_f\" * \"box_ind_wpslaunch_f\" * \"box_nato_wpslaunch_f\" * \"box_east_wpsspecial_f\" * \"box_ind_wpsspecial_f\" * \"box_nato_wpsspecial_f\" * \"box_ind_wps_f\" * \"box_east_wps_f\" * \"box_nato_wps_f\" !}",
    "example": "player call BIS_fnc_objectHeight;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_objectInventoryAnimatedClose": {
    "command": "BIS_fnc_objectInventoryAnimatedClose",
    "timestamp": "2021-01-22T22:42:45Z",
    "version": "1.00",
    "syntax": "[<object>, <array>] call BIS_fnc_objectInventoryAnimatedClose",
    "docSyntax": "[object, animationArray] call BIS_fnc_objectInventoryAnimatedClose",
    "tags": "[AG] [EG]",
    "description": "Animates an object being closed, for example a drawer. The counter set by BIS_fnc_objectInventoryAnimatedOpen gets reset when this function is called.",
    "example": "",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_objectInventoryAnimatedOpen": {
    "command": "BIS_fnc_objectInventoryAnimatedOpen",
    "timestamp": "2021-01-22T22:42:53Z",
    "version": "1.00",
    "syntax": "[<object>, <array>] call BIS_fnc_objectInventoryAnimatedOpen",
    "docSyntax": "[object, animationArray] call BIS_fnc_objectInventoryAnimatedOpen",
    "tags": "[AG] [EG]",
    "description": "Animates an object being opened, for example a drawer. It also sets a counter which prevents animation to be played multiple time if more than one player accesses that drawer.",
    "example": "",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_objectSide": {
    "command": "BIS_fnc_objectSide",
    "timestamp": "2021-01-23T10:27:46Z",
    "version": "1.00",
    "syntax": "[<object>, <boolean>] call BIS_fnc_objectSide",
    "docSyntax": "[target, boolean] call BIS_fnc_objectSide",
    "tags": "",
    "description": "Returns object side as defined in config (i.e. not affected by dynamic changing like rating)",
    "example": "_realVehicleSide = [vehicle player, true] call BIS_fnc_objectSide;",
    "params": "<object> <boolean> <object>",
    "returns": "side"
  },
  "BIS_fnc_objectVar": {
    "command": "BIS_fnc_objectVar",
    "timestamp": "2021-01-23T10:29:18Z",
    "version": "1.00",
    "syntax": "[<object>, <string>] call BIS_fnc_objectVar",
    "docSyntax": "[object, varNameRoot] call BIS_fnc_objectVar",
    "tags": "",
    "description": "Return a unique object variable. The variable is preserved after unit respawn.",
    "example": "hint str (player call BIS_fnc_objectVar); cc\"bis_o1\" hint str (player == (missionNamespace getVariable \"bis_o1\")); // true",
    "params": "<object> <string>",
    "returns": "string"
  },
  "BIS_fnc_onDiaryChanged": {
    "command": "BIS_fnc_onDiaryChanged",
    "timestamp": "2021-01-23T10:27:25Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_onDiaryChanged -->",
    "docSyntax": "<!-- [] call BIS_fnc_onDiaryChanged -->",
    "tags": "",
    "description": "\nDescription: Register code to be executed when diary item changes. Arguments passed into code \nare: \n0: DISPLAY - map display \n1: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record) \n2: STRING - subject name \n3: STRING - record name \n4: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used) Parameter(s): \n_this: CODE ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...] NUMBER - remove code of given index \nReturns: NUMBER - index of onDiaryChanged code",
    "example": "[] call BIS_fnc_onDiaryChanged;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_onPlayerConnected": {
    "command": "BIS_fnc_onPlayerConnected",
    "timestamp": "2021-01-23T10:26:42Z",
    "version": "1.00",
    "syntax": "[code, <anything>]] call BIS_fnc_onPlayerConnected",
    "docSyntax": "[code, params]] call BIS_fnc_onPlayerConnected",
    "tags": "",
    "description": "Executes a function on server every time a player connects the mission.",
    "example": "[ { params [\"_player\", \"_params\"]; hint name _player; hint _params; }, \"Parameter\" ] call BIS_fnc_onPlayerConnected;",
    "params": "code <anything>",
    "returns": "boolean"
  },
  "BIS_fnc_ORBATAddGroupOverlay": {
    "command": "BIS_fnc_ORBATAddGroupOverlay",
    "timestamp": "2021-01-22T22:50:10Z",
    "version": "1.00",
    "syntax": "[<config>, <string>, <array>, <number>, <number>, <number>, <string>, <boolean>] call BIS_fnc_ORBATAddGroupOverlay",
    "docSyntax": "[target, texture, colour, widthMulti, heightMulti, angle, text, shadow] call BIS_fnc_ORBATAddGroupOverlay",
    "tags": "",
    "description": "Register texture(s) to be displayed over CfgORBAT group.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", \"\\A3\\weapons_f\\data\\UI\\icon_MG_CA.paa\", [0,0,01], 3, 3, 0, \"Some Text\", true ] call BIS_fnc_ORBATAddGroupOverlay;",
    "params": "<config> <string> <array> <number> <number> <number> <string> <boolean>",
    "returns": "number | bis_fnc_orbatremovegroupoverlay"
  },
  "BIS_fnc_ORBATAnimate": {
    "command": "BIS_fnc_ORBATAnimate",
    "timestamp": "2021-01-22T22:44:58Z",
    "version": "1.00",
    "syntax": "[<config>, <number>, <number>] spawn BIS_fnc_ORBATAnimate",
    "docSyntax": "[target, zoom, duration] spawn BIS_fnc_ORBATAnimate",
    "tags": "",
    "description": "Animates an ORBAT viewer.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 0.5, 3 ] spawn BIS_fnc_ORBATAnimate;",
    "params": "<config> <number> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_ORBATConfigPreview": {
    "command": "BIS_fnc_ORBATConfigPreview",
    "timestamp": "2021-01-22T22:51:37Z",
    "version": "1.00",
    "syntax": "[class] call BIS_fnc_ORBATConfigPreview",
    "docSyntax": "[class] call BIS_fnc_ORBATConfigPreview",
    "tags": "",
    "description": "Opens config viewer and shows CfgORBAT. Used to retrieve CfgOrbat data FeatureWarningThis function seems to be broken GVIarma31.82",
    "example": "nowiki[</nowiki>configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\"] call BIS_fnc_ORBATConfigPreview;",
    "params": "",
    "returns": "string | nothing"
  },
  "BIS_fnc_ORBATGetGroupParams": {
    "command": "BIS_fnc_ORBATGetGroupParams",
    "timestamp": "2021-01-22T22:50:59Z",
    "version": "1.00",
    "syntax": "[<config>] call BIS_fnc_ORBATGetGroupParams",
    "docSyntax": "[path] call BIS_fnc_ORBATGetGroupParams",
    "tags": "",
    "description": "Returns group params from CfgORBAT.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\" ] call BIS_fnc_ORBATGetGroupParams;",
    "params": "<config>",
    "returns": "array"
  },
  "BIS_fnc_ORBATOpen": {
    "command": "BIS_fnc_ORBATOpen",
    "timestamp": "2021-01-22T22:49:38Z",
    "version": "1.00",
    "syntax": "[<config>, <display>, strings, <number>, arrays] call BIS_fnc_ORBATOpen",
    "docSyntax": "[path, display, tags, numTiers, parameters] call BIS_fnc_ORBATOpen",
    "tags": "",
    "description": "Opens the <ORBAT Viewer>.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\",findDisplay 46, [], 4, [\"ConfigClass_1\",{systemChat \"ConfigClass_1\"}] ] call BIS_fnc_ORBATOpen;",
    "params": "<config> <display> strings <number> arrays",
    "returns": "display"
  },
  "BIS_fnc_ORBATRemoveGroupOverlay": {
    "command": "BIS_fnc_ORBATRemoveGroupOverlay",
    "timestamp": "2021-01-22T22:43:11Z",
    "version": "1.00",
    "syntax": "[<config>, <display>] call BIS_fnc_ORBATRemoveGroupOverlay",
    "docSyntax": "[path, number] call BIS_fnc_ORBATRemoveGroupOverlay",
    "tags": "",
    "description": "Unregister texture(s) to be displayed over CfgORBAT group.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 4 ] call BIS_fnc_ORBATRemoveGroupOverlay;",
    "params": "<config> <display>",
    "returns": "boolean | true"
  },
  "BIS_fnc_ORBATSetGroupFade": {
    "command": "BIS_fnc_ORBATSetGroupFade",
    "timestamp": "2021-01-22T22:40:42Z",
    "version": "1.00",
    "syntax": "[<config>, <number>, <time>] call BIS_fnc_ORBATSetGroupFade",
    "docSyntax": "[path, alpha, time] call BIS_fnc_ORBATSetGroupFade",
    "tags": "",
    "description": "Set fade value of CfgORBAT group and all groups below it.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 0.5, 5 ] call BIS_fnc_ORBATSetGroupFade;",
    "params": "<config> <number> <time>",
    "returns": "boolean"
  },
  "BIS_fnc_ORBATSetGroupParams": {
    "command": "BIS_fnc_ORBATSetGroupParams",
    "timestamp": "2021-01-22T22:43:32Z",
    "version": "1.00",
    "syntax": "[<config>, <number>, <string>, <string>, <string>, <string>, <string>, <string>, <number>, <string>, <array>, <string>, <string>, <string>, arrays] call BIS_fnc_ORBATSetGroupParams",
    "docSyntax": "[target, IDType, size, type, side, name, shortName, texture, textSizeCoef, insignia, textColour, commName, commRank, description, assets] call BIS_fnc_ORBATSetGroupParams",
    "tags": "",
    "description": "Overrides group params from CfgORBAT. See <ORBAT Viewer> for a detailed explanation.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 1, \"Platoon\", \"Infantry\", \"West\", \"Name: %1 %2 %3\", \"Short Name: %1 %2 %3\", \"b_air\", 3, \"\\A3\\Air_F_EPB\\Heli_Light_03\\data\\UI\\Heli_Light_03_CA.paa\", [0,0,0,1], \"Commander Name\", \"General\", \"Description\", [ [\"B_MRAP_01_F\",5] ] ] call BIS_fnc_ORBATSetGroupParams;",
    "params": "<config> <number> <string> <string> <string> <string> <string> <string> <number> <string> <array> <string> <string> <string> arrays",
    "returns": "boolean"
  },
  "BIS_fnc_ORBATTooltip": {
    "command": "BIS_fnc_ORBATTooltip",
    "timestamp": "2021-01-22T22:52:19Z",
    "version": "1.00",
    "syntax": "[<config>, <control>, <array>] call BIS_fnc_ORBATTooltip",
    "docSyntax": "[target, control, position] call BIS_fnc_ORBATTooltip",
    "tags": "",
    "description": "Animates an ORBAT viewer.",
    "example": "",
    "params": "<config> <control> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_ordinalNumber": {
    "command": "BIS_fnc_ordinalNumber",
    "timestamp": "2021-01-23T10:36:41Z",
    "version": "1.00",
    "syntax": "[<number>, <string>, <boolean>] call BIS_fnc_ordinalNumber",
    "docSyntax": "[number, language, isFeminine] call BIS_fnc_ordinalNumber",
    "tags": "",
    "description": "Return number as ordinal number (e.g. 1 become \"1st\")",
    "example": "_second = [42] call BIS_fnc_ordinalNumber; // will return \"42nd\" for English-speaking players",
    "params": "<number> <string> <boolean>",
    "returns": "string"
  },
  "BIS_fnc_packStaticWeapon": {
    "command": "BIS_fnc_packStaticWeapon",
    "timestamp": "2021-01-23T10:39:30Z",
    "version": "1.00",
    "syntax": "[<group>, weapon, leaderPos] call BIS_fnc_packStaticWeapon",
    "docSyntax": "[group, weapon, leaderPos] call BIS_fnc_packStaticWeapon",
    "tags": "",
    "description": "This function will make weapon team pack a static weapon. The weapon crew will pack carried weapon (or given weapon if different) and follow leader. Requires three personnel in the \nteam: Team Leader, Gunner and Asst. Gunner. This function is MP compatible brbr When weapon is packed, scripted EH \"StaticWeaponPacked\" is called with the following \nparams: * [group, leader, gunner, assistant, weaponBag, tripodBag] FeatureInformativeIf a unit flees, all bets are off and the function will exit leaving units on their own. To guarantee weapon disassembly, make sure the group has maximum courage code_group allowFleeing 0;</code>",
    "example": "[leader1] call BIS_fnc_packStaticWeapon;",
    "params": "<group> <object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_paramCountdown": {
    "command": "BIS_fnc_paramCountdown",
    "timestamp": "2021-01-23T10:40:41Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_paramCountdown",
    "docSyntax": "number call BIS_fnc_paramCountdown",
    "tags": "[SE]",
    "description": "Set side mission time.",
    "example": "360 call BIS_fnc_paramCountdown;",
    "params": "<number>",
    "returns": "boolean"
  },
  "BIS_fnc_paramDaytime": {
    "command": "BIS_fnc_paramDaytime",
    "timestamp": "2021-01-23T10:24:51Z",
    "version": "1.00",
    "syntax": "floored call BIS_fnc_paramDaytime",
    "docSyntax": "datetime call BIS_fnc_paramDaytime",
    "tags": "[SE]",
    "description": "Sets time of the day to the hour. Minutes will always be zero.",
    "example": "_date = 12 call BIS_fnc_paramDaytime;",
    "params": "floored",
    "returns": "array"
  },
  "BIS_fnc_paramGuerFriendly": {
    "command": "BIS_fnc_paramGuerFriendly",
    "timestamp": "2021-01-23T10:23:58Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_paramGuerFriendly",
    "docSyntax": "number call BIS_fnc_paramGuerFriendly",
    "tags": "[SE]",
    "description": "Set relationship between Independents and remaining sides.",
    "example": "2 call BIS_fnc_paramGuerFriendly;",
    "params": "<number>",
    "returns": "boolean"
  },
  "BIS_fnc_paramRespawnTickets": {
    "command": "BIS_fnc_paramRespawnTickets",
    "timestamp": "2021-01-23T10:34:09Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_paramRespawnTickets",
    "docSyntax": "number call BIS_fnc_paramRespawnTickets",
    "tags": "",
    "description": "Set side respawn tickets.",
    "example": "360 call BIS_fnc_paramRespawnTickets;",
    "params": "<number>",
    "returns": "boolean"
  },
  "BIS_fnc_paramReviveBleedOutDuration": {
    "command": "BIS_fnc_paramReviveBleedOutDuration",
    "timestamp": "2021-01-23T10:35:45Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveBleedOutDuration",
    "docSyntax": "call BIS_fnc_paramReviveBleedOutDuration",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_bleedOutDuration')",
    "example": "call BIS_fnc_paramReviveBleedOutDuration;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveDuration": {
    "command": "BIS_fnc_paramReviveDuration",
    "timestamp": "2021-01-23T10:25:27Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveDuration",
    "docSyntax": "call BIS_fnc_paramReviveDuration",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_duration')",
    "example": "call BIS_fnc_paramReviveDuration;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveForceRespawnDuration": {
    "command": "BIS_fnc_paramReviveForceRespawnDuration",
    "timestamp": "2021-01-23T10:27:54Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveForceRespawnDuration",
    "docSyntax": "call BIS_fnc_paramReviveForceRespawnDuration",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_forceRespawnDuration')",
    "example": "call BIS_fnc_paramReviveForceRespawnDuration;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveMedicSpeedMultiplier": {
    "command": "BIS_fnc_paramReviveMedicSpeedMultiplier",
    "timestamp": "2021-01-23T10:33:17Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveMedicSpeedMultiplier",
    "docSyntax": "call BIS_fnc_paramReviveMedicSpeedMultiplier",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_medicSpeedMultiplier')",
    "example": "call BIS_fnc_paramReviveMedicSpeedMultiplier;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveMode": {
    "command": "BIS_fnc_paramReviveMode",
    "timestamp": "2021-01-23T10:35:37Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveMode",
    "docSyntax": "call BIS_fnc_paramReviveMode",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_mode')",
    "example": "call BIS_fnc_paramReviveMode;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveRequiredItems": {
    "command": "BIS_fnc_paramReviveRequiredItems",
    "timestamp": "2021-01-23T10:41:25Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveRequiredItems",
    "docSyntax": "call BIS_fnc_paramReviveRequiredItems",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_requiredItems')",
    "example": "call BIS_fnc_paramReviveRequiredItems;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveRequiredTrait": {
    "command": "BIS_fnc_paramReviveRequiredTrait",
    "timestamp": "2021-01-23T10:39:02Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveRequiredTrait",
    "docSyntax": "call BIS_fnc_paramReviveRequiredTrait",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_requiredTrait')",
    "example": "call BIS_fnc_paramReviveRequiredTrait;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramReviveUnconsciousStateMode": {
    "command": "BIS_fnc_paramReviveUnconsciousStateMode",
    "timestamp": "2021-01-23T10:38:10Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_paramReviveUnconsciousStateMode",
    "docSyntax": "call BIS_fnc_paramReviveUnconsciousStateMode",
    "tags": "",
    "description": "Grabs server param into global variable. ('bis_reviveParam_unconsciousStateMode')",
    "example": "call BIS_fnc_paramReviveUnconsciousStateMode;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_paramTimeAcceleration": {
    "command": "BIS_fnc_paramTimeAcceleration",
    "timestamp": "2021-01-23T10:23:52Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_paramTimeAcceleration",
    "docSyntax": "timeMultiplier call BIS_fnc_paramTimeAcceleration",
    "tags": "",
    "description": "Manages paramTimeAcceleration.hpp)",
    "example": "5 call BIS_fnc_paramTimeAcceleration;",
    "params": "<number>",
    "returns": "number"
  },
  "BIS_fnc_paramViewDistance": {
    "command": "BIS_fnc_paramViewDistance",
    "timestamp": "2021-01-23T10:27:41Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_paramViewDistance",
    "docSyntax": "viewDistance call BIS_fnc_paramViewDistance",
    "tags": "",
    "description": "Set view distance.",
    "example": "7500 call BIS_fnc_paramViewDistance;",
    "params": "<number>",
    "returns": "number | viewdistance"
  },
  "BIS_fnc_paramWeather": {
    "command": "BIS_fnc_paramWeather",
    "timestamp": "2021-01-23T10:30:47Z",
    "version": "1.00",
    "syntax": "[0] call BIS_fnc_paramWeather",
    "docSyntax": "[0] call BIS_fnc_paramWeather",
    "tags": "[SE]",
    "description": "Sets overcast using BIS_fnc_setOvercast.",
    "example": "overCastValue = [1] call BIS_fnc_paramWeather;",
    "params": "",
    "returns": "number"
  },
  "BIS_fnc_phoneticalWord": {
    "command": "BIS_fnc_phoneticalWord",
    "timestamp": "2021-01-23T10:29:15Z",
    "version": "1.00",
    "syntax": "[<number>, <boolean>] call BIS_fnc_phoneticalWord",
    "docSyntax": "[integer, short] call BIS_fnc_phoneticalWord",
    "tags": "",
    "description": "Convert number to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\") or letter of alphabet.",
    "example": "[1] call BIS_fnc_phoneticalWord; // Returns \"Alpha\"",
    "params": "<number> <boolean>",
    "returns": "is localised."
  },
  "BIS_fnc_planeAiEject": {
    "command": "BIS_fnc_planeAiEject",
    "timestamp": "2021-01-22T22:52:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_planeAiEject -->",
    "docSyntax": "<!-- [] call BIS_fnc_planeAiEject -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - AI behaviour handler. \nExucution: - Call the function via attached EH to the aircrfat itself. \nExample: class \nEventhandlers: Eventhandlers { Hit = \"_this call BIS_fnc_planeAiEject\"; }; \nRequirments: - Compatible aircrfat must have a config definition for all subsytems that will be invoked by ejection system (see BIS_fnc_PlaneEjection). Parameter(s): _this select \n0: mode (Scalar) \n0: plane/object \nReturns: nothing \nResult: AI pilot will be forced to eject from aircrfat upon damage treshold reached. Semi-authenthic behaviour.",
    "example": "[] call BIS_fnc_planeAiEject;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_planeEjection": {
    "command": "BIS_fnc_planeEjection",
    "timestamp": "2021-01-22T22:52:45Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_planeEjection -->",
    "docSyntax": "<!-- [] call BIS_fnc_planeEjection -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This function is designed to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. \nExucution: - Call the function via user action added to the aircrfat itself. \nclass Plane_Eject_UserActionExample { \n priority = 0.05; shortcut = \"Eject\"; displayName = \"$STR_A3_action_eject\"; condition = \"player in this\"; statement = \"[this] spawn BIS_fnc_planeEjection\"; position = \"pilotcontrol\"; radius = 10; onlyforplayer = 1; showWindow = 0; hideOnUse = 1; \n};\n \nRequirments: - Compatible aircrfat must have a config definition for all sub-sytems that will be invoked by this function. 1. Old legacy ejection must be disabled in aircrfat's cfgVehicles configuration. driverCanEject = 0; gunnerCanEject = 0; cargoCanEject = 0; 2. Aircrfat must have a set of parameters defined in CfgVehicles subClass (EjectionSystem) for ejection system. Theese parameters will affect the ejection behaviour. example of cfgVehicles subclass definitions; \nclass EjectionSystem { \n EjectionSeatEnabled = 1; //enable advanced ejection system EjectionDual = 0; //currently only single seat aircraft ejectiion supported (to do for latter) EjectionSeatClass = \"B_Ejection_Seat_Plane_Fighter_01_F\"; //class name of ejector seat to use (separate vehicle/object) CanopyClass = \"Plane_Fighter_01_Canopy_F\"; //class name of canopy to use (separate vehicle/object) EjectionSeatHideAnim = \"ejection_seat_hide\"; //name of the hide animation that will hide ejector seat mesh in plane EjectionSeatRailAnim = \"ejection_seat_motion\"; //name of the animation that will be played to start a smooth ejection motion out of cockpit CanopyHideAnim = \"canopy_hide\"; //name of the hide animation that will hide canopy mesh in plane EjectionSeatPos = \"pos_eject\"; //position memory point whwre to attach ejector seat CanopyPos = \"pos_eject_canopy\"; //position memory point where to attach dummy canopy EjectionSoundExt = \"Plane_Fighter_01_ejection_ext_sound\"; //sound to play when ejection trigered (external) EjectionSoundInt = \"Plane_Fighter_01_ejection_in_sound\"; //sound to play when ejection trigered (in-ternal) EjectionParachute = \"Steerable_Parachute_F\"; //class name parachute used in ejection EjectionSeatForce = 50; //ejection seat blast force CanopyForce = 30; //canopy bast force }; 3. Aircrfat model must have momory points definig positions where to attach new vehicle ejector seat, new vehicle canopy. 4. Aircrfat model (in model cfg & class AnimationSources) must have a set of hide animations defined to hide ejector seat and canopy in model when new seaparate vehicles are spawned. In model.cfg\tclass canopy_hide { \n\t\ttype=\"hide\"; source=\"user\"; selection=\"canopy_hide\"; minValue = 0.0; maxValue = 1.0; minPhase = 0.0; maxPhase = 1.0; initPhase = 0; hideValue = 0.001; \n\t};\n class ejection_seat_hide { type=\"hide\"; source=\"user\"; selection=\"ejection_seat\"; minValue = 0.0; maxValue = 1.0; minPhase = 0.0; maxPhase = 1.0; initPhase = 0; hideValue = 0.001; } In cfgVehicles >> class AnimationSources\tclass canopy_hide { \n\t\tsource = \"user\"; animPeriod = 0.001; initPhase = 0; \n\t};\n\tclass ejection_seat_hide { \n\t\tsource = \"user\"; animPeriod = 0.001; initPhase = 0; \n\t};\n 5. Aircrfat model must have an animation for initial ejection stage, where new ejector seat with pilot is pushed gradualy out of cockpit (done to avaoid PhysX colisions and make this feature look good, rathre than spawnig ejetor seat above plane). New ejector seat with pilot will be attached to this animation (via animated meory point). Memory point EjectionSeatPos must be part of this animated selection. In model.cfg\tclass ejection_seat_motion { \n\t\ttype = \"translation\"; source = \"user\"; selection = \"ejection_seat\"; begin = \"tns_ejection_seat\"; end = \"tns_ejection_seat_e\"; animPeriod = 0; memory = 1; minValue = 0.0; maxValue = 1.0; offset0 = 0.0; offset1 = 3.0; \n\t};\n In cfgVehicles >> class AnimationSources class ejection_seat_motion { source = \"user\"; animPeriod = 0.25; initPhase = 0; \n};\n 6. Ejector seat and canopy must be created/defined as separate objects. Can be reused. Parameter(s): _this select \n0: mode (Scalar) \n0: plane/object other parameters are gathered from configuration files. \nReturns: nothing \nResult: Pilot will be ejected from aircraft. Semi-authenthic behaviour.",
    "example": "[] call BIS_fnc_planeEjection;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_planeEjectionFX": {
    "command": "BIS_fnc_planeEjectionFX",
    "timestamp": "2021-01-22T22:52:51Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_planeEjectionFX -->",
    "docSyntax": "<!-- [] call BIS_fnc_planeEjectionFX -->",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - Function created to add FX (sound/particles) for ejection feature. \nExucution: - Call from within the main ejection fnc (on demand). \nExample: [_plane, _ejectionSeat] spawn BIS_fnc_planeEjectionFX; \nRequirments: - Compatible ejector seat must have a hide animation for rocket motor flash and position for FX to be attached. (TO DO PARAMETARIZE) Inehector seats model.cfg \nclass Animations { \n\tclass Rocket_Flash_hide { \n\t\ttype = \"hide\"; source = \"user\"; selection = \"rocket_flash\"; sourceAddress = \"mirror\"; minValue = -1.5; maxValue = 0; hideValue = 0.99; \n\t};\n \n};\n Parameter(s): _this select \n0: mode (Scalar) \n0: plane/object \n1: ejector seat/object \nReturns: nothing \nResult: Set of particle FX and sound FX will be aplied to ejection feature.",
    "example": "[] call BIS_fnc_planeEjectionFX;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_playEndMusic": {
    "command": "BIS_fnc_playEndMusic",
    "timestamp": "2021-01-23T10:26:17Z",
    "version": "1.00",
    "syntax": "<boolean> call BIS_fnc_playEndMusic",
    "docSyntax": "play call BIS_fnc_playEndMusic",
    "tags": "",
    "description": "Play mission end music (when it is nearing the end)",
    "example": "true call BIS_fnc_playEndMusic;",
    "params": "<boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_playMusic": {
    "command": "BIS_fnc_playMusic",
    "timestamp": "2021-01-23T10:40:45Z",
    "version": "1.00",
    "syntax": "[<string>,<number>,<number>] call BIS_fnc_playMusic",
    "docSyntax": "[class,start,volume] call BIS_fnc_playMusic",
    "tags": "",
    "description": "Plays given song.",
    "example": "[\"LeadTrack04_F\",10,0.5] call BIS_fnc_playMusic; codecomment//Song starts at 10 seconds with 50% volume.",
    "params": "<string> <number> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_playSound": {
    "command": "BIS_fnc_playSound",
    "timestamp": "2021-01-23T10:39:48Z",
    "version": "1.00",
    "syntax": "[<string>, <boolean>] call BIS_fnc_playSound",
    "docSyntax": "[sound, forced] call BIS_fnc_playSound",
    "tags": "",
    "description": "Plays given sound. Identical to playSound.",
    "example": "\"3DEN_visionMode\" call BIS_fnc_playSound;",
    "params": "<string> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_pow": {
    "command": "BIS_fnc_pow",
    "timestamp": "2021-01-23T10:42:33Z",
    "version": "1.00",
    "syntax": "[<number>, <number>] call BIS_fnc_pow",
    "docSyntax": "[value1, value2] call BIS_fnc_pow",
    "tags": "",
    "description": "Return value1 raised to the power of value2. Identical to alias= [[a ^ b -->",
    "example": "[2, 10] call BIS_fnc_pow; // returns 2^10 = 1024",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_preload": {
    "command": "BIS_fnc_preload",
    "timestamp": "2021-01-23T10:25:49Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_preload",
    "docSyntax": "call BIS_fnc_preload",
    "tags": "",
    "description": "Start automatic loading screen upon mission start. On client, it will finish only when server is finished.",
    "example": "call BIS_fnc_preload;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_prepareAO": {
    "command": "BIS_fnc_prepareAO",
    "timestamp": "2021-01-23T10:23:37Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_prepareAO",
    "docSyntax": "density call BIS_fnc_prepareAO",
    "tags": "",
    "description": "Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).br Trigger 'names' (a.k.a \"Trigger text\", 'not' \"Variable Name\") defines the kind of spawn. Supported trigger names \nare: * 'GEN_infantry': spawns random infantry patrol with sentry waypoints ('NOTE:' only circular triggers are supported, min. axis should be 500m) * 'GEN_patrolVeh': spawns a random vehicle. If a civilian unit is synchronized with the trigger, its waypoint will be used by the spawned vehiclebr<!-- -->You can specify the vehicle type by typing one of the following into the trigger's \"On Act.\" \nfield: ** car ** apc ** tank * 'GEN_ammo': spawns a random number of ammoboxes. You can get and idea of the shape this composition will have by making this trigger rectangular with dimensions 5m x 1m. You can also specify the amount of crates spawned by using min. and max. Timeout values (supported range is 1 to 6 crates). * 'GEN_civilCar': spawns a random empty civil car",
    "example": "0.75 call BIS_fnc_prepareAO;",
    "params": "<number>",
    "returns": "nothing"
  },
  "BIS_fnc_pulsate": {
    "command": "BIS_fnc_pulsate",
    "timestamp": "2021-01-23T10:32:05Z",
    "version": "1.00",
    "syntax": "[<number>] call BIS_fnc_pulsate",
    "docSyntax": "[frequency] call BIS_fnc_pulsate",
    "tags": "",
    "description": "Pulsates a value from 0 to 1.",
    "example": "200 call BIS_fnc_pulsate; // 0.113001",
    "params": "<number>",
    "returns": "number"
  },
  "BIS_fnc_quotations": {
    "command": "BIS_fnc_quotations",
    "timestamp": "2021-01-23T10:34:42Z",
    "version": "1.00",
    "syntax": "[<string>, <string>] call BIS_fnc_quotations",
    "docSyntax": "[videoPath, subtitle] call BIS_fnc_quotations",
    "tags": "",
    "description": "Display a quotation video. thumb",
    "example": "[\"a3\\missions_f_mark\\video\\ffv.ogv\"] spawn BIS_fnc_quotations;",
    "params": "<string> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_radialRed": {
    "command": "BIS_fnc_radialRed",
    "timestamp": "2021-01-23T10:27:49Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <number>, <object>] call BIS_fnc_radialRed",
    "docSyntax": "[victim, bodyPart, damage, shooter] call BIS_fnc_radialRed",
    "tags": "",
    "description": "Red radial postprocess (hit damage, fire damage). Parameters are the same as the first four of HandleDamage EH.",
    "example": "_this call BIS_fnc_radialRed; }];",
    "params": "<object> <string> <number> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_radialRedOut": {
    "command": "BIS_fnc_radialRedOut",
    "timestamp": "2021-01-23T10:39:57Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_radialRedOut",
    "docSyntax": "call BIS_fnc_radialRedOut",
    "tags": "",
    "description": "Removes red radial postprocess (fire damage) created by BIS_fnc_radialRed.",
    "example": "call BIS_fnc_radialRedOut;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_rankParams": {
    "command": "BIS_fnc_rankParams",
    "timestamp": "2021-01-23T10:37:37Z",
    "version": "1.00",
    "syntax": "[<number>, <string>] call BIS_fnc_rankParams",
    "docSyntax": "[source, infoType] call BIS_fnc_rankParams",
    "tags": "",
    "description": "Return information about military rank. \n1: STRING - requited data, can be one of \nfollowing: \"displayName\" - full localized name (e.g. \"Major\") \"displayNameShort\" - short localized name (e.g. \"Maj.\") \"classname\" - system name (e.g. \"MAJOR\") \"texture\" - path to rank insignia",
    "example": "_shortRank = [player, \"displayNameShort\"] call BIS_fnc_rankParams;",
    "params": "<number> <string>",
    "returns": "string"
  },
  "BIS_fnc_relPosObject": {
    "command": "BIS_fnc_relPosObject",
    "timestamp": "2021-01-23T10:25:46Z",
    "version": "1.00",
    "syntax": "[<object>, <object>, <position>, <number>] call BIS_fnc_relPosObject",
    "docSyntax": "[parent, child, relPos, direction] call BIS_fnc_relPosObject",
    "tags": "",
    "description": "Place an object relative to another object, like a ''setRelPos'' command.",
    "example": "[BIS_briefingTable, BIS_map, [0, -0.58, 0.857], 98] call BIS_fnc_relPosObject;",
    "params": "<object> <object> <position> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_relScaledDist": {
    "command": "BIS_fnc_relScaledDist",
    "timestamp": "2021-01-23T10:38:01Z",
    "version": "1.00",
    "syntax": "[<object>, <object>] call BIS_fnc_relScaledDist",
    "docSyntax": "[referenceObject, relativeObject] call BIS_fnc_relScaledDist",
    "tags": "",
    "description": "Exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger. This function can be used to check where in a trigger area an object is. Is it near the border of the trigger area the number will go against 0.",
    "example": "[ myTrigger, player ] call BIS_fnc_relScaledDist;",
    "params": "<object> <object>",
    "returns": "number"
  },
  "BIS_fnc_removeAllScriptedEventHandlers": {
    "command": "BIS_fnc_removeAllScriptedEventHandlers",
    "timestamp": "2021-01-23T10:31:02Z",
    "version": "1.00",
    "syntax": "[<<string>space>, name] call BIS_fnc_removeAllScriptedEventHandlers",
    "docSyntax": "[namespace, name] call BIS_fnc_removeAllScriptedEventHandlers",
    "tags": "",
    "description": "Removes all scripted event handler with given name. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called for every removed event handler. For the list of available scripted event handlers see <Arma \n3: Scripted Event Handlers>",
    "example": "nowiki[</nowiki>missionNamespace, \"event\"] call BIS_fnc_removeAllScriptedEventHandlers;",
    "params": "<namespace> <string>",
    "returns": "boolean | false | true"
  },
  "BIS_fnc_removeFromPairs": {
    "command": "BIS_fnc_removeFromPairs",
    "timestamp": "2021-01-23T10:24:29Z",
    "version": "1.00",
    "syntax": "[<array>, <string>, <boolean>] call BIS_fnc_removeFromPairs",
    "docSyntax": "[array, key, copyArray] call BIS_fnc_removeFromPairs",
    "tags": "",
    "description": "Removes an item from pair array modifying original array. This can be overriden by setting '_copyArray' param to true.",
    "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\"] call BIS_fnc_removeFromPairs; // Returns nowiki<</nowiki>\"apple\",3nowiki></nowiki>",
    "params": "<array> <string> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_removeScriptedEventHandler": {
    "command": "BIS_fnc_removeScriptedEventHandler",
    "timestamp": "2021-01-23T10:24:57Z",
    "version": "1.00",
    "syntax": "[<<string>space>, name, <number>] call BIS_fnc_removeScriptedEventHandler",
    "docSyntax": "[namespace, name, id] call BIS_fnc_removeScriptedEventHandler",
    "tags": "",
    "description": "Removes scripted event handler with given name and id. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called. For the list of available scripted event handlers see <Arma \n3: Scripted Event Handlers>",
    "example": "nowiki[</nowiki>missionNamespace, \"event\", 2] call BIS_fnc_removeScriptedEventHandler;",
    "params": "<namespace> <string> <number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_removeStackedEventHandler": {
    "command": "BIS_fnc_removeStackedEventHandler",
    "timestamp": "2021-01-23T10:25:33Z",
    "version": "1.00",
    "syntax": "[id, <string>] call BIS_fnc_removeStackedEventHandler",
    "docSyntax": "[id, event] call BIS_fnc_removeStackedEventHandler",
    "tags": "",
    "description": "Removes a stacked event handler with specified custom id.",
    "example": "[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;",
    "params": "<string> <string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_respawnBase": {
    "command": "BIS_fnc_respawnBase",
    "timestamp": "2021-01-23T10:35:24Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnBase; -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnBase; -->",
    "tags": "",
    "description": "FeatureInformativeThis function contains no code.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_respawnConfirm": {
    "command": "BIS_fnc_respawnConfirm",
    "timestamp": "2021-01-23T10:32:17Z",
    "version": "1.00",
    "syntax": "[<number>] spawn BIS_fnc_respawnConfirm",
    "docSyntax": "[respawnDelay] spawn BIS_fnc_respawnConfirm",
    "tags": "",
    "description": "Shows a message box which the user needs to accept in order to respawn.",
    "example": "[3] spawn BIS_fnc_respawnConfirm;",
    "params": "<number>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnCounter": {
    "command": "BIS_fnc_respawnCounter",
    "timestamp": "2021-01-23T10:23:38Z",
    "version": "1.00",
    "syntax": "[<string>,<number>] call BIS_fnc_respawnCounter",
    "docSyntax": "[text,colour] call BIS_fnc_respawnCounter",
    "tags": "",
    "description": "Set or execute respawn counter params.",
    "example": "[\"Some text\", 2] call BIS_fnc_respawnCounter;",
    "params": "<string> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_respawnEndMission": {
    "command": "BIS_fnc_respawnEndMission",
    "timestamp": "2021-01-23T10:31:31Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_respawnEndMission",
    "docSyntax": "call BIS_fnc_respawnEndMission",
    "tags": "",
    "description": "End a mission if all players are dead ''and'' there are no more respawn tickets (if any). * 'Standard syntax' is for when Respawn is \"NONE\", \"BIRD\", \"GROUP\" or \"SIDE\" * 'Alternative syntax' is for when Respawn is \"INSTANT\" or \"BASE\" FeatureimportantOnly works in Multiplayer!",
    "example": "call BIS_fnc_respawnEndMission;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnGroup": {
    "command": "BIS_fnc_respawnGroup",
    "timestamp": "2021-01-23T10:27:17Z",
    "version": "1.00",
    "syntax": "[<object>, <object>] call BIS_fnc_respawnGroup",
    "docSyntax": "[oldUnit, newUnit] call BIS_fnc_respawnGroup",
    "tags": "",
    "description": "Camera script used by the \"group respawn\" template - when the player dies and gets transferred to the new group member.",
    "example": "// in <onPlayerRespawn.sqf> params [\"_newUnit\", \"_oldUnit\", \"_respawn\", \"_respawnDelay\"]; [_oldUnit, _newUnit] spawn BIS_fnc_respawnGroup;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnInstant": {
    "command": "BIS_fnc_respawnInstant",
    "timestamp": "2021-01-23T10:29:23Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnInstant; -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnInstant; -->",
    "tags": "",
    "description": "FeatureInformativeThis file contains no code.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_respawnMenuInventory": {
    "command": "BIS_fnc_respawnMenuInventory",
    "timestamp": "2021-01-23T10:29:55Z",
    "version": "1.00",
    "syntax": "[<object>, <number>, <boolean>] call BIS_fnc_respawnMenuInventory",
    "docSyntax": "[player, respawnDelay, revive] call BIS_fnc_respawnMenuInventory",
    "tags": "",
    "description": "Handles respawn inventory menu.",
    "example": "[player,5] call BIS_fnc_respawnMenuInventory;",
    "params": "<object> <number> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnMenuPosition": {
    "command": "BIS_fnc_respawnMenuPosition",
    "timestamp": "2021-01-23T10:24:12Z",
    "version": "1.00",
    "syntax": "[<object>, <number>, <boolean>] call BIS_fnc_respawnMenuPosition",
    "docSyntax": "[player, respawnDelay, revive] call BIS_fnc_respawnMenuPosition",
    "tags": "",
    "description": "Shows respawn menu. Closes it if the player is alive.",
    "example": "[player,5] call BIS_fnc_respawnMenuPosition;",
    "params": "<object> <number> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnMenuSpectator": {
    "command": "BIS_fnc_respawnMenuSpectator",
    "timestamp": "2021-01-23T10:38:18Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_respawnMenuSpectator",
    "docSyntax": "[player, respawnDelay] call BIS_fnc_respawnMenuSpectator",
    "tags": "",
    "description": "Handles the spectator mode.",
    "example": "[player,5] call BIS_fnc_respawnMenuSpectator;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnNone": {
    "command": "BIS_fnc_respawnNone",
    "timestamp": "2021-01-23T10:26:46Z",
    "version": "1.00",
    "syntax": "[<object>, <object>] spawn BIS_fnc_respawnNone",
    "docSyntax": "[killed, killer] spawn BIS_fnc_respawnNone",
    "tags": "",
    "description": "Create a death screen.",
    "example": "[player, someUnit] spawn BIS_fnc_respawnNone;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_respawnRounds": {
    "command": "BIS_fnc_respawnRounds",
    "timestamp": "2021-01-23T10:24:17Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnRounds -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnRounds -->",
    "tags": "",
    "description": "\nDescription: Disable respawn until players of only one side (including its allies) remains, then respawn everyone at once. When \"Rounds\" respawn is used by only one side, wait until all its players are dead. Parameter(s): BOOL - true to force round end SIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings) ARRAY - empty array to return if a round is still on (players of more than one involved faction are alive)",
    "example": "[] call BIS_fnc_respawnRounds;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_respawnSeagull": {
    "command": "BIS_fnc_respawnSeagull",
    "timestamp": "2021-01-23T10:31:55Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnSeagull -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnSeagull -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_respawnSeagull;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_respawnSide": {
    "command": "BIS_fnc_respawnSide",
    "timestamp": "2021-01-23T10:27:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnSide -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnSide -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_respawnSide;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_respawnSpectator": {
    "command": "BIS_fnc_respawnSpectator",
    "timestamp": "2021-01-23T10:37:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnSpectator -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnSpectator -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_respawnSpectator;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_respawnTimePenalty": {
    "command": "BIS_fnc_respawnTimePenalty",
    "timestamp": "2021-01-23T10:32:42Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnTimePenalty -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnTimePenalty -->",
    "tags": "",
    "description": "\nDescription: Set or execute respawn time penalty Parameter(s): \n0: CODE - penalty condition \n1: NUMBER - penalty delay \n2: TEXT - text displayed when penalty is in effect \nReturns: BOOL",
    "example": "[] call BIS_fnc_respawnTimePenalty;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_respawnWave": {
    "command": "BIS_fnc_respawnWave",
    "timestamp": "2021-01-23T10:25:40Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_respawnWave -->",
    "docSyntax": "<!-- [] call BIS_fnc_respawnWave -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_respawnWave;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_returnChildren": {
    "command": "BIS_fnc_returnChildren",
    "timestamp": "2021-01-23T10:24:43Z",
    "version": "1.00",
    "syntax": "[<config>, <number>, <boolean>, <boolean>] call BIS_fnc_returnChildren",
    "docSyntax": "[config, depth, lastTier, firstTier] call BIS_fnc_returnChildren",
    "tags": "",
    "description": "Returns all subclasses within given class.",
    "example": "[configFile >> \"CfgFunctions\", 2] call BIS_fnc_returnChildren; // returns config paths of all functions",
    "params": "<config> <number> <boolean> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_romanNumeral": {
    "command": "BIS_fnc_romanNumeral",
    "timestamp": "2021-01-23T20:33:42Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_romanNumeral",
    "docSyntax": "integer call BIS_fnc_romanNumeral",
    "tags": "",
    "description": "Convert integer to roman numeral (e.g. 42 becomes \"XLII\").",
    "example": "1 call BIS_fnc_romanNumeral; // returns \"I\"",
    "params": "<number>",
    "returns": "string"
  },
  "BIS_fnc_rotateVector3D": {
    "command": "BIS_fnc_rotateVector3D",
    "timestamp": "2021-01-23T20:21:24Z",
    "version": "1.00",
    "syntax": "<array> call BIS_fnc_rotateVector3D",
    "docSyntax": "[vector, angle, axis] call BIS_fnc_rotateVector3D",
    "tags": "",
    "description": "Rotates the vector around the given axis by the given angle",
    "example": "[vectorDir player, 90, 2] call BIS_fnc_rotateVector3D;",
    "params": "<array> <array> <number> <number>",
    "returns": "array | vector3d"
  },
  "BIS_fnc_rscLayer": {
    "command": "BIS_fnc_rscLayer",
    "timestamp": "2021-01-23T20:17:10Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_rscLayer",
    "docSyntax": "[layerName] call BIS_fnc_rscLayer",
    "tags": "",
    "description": "Register RSC layer and returns a 'unique' ID.",
    "example": "_id = [\"myLayerName\"] call BIS_fnc_rscLayer;",
    "params": "<string>",
    "returns": "number"
  },
  "BIS_fnc_saveInventory": {
    "command": "BIS_fnc_saveInventory",
    "timestamp": "2021-01-23T20:32:16Z",
    "version": "1.00",
    "syntax": "[<object>,<array>,<array>,<boolean>] call BIS_fnc_saveInventory",
    "docSyntax": "[unit,input,params,delete] call BIS_fnc_saveInventory",
    "tags": "",
    "description": "Save unit's loadout.",
    "example": "[ player, [missionNamespace, \"BIS_inv\"], [], true ] call BIS_fnc_saveInventory;",
    "params": "<object> <array> <array> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_saveVehicle": {
    "command": "BIS_fnc_saveVehicle",
    "timestamp": "2021-01-23T20:26:27Z",
    "version": "1.00",
    "syntax": "[<object>,<array>,<array>,<boolean>] call BIS_fnc_saveVehicle",
    "docSyntax": "[object,target,params,delete] call BIS_fnc_saveVehicle",
    "tags": "",
    "description": "Save vehicle's params (textures, animations, crew).",
    "example": "[BIS_tank, [missionNamespace, \"BIS_someTankSave\"], [\"SomeRandomParam\"], false ] call BIS_fnc_saveVehicle;",
    "params": "<object> <array> <array> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_sayMessage": {
    "command": "BIS_fnc_sayMessage",
    "timestamp": "2021-01-23T20:24:26Z",
    "version": "1.00",
    "syntax": "[<object>, cfgsounds, <string>] call BIS_fnc_sayMessage",
    "docSyntax": "[speaker, message, channel] call BIS_fnc_sayMessage",
    "tags": "[AG] [EL]",
    "description": "Make a speaker say a message.",
    "example": "[leader player, \"to_c01_m01_brief_001_br_briefing_a_CENTAUR_0\", \"say3D\"] call BIS_fnc_sayMessage;",
    "params": "<object> cfgsounds <string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_scriptedWaypointType": {
    "command": "BIS_fnc_scriptedWaypointType",
    "timestamp": "2021-01-23T20:27:43Z",
    "version": "1.00",
    "syntax": "[<array>,<string>] call BIS_fnc_scriptedWaypointType",
    "docSyntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType",
    "tags": "",
    "description": "Return CfgWaypoints type of scripted waypoint. Returns empty string/config when waypoint is not scripted Returns \"Custom\"/CfgWaypoints root when waypoint is using custom script.",
    "example": "[BIS_scripted_WP_01,\"returnString\"] call BIS_fnc_scriptedWaypointType;",
    "params": "<array> <string>",
    "returns": "string | config"
  },
  "BIS_fnc_selectDiarySubject": {
    "command": "BIS_fnc_selectDiarySubject",
    "timestamp": "2021-05-24T16:10:46Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_selectDiarySubject",
    "docSyntax": "[diaryName] call BIS_fnc_selectDiarySubject",
    "tags": "",
    "description": "Selects a diary subject. FeatureinformativeThis was a temporary replacement for selectDiarySubject scripting command which 'had been broken' until v2.04.",
    "example": "[\"someSubject\"] call BIS_fnc_selectDiarySubject;",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_selectRespawnTemplate": {
    "command": "BIS_fnc_selectRespawnTemplate",
    "timestamp": "2021-01-23T20:19:41Z",
    "version": "1.00",
    "syntax": "[<string>, <array>] call BIS_fnc_selectRespawnTemplate",
    "docSyntax": "[mode, arguments] call BIS_fnc_selectRespawnTemplate",
    "tags": "",
    "description": "Select respawn template from CfgRespawnTemplates and execute its script / function. Internal use.",
    "example": "[\"playerKilledScript\", []] call BIS_fnc_selectRespawnTemplate;",
    "params": "<string> <array>",
    "returns": "script handles"
  },
  "BIS_fnc_setDate": {
    "command": "BIS_fnc_setDate",
    "timestamp": "2021-01-23T20:22:53Z",
    "version": "1.00",
    "syntax": "[<number>, <boolean>, <boolean>] call BIS_fnc_setDate",
    "docSyntax": "[value, global, transition] call BIS_fnc_setDate",
    "tags": "",
    "description": "Instantly set date and share it across network with optional transition effect. right|300px",
    "example": "[nowiki[2035, 12, 31, 23, 59], true, true] call BIS_fnc_setDate;",
    "params": "<number> <boolean> <boolean>",
    "returns": "date"
  },
  "BIS_fnc_setFog": {
    "command": "BIS_fnc_setFog",
    "timestamp": "2021-01-23T20:16:46Z",
    "version": "1.00",
    "syntax": "[<number>, <number>, <number>] call BIS_fnc_setFog",
    "docSyntax": "[strength, density, altitude] call BIS_fnc_setFog",
    "tags": "[SE]",
    "description": "Instantly set weather conditions and share it across network.",
    "example": "[1,1,100] call BIS_fnc_setFog; // returns [1,1,100]",
    "params": "<number> <number> <number>",
    "returns": "array"
  },
  "BIS_fnc_setIDCStreamFriendly": {
    "command": "BIS_fnc_setIDCStreamFriendly",
    "timestamp": "2021-01-23T20:27:02Z",
    "version": "1.00",
    "syntax": "[<display>,<number>] call BIS_fnc_setIDCStreamFriendly",
    "docSyntax": "[target,IDC] call BIS_fnc_setIDCStreamFriendly",
    "tags": "",
    "description": "Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.",
    "example": "[ (findDisplay 1337) displayCtrl 42 ] call BIS_fnc_setIDCStreamFriendly;",
    "params": "<display> <number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_setIdentity": {
    "command": "BIS_fnc_setIdentity",
    "timestamp": "2021-01-23T20:23:41Z",
    "version": "1.00",
    "syntax": "[<object>, <string>, <string>, <string>, <string>] call BIS_fnc_setIdentity",
    "docSyntax": "[object, face, speaker, pitch, callsign] call BIS_fnc_setIdentity",
    "tags": "[AG] [EL]",
    "description": "Sets the unit's identity. Feature Informative When executed on server, the identity will be JIP compatible.",
    "example": "[player, \"Kerry\", \"Male01ENGB\", 1.05, \"Big Daddy\"] call BIS_fnc_setIdentity;",
    "params": "<object> <string> <string> <string> <string>",
    "returns": "boolean"
  },
  "BIS_fnc_setObjectRotation": {
    "command": "BIS_fnc_setObjectRotation",
    "timestamp": "2021-01-23T20:17:06Z",
    "version": "1.00",
    "syntax": "[<object>, <array>] call BIS_fnc_setObjectRotation",
    "docSyntax": "[object, rotation] call BIS_fnc_setObjectRotation",
    "tags": "",
    "description": "Set object rotation.",
    "example": "[cursorObject, [100,100,100]] call BIS_fnc_setObjectRotation;",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_setObjectTexture": {
    "command": "BIS_fnc_setObjectTexture",
    "timestamp": "2021-01-23T20:28:23Z",
    "version": "1.00",
    "syntax": "[<object>, strings] call BIS_fnc_setObjectTexture",
    "docSyntax": "[object, textures] call BIS_fnc_setObjectTexture",
    "tags": "[AG] [EL]",
    "description": "Set object textures.",
    "example": "[player, \"#(rgb,8,8,3)color(0,0,1,1)\"] call BIS_fnc_setObjectTexture;",
    "params": "<object> strings",
    "returns": "boolean | true"
  },
  "BIS_fnc_setOvercast": {
    "command": "BIS_fnc_setOvercast",
    "timestamp": "2021-01-23T20:29:16Z",
    "version": "1.00",
    "syntax": "[<number>] call BIS_fnc_setOvercast",
    "docSyntax": "[value] call BIS_fnc_setOvercast",
    "tags": "",
    "description": "Instantly set weather conditions and share it across network. Must be executed in scheduled environment.",
    "example": "[0.5] call BIS_fnc_setOvercast;",
    "params": "<number>",
    "returns": "boolean"
  },
  "BIS_fnc_setPPeffectTemplate": {
    "command": "BIS_fnc_setPPeffectTemplate",
    "timestamp": "2021-01-23T20:18:38Z",
    "version": "1.00",
    "syntax": "[<string>, <number>, <boolean>] call BIS_fnc_setPPeffectTemplate",
    "docSyntax": "[template, transition, global] call BIS_fnc_setPPeffectTemplate",
    "tags": "",
    "description": "Apply post-process effects according to template from CfgPostprocessTemplates.",
    "example": "[\"Mediterranean\", 3, false] call BIS_fnc_setPPeffectTemplate;",
    "params": "<string> <number> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_setRank": {
    "command": "BIS_fnc_setRank",
    "timestamp": "2021-01-23T20:22:58Z",
    "version": "1.00",
    "syntax": "[<object>, <string>] call BIS_fnc_setRank",
    "docSyntax": "[target, rank] call BIS_fnc_setRank",
    "tags": "",
    "description": "Set rank of vehicle crew.",
    "example": "[ vehicle player, \"Captain\" ] call BIS_fnc_setRank;",
    "params": "<object> <string>",
    "returns": "boolean"
  },
  "BIS_fnc_setRespawnDelay": {
    "command": "BIS_fnc_setRespawnDelay",
    "timestamp": "2021-01-23T20:16:13Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_setRespawnDelay -->",
    "docSyntax": "<!-- [] call BIS_fnc_setRespawnDelay -->",
    "tags": "",
    "description": "\nDescription: Increase the respawn time based on a condition Parameter(s): \n0: CODE - Condition, must return BOOL \n1: NUMBER - delay in seconds which is applied when the condition is true \n2: STRING - description displayed when the delay is in effect \nReturns: NOTHING",
    "example": "[] call BIS_fnc_setRespawnDelay;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_setServerVariable": {
    "command": "BIS_fnc_setServerVariable",
    "timestamp": "2021-01-23T20:19:54Z",
    "version": "1.00",
    "syntax": "[<namespace>, <string>, <anything>] call BIS_fnc_setServerVariable",
    "docSyntax": "[namespace, varName, value] call BIS_fnc_setServerVariable",
    "tags": "",
    "description": "Set variable stored only on server. Clients can the download it using BIS_fnc_getServerVariable. Used when you want to share variables only to specific clients to prevent large traffic.",
    "example": "nowiki[</nowiki>nil, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;",
    "params": "<namespace> <string> <anything>",
    "returns": "boolean | true"
  },
  "BIS_fnc_setTask": {
    "command": "BIS_fnc_setTask",
    "timestamp": "2021-01-23T20:21:29Z",
    "version": "1.00",
    "syntax": "[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call BIS_fnc_setTask",
    "docSyntax": "[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call BIS_fnc_setTask",
    "tags": "[AG] [EG]",
    "description": "Set task parameters. brCreate the task when it doesn't exist. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"Task_01\", true, [\"Protect the respawn point.\",\"Respawn Point West\",\"respawn_west\"], [MHQ,false], \"ASSIGNED\", 5, true, true, \"Defend\", true] call BIS_fnc_setTask;",
    "params": "<br> task <br> task task <number> <boolean> <boolean> <string> <boolean>",
    "returns": "string"
  },
  "BIS_fnc_setTaskLocal": {
    "command": "BIS_fnc_setTaskLocal",
    "timestamp": "2021-01-23T20:35:00Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantLocal task management executed by BIS_fnc_setTask. Not to be called independently!",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_setToPairs": {
    "command": "BIS_fnc_setToPairs",
    "timestamp": "2021-01-23T20:16:57Z",
    "version": "1.00",
    "syntax": "[<array>, <string>, <anything>] call BIS_fnc_setToPairs",
    "docSyntax": "[array, key, newValue] call BIS_fnc_setToPairs",
    "tags": "",
    "description": "Works similar to the BIS_fnc_addToPairs but it doesn't try to add values. It just overwrites the volue if the key already exists.",
    "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs; // Returns [[\"apple\",3],[\"pear\",10]]",
    "params": "<array> <string> <anything>",
    "returns": "array"
  },
  "BIS_fnc_setVehicleMass": {
    "command": "BIS_fnc_setVehicleMass",
    "timestamp": "2021-01-23T20:17:17Z",
    "version": "1.00",
    "syntax": "[<object>, <boolean>, <number>] call BIS_fnc_setVehicleMass",
    "docSyntax": "[vehicle, animationInformation, massDifference] call BIS_fnc_setVehicleMass",
    "tags": "[AL] [EG]",
    "description": "Set mass relative to the default vehicle mass (default mass being vehicle mass on first execution of this function).",
    "example": "// default behaviour, change the mass according to the current phase of the animation sources result = [nowikithis] this, [], 0] call BIS_fnc_setVehicleMass;",
    "params": "<object> <boolean> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_sharedObjectives": {
    "command": "BIS_fnc_sharedObjectives",
    "timestamp": "2021-01-23T20:16:57Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantMeant to be run by the <Arma \n3: Task Framework> in MP scenarions in postInit. Do not run it on its own!",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_showMarkers": {
    "command": "BIS_fnc_showMarkers",
    "timestamp": "2021-01-23T20:30:08Z",
    "version": "1.00",
    "syntax": "[<string>, strings] call BIS_fnc_showMarkers",
    "docSyntax": "[action, markers] call BIS_fnc_showMarkers",
    "tags": "",
    "description": "Show or hide given markers using fade effect.",
    "example": "[\"hide\", [\"respawn_west\", \"respawn_east\"]] call BIS_fnc_showMarkers;",
    "params": "<string> strings",
    "returns": "nothing"
  },
  "BIS_fnc_showRespawnMenu": {
    "command": "BIS_fnc_showRespawnMenu",
    "timestamp": "2021-01-23T20:21:59Z",
    "version": "1.00",
    "syntax": "<!-- [<string>] call BIS_fnc_showRespawnMenu; -->",
    "docSyntax": "<!-- [mode] call BIS_fnc_showRespawnMenu; -->",
    "tags": "",
    "description": "Triggers the respawn screen in the given mode",
    "example": "[\"open\"] call BIS_fnc_showRespawnMenu; spawn does work as well",
    "params": "<string>",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuDisableItemCheck": {
    "command": "BIS_fnc_showRespawnMenuDisableItemCheck",
    "timestamp": "2021-01-23T20:22:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuDisableItemCheck -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuDisableItemCheck -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuDisableItemCheck;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuDisableItemDraw": {
    "command": "BIS_fnc_showRespawnMenuDisableItemDraw",
    "timestamp": "2021-01-23T20:22:19Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuDisableItemDraw -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuDisableItemDraw -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuDisableItemDraw;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuHeader": {
    "command": "BIS_fnc_showRespawnMenuHeader",
    "timestamp": "2021-01-23T20:17:46Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuHeader -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuHeader -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuHeader;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventory": {
    "command": "BIS_fnc_showRespawnMenuInventory",
    "timestamp": "2021-01-23T20:31:57Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventory -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventory -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventory;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryDetails": {
    "command": "BIS_fnc_showRespawnMenuInventoryDetails",
    "timestamp": "2021-01-23T20:17:53Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryDetails -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryDetails -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryDetails;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryItems": {
    "command": "BIS_fnc_showRespawnMenuInventoryItems",
    "timestamp": "2021-01-23T20:19:05Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryItems -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryItems -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryItems;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryLimit": {
    "command": "BIS_fnc_showRespawnMenuInventoryLimit",
    "timestamp": "2021-01-23T20:29:15Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimit -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimit -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryLimit;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryLimitRefresh": {
    "command": "BIS_fnc_showRespawnMenuInventoryLimitRefresh",
    "timestamp": "2021-01-23T20:20:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimitRefresh -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimitRefresh -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryLimitRefresh;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryLimitRespawn": {
    "command": "BIS_fnc_showRespawnMenuInventoryLimitRespawn",
    "timestamp": "2021-01-23T20:18:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimitRespawn -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLimitRespawn -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryLimitRespawn;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryList": {
    "command": "BIS_fnc_showRespawnMenuInventoryList",
    "timestamp": "2021-01-23T20:20:02Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryList -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryList -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryList;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryLoadout": {
    "command": "BIS_fnc_showRespawnMenuInventoryLoadout",
    "timestamp": "2021-01-23T20:20:06Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLoadout -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryLoadout -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryLoadout;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuInventoryMetadata": {
    "command": "BIS_fnc_showRespawnMenuInventoryMetadata",
    "timestamp": "2021-01-23T20:26:27Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryMetadata -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuInventoryMetadata -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuInventoryMetadata;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuPosition": {
    "command": "BIS_fnc_showRespawnMenuPosition",
    "timestamp": "2021-01-23T20:25:17Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuPosition -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuPosition -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuPosition;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuPositionList": {
    "command": "BIS_fnc_showRespawnMenuPositionList",
    "timestamp": "2021-01-23T20:18:33Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionList -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionList -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuPositionList;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuPositionMap": {
    "command": "BIS_fnc_showRespawnMenuPositionMap",
    "timestamp": "2021-01-23T20:27:39Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionMap -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionMap -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuPositionMap;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuPositionMapDraw": {
    "command": "BIS_fnc_showRespawnMenuPositionMapDraw",
    "timestamp": "2021-01-23T20:35:40Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantInternal function used by the <Arma \n3: Respawn> system.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_showRespawnMenuPositionMapHandle": {
    "command": "BIS_fnc_showRespawnMenuPositionMapHandle",
    "timestamp": "2021-01-23T20:16:26Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionMapHandle -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionMapHandle -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuPositionMapHandle;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showRespawnMenuPositionMetadata": {
    "command": "BIS_fnc_showRespawnMenuPositionMetadata",
    "timestamp": "2021-01-23T20:34:59Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantInternal function used by the <Arma \n3: Respawn> system.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_showRespawnMenuPositionName": {
    "command": "BIS_fnc_showRespawnMenuPositionName",
    "timestamp": "2021-01-23T20:20:43Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantInternal function used by the <Arma \n3: Respawn> system.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_showRespawnMenuPositionRefresh": {
    "command": "BIS_fnc_showRespawnMenuPositionRefresh",
    "timestamp": "2021-01-23T20:17:22Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionRefresh -->",
    "docSyntax": "<!-- [] call BIS_fnc_showRespawnMenuPositionRefresh -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_showRespawnMenuPositionRefresh;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showSubtitle": {
    "command": "BIS_fnc_showSubtitle",
    "timestamp": "2021-01-23T20:17:44Z",
    "version": "1.00",
    "syntax": "[<string>, <string>] spawn BIS_fnc_showSubtitle",
    "docSyntax": "[name, subtitle] spawn BIS_fnc_showSubtitle",
    "tags": "",
    "description": "Displays a subtitle at the bottom of the screen. Feature Informative If you want to play more subtitles, or want them to be played at a certain time, it might be easier to use BIS_fnc_EXP_camp_playSubtitles.",
    "example": "[\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go, Crossroad, out.\"] spawn BIS_fnc_showSubtitle;",
    "params": "<string> <string>",
    "returns": "script"
  },
  "BIS_fnc_showUnitInfo": {
    "command": "BIS_fnc_showUnitInfo",
    "timestamp": "2021-01-23T20:33:25Z",
    "version": "1.00",
    "syntax": "[<boolean>] call BIS_fnc_showUnitInfo",
    "docSyntax": "[showUnitInfo] call BIS_fnc_showUnitInfo",
    "tags": "",
    "description": "Hides or shows 'weapon' information. Also hides ''grenades'' information.",
    "example": "false call BIS_fnc_showUnitInfo; // hides weapon information",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_showWelcomeScreen": {
    "command": "BIS_fnc_showWelcomeScreen",
    "timestamp": "2021-01-23T20:20:16Z",
    "version": "1.00",
    "syntax": "[<display>'', <boolean>''] call BIS_fnc_showWelcomeScreen",
    "docSyntax": "[display'', forceLatest''] call BIS_fnc_showWelcomeScreen",
    "tags": "",
    "description": "Show welcome screen. Used in the main menu (works fine in 500px|center",
    "example": "nowiki[</nowiki>findDisplay 313, true] call BIS_fnc_showWelcomeScreen;",
    "params": "<display> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_sideColor": {
    "command": "BIS_fnc_sideColor",
    "timestamp": "2021-01-23T20:20:54Z",
    "version": "1.00",
    "syntax": "[<side>, <boolean>] call BIS_fnc_sideColor",
    "docSyntax": "[side, returnString] call BIS_fnc_sideColor",
    "tags": "",
    "description": "Returns colour of define side either as Array in format RGBA or the name of the colour as String",
    "example": "[blufor, false] call BIS_fnc_sideColor; // returns [0,0.3,0.6,1]",
    "params": "<side> <boolean>",
    "returns": "array | string"
  },
  "BIS_fnc_sideID": {
    "command": "BIS_fnc_sideID",
    "timestamp": "2021-01-23T20:21:07Z",
    "version": "1.00",
    "syntax": "<side> call BIS_fnc_sideID",
    "docSyntax": "testedSide call BIS_fnc_sideID",
    "tags": "",
    "description": "Return config side number. * 0 = opfor (east) * 1 = blufor (west) * 2 = independent (resistance) * 3 = civilian * 4 = sideUnknown * 5 = sideEnemy * 6 = sideFriendly * 7 = sideLogic * 8 = sideEmpty * 9 = sideAmbientLife",
    "example": "west call BIS_fnc_sideID; // returns 1",
    "params": "<side>",
    "returns": "number"
  },
  "BIS_fnc_sideName": {
    "command": "BIS_fnc_sideName",
    "timestamp": "2021-01-23T20:18:05Z",
    "version": "1.00",
    "syntax": "[sideNumber] call BIS_fnc_sideName",
    "docSyntax": "[sideNumber] call BIS_fnc_sideName",
    "tags": "",
    "description": "Returns localized side name. * 0 / opfor (east) = \"OPFOR\" * 1 / blufor (west) = \"BLUFOR\" * 2 / independent (resistance) = \"Independent\" * 3 / civilian = \"Civilian\" * 4 / sideUnknown = \"Unknown\" * 5 / sideEnemy = \"Enemy\" * 6 / sideFriendly = \"Friendly\" * 7 / sideLogic = \"Game Logic\" * 8 / sideEmpty = \"Empty\" * 9 / sideAmbientLife = \"Ambient life\"",
    "example": "[2] call BIS_fnc_sideName;",
    "params": "<side>",
    "returns": "string"
  },
  "BIS_fnc_sideNameUnlocalized": {
    "command": "BIS_fnc_sideNameUnlocalized",
    "timestamp": "2021-01-23T20:20:06Z",
    "version": "1.00",
    "syntax": "<number> call BIS_fnc_sideNameUnlocalized",
    "docSyntax": "input call BIS_fnc_sideNameUnlocalized",
    "tags": "",
    "description": "Returns unlocalized side name.",
    "example": "west call BIS_fnc_sideNameUnlocalized;//Returns \"WEST\"",
    "params": "<number>",
    "returns": "string"
  },
  "BIS_fnc_sideType": {
    "command": "BIS_fnc_sideType",
    "timestamp": "2021-01-23T20:17:55Z",
    "version": "1.00",
    "syntax": "sideID call BIS_fnc_sideType",
    "docSyntax": "sideID call BIS_fnc_sideType",
    "tags": "",
    "description": "Returns side type based on side ID. See BIS_fnc_sideID for more information.",
    "example": "0 call BIS_fnc_sideType; // returns EAST",
    "params": "",
    "returns": "side"
  },
  "BIS_fnc_singleWingSlideDoorClose": {
    "command": "BIS_fnc_singleWingSlideDoorClose",
    "timestamp": "2021-01-22T22:46:19Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_singleWingSlideDoorClose",
    "docSyntax": "[] call BIS_fnc_singleWingSlideDoorClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_singleWingSlideDoorOpen": {
    "command": "BIS_fnc_singleWingSlideDoorOpen",
    "timestamp": "2021-01-22T22:41:27Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_singleWingSlideDoorOpen",
    "docSyntax": "[] call BIS_fnc_singleWingSlideDoorOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_skirmishTrigger": {
    "command": "BIS_fnc_skirmishTrigger",
    "timestamp": "2021-01-23T20:18:56Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_skirmishTrigger -->",
    "docSyntax": "<!-- [] call BIS_fnc_skirmishTrigger -->",
    "tags": "",
    "description": "An internally used .fsm.",
    "example": "[] call BIS_fnc_skirmishTrigger;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_spawnObjects": {
    "command": "BIS_fnc_spawnObjects",
    "timestamp": "2021-01-23T20:35:47Z",
    "version": "1.00",
    "syntax": "[positionasl, <string>, <number>, <array>, <number>, <code>, <boolean>] call BIS_fnc_spawnObjects",
    "docSyntax": "[position, className, count, offsetMatrix, offsetDir, dirNoise, enableSimulation] call BIS_fnc_spawnObjects",
    "tags": "",
    "description": "Create a stack of objects at given position or on top of given object (eg. table).",
    "example": "_randomPos = [(random 0.2) -0.1, (random 0.2) -0.1, 0]; _objects = [nowiki[_table, \"TOP\"], \"Box_NATO_Wps_F\", 3, _randomPos,(random 20)-10] call BIS_fnc_spawnObjects;",
    "params": "positionasl <string> <number> <array> <number> <code> <boolean>",
    "returns": "objects"
  },
  "BIS_fnc_splitString": {
    "command": "BIS_fnc_splitString",
    "timestamp": "2021-01-23T20:19:09Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, <boolean>] call BIS_fnc_splitString",
    "docSyntax": "[stringToSplit, separators, byWord] call BIS_fnc_splitString",
    "tags": "",
    "description": "Splits given string according to given separator(s).",
    "example": "[\"this is a test\", \" \"] call BIS_fnc_splitString; codecomment// returns [\"this\", \"is\", \"a\", \"test\"]",
    "params": "<string> <string> <boolean>",
    "returns": "strings"
  },
  "BIS_fnc_stalk": {
    "command": "BIS_fnc_stalk",
    "timestamp": "2021-01-23T20:36:22Z",
    "version": "1.00",
    "syntax": "[<group>, <group>, <number>, <number>, <code>, <string>] spawn BIS_fnc_stalk",
    "docSyntax": "[stalker, stalked, refresh, radius, endCondition, endDestination] spawn BIS_fnc_stalk",
    "tags": "",
    "description": "Continuously set WP of one group to a different group to hunt it. It does not change the group's behaviour.br Script terminates if one of the groups is eliminated or if the optional condition is activated.",
    "example": "_stalking = [BIS_grpStalkers, BIS_grpPlayer] spawn BIS_fnc_stalk;",
    "params": "<group> <group> <number> <number> <code> <string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_storeParamsValues": {
    "command": "BIS_fnc_storeParamsValues",
    "timestamp": "2021-01-23T20:23:09Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_storeParamsValues",
    "docSyntax": "call BIS_fnc_storeParamsValues",
    "tags": "[SE]",
    "description": "Parses mission params and stores them into public variable '\"BIS_fnc_storeParamsValues_data\"'. Use BIS_fnc_getParamValue to retrieve params values from the variable.",
    "example": "call BIS_fnc_storeParamsValues;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_strategicMapAnimate": {
    "command": "BIS_fnc_strategicMapAnimate",
    "timestamp": "2021-01-22T22:42:49Z",
    "version": "1.00",
    "syntax": "[<config>,<number>] spawn BIS_fnc_strategicMapAnimate",
    "docSyntax": "[target,time] spawn BIS_fnc_strategicMapAnimate",
    "tags": "",
    "description": "Animates a Strategic Map.",
    "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", 5] spawn BIS_fnc_strategicMapAnimate;",
    "params": "<config> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_strategicMapMouseButtonClick": {
    "command": "BIS_fnc_strategicMapMouseButtonClick",
    "timestamp": "2021-01-22T22:43:43Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "Internal function used by BIS_fnc_strategicMapOpen.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_strategicMapOpen": {
    "command": "BIS_fnc_strategicMapOpen",
    "timestamp": "2021-01-22T22:53:46Z",
    "version": "1.00",
    "syntax": "[<display>,<position>,<array>,strings,strings,<array>,<number>,<boolean>,<number>,<boolean>,<string>,<boolean>,<string>] call BIS_fnc_strategicMapOpen",
    "docSyntax": "[display,pos,missions,ORBATs,markers,images,weather,night,scale,simulation,label,missionName,missionIcon] call BIS_fnc_strategicMapOpen",
    "tags": "",
    "description": "Creates a strategic map. center|600px",
    "example": "[ findDisplay 46, [2000,2000,0], [ [ [2000,2000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"1st Mission\", \"This is mission one\", \"Name of mission's player\", \"\\A3\\Data_F_Exp\\Logos\\arma3_exp_icon_ca.paa\", 1.5, [ player ] ], [ [1000,1000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"2nd Mission\", \"This is mission two\", \"Name of mission's player\", \"\\A3\\Data_F_Argo\\Logos\\arma3_argo_logoTitle_ca.paa\", 1.5, [ player ] ] ], [ [ [3000,3000,0], configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1\", [], 10 ] ], [ \"marker_1\", \"marker_2\" ], [ [ \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\", [0,0,0,1], [4000,4000,0], 8, 8, 0, \"Arma 3 Logo\", true ] ], 0, false, 1, true, \"Strategic Map Example\", false, \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\" ] call BIS_fnc_strategicMapOpen;",
    "params": "<display> <position> <array> strings strings <array> <number> <boolean> <number> <boolean> <string> <boolean> <string>",
    "returns": "display"
  },
  "BIS_fnc_subClasses": {
    "command": "BIS_fnc_subClasses",
    "timestamp": "2021-01-23T20:28:18Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_subClasses -->",
    "docSyntax": "<!-- [] call BIS_fnc_subClasses -->",
    "tags": "",
    "description": "''Same function as BIS_fnc_returnChildren''",
    "example": "[] call BIS_fnc_subClasses;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_synchronizedObjects": {
    "command": "BIS_fnc_synchronizedObjects",
    "timestamp": "2021-01-23T20:21:08Z",
    "version": "1.00",
    "syntax": "[<object>,<string>,<boolean>] call BIS_fnc_synchronizedObjects",
    "docSyntax": "[object,filter,preciseMatch] call BIS_fnc_synchronizedObjects",
    "tags": "",
    "description": "Get all objects of given type directly synchronized to the given object. Works in <Eden Editor> too.",
    "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_synchronizedObjects;",
    "params": "<object> <string> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_synchronizedObjectsQueue": {
    "command": "BIS_fnc_synchronizedObjectsQueue",
    "timestamp": "2021-01-23T20:35:33Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_synchronizedObjectsQueue",
    "docSyntax": "[] call BIS_fnc_synchronizedObjectsQueue",
    "tags": "",
    "description": "\nAuthor: Jiri Wainar \nDescription: Return sequence of all synchronized objects forming either line or circle. Parameter(s): \n0: OBJECT - starting object \n1: STRING or ARRAY of STRINGs (Optional) - object types that are considered \n2: BOOL (Optional) - class filter uses exact match true (default): objects need to match exectly one of the filter classes \nfalse: exact match is not required, objects can inherit from one of the listed classes \n3: NUMBER (Optional) - expected connection shape 0 (default): none, can be either line or circle \n1: line expected \n2: circle expected \nReturns: ARRAY of OBJECTs or empty ARRAY if error is encountered \nErrors: * There are more then 2 objects matching class filter connected. * Circle is required but closing connection is not detected. \nExample: [_start,[\"ModuleToWAreaVertex_F\",\"ModuleToWAreaOptions_F\"],true,0] call BIS_fnc_synchronizedObjectsQueue;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_target": {
    "command": "BIS_fnc_target",
    "timestamp": "2021-01-23T20:20:46Z",
    "version": "1.00",
    "syntax": "[<string>, <array>] call BIS_fnc_target",
    "docSyntax": "[action, parameters] call BIS_fnc_target",
    "tags": "",
    "description": "300px|thumb|right|Target Board display Handles the shooting targets in the Bootcamp DLC, statistics, animation, etc. (targets such as TargetBootcampHuman_f)",
    "example": "// open the Score Board [\"uiOpen\", [myTarget]] call BIS_fnc_target;",
    "params": "<string> <array> hitpart",
    "returns": "see above table"
  },
  "BIS_fnc_taskAlwaysVisible": {
    "command": "BIS_fnc_taskAlwaysVisible",
    "timestamp": "2021-01-23T20:30:46Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskAlwaysVisible",
    "docSyntax": "taskID call BIS_fnc_taskAlwaysVisible",
    "tags": "[AG]",
    "description": "Returns true if task is forced to be always visible (\ndefault: false). FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "_isForcedVisible = \"task_1\" call BIS_fnc_taskAlwaysVisible;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_taskChildren": {
    "command": "BIS_fnc_taskChildren",
    "timestamp": "2021-01-23T20:18:24Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskChildren",
    "docSyntax": "taskID call BIS_fnc_taskChildren",
    "tags": "[AG] [EG]",
    "description": "Return a task's sub-tasks. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"task_1\" call BIS_fnc_taskChildren;",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_taskCompleted": {
    "command": "BIS_fnc_taskCompleted",
    "timestamp": "2021-01-23T20:27:24Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskCompleted",
    "docSyntax": "taskID call BIS_fnc_taskCompleted",
    "tags": "[AG] [EG]",
    "description": "Returns true if task has been completed. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "_completed = \"task_1\" call BIS_fnc_taskCompleted;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_taskCreate": {
    "command": "BIS_fnc_taskCreate",
    "timestamp": "2021-01-23T20:29:10Z",
    "version": "1.00",
    "syntax": "[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call BIS_fnc_taskCreate",
    "docSyntax": "[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call BIS_fnc_taskCreate",
    "tags": "[AG] [EG]",
    "description": "Create a task.",
    "example": "sqf[civilian, \"task1\", [\"Do this and you get a cookie\", \"Earn Cookie\", \"cookiemarker\"], [0,0,0], \"ASSIGNED\", 2, true] call BIS_fnc_taskCreate;</sqf>",
    "params": "task task <number> <boolean> <string> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_taskCurrent": {
    "command": "BIS_fnc_taskCurrent",
    "timestamp": "2021-01-23T20:35:08Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_taskCurrent",
    "docSyntax": "unit call BIS_fnc_taskCurrent",
    "tags": "[AG] [EG]",
    "description": "Returns unit's current task. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "_currentTask = player call BIS_fnc_taskCurrent;",
    "params": "<object>",
    "returns": "string"
  },
  "BIS_fnc_taskDescription": {
    "command": "BIS_fnc_taskDescription",
    "timestamp": "2021-01-23T20:18:58Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskDescription",
    "docSyntax": "taskName call BIS_fnc_taskDescription",
    "tags": "[AG] [EG]",
    "description": "Return a task's description. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"BIS_task_01\" call BIS_fnc_taskDescription;",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_taskDestination": {
    "command": "BIS_fnc_taskDestination",
    "timestamp": "2021-01-23T20:20:15Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskDestination",
    "docSyntax": "taskName call BIS_fnc_taskDestination",
    "tags": "[AG] [EG]",
    "description": "Return a task's destination. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"BIS_task_01\" call BIS_fnc_taskDestination;",
    "params": "<string>",
    "returns": "position | setsimpletasktarget"
  },
  "BIS_fnc_taskExists": {
    "command": "BIS_fnc_taskExists",
    "timestamp": "2021-01-22T20:14:34Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_taskExists",
    "docSyntax": "[taskName] call BIS_fnc_taskExists",
    "tags": "[AG] [EG]",
    "description": "Return true if a task exists. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "_exists = [\"MyTask\"] call BIS_fnc_taskExists;",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_taskHint": {
    "command": "BIS_fnc_taskHint",
    "timestamp": "2021-01-23T20:25:42Z",
    "version": "1.00",
    "syntax": "[<string>, <string>] call BIS_fnc_taskHint",
    "docSyntax": "[taskName, taskState] call BIS_fnc_taskHint",
    "tags": "",
    "description": "Shows a task hint. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskHint;",
    "params": "<string> <string>",
    "returns": "boolean"
  },
  "BIS_fnc_taskParent": {
    "command": "BIS_fnc_taskParent",
    "timestamp": "2021-01-23T20:22:49Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskParent",
    "docSyntax": "taskName call BIS_fnc_taskParent",
    "tags": "[AG] [EG]",
    "description": "Return a sub-task's parent task. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"BIS_task_01\" call BIS_fnc_taskParent;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_taskReal": {
    "command": "BIS_fnc_taskReal",
    "timestamp": "2021-01-23T20:34:23Z",
    "version": "1.00",
    "syntax": "[<string>, <object>] call BIS_fnc_taskReal",
    "docSyntax": "[taskName, owner] call BIS_fnc_taskReal",
    "tags": "[AG]",
    "description": "Find the actual task associated with a task name assigned to a unit. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[ \"testTask\", player ] call BIS_fnc_taskReal; //Returns 'Task testTask (id 0)'",
    "params": "<string> <object>",
    "returns": "task"
  },
  "BIS_fnc_taskSetCurrent": {
    "command": "BIS_fnc_taskSetCurrent",
    "timestamp": "2021-01-23T20:32:45Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskSetCurrent",
    "docSyntax": "taskName call BIS_fnc_taskSetCurrent",
    "tags": "[AG] [EG]",
    "description": "Set a task to current. Identical to assigning a task. FeatureInformative See <Arma \n3: Task Framework>.",
    "example": "\"BIS_task_01\" call BIS_fnc_taskSetCurrent;",
    "params": "<string>",
    "returns": "boolean"
  },
  "BIS_fnc_taskSetDescription": {
    "command": "BIS_fnc_taskSetDescription",
    "timestamp": "2021-01-23T20:34:12Z",
    "version": "1.00",
    "syntax": "[<string>, [<string>, <string>, <string>]] call BIS_fnc_taskSetDescription",
    "docSyntax": "[taskId, [taskDescription, taskTitle, taskMarker]] call BIS_fnc_taskSetDescription",
    "tags": "[AG] [EG]",
    "description": "Set a task description. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[ \"tsk_destroyAA\", [ \"You should plant Satchels under those Shilkas! Good luck.\", \"Destroy the Shilkas\", \"Shilkas\" ] ] call BIS_fnc_taskSetDescription;",
    "params": "<string> <string> <string> <string>",
    "returns": "boolean"
  },
  "BIS_fnc_taskSetDestination": {
    "command": "BIS_fnc_taskSetDestination",
    "timestamp": "2021-01-23T20:24:01Z",
    "version": "1.00",
    "syntax": "[<string>, <object>] call BIS_fnc_taskSetDestination",
    "docSyntax": "[taskName, destination] call BIS_fnc_taskSetDestination",
    "tags": "[AG] [EG]",
    "description": "Set a task's destination. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_task_01\",[1337,1337,0]] call BIS_fnc_taskSetDestination;",
    "params": "<string> <object>",
    "returns": "string"
  },
  "BIS_fnc_taskSetState": {
    "command": "BIS_fnc_taskSetState",
    "timestamp": "2021-01-23T20:22:53Z",
    "version": "1.00",
    "syntax": "[<string>, <string>, <boolean>] call BIS_fnc_taskSetState",
    "docSyntax": "[taskName, taskState, showHint] call BIS_fnc_taskSetState",
    "tags": "[AG] [EG]",
    "description": "Set a task's state. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskSetState;",
    "params": "<string> <string> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_tasksUnit": {
    "command": "BIS_fnc_tasksUnit",
    "timestamp": "2021-01-23T20:27:27Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_tasksUnit",
    "docSyntax": "target call BIS_fnc_tasksUnit",
    "tags": "[AG]",
    "description": "Grab all tasks currently created for a given unit. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "player call BIS_fnc_tasksUnit;",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_taskVar": {
    "command": "BIS_fnc_taskVar",
    "timestamp": "2021-01-23T20:21:29Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_taskVar",
    "docSyntax": "taskID call BIS_fnc_taskVar",
    "tags": "",
    "description": "Returns task's variable name. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "\"task_1\" call BIS_fnc_taskVar;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_teamColor": {
    "command": "BIS_fnc_teamColor",
    "timestamp": "2021-01-23T20:34:32Z",
    "version": "1.00",
    "syntax": "[<number>, color] call BIS_fnc_teamColor",
    "docSyntax": "[teamId, getColour] call BIS_fnc_teamColor",
    "tags": "",
    "description": "Convert number to color team name or color.",
    "example": "[2, true] call BIS_fnc_teamColor;",
    "params": "<number> color",
    "returns": "string"
  },
  "BIS_fnc_terrainGradAngle": {
    "command": "BIS_fnc_terrainGradAngle",
    "timestamp": "2021-01-23T20:19:31Z",
    "version": "1.00",
    "syntax": "<!-- [<object>, <number>, <number>] call BIS_fnc_terrainGradAngle; -->",
    "docSyntax": "<!-- [object, direction, delta] call BIS_fnc_terrainGradAngle; -->",
    "tags": "",
    "description": "Returns the gradient angle (in radians) of the terrain at a specified position and a compass direction. It is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction.",
    "example": "_radGrad = [getPos player, getDir player] call BIS_fnc_terrainGradAngle;",
    "params": "<object> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_textTiles": {
    "command": "BIS_fnc_textTiles",
    "timestamp": "2021-01-23T20:18:11Z",
    "version": "1.00",
    "syntax": "[<string>, <boolean>, <number>, <number>, <number>, <number>] spawn BIS_fnc_textTiles",
    "docSyntax": "[content, position, tileSize, duration, fadeInOutTime, tileTransparency] spawn BIS_fnc_textTiles",
    "tags": "[EL]",
    "description": "Shows an animated text with background tiles.<br/> left|400px",
    "example": "nowiki[</nowiki>parseText \"<t font='PuristaBold' size='1.6'>MyMission</t>&lt;br /&gt;by Username\", true, nil, 7, 0.7, 0] spawn BIS_fnc_textTiles;",
    "params": "<string> <boolean> <number> <number> <number> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_textureMarker": {
    "command": "BIS_fnc_textureMarker",
    "timestamp": "2021-01-23T20:19:17Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_textureMarker",
    "docSyntax": "[wantedMarker] call BIS_fnc_textureMarker",
    "tags": "",
    "description": "Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.",
    "example": "_notWhiteFlag = [\"flag_France\"] call BIS_fnc_textureMarker;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_textureVehicleIcon": {
    "command": "BIS_fnc_textureVehicleIcon",
    "timestamp": "2021-01-23T20:29:46Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_textureVehicleIcon",
    "docSyntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon",
    "tags": "",
    "description": "Checks whether icon is defined in CfgVehicleIcons and if so, returns the icon.",
    "example": "_mediTexture = [\"iconManMedic\"] call BIS_fnc_textureVehicleIcon;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_titlecard": {
    "command": "BIS_fnc_titlecard",
    "timestamp": "2021-01-24T00:52:45Z",
    "version": "1.00",
    "syntax": "[<string>, <string>] call BIS_fnc_titlecard",
    "docSyntax": "[path, subtitle] call BIS_fnc_titlecard",
    "tags": "",
    "description": "Display a mission-specific titlecard before the mission begins. Only works the first time it is called.",
    "example": "[\"\\a3\\missions_f_epb\\video\\b_out2_quotation.ogv\", \"your translation\"] call BIS_fnc_titlecard;",
    "params": "<string> <string>",
    "returns": "boolean"
  },
  "BIS_fnc_toUpperDisplayTexts": {
    "command": "BIS_fnc_toUpperDisplayTexts",
    "timestamp": "2021-01-24T00:35:55Z",
    "version": "1.00",
    "syntax": "[<string>, <array>, <array>] call BIS_fnc_toUpperDisplayTexts",
    "docSyntax": "[displayClass, controlClasses, blacklist] call BIS_fnc_toUpperDisplayTexts",
    "tags": "",
    "description": "Converts text of selected classes in one display to upper-case except classes with name 'PlayersName'. Also searches inside CT_CONTROLS_GROUPs.",
    "example": "[\"RscDisplayOptionsAudio\", [\"RscText\"]] call BIS_fnc_toUpperDisplayTexts;",
    "params": "<string> <array> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_traceBullets": {
    "command": "BIS_fnc_traceBullets",
    "timestamp": "2021-01-24T00:26:23Z",
    "version": "1.00",
    "syntax": "[<object>, <number>] call BIS_fnc_traceBullets",
    "docSyntax": "[unit, number] call BIS_fnc_traceBullets",
    "tags": "",
    "description": "Visualise unit's bullet trajectories. Can only be used on one shooter in a single instance.br If you want to change the unit, first set icBIS_tracedShooter = nil ''then'' execute the script again.",
    "example": "[player] spawn BIS_fnc_traceBullets;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_trackMissionTime": {
    "command": "BIS_fnc_trackMissionTime",
    "timestamp": "2021-01-24T00:54:32Z",
    "version": "1.00",
    "syntax": "[<boolean>, <boolean>] call BIS_fnc_trackMissionTime",
    "docSyntax": "[save, delete] call BIS_fnc_trackMissionTime",
    "tags": "",
    "description": "Tracks mission time by storing time in profileNamespace.",
    "example": "[true, true] call BIS_fnc_trackMissionTime; // Delete saved mission time",
    "params": "<boolean> <boolean>",
    "returns": "number"
  },
  "BIS_fnc_tridentClient": {
    "command": "BIS_fnc_tridentClient",
    "timestamp": "2021-01-24T00:33:14Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_tridentClient -->",
    "docSyntax": "<!-- [] call BIS_fnc_tridentClient -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_tridentExecute": {
    "command": "BIS_fnc_tridentExecute",
    "timestamp": "2021-01-23T23:59:29Z",
    "version": "1.00",
    "syntax": "[<side>, <side>, <code>, <code>] call BIS_fnc_tridentExecute",
    "docSyntax": "[side_1, side_2, codeFriendly, codeEnemy] call BIS_fnc_tridentExecute",
    "tags": "",
    "description": "Execute a code based on Trident relationship.",
    "example": "[west, east, { params [\"_higherScore\", \"_lowerScore\", \"_areAllied\"] }] call BIS_fnc_tridentExecute;",
    "params": "<side> <side> <code> <code>",
    "returns": "boolean | true"
  },
  "BIS_fnc_tridentGetRelationship": {
    "command": "BIS_fnc_tridentGetRelationship",
    "timestamp": "2021-01-24T10:41:24Z",
    "version": "1.00",
    "syntax": "[<side>, <side>] call BIS_fnc_tridentGetRelationship",
    "docSyntax": "[side_1, side_2] call BIS_fnc_tridentGetRelationship",
    "tags": "",
    "description": "Gets the relationship of competing Trident sides. The value slowly decreases towards 0.",
    "example": "nowiki[</nowiki>west, east] call BIS_fnc_tridentGetRelationship;",
    "params": "<side> <side>",
    "returns": "number"
  },
  "BIS_fnc_tridentHandleDamage": {
    "command": "BIS_fnc_tridentHandleDamage",
    "timestamp": "2021-01-24T10:40:00Z",
    "version": "1.00",
    "syntax": "<object> call BIS_fnc_tridentHandleDamage",
    "docSyntax": "object call BIS_fnc_tridentHandleDamage",
    "tags": "",
    "description": "Register a unit as Trident unit. When competing sides are still friendly and the unit is killed by the competing side, the killer won't be punsihed by negative score. Instead, Trident relationship will decrease.",
    "example": "BIS_tridentObject call BIS_fnc_tridentHandleDamage;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_tridentSetRelationship": {
    "command": "BIS_fnc_tridentSetRelationship",
    "timestamp": "2021-01-24T10:46:06Z",
    "version": "1.00",
    "syntax": "[<side>, <side>, <number>, <boolean>] call BIS_fnc_tridentSetRelationship",
    "docSyntax": "[side1, side2, value, absolute] call BIS_fnc_tridentSetRelationship",
    "tags": "",
    "description": "Set relationship of competing Trident sides. When the value reaches threshold, side relationship will change. The value slowly decreases towards 0.",
    "example": "[west, east, 0.5, true] call BIS_fnc_tridentSetRelationship;",
    "params": "<side> <side> <number> <boolean>",
    "returns": "number"
  },
  "BIS_fnc_triggerToMarker": {
    "command": "BIS_fnc_triggerToMarker",
    "timestamp": "2021-01-24T10:45:42Z",
    "version": "1.00",
    "syntax": "[<object>, <string>] call BIS_fnc_triggerToMarker",
    "docSyntax": "[trigger, markerName] call BIS_fnc_triggerToMarker",
    "tags": "[EL]",
    "description": "Makes an existing or new trigger cover a marker area.",
    "example": "_createdTrigger = [objNull, myAreaTrigger] call BIS_fnc_triggerToMarker;",
    "params": "<object> <string>",
    "returns": "object | objnull"
  },
  "BIS_fnc_trimString": {
    "command": "BIS_fnc_trimString",
    "timestamp": "2021-01-24T10:44:31Z",
    "version": "1.00",
    "syntax": "[<string>, <number>, <number>] call BIS_fnc_trimString",
    "docSyntax": "[someText, beginning, length] call BIS_fnc_trimString",
    "tags": "",
    "description": "Get a substring out of the string. Featurearma3Use select instead.",
    "example": "[\"dreaded_is_the_man\", 0, 6] call BIS_fnc_trimString; // will return \"dreaded\"",
    "params": "<string> <number> <number>",
    "returns": "string"
  },
  "BIS_fnc_twoWingDoorNoHandleClose": {
    "command": "BIS_fnc_twoWingDoorNoHandleClose",
    "timestamp": "2021-01-22T22:39:55Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorNoHandleClose",
    "docSyntax": "[] call BIS_fnc_twoWingDoorNoHandleClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingDoorNoHandleOpen": {
    "command": "BIS_fnc_twoWingDoorNoHandleOpen",
    "timestamp": "2021-01-22T22:44:08Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorNoHandleOpen",
    "docSyntax": "[] call BIS_fnc_twoWingDoorNoHandleOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingDoorOneHandleClose": {
    "command": "BIS_fnc_twoWingDoorOneHandleClose",
    "timestamp": "2021-01-22T22:48:14Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorOneHandleClose",
    "docSyntax": "[] call BIS_fnc_twoWingDoorOneHandleClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingDoorOneHandleOpen": {
    "command": "BIS_fnc_twoWingDoorOneHandleOpen",
    "timestamp": "2021-01-22T22:52:24Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorOneHandleOpen",
    "docSyntax": "[] call BIS_fnc_twoWingDoorOneHandleOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingDoorTwoHandleClose": {
    "command": "BIS_fnc_twoWingDoorTwoHandleClose",
    "timestamp": "2021-01-22T22:54:27Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorTwoHandleClose",
    "docSyntax": "[] call BIS_fnc_twoWingDoorTwoHandleClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingDoorTwoHandleOpen": {
    "command": "BIS_fnc_twoWingDoorTwoHandleOpen",
    "timestamp": "2021-01-22T22:40:51Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingDoorTwoHandleOpen",
    "docSyntax": "[] call BIS_fnc_twoWingDoorTwoHandleOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingSlideDoorClose": {
    "command": "BIS_fnc_twoWingSlideDoorClose",
    "timestamp": "2021-01-22T22:51:41Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingSlideDoorClose",
    "docSyntax": "[] call BIS_fnc_twoWingSlideDoorClose",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_twoWingSlideDoorOpen": {
    "command": "BIS_fnc_twoWingSlideDoorOpen",
    "timestamp": "2021-01-22T22:58:33Z",
    "version": "1.00",
    "syntax": "[] call BIS_fnc_twoWingSlideDoorOpen",
    "docSyntax": "[] call BIS_fnc_twoWingSlideDoorOpen",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_typeText": {
    "command": "BIS_fnc_typeText",
    "timestamp": "2021-01-24T10:39:48Z",
    "version": "1.00",
    "syntax": "[stringLines, <number>, <number>, <string>] spawn BIS_fnc_typeText",
    "docSyntax": "[stringLines, posX, posY, rootFormat] spawn BIS_fnc_typeText",
    "tags": "[EL]",
    "description": "Types a structured text on the screen, letter by letter, cursor blinking.br left|400px",
    "example": "[ [ [\"CAMP ROGAIN,\", \"<t align = 'center' shadow = '1' size = '0.7' font='PuristaBold'>%1</t>\"], [\"RESUPPLY POINT\", \"<t align = 'center' shadow = '1' size = '0.7'>%1</t>&lt;br/&gt;\"], [\"10 MINUTES LATER ...\", \"<t align = 'center' shadow = '1' size = '1.0'>%1</t>\", 15] ] ] spawn BIS_fnc_typeText;",
    "params": "<string> <number> <number> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_typeText2": {
    "command": "BIS_fnc_typeText2",
    "timestamp": "2021-01-24T10:47:14Z",
    "version": "1.00",
    "syntax": "[stringLines, <number>, <number>, <boolean>, <string>, <array>, <code>, <boolean>] call BIS_fnc_typeText2",
    "docSyntax": "[stringLines, posX, posY, alignBottom, rootFormat, abortParams, abortCond, playSounds] call BIS_fnc_typeText2",
    "tags": "[EL]",
    "description": "400px|right Types a structured text on the screen, letter by letter, cursor blinking. Note that line returns are manual, unlike BIS_fnc_typeText.",
    "example": "sqf [ [ [\"CAMP ROGAIN, \", \"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"], [\"RESUPPLY POINT\", \"align = 'center' shadow = '1' size = '0.7'\", \"#aaaaaa\"], [\"\", \"<br/>\"], // line break [\"10 MINUTES LATER...\", \"align = 'center' shadow = '1' size = '1.0'\"] ] ] spawn BIS_fnc_typeText2; </sqf>",
    "params": "<string> <number> <number> <boolean> <string> <array> <code> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_uniqueClasses": {
    "command": "BIS_fnc_uniqueClasses",
    "timestamp": "2021-01-24T10:41:16Z",
    "version": "1.00",
    "syntax": "<!-- [] call BIS_fnc_uniqueClasses; -->",
    "docSyntax": "<!-- [] call BIS_fnc_uniqueClasses; -->",
    "tags": "",
    "description": "\nDescription: Composes array of classes with unique param (based on returned value of passed code). If class inherits the param from parent, it is not listed. Parameter(s): \n0: CONFIG - class which is searched \n1: CODE - code executed on class, which is passed as _this \nReturns: ARRAY - classes in format [class,value] \nclass: CONFIG - class with unique param \nvalue: ANY - value returned by the passed code for the given class",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_unitAddon": {
    "command": "BIS_fnc_unitAddon",
    "timestamp": "2021-01-24T10:42:32Z",
    "version": "1.00",
    "syntax": "[<object>] call BIS_fnc_unitAddon",
    "docSyntax": "[object] call BIS_fnc_unitAddon",
    "tags": "",
    "description": "Return addon from CfgPatches to which a given object belongs to.",
    "example": "[ player ] call BIS_fnc_unitAddon;",
    "params": "<object>",
    "returns": "string"
  },
  "BIS_fnc_unpackStaticWeapon": {
    "command": "BIS_fnc_unpackStaticWeapon",
    "timestamp": "2021-01-24T10:47:54Z",
    "version": "1.00",
    "syntax": "[<group>, <array>, <array>, leaderPos] call BIS_fnc_unpackStaticWeapon",
    "docSyntax": "[group, weaponPos, targetPos, leaderPos] call BIS_fnc_unpackStaticWeapon",
    "tags": "",
    "description": "This function will move given support team to the given weapon position. The weapon crew will unpack carried weapon and start watching given target position. Requires three personnel in the \nteam: Team Leader, Gunner and Asst. Gunner. This function is MP compatible.br When the weapon is unpacked, the \"StaticWeaponUnpacked\" scripted EH is called. FeatureInformative If a unit flees, all bets are off and the function will exit leaving units on their own.br<!-- -->To guarantee weapon disassembly, make sure the group has maximum \ncourage: ic_group allowFleeing 0;.</code>",
    "example": "[leader1, \"weapon_mrk\", \"target_mrk\"] call BIS_fnc_unpackStaticWeapon;",
    "params": "<group> <array> <array> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_updatePlayerArray": {
    "command": "BIS_fnc_updatePlayerArray",
    "timestamp": "2021-01-24T10:41:17Z",
    "version": "1.00",
    "syntax": "[<array>] call BIS_fnc_updatePlayerArray",
    "docSyntax": "[input] call BIS_fnc_updatePlayerArray",
    "tags": "",
    "description": "Updates dead player objects to their current respawned objects.",
    "example": "_newPlayerObjects = _oldPlayerObjects call BIS_fnc_updatePlayerArray;",
    "params": "<array>",
    "returns": "array"
  },
  "BIS_fnc_validateParametersOO": {
    "command": "BIS_fnc_validateParametersOO",
    "timestamp": "2021-01-24T10:42:28Z",
    "version": "1.00",
    "syntax": "[<string>,<string>,<array>] call BIS_fnc_validateParametersOO",
    "docSyntax": "[class,method,params] call BIS_fnc_validateParametersOO",
    "tags": "",
    "description": "Validating the parameters of a certain method in a class.",
    "example": "[\"someClass\",\"someMethod\",[5,47,\"test\"]] call BIS_fnc_validateParametersOO;",
    "params": "<string> <string> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_vectorDivide": {
    "command": "BIS_fnc_vectorDivide",
    "timestamp": "2021-01-24T10:40:12Z",
    "version": "1.00",
    "syntax": "[<array>, <number>] call BIS_fnc_vectorDivide",
    "docSyntax": "[vector, divider] call BIS_fnc_vectorDivide",
    "tags": "",
    "description": "Divides vector by scalar, by dividing all vector elements. Feature Informative vectorMultiply can be used instead as icvector vectorMultiply 1/scale, \nbut: * ''scale'' cannot be 0 * in some rare cases, the result is not ''exactly'' the same as BIS_fnc_vectorDivide - this is due to <Floating Point Number> precision and rounding.",
    "example": "[nowiki[123, 456, 789], 5] call BIS_fnc_vectorDivide;",
    "params": "<array> <number>",
    "returns": "array | number"
  },
  "BIS_fnc_vehicleRoles": {
    "command": "BIS_fnc_vehicleRoles",
    "timestamp": "2021-01-24T10:39:38Z",
    "version": "1.00",
    "syntax": "vehicle call BIS_fnc_vehicleRoles",
    "docSyntax": "vehicle call BIS_fnc_vehicleRoles",
    "tags": "",
    "description": "Returns vehicle roles.",
    "example": "cursorObject call BIS_fnc_vehicleRoles;",
    "params": "",
    "returns": "array | code"
  },
  "BIS_fnc_versionInfo": {
    "command": "BIS_fnc_versionInfo",
    "timestamp": "2021-01-24T10:45:53Z",
    "version": "1.00",
    "syntax": "[gameTypeVersionControl, modControl] call BIS_fnc_versionInfo;",
    "docSyntax": "[gameTypeVersionControl, modControl] call BIS_fnc_versionInfo;",
    "tags": "",
    "description": "Fills the first passed control with game type and version number, and positions both controls according to the game type.",
    "example": "[_ctrlVersion, _ctrlModded] call BIS_fnc_versionInfo;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_VRDrawGrid": {
    "command": "BIS_fnc_VRDrawGrid",
    "timestamp": "2021-01-22T22:58:44Z",
    "version": "1.00",
    "syntax": "[<position>'', <array>''] call BIS_fnc_VRDrawGrid",
    "docSyntax": "[location'', colour''] call BIS_fnc_VRDrawGrid",
    "tags": "",
    "description": "Visualizes surface grid (used primarily for VR missions).br FeatureInformativeOnly one instance of grid visualisation can run at any given time. Calling this function multiple times will only move the grid center.",
    "example": "nowiki[</nowiki>getPosATL player, [0.078, 0.3647, 0.0]] call BIS_fnc_VRDrawGrid;",
    "params": "<position> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_VRFadeIn": {
    "command": "BIS_fnc_VRFadeIn",
    "timestamp": "2021-01-22T22:51:42Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_VRFadeIn",
    "docSyntax": "call BIS_fnc_VRFadeIn",
    "tags": "",
    "description": "Fade In effect for VR.",
    "example": "call BIS_fnc_VRFadeIn;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_VRFadeOut": {
    "command": "BIS_fnc_VRFadeOut",
    "timestamp": "2021-01-22T22:56:44Z",
    "version": "1.00",
    "syntax": "call BIS_fnc_VRFadeOut",
    "docSyntax": "call BIS_fnc_VRFadeOut",
    "tags": "",
    "description": "Fade Out effect for VR.",
    "example": "call BIS_fnc_VRFadeOut;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_VRTimer": {
    "command": "BIS_fnc_VRTimer",
    "timestamp": "2021-01-22T22:53:24Z",
    "version": "1.00",
    "syntax": "[<string>] spawn BIS_fnc_VRTimer",
    "docSyntax": "[colour] spawn BIS_fnc_VRTimer",
    "tags": "[EL]",
    "description": "Timer for VR and time trials. The following missionNamespace variables can be \nused: * \nBIS_stopTimer: set to true to stop the timer. Once stopped, the function must be executed again to restart the timer * \nRscFiringDrillTime_current: fill with <Structured Text> to display text instead of timer (when timer is stopped) * \nRscFiringDrillTime_done: set to true to close the display. '''Stop the timer first'''",
    "example": "[] spawn BIS_fnc_VRTimer;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_weaponAddon": {
    "command": "BIS_fnc_weaponAddon",
    "timestamp": "2021-01-24T10:45:43Z",
    "version": "1.00",
    "syntax": "classname call BIS_fnc_weaponAddon",
    "docSyntax": "classname call BIS_fnc_weaponAddon",
    "tags": "",
    "description": "Return addon from CfgPatches to which a given weapon class belongs to. Feature important This function is quite performance heavy, use only when absolutely necessary!",
    "example": "\"arifle_MX_F\" call BIS_fnc_weaponAddon; // returns \"A3_Weapons_F_Rifles_MX\"",
    "params": "",
    "returns": "string"
  },
  "BIS_fnc_weaponComponents": {
    "command": "BIS_fnc_weaponComponents",
    "timestamp": "2021-01-24T10:45:21Z",
    "version": "1.00",
    "syntax": "[<string>] call BIS_fnc_weaponComponents",
    "docSyntax": "[classname] call BIS_fnc_weaponComponents",
    "tags": "",
    "description": "Returns array with classname of the parent weapon (without attachments), followed by classnames of all its attachments.br Feature important The returned classnames are all converted to lower cases.",
    "example": "\"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents; cc[\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"]",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_weaponsEntityType": {
    "command": "BIS_fnc_weaponsEntityType",
    "timestamp": "2021-01-24T10:40:46Z",
    "version": "1.00",
    "syntax": "<string> call BIS_fnc_weaponsEntityType",
    "docSyntax": "class call BIS_fnc_weaponsEntityType",
    "tags": "",
    "description": "Return object's weapons as defined in config. Scans also turrets and pylons.",
    "example": "[nowiki\"B_Soldier_GL_F\"] call BIS_fnc_weaponsEntityType; // returns e.g [\"arifle_MX_GL_ACO_F\",\"hgun_P07_F\",\"Throw\",\"Put\"]",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_wpArtillery": {
    "command": "BIS_fnc_wpArtillery",
    "timestamp": "2021-01-24T10:44:14Z",
    "version": "1.00",
    "syntax": "[<group>, <array>, <object>, <number>, <string>] call BIS_fnc_wpArtillery",
    "docSyntax": "[group, position, target, firedRounds, type] call BIS_fnc_wpArtillery",
    "tags": "",
    "description": "Let group members fire artillery barrage on waypoint position. Units must have magazine type.",
    "example": "[group player, getMarkerPos \"artilleryStrike\", objNull, 30, \"8Rnd_82mm_Mo_shells\"] call BIS_fnc_wpArtillery;",
    "params": "<group> <array> <object> <number> <string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_wpLand": {
    "command": "BIS_fnc_wpLand",
    "timestamp": "2021-01-24T10:44:12Z",
    "version": "1.00",
    "syntax": "arguments: [<array>, <boolean>]",
    "docSyntax": "arguments: [dirParam, visualize]",
    "tags": "",
    "description": "\"LAND\" custom waypoint. Land on specific spot.",
    "example": "[player, position dude, 10, [42, 20], true] spawn BIS_fnc_wpLand;",
    "params": "<array> <boolean> <group> <position> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_wpPatrol": {
    "command": "BIS_fnc_wpPatrol",
    "timestamp": "2021-01-24T10:45:11Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantThis function does not work.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_wpRelax": {
    "command": "BIS_fnc_wpRelax",
    "timestamp": "2021-01-24T10:45:14Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantThis function does not work.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_wpSuppress": {
    "command": "BIS_fnc_wpSuppress",
    "timestamp": "2021-01-24T00:18:23Z",
    "version": "1.00",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantThis function does not work.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "clearItemPool": {
    "command": "clearItemPool",
    "timestamp": "2021-01-22T22:07:28Z",
    "version": "1.00",
    "syntax": "clearItemPool <object>",
    "docSyntax": "clearItemPool box",
    "tags": "",
    "description": "Removes all items from ammo box (or any general weapon holder container)",
    "example": "clearItemPool jeepOne",
    "params": "<object>",
    "returns": "nothing"
  },
  "ctrlSetDisabledColor": {
    "command": "ctrlSetDisabledColor",
    "timestamp": "2021-01-22T22:06:16Z",
    "version": "1.00",
    "syntax": "<control>SetDisabledColor [<number>, <<color>>]",
    "docSyntax": "ctrlSetDisabledColor [idc, color]",
    "tags": "",
    "description": "Sets the colorDisabled attribute of a control.",
    "example": "_control ctrlSetDisabledColor [0.5, 0.5, 0.5, 0.5];",
    "params": "<number> <color> <control> <color>",
    "returns": "nothing"
  },
  "diag_dumpScriptAssembly": {
    "command": "diag_dumpScriptAssembly",
    "timestamp": "2021-05-23T12:29:21Z",
    "version": "1.00",
    "syntax": "diag_dumpScriptAssembly <code>",
    "docSyntax": "diag_dumpScriptAssembly code",
    "tags": "",
    "description": "Dump script assembly.",
    "example": "diag_dumpScriptAssembly BIS_fnc_taskCreate;",
    "params": "<code>",
    "returns": "nothing"
  },
  "diag_enable": {
    "command": "diag_enable",
    "timestamp": "2021-05-23T12:30:42Z",
    "version": "1.00",
    "syntax": "<string> diag_enable <boolean>",
    "docSyntax": "mode diag_enable state",
    "tags": "",
    "description": "Toggles various diagnostics.",
    "example": "\"All\" 'diag_enable' true;",
    "params": "<string> <boolean>",
    "returns": "nothing"
  },
  "diag_enabled": {
    "command": "diag_enabled",
    "timestamp": "2021-05-23T12:31:30Z",
    "version": "1.00",
    "syntax": "diag_enabled <string>",
    "docSyntax": "diag_enabled mode",
    "tags": "",
    "description": "Checks whether specific diagnostic mode is activated.",
    "example": "\"Animation\" 'diag_enable' true; 'diag_enabled' \"Animation\"; // Returns true",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "diag_list": {
    "command": "diag_list",
    "timestamp": "2021-05-23T12:33:01Z",
    "version": "1.00",
    "syntax": "diag_list <string>",
    "docSyntax": "diag_list mode",
    "tags": "",
    "description": "Returns an array of all diagnostic modes available in the game.",
    "example": "'diag_list' \"toggle\";",
    "params": "<string>",
    "returns": "array"
  },
  "diag_mergeConfigFile": {
    "command": "diag_mergeConfigFile",
    "timestamp": "2021-05-23T12:33:28Z",
    "version": "1.00",
    "syntax": "diag_mergeConfigFile [<string>, <boolean>]",
    "docSyntax": "diag_mergeConfigFile [path, userdir]",
    "tags": "",
    "description": "Updates config without restarting. Attributes and classes can not be deleted unless icdelete is used. Changes to the config are applied to all new entities, a mission restart is not necessarily required. Spawning the vehicle again or switching weapons works too. Since GVIarma31.70 CfgAmmo should be mergeable as well. FeatureWarningMerging a config with an include statement, that points to a non existing file, will crash the game.",
    "example": "diag_mergeConfigFile [\"O:\\Arma3\\A3\\Stuff_F\\config.cpp\"]",
    "params": "<string> <boolean>",
    "returns": "nothing"
  },
  "diag_toggle": {
    "command": "diag_toggle",
    "timestamp": "2021-05-23T12:34:09Z",
    "version": "1.00",
    "syntax": "diag_toggle <string>",
    "docSyntax": "diag_toggle mode",
    "tags": "",
    "description": "Toggles various diagnostics.",
    "example": "diag_toggle \"Animation\"; // enable diag_toggle \"Animation\"; // disable ",
    "params": "<string>",
    "returns": "nothing"
  },
  "disableDebriefingStats": {
    "command": "disableDebriefingStats",
    "timestamp": "2021-01-22T22:49:22Z",
    "version": "1.00",
    "syntax": "disableDebriefingStats",
    "docSyntax": "disableDebriefingStats",
    "tags": "",
    "description": "Disable debriefing score table. Feature Warning This command is broken.",
    "example": "disableDebriefingStats;",
    "params": "",
    "returns": "nothing"
  },
  "enableDebriefingStats": {
    "command": "enableDebriefingStats",
    "timestamp": "2021-01-22T22:52:53Z",
    "version": "1.00",
    "syntax": "enableDebriefingStats [<number>, <number>, <number>, <number>]",
    "docSyntax": "enableDebriefingStats [left, top, width, height]",
    "tags": "",
    "description": "Enable debriefing score table.",
    "example": "enableDebriefingStats [0.1, 0.1, 0.8, 0.8];",
    "params": "<number> <number> <number> <number>",
    "returns": "nothing"
  },
  "enableSatNormalOnDetail": {
    "command": "enableSatNormalOnDetail",
    "timestamp": "2021-01-22T22:56:25Z",
    "version": "1.00",
    "syntax": "enableSatNormalOnDetail <boolean>",
    "docSyntax": "enableSatNormalOnDetail state",
    "tags": "",
    "description": "Enables/Disables satellite normal map or detail maps.",
    "example": "enableSatNormalOnDetail true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "fogParams": {
    "command": "fogParams",
    "timestamp": "2021-01-23T00:08:32Z",
    "version": "1.00",
    "syntax": "fogParams",
    "docSyntax": "fogParams",
    "tags": "",
    "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog",
    "example": "private _fog = fogParams",
    "params": "",
    "returns": "array | number | setfog"
  },
  "getDLCUsageTime": {
    "command": "getDLCUsageTime",
    "timestamp": "2021-05-06T11:59:16Z",
    "version": "1.00",
    "syntax": "getDLCUsageTime <number>",
    "docSyntax": "getDLCUsageTime appId",
    "tags": "",
    "description": "Returns total time the assets of the given DLC have been used. See Arma 3 DLCs & Expansions for a list of DLCs and ids.",
    "example": "private _kartsUsage = getDLCUsageTime 288520;",
    "params": "<number>",
    "returns": "number"
  },
  "getShadowDistance": {
    "command": "getShadowDistance",
    "timestamp": "2021-01-23T00:58:26Z",
    "version": "1.00",
    "syntax": "'getShadowDistance'",
    "docSyntax": "'getShadowDistance'",
    "tags": "",
    "description": "Gets the shadows rendering distance.",
    "example": "_value = getShadowDistance;",
    "params": "",
    "returns": "number"
  },
  "incapacitatedState": {
    "command": "incapacitatedState",
    "timestamp": "2021-01-23T09:26:47Z",
    "version": "1.00",
    "syntax": "incapacitatedState <object>",
    "docSyntax": "incapacitatedState person",
    "tags": "",
    "description": "Returns the incapacitated sub-state of the given unit, when the lifeState of the unit is \"INCAPACITATED\". Could be one \nof: * \"UNCONSCIOUS\" * \"MOVING\" * \"SHOOTING\"",
    "example": "_result = incapacitatedState player;",
    "params": "<object>",
    "returns": "string"
  },
  "isDLCAvailable": {
    "command": "isDLCAvailable",
    "timestamp": "2021-01-23T09:08:55Z",
    "version": "1.00",
    "syntax": "isDLCAvailable appId",
    "docSyntax": "isDLCAvailable appId",
    "tags": "",
    "description": "Returns true if the DLC (CDLC included) is marked as available on Steam. Official and Creator DLC appIds can be found on Arma \n3: DLCs & Expansions and Arma \n3: CDLCs pages. FeatureimportantThis command will return true if the DLC is owned, even if it is 'not' installed!",
    "example": "private _karts = 288520; isDLCAvailable _karts; // returns true",
    "params": "<number>",
    "returns": "boolean"
  },
  "lnbColorRight": {
    "command": "lnbColorRight",
    "timestamp": "2021-01-23T10:00:47Z",
    "version": "1.00",
    "syntax": "lnbColorRight [<number>, [<number>, <number>]]",
    "docSyntax": "lnbColorRight [idc, [row, column]]",
    "tags": "",
    "description": "Returns the right color of given row.",
    "example": "_color= _control lnbColorRight [0, 0];",
    "params": "<number> <number> <number> <control> <number> <number>",
    "returns": "array"
  },
  "lnbPictureRight": {
    "command": "lnbPictureRight",
    "timestamp": "2021-01-23T10:09:44Z",
    "version": "1.00",
    "syntax": "lnbPictureRight [<number>, [<number>, <number>]]",
    "docSyntax": "lnbPictureRight [idc, [row, column]]",
    "tags": "",
    "description": "Returns the right picture of given row. The ''column'' parameter does not matter.",
    "example": "_path = _control lnbPictureRight [0, 0];",
    "params": "<number> <number> <number> <control> <number> <number>",
    "returns": "string"
  },
  "lnbSetColorRight": {
    "command": "lnbSetColorRight",
    "timestamp": "2021-01-23T09:55:19Z",
    "version": "1.00",
    "syntax": "lnbSetColorRight [<number>, [<number>, <number>], <array>]",
    "docSyntax": "lnbSetColorRight [idc, [row, column], color]",
    "tags": "",
    "description": "Sets the right color.",
    "example": "_control lnbSetColorRight [nowiki[0, 0], [1,1,1,0.5]];",
    "params": "<number> <number> <number> <array> <control> <number> <number> <array>",
    "returns": "nothing"
  },
  "lnbSetPictureColorRight": {
    "command": "lnbSetPictureColorRight",
    "timestamp": "2021-01-23T09:54:33Z",
    "version": "1.00",
    "syntax": "lnbSetPictureColorRight [<number>, [<number>, <number>], <array>]",
    "docSyntax": "lnbSetPictureColorRight [idc, [row, column], color]",
    "tags": "",
    "description": "Sets color of the right picture in a CT_LISTNBOX.",
    "example": "_control lnbSetPictureColorRight [nowiki[0, 0], [1,1,1,0.5]];",
    "params": "<number> <number> <number> <array> <control> <number> <number> <array>",
    "returns": "nothing"
  },
  "lnbSetPictureColorSelected": {
    "command": "lnbSetPictureColorSelected",
    "timestamp": "2021-05-06T12:00:44Z",
    "version": "1.00",
    "syntax": "lnbSetPictureColorSelected [<number>, [<number>, <number>], color]",
    "docSyntax": "lnbSetPictureColorSelected [idc, [row, column], colour]",
    "tags": "",
    "description": "Sets the cell picture's colour on cell selection.",
    "example": "lnbSetPictureColorSelected [1492, [1,0], [0,0.75,0.3,0.5]];",
    "params": "<number> <number> <number> color <control> <number> <number> color",
    "returns": "nothing"
  },
  "lnbSetPictureColorSelectedRight": {
    "command": "lnbSetPictureColorSelectedRight",
    "timestamp": "2021-01-23T09:58:14Z",
    "version": "1.00",
    "syntax": "lnbSetPictureColorSelectedRight [<number>, [<number>, <number>], <array>]",
    "docSyntax": "lnbSetPictureColorSelectedRight [idc, [row, column], color]",
    "tags": "",
    "description": "Sets the color of the right picture when it is selected.",
    "example": "_control lnbSetPictureColorSelectedRight [nowiki[0, 0], [1,1,1,0.5]];",
    "params": "<number> <number> <number> <array> <control> <number> <number> <array>",
    "returns": "nothing"
  },
  "lnbSetPictureRight": {
    "command": "lnbSetPictureRight",
    "timestamp": "2021-05-06T12:00:29Z",
    "version": "1.00",
    "syntax": "lnbSetPictureRight [<number>, [<number>, <number>], <string>]",
    "docSyntax": "lnbSetPictureRight [idc, [row, column], path]",
    "tags": "",
    "description": "Sets the cell's right-picture. The picture is set to the end of the 'row', the ''column'' parameter does not matter. Feature Informative The picture is searched in the mission, directory, the campaign directory's dtaExt subdirectory, and the data bank (or directory).",
    "example": "lnbSetPictureRight [1, [0, 0], \"Picture.paa\"];",
    "params": "<number> <number> <number> <string> <control> <number> <number> <string>",
    "returns": "nothing"
  },
  "lnbSetTextRight": {
    "command": "lnbSetTextRight",
    "timestamp": "2021-01-25T22:54:47Z",
    "version": "1.00",
    "syntax": "lnbSetTextRight [<number>, [<number>, <number>], <string>]",
    "docSyntax": "lnbSetTextRight [idc, [row, column], text]",
    "tags": "",
    "description": "Sets cell's right-aligned text. Does not replace cell's text.",
    "example": "lnbSetTextRight [1492, [1,0], \"right text\"];",
    "params": "<number> <number> <number> <string> <control> <number> <number> <string>",
    "returns": "nothing"
  },
  "lnbTextRight": {
    "command": "lnbTextRight",
    "timestamp": "2021-01-23T10:05:02Z",
    "version": "1.00",
    "syntax": "lnbTextRight [<number>, [<number>, <number>]]",
    "docSyntax": "lnbTextRight [idc, [row, column]]",
    "tags": "",
    "description": "Returns CT_LISTNBOX's right aligned cell text.",
    "example": "_text = _control lnbTextRight [0, 0];",
    "params": "<number> <number> <number> <control> <number> <number>",
    "returns": "string"
  },
  "netObjNull": {
    "command": "netObjNull",
    "timestamp": "2021-01-23T10:04:48Z",
    "version": "1.00",
    "syntax": "netObjNull",
    "docSyntax": "netObjNull",
    "tags": "",
    "description": "A non-existing network object. Feature Informative 'NetObject' data type was never implemented in arma3 - this command always returns false.",
    "example": "-",
    "params": "",
    "returns": "boolean | false"
  },
  "setCustomMissionData": {
    "command": "setCustomMissionData",
    "timestamp": "2021-01-23T20:20:29Z",
    "version": "1.00",
    "syntax": "setCustomMissionData <array>",
    "docSyntax": "setCustomMissionData data",
    "tags": "",
    "description": "Defines custom mission text that is sent to <Arma 3 Analytics>.",
    "example": "setCustomMissionData [\"someData\", \"someMoreData\"];",
    "params": "<array>",
    "returns": "nothing"
  },
  "setSimulWeatherLayers": {
    "command": "setSimulWeatherLayers",
    "timestamp": "2021-01-23T20:24:53Z",
    "version": "1.00",
    "syntax": "setSimulWeatherLayers <number>",
    "docSyntax": "setSimulWeatherLayers layers",
    "tags": "",
    "description": "Sets number of simul weather layers, affects quality of simul weather clouds.",
    "example": "setSimulWeatherLayers 0; // Very flat clouds",
    "params": "<number>",
    "returns": "nothing"
  },
  "setWaypointLoiterRadius": {
    "command": "setWaypointLoiterRadius",
    "timestamp": "2021-01-24T00:17:05Z",
    "version": "1.00",
    "syntax": "<waypoint> setWaypointLoiterRadius <number>",
    "docSyntax": "waypoint setWaypointLoiterRadius radius",
    "tags": "",
    "description": "Assignes loiter radius to waypoint",
    "example": "[_grp, 2] setWaypointLoiterRadius 200;",
    "params": "<waypoint> <number>",
    "returns": "nothing"
  },
  "setWaypointLoiterType": {
    "command": "setWaypointLoiterType",
    "timestamp": "2021-01-24T00:28:42Z",
    "version": "1.00",
    "syntax": "<waypoint> setWaypointLoiterType <string>",
    "docSyntax": "waypoint setWaypointLoiterType type",
    "tags": "",
    "description": "Sets the waypoint loiter type.",
    "example": "[_grp, 2] setWaypointLoiterType \"CIRCLE\";",
    "params": "<waypoint> <string>",
    "returns": "nothing"
  },
  "showWaypoints": {
    "command": "showWaypoints",
    "timestamp": "2021-01-24T00:00:46Z",
    "version": "1.00",
    "syntax": "showWaypoints <boolean>",
    "docSyntax": "showWaypoints enabled",
    "tags": "",
    "description": "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.",
    "example": "showWaypoints true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "simulCloudDensity": {
    "command": "simulCloudDensity",
    "timestamp": "2021-01-24T00:04:20Z",
    "version": "1.00",
    "syntax": "simulCloudDensity <position>",
    "docSyntax": "simulCloudDensity pos",
    "tags": "",
    "description": "Returns density of clouds at given position.",
    "example": "simulCloudDensity getPos player;",
    "params": "<position>",
    "returns": "number | nothing | boolean | false"
  },
  "simulCloudOcclusion": {
    "command": "simulCloudOcclusion",
    "timestamp": "2021-01-24T00:48:14Z",
    "version": "1.00",
    "syntax": "simulCloudOcclusion [<position>, <position>]",
    "docSyntax": "simulCloudOcclusion [pos1, pos2]",
    "tags": "",
    "description": "Returns clouds occlusion between two given points.",
    "example": "= = <+>_posPlayer; _posAbovePlayer set [2,200]; simulCloudOcclusion [_posPlayer, _posAbovePlayer];",
    "params": "<position> <position>",
    "returns": "number | nothing | boolean | false"
  },
  "simulInClouds": {
    "command": "simulInClouds",
    "timestamp": "2021-01-24T00:01:18Z",
    "version": "1.00",
    "syntax": "simulInClouds <position>",
    "docSyntax": "simulInClouds pos",
    "tags": "",
    "description": "Returns if given position is in clouds.",
    "example": "simulInClouds getPos player;",
    "params": "<position>",
    "returns": "boolean | true | nothing"
  },
  "tvPictureRight": {
    "command": "tvPictureRight",
    "timestamp": "2021-01-24T10:42:45Z",
    "version": "1.00",
    "syntax": "tvPictureRight [<number>, <array>]",
    "docSyntax": "tvPictureRight [idc, path]",
    "tags": "",
    "description": "Returns the right picture of a CT_TREE on given path.",
    "example": "_path= _controlTV tvPictureRight [0, 0];",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "tvSetSelectColor": {
    "command": "tvSetSelectColor",
    "timestamp": "2021-01-24T10:39:01Z",
    "version": "1.00",
    "syntax": "<control> tvSetSelectColor [<array>, <array>]",
    "docSyntax": "ctrl tvSetSelectColor [path, color]",
    "tags": "",
    "description": "Sets the select color of given path.",
    "example": "_control tvSetSelectColor [nowiki[0, 0], [1,1,1,0.5]];",
    "params": "<control> <array> <array>",
    "returns": "nothing"
  },
  "UAVControl": {
    "command": "UAVControl",
    "timestamp": "2021-01-22T21:23:58Z",
    "version": "1.00",
    "syntax": "UAVControl <object>",
    "docSyntax": "UAVControl uav",
    "tags": "",
    "description": "Returns array with current operator of UAV and his vehicle role in UAV. If nobody is controlling the UAV, the command tries to find any person with connected terminal to this UAV, in which case the vehicle role is an empty string. If command cannot find anyone, output is nowiki[</nowiki>objNull, \"\"]. brbr Since Arma 3 v1.96 this command returns both driver and gunner units if the UAV is controlled by 2 players. Here is the list of all expected \noutputs: * hl[player1, \"DRIVER\"] - player1 is controlling the UAV and is the pilot * hl[player2, \"GUNNER\"] - player2 is controlling the UAV and is the gunner * hl[player1, \"DRIVER\", player2, \"GUNNER\"] - player1 is controlling the UAV and is the pilot, player2 is controlling UAV and is the gunner * hl[player3, \"\"] - no one is controlling the UAV, player3 is connected to the UAV via terminal, but not controlling it yet * nowiki[</nowiki>objNull, \"\"] - nobody is controlling or connected to the UAV br Feature Informative This command works only for vehicles, to get a unit remote controlling a unit, see Example 3 on the remoteControl page.",
    "example": "UAVControl uav;",
    "params": "<object>",
    "returns": "array | object | string"
  },
  "unitAddons": {
    "command": "unitAddons",
    "timestamp": "2021-01-24T10:45:34Z",
    "version": "1.00",
    "syntax": "unitAddons <string>",
    "docSyntax": "unitAddons className",
    "tags": "",
    "description": "Returns list with addons the unit belongs to.",
    "example": "hint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]",
    "params": "<string>",
    "returns": "array"
  },
  "unlinkItem": {
    "command": "unlinkItem",
    "timestamp": "2021-01-24T10:46:49Z",
    "version": "1.00",
    "syntax": "<object> unlinkItem <string>",
    "docSyntax": "unit unlinkItem item",
    "tags": "[AG] [EG]",
    "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.",
    "example": "bluforUnit unlinkItem \"NVGoggles\"; opforUnit unlinkItem \"NVGoggles_OPFOR\"; independentUnit unlinkItem \"NVGoggles_INDEP\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "waypointLoiterRadius": {
    "command": "waypointLoiterRadius",
    "timestamp": "2021-01-24T10:46:55Z",
    "version": "1.00",
    "syntax": "waypointLoiterRadius <waypoint>",
    "docSyntax": "waypointLoiterRadius Waypoint",
    "tags": "",
    "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.",
    "example": "_radius = waypointLoiterRadius [groupOne, 1];",
    "params": "<waypoint>",
    "returns": "number"
  },
  "waypointLoiterType": {
    "command": "waypointLoiterType",
    "timestamp": "2021-01-24T10:38:28Z",
    "version": "1.00",
    "syntax": "<waypoint>LoiterType waypoint",
    "docSyntax": "waypointLoiterType waypoint",
    "tags": "",
    "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.",
    "example": "_type = waypointLoiterType [groupOne, 1]",
    "params": "<waypoint>",
    "returns": "string"
  },
  "BIS_fnc_countdown": {
    "command": "BIS_fnc_countdown",
    "timestamp": "2021-01-22T23:05:34Z",
    "version": "1.02",
    "syntax": "[timeInSeconds, global] call BIS_fnc_countdown",
    "docSyntax": "[timeInSeconds, global] call BIS_fnc_countdown",
    "tags": "",
    "description": "Triggers a countdown. FeatureInformativeThe 'initial' countdown can be accessed via missionNamespace variable 'BIS_fnc_countdown_time'.br The initial value is either ''serverTime (if set globally) or time (if set locally) + timeInSeconds''. To return the left-over time see HashLink#Example 4.",
    "example": "_initialCountdown = [50,false] call BIS_fnc_countdown; // sets countdown to 50 seconds where function is executed",
    "params": "true",
    "returns": "number | time | servertime | nil | boolean | true | false"
  },
  "BIS_fnc_getFromPairs": {
    "command": "BIS_fnc_getFromPairs",
    "timestamp": "2021-01-23T09:22:41Z",
    "version": "1.02",
    "syntax": "[<array>, <string>, <anything>] call BIS_fnc_getFromPairs",
    "docSyntax": "[array, key, defaultValue] call BIS_fnc_getFromPairs",
    "tags": "",
    "description": "Searches the associative array for the 1st occurance of the key string and returns the value associated with it. Search is not case sensitiv.",
    "example": "[[[\"apple\",3],[\"pear\",\"test\"]],\"pear\"] call BIS_fnc_getFromPairs; // Returns \"test\"",
    "params": "<array> <string> <anything>",
    "returns": "anything"
  },
  "face": {
    "command": "face",
    "timestamp": "2021-01-23T00:40:11Z",
    "version": "1.02",
    "syntax": "face <object>",
    "docSyntax": "face person",
    "tags": "",
    "description": "Returns the face of a person.",
    "example": "face player",
    "params": "<object>",
    "returns": "string"
  },
  "nameSound": {
    "command": "nameSound",
    "timestamp": "2021-01-23T10:08:02Z",
    "version": "1.02",
    "syntax": "nameSound <object>",
    "docSyntax": "nameSound person",
    "tags": "",
    "description": "Returns the nameSound of a person.",
    "example": "nameSound player",
    "params": "<object>",
    "returns": "string"
  },
  "pitch": {
    "command": "pitch",
    "timestamp": "2021-01-23T10:41:00Z",
    "version": "1.02",
    "syntax": "pitch <object>",
    "docSyntax": "pitch person",
    "tags": "",
    "description": "Returns the pitch of a persons voice.",
    "example": "pitch player",
    "params": "<object>",
    "returns": "number"
  },
  "setCenterOfMass": {
    "command": "setCenterOfMass",
    "timestamp": "2021-01-23T20:22:11Z",
    "version": "1.02",
    "syntax": "<object> setCenterOfMass <array>",
    "docSyntax": "myObject setCenterOfMass [centerOfMass, time]",
    "tags": "[AL] [EG]",
    "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
    "example": "myObject setCenterOfMass [nowiki[0,-1,0], 0.5];",
    "params": "<object> <array> <array> <number> <object> <array>",
    "returns": "nothing"
  },
  "setDetailMapBlendPars": {
    "command": "setDetailMapBlendPars",
    "timestamp": "2021-01-23T20:28:27Z",
    "version": "1.02",
    "syntax": "setDetailMapBlendPars [<number>, <number>]",
    "docSyntax": "setDetailMapBlendPars [fullDetail, noDetail]",
    "tags": "[EL]",
    "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. * If ''noDetail'' &gt; ''fullDetail'', the texture detail will incur smooth transition in the area between the thresholds. * If ''noDetail'' &lt;= ''fullDetail'', there will be obvious visible edge between texture detail changes at ''fullDetail'' distance.",
    "example": "setDetailMapBlendPars [20, 50];",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "setMass": {
    "command": "setMass",
    "timestamp": "2021-01-23T20:35:20Z",
    "version": "1.02",
    "syntax": "<object> setMass <number>",
    "docSyntax": "myObject setMass mass",
    "tags": "[AL] [EG]",
    "description": "Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.Feature important When main syntax is used on local vehicle, the change is global. When alternative syntax is used with time transition on local vehicle, the gradual mass change doesn't happen on remote clients, only final mass is applied after the given time. If you need gradual change on remote clients too, remote execute setMass globally.",
    "example": "myObject setMass [10, 0.5];",
    "params": "<object> <number> <object> <number> <number>",
    "returns": "nothing"
  },
  "setMusicEventHandler": {
    "command": "setMusicEventHandler",
    "timestamp": "2021-01-23T20:26:41Z",
    "version": "1.02",
    "syntax": "setMusicEventHandler [<string>, cfgmusic]",
    "docSyntax": "setMusicEventHandler [type, function]",
    "tags": "",
    "description": "Sets given music track event handler. Will overwrite other music event handlers. FeatureobsoleteUse addMusicEventHandler instead as it can stack music event handlers.",
    "example": "_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];",
    "params": "<string> cfgmusic",
    "returns": "number"
  },
  "setNameSound": {
    "command": "setNameSound",
    "timestamp": "2021-01-23T20:27:38Z",
    "version": "1.02",
    "syntax": "<object> setNameSound <string>",
    "docSyntax": "person setNameSound name",
    "tags": "[AG] [EL]",
    "description": "Sets the CfgIdentities - NameSounds for common values.br Note that any word from configfile >> \"RadioProtocolENG\" >> \"Words\" is accepted (e.g \"veh_infantry_Sniper_s\").",
    "example": "unit1 setNameSound \"dixon\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "setPitch": {
    "command": "setPitch",
    "timestamp": "2021-01-23T20:31:58Z",
    "version": "1.02",
    "syntax": "<object> setPitch <number>",
    "docSyntax": "person setPitch pitch",
    "tags": "[AG] [EL]",
    "description": "Sets the pitch of a persons voice.",
    "example": "unit1 setPitch 0.5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setSpeaker": {
    "command": "setSpeaker",
    "timestamp": "2021-01-23T20:30:41Z",
    "version": "1.02",
    "syntax": "<object> setSpeaker arma3",
    "docSyntax": "person setSpeaker speaker",
    "tags": "[AG] [EL]",
    "description": "Sets the speaker of a person.",
    "example": "unit1 setSpeaker \"Male02GRE\";",
    "params": "<object> arma3",
    "returns": "nothing"
  },
  "speaker": {
    "command": "speaker",
    "timestamp": "2021-01-24T00:03:47Z",
    "version": "1.02",
    "syntax": "speaker <object>",
    "docSyntax": "speaker unit",
    "tags": "",
    "description": "Returns the speaker class name of a unit.",
    "example": "speaker player; // Can return \"male09eng\"",
    "params": "<object>",
    "returns": "string"
  },
  "addItemPool": {
    "command": "addItemPool",
    "timestamp": "2021-01-22T21:23:41Z",
    "version": "1.04",
    "syntax": "addItemPool [<string>, <number>]",
    "docSyntax": "addItemPool [itemName, count]",
    "tags": "",
    "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)",
    "example": "addItemPool [\"ItemGPS\", 5];",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "addItemToBackpack": {
    "command": "addItemToBackpack",
    "timestamp": "2021-01-22T21:30:43Z",
    "version": "1.04",
    "syntax": "<object> addItemToBackpack <string>",
    "docSyntax": "unit addItemToBackpack item",
    "tags": "[AG] [EG]",
    "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.",
    "example": "player addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addItemToUniform": {
    "command": "addItemToUniform",
    "timestamp": "2021-01-22T21:29:12Z",
    "version": "1.04",
    "syntax": "<object> addItemToUniform <string>",
    "docSyntax": "unit addItemToUniform item",
    "tags": "[AG] [EG]",
    "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.",
    "example": "player addItemToUniform \"itemGPS\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addItemToVest": {
    "command": "addItemToVest",
    "timestamp": "2021-01-22T21:38:05Z",
    "version": "1.04",
    "syntax": "<object> addItemToVest <string>",
    "docSyntax": "unit addItemToVest item",
    "tags": "[AG] [EG]",
    "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.",
    "example": "player addItemToVest \"itemGPS\"; ",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "backpackContainer": {
    "command": "backpackContainer",
    "timestamp": "2021-01-22T21:41:41Z",
    "version": "1.04",
    "syntax": "backpackContainer <object>",
    "docSyntax": "backpackContainer unit",
    "tags": "",
    "description": "Returns a cargo container of a unit's backpack.",
    "example": "hint str backpackContainer player; // 1a5f7900# 163944: backpack_fast.p3d",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "canAddItemToBackpack": {
    "command": "canAddItemToBackpack",
    "timestamp": "2021-01-22T21:55:07Z",
    "version": "1.04",
    "syntax": "<object> canAddItemToBackpack <string>",
    "docSyntax": "unit canAddItemToBackpack item",
    "tags": "",
    "description": "Checks if given object can be stored into soldier's backpack.",
    "example": "if (player canAddItemToBackpack \"HandGrenade\") then { player addItemToBackpack _item } else { hint \"no room!\" };",
    "params": "<object> <string> <object> <array> <string> <number>",
    "returns": "boolean"
  },
  "canAddItemToUniform": {
    "command": "canAddItemToUniform",
    "timestamp": "2021-01-22T21:59:13Z",
    "version": "1.04",
    "syntax": "<object> canAddItemToUniform <string>",
    "docSyntax": "unit canAddItemToUniform item",
    "tags": "",
    "description": "Checks if given object can be stored into soldier's uniform.",
    "example": "_item = \"HandGrenade\"; _fits = player canAddItemToUniform _item; if (_fits) then { player addItemToUniform _item; } else { hint \"no room!\"; };",
    "params": "<object> <string> <object> <array> <string> <number>",
    "returns": "boolean"
  },
  "canAddItemToVest": {
    "command": "canAddItemToVest",
    "timestamp": "2021-01-22T21:58:19Z",
    "version": "1.04",
    "syntax": "<object> canAddItemToVest <string>",
    "docSyntax": "unit canAddItemToVest item",
    "tags": "",
    "description": "Checks if given object can be stored into soldier's vest.",
    "example": "_item = \"HandGrenade\"; private _fits = player canAddItemToVest _item; if (_fits) then { player addItemToVest _item; } else { hint \"no room!\"; };",
    "params": "<object> <string> <object> <array> <string> <number>",
    "returns": "boolean"
  },
  "everyBackpack": {
    "command": "everyBackpack",
    "timestamp": "2021-01-23T00:58:49Z",
    "version": "1.04",
    "syntax": "everyBackpack <object>",
    "docSyntax": "everyBackpack box",
    "tags": "",
    "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.",
    "example": "everyBackpack cursorTarget;",
    "params": "<object>",
    "returns": "array"
  },
  "forceRespawn": {
    "command": "forceRespawn",
    "timestamp": "2021-01-22T23:09:48Z",
    "version": "1.04",
    "syntax": "forceRespawn <object>",
    "docSyntax": "forceRespawn unit",
    "tags": "[AL] [EG]",
    "description": "Forces the unit to respawn. The effect is as if the player pressed the RESPAWN button in the game pause menu; the unit is killed but there is no \"X was killed\" message and no score adjustment.",
    "example": "forceRespawn player; ",
    "params": "<object>",
    "returns": "nothing"
  },
  "isInstructorFigureEnabled": {
    "command": "isInstructorFigureEnabled",
    "timestamp": "2021-01-23T09:17:43Z",
    "version": "1.04",
    "syntax": "'isInstructorFigureEnabled'",
    "docSyntax": "'isInstructorFigureEnabled'",
    "tags": "",
    "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).",
    "example": "hint str isInstructorFigureEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "itemsWithMagazines": {
    "command": "itemsWithMagazines",
    "timestamp": "2021-01-23T08:55:34Z",
    "version": "1.04",
    "syntax": "itemsWithMagazines <object>",
    "docSyntax": "itemsWithMagazines unit",
    "tags": "[AG]",
    "description": "Returns combined array including all unit's stored items and all unit's stored magazines and all unit's 'stored' weapons. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine, binocularMagazine as well as assignedItems are excluded.",
    "example": "itemsWithMagazines player //is essentially the same as items player + magazines player</code> code[ \"FirstAidKit\", //item \"30Rnd_65x39_caseless_mag\", //magazine \"16Rnd_9x21_Mag\", //magazine \"Chemlight_green\", //magazine \"HandGrenade\", //magazine \"ToolKit\", //item \"MineDetector\" //item ]",
    "params": "<object>",
    "returns": "array"
  },
  "magazinesDetailBackpack": {
    "command": "magazinesDetailBackpack",
    "timestamp": "2021-01-23T10:04:20Z",
    "version": "1.04",
    "syntax": "magazinesDetailBackpack <object>",
    "docSyntax": "magazinesDetailBackpack unit",
    "tags": "",
    "description": "Returns an array with the type names of all the unit's backpack magazines.",
    "example": "magazinesDetailBackpack player; codecomment/* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000011/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/2]\", \"Chemlight (Green)(1/1)[id/cr:10000027/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000013/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000014/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000015/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000016/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000017/2]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000019/2]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000020/2]\", \"RGO Grenade(1/1)[id/cr:10000021/2]\", \"RGO Grenade(1/1)[id/cr:10000022/2]\", \"IR Grenade [NATO](1/1)[id/cr:10000023/2]\", \"IR Grenade [NATO](1/1)[id/cr:10000024/2]\", \"Smoke Grenade (White)(1/1)[id/cr:10000025/2]\", \"Smoke Grenade (Green)(1/1)[id/cr:10000026/2]\", \"Chemlight (Green)(1/1)[id/cr:10000028/2]\" ] nowiki*/",
    "params": "<object> <object> <boolean> <boolean>",
    "returns": "array"
  },
  "magazinesDetailUniform": {
    "command": "magazinesDetailUniform",
    "timestamp": "2021-01-23T10:10:22Z",
    "version": "1.04",
    "syntax": "magazinesDetailUniform <object>",
    "docSyntax": "magazinesDetailUniform unit",
    "tags": "",
    "description": "Returns an array with the type names of all the unit's uniform magazines.",
    "example": "magazinesDetailUniform player; codecomment/* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\", \"Chemlight (Green)(1/1)[id/cr:10000020/0]\" ] nowiki*/",
    "params": "<object> <object> <boolean> <boolean>",
    "returns": "array"
  },
  "magazinesDetailVest": {
    "command": "magazinesDetailVest",
    "timestamp": "2021-01-23T09:56:33Z",
    "version": "1.04",
    "syntax": "magazinesDetailVest <object>",
    "docSyntax": "magazinesDetailVest unit",
    "tags": "",
    "description": "Returns an array with the type names of all the unit's vest magazines.",
    "example": "magazinesDetailVest player; codecomment/* [ [\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\", \"RGO Grenade(1/1)[id/cr:10000016/0]\", \"RGO Grenade(1/1)[id/cr:10000017/0]\"] ] nowiki*/",
    "params": "<object> <object> <boolean> <boolean>",
    "returns": "array"
  },
  "removeAllItemsWithMagazines": {
    "command": "removeAllItemsWithMagazines",
    "timestamp": "2021-01-23T10:36:41Z",
    "version": "1.04",
    "syntax": "removeAllItemsWithMagazines <object>",
    "docSyntax": "removeAllItemsWithMagazines unit",
    "tags": "",
    "description": "Removes all itemsWithMagazines from the uniform, vest and backpack. Command essentially clears all unit's containers.",
    "example": "removeAllItemsWithMagazines player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeItemFromBackpack": {
    "command": "removeItemFromBackpack",
    "timestamp": "2021-01-23T10:32:23Z",
    "version": "1.04",
    "syntax": "<object> removeItemFromBackpack <string>",
    "docSyntax": "unit removeItemFromBackpack item",
    "tags": "[AG] [EG]",
    "description": "Removes item from soldier's backpack.",
    "example": "player removeItemFromBackpack \"itemGPS\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removeItemFromUniform": {
    "command": "removeItemFromUniform",
    "timestamp": "2021-01-23T10:30:27Z",
    "version": "1.04",
    "syntax": "<object> removeItemFromUniform <string>",
    "docSyntax": "unit removeItemFromUniform item",
    "tags": "[AG] [EG]",
    "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.",
    "example": "player removeItemFromUniform \"FirstAidKit\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "removeItemFromVest": {
    "command": "removeItemFromVest",
    "timestamp": "2021-01-23T10:33:37Z",
    "version": "1.04",
    "syntax": "<object> removeItemFromVest <string>",
    "docSyntax": "unit removeItemFromVest item",
    "tags": "[AG] [EG]",
    "description": "Removes item from soldier's vest.",
    "example": "player removeItemFromVest \"itemWatch\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "uniformContainer": {
    "command": "uniformContainer",
    "timestamp": "2021-01-24T10:47:40Z",
    "version": "1.04",
    "syntax": "uniformContainer <object>",
    "docSyntax": "uniformContainer unit",
    "tags": "",
    "description": "Returns a cargo container of a unit's uniform.",
    "example": "hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "vestContainer": {
    "command": "vestContainer",
    "timestamp": "2021-01-24T10:45:51Z",
    "version": "1.04",
    "syntax": "vestContainer <object>",
    "docSyntax": "vestContainer unit",
    "tags": "",
    "description": "Returns a cargo container of a unit's vest.",
    "example": "hint str vestContainer player; // 2df7d600# 163942: dummyweapon.p3d",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "BIS_fnc_deleteTask": {
    "command": "BIS_fnc_deleteTask",
    "timestamp": "2021-01-23T09:21:53Z",
    "version": "1.06",
    "syntax": "[<string>, <string>, <boolean>] call BIS_fnc_deleteTask",
    "docSyntax": "[taskID, owner, removeFromJIP] call BIS_fnc_deleteTask",
    "tags": "[AG] [EG]",
    "description": "Deletes given task. FeatureInformative See <Arma \n3: Task Framework>.",
    "example": "[\"task_1\"] call BIS_fnc_deleteTask;",
    "params": "<string> <string> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_playerSideFaction": {
    "command": "BIS_fnc_playerSideFaction",
    "timestamp": "2021-01-23T10:37:17Z",
    "version": "1.06",
    "syntax": "<side> call BIS_fnc_playerSideFaction",
    "docSyntax": "side call BIS_fnc_playerSideFaction",
    "tags": "",
    "description": "Return representative faction of the given side. Faction of the first detected player is used.",
    "example": "west call BIS_fnc_playerSideFaction;",
    "params": "<side>",
    "returns": "string"
  },
  "playableSlotsNumber": {
    "command": "playableSlotsNumber",
    "timestamp": "2021-01-23T10:27:51Z",
    "version": "1.06",
    "syntax": "playableSlotsNumber <side>",
    "docSyntax": "playableSlotsNumber side",
    "tags": "",
    "description": "Returns the number of available slots in mission per side (both empty and taken). brIn singleplayer mission, it returns number of playable units per side.",
    "example": "_maxBluforPlayers = playableSlotsNumber blufor;",
    "params": "<side>",
    "returns": "number"
  },
  "setObjectTextureGlobal": {
    "command": "setObjectTextureGlobal",
    "timestamp": "2021-01-23T20:27:59Z",
    "version": "1.06",
    "syntax": "<object> setObjectTextureGlobal [<number>, <string>]",
    "docSyntax": "obj setObjectTextureGlobal [selection, texture]",
    "tags": "[AG] [EG]",
    "description": "Set the texture of the given selection on all computers in a network session.br Not all objects can be textured this way. See getObjectTextures for supported texture selections. Feature Informative All textures must have a resolution of 2^x / 2^y (e.g. 16x16, 16x32, 64x256, 512x32, etc). The largest texture size supported by the RV engine is 4096x4096.",
    "example": "player setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];",
    "params": "<object> <array> <number> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_crewCount": {
    "command": "BIS_fnc_crewCount",
    "timestamp": "2021-01-23T00:31:21Z",
    "version": "1.08",
    "syntax": "param call BIS_fnc_crewCount",
    "docSyntax": "param call BIS_fnc_crewCount",
    "tags": "",
    "description": "Function that counts amount of seats, both for crew and cargo seats.",
    "example": "crewCount = [\"B_Heli_Light_01_F\", false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).",
    "params": "",
    "returns": "number"
  },
  "BIS_fnc_importImageLinks": {
    "command": "BIS_fnc_importImageLinks",
    "timestamp": "2021-01-23T09:52:06Z",
    "version": "1.08",
    "syntax": "call BIS_fnc_importImageLinks;",
    "docSyntax": "call BIS_fnc_importImageLinks;",
    "tags": "",
    "description": "Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/). # Run the script. It will copy a text into clipboard # Open your Sandbox and paste the text into edit field # 'Preview' the page (don't save it) # Copy the resulting text and use it in your scripts Result is to the following \nformat: code_imagesCfgVehicles = [ \"papercar\",\"\n\tfilepath:Arma3 CfgVehicles PaperCar.jpg\", \"firesectortarget\",\"\n\tfilepath:Arma3 CfgVehicles FireSectorTarget.jpg\", \"building\",\"\n\tfilepath:Arma3 CfgVehicles Building.jpg\", (…) ];</code> Featureimportant Be wary that 'this function is CPU-demanding' and may lock your computer for 5-10 seconds!",
    "example": "call BIS_fnc_importImageLinks;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_itemType": {
    "command": "BIS_fnc_itemType",
    "timestamp": "2021-01-23T09:53:58Z",
    "version": "1.08",
    "syntax": "<string> call BIS_fnc_itemType",
    "docSyntax": "weaponClass call BIS_fnc_itemType",
    "tags": "",
    "description": "FeatureimportantBe very careful with this function as certain mods modify the categories making this function unreliable! Returns item category and type. {! class=\"wikitable\" ! Weapon / VehicleWeapon ! VehicleWeapon ! Item ! Equipment ! Magazine ! Mine !- style=\"vertical-\nalign: top\" ! * AssaultRifle * BombLauncher * Cannon * GrenadeLauncher * Handgun * Launcher * MachineGun * Magazine * MissileLauncher * Mortar * RocketLauncher * Shotgun * Throw * Rifle * SubmachineGun * SniperRifle ! * Horn * CounterMeasuresLauncher * LaserDesignator ! * AccessoryMuzzle * AccessoryPointer * AccessorySights * AccessoryBipod * Binocular * Compass * FirstAidKit * GPS * LaserDesignator * Map * Medikit * MineDetector * NVGoggles * Radio * Toolkit * UAVTerminal * VehicleWeapon * Unknown * UnknownEquipment * UnknownWeapon * Watch ! * Glasses * Headgear * Vest * Uniform * Backpack ! * Artillery * Bullet * CounterMeasures * Flare * Grenade * Laser * Missile * Rocket * Shell * ShotgunShell * SmokeShell * UnknownMagazine ! * Mine * MineBounding * MineDirectional !}",
    "example": "\"arifle_MX_pointer_F\" call BIS_fnc_itemType;",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_jukebox": {
    "command": "BIS_fnc_jukebox",
    "timestamp": "2021-01-23T10:07:02Z",
    "version": "1.08",
    "syntax": "[<string>, strings] call BIS_fnc_jukebox",
    "docSyntax": "[function, parameters] call BIS_fnc_jukebox",
    "tags": "",
    "description": "Plays music, depending on the player group status. FeatureInformativeIf no music classes are given, the function will get them from config automatically.",
    "example": "[] call BIS_fnc_jukebox;",
    "params": "<string> strings",
    "returns": "array | boolean | string | nothing"
  },
  "BIS_fnc_objectType": {
    "command": "BIS_fnc_objectType",
    "timestamp": "2021-01-23T10:23:35Z",
    "version": "1.08",
    "syntax": "<string> call BIS_fnc_objectType",
    "docSyntax": "anObject call BIS_fnc_objectType",
    "tags": "",
    "description": "Return object category and type.",
    "example": "_myType = player call BIS_fnc_objectType;",
    "params": "<string>",
    "returns": "array"
  },
  "getClientState": {
    "command": "getClientState",
    "timestamp": "2021-01-23T00:05:04Z",
    "version": "1.08",
    "syntax": "getClientState",
    "docSyntax": "getClientState",
    "tags": "",
    "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are \npossible: {! class=\"wikitable\" ! getClientStateNumber ! getClientState ! Description !- ! 0 !! \"NONE\" !! No client (or singleplayer) !- ! 1 !! \"CREATED\" !! Client is created !- ! 2 !! \"CONNECTED\" !! Client is connected to server, message formats are registered !- ! 3 !! \"LOGGED IN\" !! Identity is created !- ! 4 !! \"MISSION SELECTED\" !!Mission is selected !- ! 5 !! \"MISSION ASKED\" !! Server was asked to send / not send mission !- ! 6 !! \"ROLE ASSIGNED\" !! Role was assigned (and confirmed) !- ! 7 !! \"MISSION RECEIVED\" !! Mission received !- ! 8 !! \"GAME LOADED\" !! Island loaded, vehicles received !- ! 9 !! \"BRIEFING SHOWN\" !! Briefing was displayed !- ! 10 !! \"BRIEFING READ\" !! Ready to play mission !- ! 11 !! \"GAME FINISHED\" !! Game was finished !- ! 12 !! \"DEBRIEFING READ\" !! Debriefing read, ready to continue with next mission !}",
    "example": "_state = getClientState;",
    "params": "",
    "returns": "string"
  },
  "lnbSort": {
    "command": "lnbSort",
    "timestamp": "2021-06-14T09:10:59Z",
    "version": "1.08",
    "syntax": "lnbSort [<number>, <number>, <boolean>]",
    "docSyntax": "lnbSort [idc, column, reversed]",
    "tags": "",
    "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order. FeatureImportantThis command does not support UNICODE, use lnbSortBy if it is needed instead",
    "example": "lnbSort [1800, 1, false];",
    "params": "<number> <number> <boolean> <control> <number> <boolean>",
    "returns": "nothing"
  },
  "lnbSortByValue": {
    "command": "lnbSortByValue",
    "timestamp": "2021-06-14T09:09:03Z",
    "version": "1.08",
    "syntax": "lnbSortByValue <array>",
    "docSyntax": "lnbSortByValue [idc, column, reversed]",
    "tags": "",
    "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.",
    "example": "lnbSortByValue [1800, 1, false];",
    "params": "<array> <number> <number> <boolean> <control> <number> <boolean>",
    "returns": "nothing"
  },
  "setParticleFire": {
    "command": "setParticleFire",
    "timestamp": "2021-01-23T20:30:49Z",
    "version": "1.08",
    "syntax": "<object> setParticleFire <array>",
    "docSyntax": "source setParticleFire [coreIntensity, coreDistance, damageTime]",
    "tags": "[AG] [EL]",
    "description": "Set fire parameters to particle effect. \nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of \nparams: codeparticleSource setParticleFire [ coreIntensity, coreDistance, damageTime ];</code>",
    "example": "_emitter = \"#particlesource\" createVehicleLocal (getPos player); _emitter setParticleClass \"MediumSmoke\"; _emitter setParticleFire [0.3,1.0,0.1]; ",
    "params": "<object> <array> <number> <number> <number>",
    "returns": "nothing"
  },
  "skillFinal": {
    "command": "skillFinal",
    "timestamp": "2021-01-23T23:59:56Z",
    "version": "1.08",
    "syntax": "<object> skillFinal sub",
    "docSyntax": "unit skillFinal skillName",
    "tags": "",
    "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).",
    "example": "_unitTrueCourage = unit1 skillFinal \"courage\";",
    "params": "<object> sub",
    "returns": "number"
  },
  "triggerTimeoutCurrent": {
    "command": "triggerTimeoutCurrent",
    "timestamp": "2021-01-24T10:47:41Z",
    "version": "1.08",
    "syntax": "<object>TimeoutCurrent trigger",
    "docSyntax": "triggerTimeoutCurrent trigger",
    "tags": "[AG]",
    "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress. Feature important The trigger could be local or remote but the result returned by this command will be for the current trigger timeout local to the client that executed the command. See createTrigger for more info.",
    "example": "private _remaining = triggerTimeoutCurrent _trigger;",
    "params": "<object>",
    "returns": "number"
  },
  "waypointTimeoutCurrent": {
    "command": "waypointTimeoutCurrent",
    "timestamp": "2021-01-24T10:39:36Z",
    "version": "1.08",
    "syntax": "waypointTimeoutCurrent <group>",
    "docSyntax": "waypointTimeoutCurrent group",
    "tags": "",
    "description": "Gets the current timeout for currentWaypoint of a group or -1 if countdown is not in progress.",
    "example": "_timeout = waypointTimeoutCurrent group player;",
    "params": "<group>",
    "returns": "number"
  },
  "BIS_fnc_bleedTickets": {
    "command": "BIS_fnc_bleedTickets",
    "timestamp": "2021-01-23T00:58:32Z",
    "version": "1.10",
    "syntax": "[<array>, <number>, <number>, <object>] call BIS_fnc_bleedTickets",
    "docSyntax": "[sides, dominanceRatio, bleedingAmount, bleedingDelay] call BIS_fnc_bleedTickets",
    "tags": "",
    "description": "Function that handles bleeding ticket system. Tickets are set beforehand using BIS_fnc_respawnTickets.",
    "example": "call BIS_fnc_bleedTickets;",
    "params": "<array> <number> <number> <object>",
    "returns": "boolean"
  },
  "BIS_fnc_fixDate": {
    "command": "BIS_fnc_fixDate",
    "timestamp": "2021-01-23T09:22:46Z",
    "version": "1.10",
    "syntax": "<array> call BIS_fnc_fixDate",
    "docSyntax": "date call BIS_fnc_fixDate",
    "tags": "",
    "description": "Checks the array with date data and makes sure, the values are within the boundries.",
    "example": "_fixedDate = [2033,-2,89,25,75] call BIS_fnc_fixDate;",
    "params": "<array>",
    "returns": "array"
  },
  "BIS_fnc_isLeapYear": {
    "command": "BIS_fnc_isLeapYear",
    "timestamp": "2021-01-23T09:52:41Z",
    "version": "1.10",
    "syntax": "<number> call BIS_fnc_isLeapYear",
    "docSyntax": "year call BIS_fnc_isLeapYear",
    "tags": "",
    "description": "Returns true if given year is a leap year, otherwise false.",
    "example": "_isLeapYear = 2035 call BIS_fnc_isLeapYear;",
    "params": "<number>",
    "returns": "boolean"
  },
  "BIS_fnc_monthDays": {
    "command": "BIS_fnc_monthDays",
    "timestamp": "2021-01-23T10:24:38Z",
    "version": "1.10",
    "syntax": "[<number>, <number>] call BIS_fnc_monthDays",
    "docSyntax": "[year, month] call BIS_fnc_monthDays",
    "tags": "",
    "description": "Returns number of days in given month. Takes in account for leap year.",
    "example": "_daysInThisMonth = [date select 0, date select 1] call BIS_fnc_monthDays;",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_sortAlphabetically": {
    "command": "BIS_fnc_sortAlphabetically",
    "timestamp": "2021-01-23T20:17:54Z",
    "version": "1.10",
    "syntax": "<array> call BIS_fnc_sortAlphabetically",
    "docSyntax": "arrayOfStrings call BIS_fnc_sortAlphabetically",
    "tags": "",
    "description": "Alphabetically sort an array of strings without modifying the original. See also sort.",
    "example": "_sortedNames = [\"John\", \"Jane\", \"Julia\", \"Geronimo\"] call BIS_fnc_sortAlphabetically; // will return [\"Geronimo\", \"Jane\", \"John\", \"Julia\"]",
    "params": "<array>",
    "returns": "strings sorted alphabetically."
  },
  "lineIntersectsObjs": {
    "command": "lineIntersectsObjs",
    "timestamp": "2021-01-23T10:11:27Z",
    "version": "1.10",
    "syntax": "lineIntersectsObjs [positionasl, positionasl, <object>, <object>, <boolean>, <number>]",
    "docSyntax": "lineIntersectsObjs [begPos, endPos, ignoreObj1, ignoreObj2, sortByDistance, flags]",
    "tags": "[AG]",
    "description": "Returns a list of objects intersected by the line from ''begPos'' to ''endPos''.",
    "example": "Sto = []; Fn = { { Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]]; } forEach [1,2,4,8,16,32]; hintSilent format [\" ONLY_WATER: %1, NEAREST_CONTACT: %2, ONLY_STATIC: %3, ONLY_DYNAMIC: %4, FIRST_CONTACT: %5, ALL_OBJECTS: %6\", Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5]; }; [\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler; //Example display objects' array in the middle of the screen sorted by 6 flags",
    "params": "positionasl positionasl <object> <object> <boolean> <number>",
    "returns": "objects - intersecting objects"
  },
  "setDefaultCamera": {
    "command": "setDefaultCamera",
    "timestamp": "2021-01-23T20:32:12Z",
    "version": "1.10",
    "syntax": "setDefaultCamera [positionasl, <array>]",
    "docSyntax": "setDefaultCamera [position, direction]",
    "tags": "",
    "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)",
    "example": "setDefaultCamera [[5000,5000,200],[1,1,-1]];",
    "params": "positionasl <array>",
    "returns": "nothing"
  },
  "addScoreSide": {
    "command": "addScoreSide",
    "timestamp": "2021-01-22T21:41:23Z",
    "version": "1.12",
    "syntax": "<side> addScoreSide <number>",
    "docSyntax": "side addScoreSide value",
    "tags": "[SE] [AG] [EG]",
    "description": "Adds side score. This is shown in the MP score tab as the total score. 'MP only'.",
    "example": "west addScoreSide 10;",
    "params": "<side> <number>",
    "returns": "nothing"
  },
  "binocular": {
    "command": "binocular",
    "timestamp": "2021-01-22T21:23:59Z",
    "version": "1.12",
    "syntax": "binocular <object>",
    "docSyntax": "binocular unit",
    "tags": "",
    "description": "Returns class name of currently used binocular weapon.",
    "example": "_binocs = binocular player; //Rangefinder",
    "params": "<object>",
    "returns": "string"
  },
  "briefingName": {
    "command": "briefingName",
    "timestamp": "2021-01-22T21:37:50Z",
    "version": "1.12",
    "syntax": "briefingName",
    "docSyntax": "briefingName",
    "tags": "",
    "description": "Returns the name of the current briefing/scenario name.",
    "example": "_name = briefingName;",
    "params": "",
    "returns": "string"
  },
  "cbChecked": {
    "command": "cbChecked",
    "timestamp": "2021-01-22T21:59:53Z",
    "version": "1.12",
    "syntax": "cbChecked control",
    "docSyntax": "cbChecked control",
    "tags": "",
    "description": "Returns the current state of a CT_CHECKBOX control.",
    "example": "_checked = cbChecked _myCheckBox;",
    "params": "<control>",
    "returns": "boolean"
  },
  "cbSetChecked": {
    "command": "cbSetChecked",
    "timestamp": "2021-01-22T21:57:44Z",
    "version": "1.12",
    "syntax": "<control>cbSetChecked state",
    "docSyntax": "control cbSetChecked state",
    "tags": "",
    "description": "Sets the current state of a CT_CHECKBOX control. Use hl\"CheckedChanged\" control event handler with it.",
    "example": "_myCheckBox cbSetChecked true;",
    "params": "<control> <boolean>",
    "returns": "nothing"
  },
  "currentMagazineDetailTurret": {
    "command": "currentMagazineDetailTurret",
    "timestamp": "2021-01-22T22:50:55Z",
    "version": "1.12",
    "syntax": "<object> currentMagazineDetailTurret <array>",
    "docSyntax": "vehicle currentMagazineDetailTurret [turret path]",
    "tags": "",
    "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
    "example": "_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];",
    "params": "<object> <array>",
    "returns": "string"
  },
  "currentMagazineTurret": {
    "command": "currentMagazineTurret",
    "timestamp": "2021-01-22T22:39:28Z",
    "version": "1.12",
    "syntax": "<object> currentMagazineTurret <array>",
    "docSyntax": "vehicle currentMagazineTurret [turret path]",
    "tags": "",
    "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
    "example": "_magazine = MBT_Kuma currentMagazineTurret [0];",
    "params": "<object> <array>",
    "returns": "string"
  },
  "currentWeaponTurret": {
    "command": "currentWeaponTurret",
    "timestamp": "2021-01-22T22:58:28Z",
    "version": "1.12",
    "syntax": "<object> currentWeaponTurret <array>",
    "docSyntax": "vehicle currentWeaponTurret [turret path]",
    "tags": "",
    "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.",
    "example": "_weapon = MBT_Kuma currentWeaponTurret [0];",
    "params": "<object> <array>",
    "returns": "string"
  },
  "enableDiagLegend": {
    "command": "enableDiagLegend",
    "timestamp": "2021-01-22T22:49:55Z",
    "version": "1.12",
    "syntax": "<boolean>DiagLegend enable",
    "docSyntax": "enableDiagLegend enable",
    "tags": "",
    "description": "Enable or disable the legend for diagnostics. 'Internal dev only!'",
    "example": "enableDiagLegend false;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "enableSimulationGlobal": {
    "command": "enableSimulationGlobal",
    "timestamp": "2021-01-22T22:51:39Z",
    "version": "1.12",
    "syntax": "<object> <boolean>SimulationGlobal enable",
    "docSyntax": "entity enableSimulationGlobal enable",
    "tags": "[SE] [AG] [EG]",
    "description": "Enable or disable simulation for given entity, globally. Has the same effect as enableSimulation when used in singleplayer.",
    "example": "_myObject enableSimulationGlobal false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "getCenterOfMass": {
    "command": "getCenterOfMass",
    "timestamp": "2021-01-23T00:03:58Z",
    "version": "1.12",
    "syntax": "getCenterOfMass <object>",
    "docSyntax": "getCenterOfMass object",
    "tags": "[AG]",
    "description": "Returns center of mass of an object.",
    "example": "_com = getCenterOfMass _myCar;",
    "params": "<object>",
    "returns": "array"
  },
  "getMass": {
    "command": "getMass",
    "timestamp": "2021-01-23T00:00:17Z",
    "version": "1.12",
    "syntax": "getMass <object>",
    "docSyntax": "getMass object",
    "tags": "[AG]",
    "description": "Returns mass of a PhysX object.",
    "example": "_mass = getMass _myCar",
    "params": "<object>",
    "returns": "number"
  },
  "hideObjectGlobal": {
    "command": "hideObjectGlobal",
    "timestamp": "2021-01-23T09:16:38Z",
    "version": "1.12",
    "syntax": "hideObjectGlobal <<object>>",
    "docSyntax": "hideObjectGlobal object",
    "tags": "[SE] [AG] [EG]",
    "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Can be used on static objects. In singleplayer this command behaves just like hideObject.",
    "example": "hideObjectGlobal myObject; // hides myObject hideObjectGlobal nearestBuilding [2500, 2500, 0];",
    "params": "<object> <object> <boolean>",
    "returns": "nothing"
  },
  "hmd": {
    "command": "hmd",
    "timestamp": "2021-01-23T09:12:02Z",
    "version": "1.12",
    "syntax": "hmd <object>",
    "docSyntax": "hmd unit",
    "tags": "[AG]",
    "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.",
    "example": "_nvgs = hmd player; //NVGoggles",
    "params": "<object>",
    "returns": "string"
  },
  "queryItemsPool": {
    "command": "queryItemsPool",
    "timestamp": "2021-01-23T10:31:16Z",
    "version": "1.12",
    "syntax": "queryItemsPool <string>",
    "docSyntax": "queryItemsPool name",
    "tags": "",
    "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).",
    "example": "private _amountOfFAKgiven = queryItemsPool \"FirstAidKit\";",
    "params": "<string>",
    "returns": "number"
  },
  "selectWeaponTurret": {
    "command": "selectWeaponTurret",
    "timestamp": "2021-01-23T20:16:32Z",
    "version": "1.12",
    "syntax": "<object> selectWeaponTurret [<string>, <array>, <string>, <string>]",
    "docSyntax": "vehicle selectWeaponTurret [weapon, turretPath, muzzle, firemode]",
    "tags": "",
    "description": "Selects the given weapon on the specified turret. Use turret path [-1] for the driver's turret.",
    "example": "MBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];",
    "params": "<object> <string> <array> <string> <string>",
    "returns": "nothing"
  },
  "setSpeech": {
    "command": "setSpeech",
    "timestamp": "2021-01-23T20:26:14Z",
    "version": "1.12",
    "syntax": "<location> setSpeech <string>",
    "docSyntax": "location setSpeech speech",
    "tags": "",
    "description": "Add speech to location.",
    "example": "_location setSpeech \"SomeSpeech\";",
    "params": "<location> <string>",
    "returns": "nothing"
  },
  "activatedAddons": {
    "command": "activatedAddons",
    "timestamp": "2021-01-22T21:27:53Z",
    "version": "1.14",
    "syntax": "'activatedAddons'",
    "docSyntax": "'activatedAddons'",
    "tags": "",
    "description": "Returns a list of all activated addons.",
    "example": "_addons = 'activatedAddons';",
    "params": "",
    "returns": "array"
  },
  "attachedObjects": {
    "command": "attachedObjects",
    "timestamp": "2021-01-22T21:33:45Z",
    "version": "1.14",
    "syntax": "attachedObjects <object>",
    "docSyntax": "attachedObjects obj",
    "tags": "",
    "description": "Returns a list of objects attached to the given object.",
    "example": "{ detach _x; } forEach attachedObjects player;",
    "params": "<object>",
    "returns": "array | object"
  },
  "attachedTo": {
    "command": "attachedTo",
    "timestamp": "2021-01-22T21:45:35Z",
    "version": "1.14",
    "syntax": "attachedTo <object>",
    "docSyntax": "attachedTo obj",
    "tags": "[AG]",
    "description": "Returns object the given object is attached to or objNull if the given object is not attached to anything.",
    "example": "if (isNull attachedTo _obj1) then { hint \"_obj1 is not attached to anything.\"; };",
    "params": "<object>",
    "returns": "object"
  },
  "addCuratorAddons": {
    "command": "addCuratorAddons",
    "timestamp": "2021-01-22T21:45:38Z",
    "version": "1.16",
    "syntax": "<object> addCuratorAddons <array>",
    "docSyntax": "curatorObj addCuratorAddons addons",
    "tags": "[SE]",
    "description": "Allow curator use of given addon.",
    "example": "curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "addCuratorCameraArea": {
    "command": "addCuratorCameraArea",
    "timestamp": "2021-01-22T21:33:27Z",
    "version": "1.16",
    "syntax": "<object> addCuratorCameraArea [<number>, <position>, <number>]",
    "docSyntax": "curatorObj addCuratorCameraArea [cameraAreaID, position, radius]",
    "tags": "[SE]",
    "description": "Adds or changes curator camera area (depends on if ID is already used).",
    "example": "myCurator addCuratorCameraArea [3,position mySoldier,300];",
    "params": "<object> <number> <position> <number>",
    "returns": "nothing"
  },
  "addCuratorEditableObjects": {
    "command": "addCuratorEditableObjects",
    "timestamp": "2021-01-22T21:40:29Z",
    "version": "1.16",
    "syntax": "<object> addCuratorEditableObjects [<array>, <boolean>]",
    "docSyntax": "curatorObj addCuratorEditableObjects [objects, addCrew]",
    "tags": "[SE]",
    "description": "Register objects which can be edited by a curator.",
    "example": "MyCuratorModule addCuratorEditableObjects nowiki[[</nowiki>MyCar], truenowiki]</nowiki>;",
    "params": "<object> <array> <boolean>",
    "returns": "nothing"
  },
  "addCuratorEditingArea": {
    "command": "addCuratorEditingArea",
    "timestamp": "2021-01-22T21:39:32Z",
    "version": "1.16",
    "syntax": "<object> addCuratorEditingArea [<number>, <position>, <number>]",
    "docSyntax": "curatorObj addCuratorEditingArea [editAreaID, position, radius]",
    "tags": "[SE]",
    "description": "Adds or changes curator edit area (depends on if ID is already used).",
    "example": "myCurator addCuratorEditingArea [4, position player, 1000];",
    "params": "<object> <number> <position> <number>",
    "returns": "nothing"
  },
  "addCuratorPoints": {
    "command": "addCuratorPoints",
    "timestamp": "2021-01-22T21:40:58Z",
    "version": "1.16",
    "syntax": "<object> addCuratorPoints <number>",
    "docSyntax": "curatorObj addCuratorPoints points",
    "tags": "[SE]",
    "description": "Adds or removes curator points. Points can be only in range from 0 to 1.",
    "example": "curatorModule addCuratorPoints 0.5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "allCurators": {
    "command": "allCurators",
    "timestamp": "2021-01-22T21:30:09Z",
    "version": "1.16",
    "syntax": "'allCurators'",
    "docSyntax": "'allCurators'",
    "tags": "",
    "description": "Returns list of all curator logic units, not the units assigned to the logic.",
    "example": "_allCuratorLogics = allCurators;",
    "params": "",
    "returns": "array"
  },
  "allowCuratorLogicIgnoreAreas": {
    "command": "allowCuratorLogicIgnoreAreas",
    "timestamp": "2021-01-22T21:35:45Z",
    "version": "1.16",
    "syntax": "<object> <boolean>CuratorLogicIgnoreAreas allow",
    "docSyntax": "curatorObj allowCuratorLogicIgnoreAreas allow",
    "tags": "[SE]",
    "description": "Allows curator placing and working with modules outside of edit areas.",
    "example": "curatorModule allowCuratorLogicIgnoreAreas true",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "assignCurator": {
    "command": "assignCurator",
    "timestamp": "2021-01-22T21:35:06Z",
    "version": "1.16",
    "syntax": "<object> assignCurator <object>",
    "docSyntax": "player assignCurator curatorObj",
    "tags": "[SE]",
    "description": "Assign player as curator. Two players cannot act as one curator.",
    "example": "player assignCurator myCurator;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_addCuratorAreaFromTrigger": {
    "command": "BIS_fnc_addCuratorAreaFromTrigger",
    "timestamp": "2021-01-22T23:38:14Z",
    "version": "1.16",
    "syntax": "[<logic>, <array>, <anything>, <boolean>, <boolean>, <boolean>] call BIS_fnc_addCuratorAreaFromTrigger",
    "docSyntax": "[curatorLogic, triggers, checkedPosition, triggerType, editingArea, cameraArea] call BIS_fnc_addCuratorAreaFromTrigger",
    "tags": "",
    "description": "Add curator editing / camera area based on triggers.",
    "example": "[BIS_curator, [trigger_1,trigger_2], [0,0,0], true, true, true] call BIS_fnc_addCuratorAreaFromTrigger;",
    "params": "<logic> <array> <anything> <boolean> <boolean> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_addCuratorChallenge": {
    "command": "BIS_fnc_addCuratorChallenge",
    "timestamp": "2021-01-23T00:52:19Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_addCuratorChallenge -->",
    "docSyntax": "<!-- [] call BIS_fnc_addCuratorChallenge -->",
    "tags": "[SE]",
    "description": "\nDescription: Add challenges for curator to complete Parameter(s): \n0: OBJECT - curator 1 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (\ndefault: all challenges) 2 (Optional): NUMBER - number of added challenges (\ndefault: 3) 3 (Optional): CODE - condition for challenges to remain active {\ndefault: true} 4 (optional): CODE or [CODE,STRING] - code executed upon completing all challenges and reward description Arguments passed to the code \nare: \n0: OBJECT - curator \n1: NUMBER - number of previously completed challenges by given curator \n2: STRING - parent task ID 5 (Optional): STRING - parent task ID \nReturns: STRING - ID of parent task under which all challenge tasks are",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_addCuratorIcon": {
    "command": "BIS_fnc_addCuratorIcon",
    "timestamp": "2021-01-22T23:09:28Z",
    "version": "1.16",
    "syntax": "[<object>, <array>, <boolean>, <boolean>] call BIS_fnc_addCuratorIcon",
    "docSyntax": "[object, iconParams, map, 3D] call BIS_fnc_addCuratorIcon",
    "tags": "",
    "description": "Add an icon displayed in curator interface.",
    "example": "[ curatorModule, [\"targetIcon.paa\", [1,1,1,1], position player, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"], false ] call BIS_fnc_addCuratorIcon;",
    "params": "<object> <array> <boolean> <boolean>",
    "returns": "number | bis_fnc_removecuratoricon"
  },
  "BIS_fnc_completedCuratorChallengesCount": {
    "command": "BIS_fnc_completedCuratorChallengesCount",
    "timestamp": "2021-01-22T23:06:16Z",
    "version": "1.16",
    "syntax": "<object> call BIS_fnc_completedCuratorChallengesCount",
    "docSyntax": "curator call BIS_fnc_completedCuratorChallengesCount",
    "tags": "",
    "description": "Return number of completed curator challenges.",
    "example": "curatorModule call BIS_fnc_completedCuratorChallengesCount;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_curatorAttachObject": {
    "command": "BIS_fnc_curatorAttachObject",
    "timestamp": "2021-01-22T23:11:01Z",
    "version": "1.16",
    "syntax": "[<object>] call BIS_fnc_curatorAttachObject",
    "docSyntax": "[object] call BIS_fnc_curatorAttachObject",
    "tags": "",
    "description": "Attach an object on another one under cursor.",
    "example": "[BIS_vehicle] call BIS_fnc_curatorAttachObject;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_curatorAttributes": {
    "command": "BIS_fnc_curatorAttributes",
    "timestamp": "2021-01-23T00:58:59Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorAttributes -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorAttributes -->",
    "tags": "",
    "description": "\nDescription: Return attributes available for given entity Parameter(s): \n0: OBJECT - curator \n1: OBJECT or GROUp or ARRAY or STRING - checked entity \nReturns: ARRAY of STRINGs",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorAutomatic": {
    "command": "BIS_fnc_curatorAutomatic",
    "timestamp": "2021-01-22T23:35:00Z",
    "version": "1.16",
    "syntax": "[<object>, sides, <number>, <number>, <number>, <number>, <number>] call BIS_fnc_curatorAutomatic",
    "docSyntax": "[curator, sides, cheatCoef, infantryProb, groundProb, airProb, marineProb] call BIS_fnc_curatorAutomatic",
    "tags": "",
    "description": "Spawn units based on curator settings. Used when curator role is not taken.",
    "example": "[curator_module, [west, independent, 0.1, 40, 30, 20, 10] call BIS_fnc_curatorAutomatic;",
    "params": "<object> sides <number> <number> <number> <number> <number>",
    "returns": "array | group"
  },
  "BIS_fnc_curatorAutomaticPositions": {
    "command": "BIS_fnc_curatorAutomaticPositions",
    "timestamp": "2021-01-23T00:06:16Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorAutomaticPositions -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorAutomaticPositions -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeDestroyVehicle": {
    "command": "BIS_fnc_curatorChallengeDestroyVehicle",
    "timestamp": "2021-01-22T23:09:27Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeDestroyVehicle -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeDestroyVehicle -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeFindIntel": {
    "command": "BIS_fnc_curatorChallengeFindIntel",
    "timestamp": "2021-01-22T23:09:19Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeFindIntel -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeFindIntel -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeFireWeapon": {
    "command": "BIS_fnc_curatorChallengeFireWeapon",
    "timestamp": "2021-01-23T00:53:43Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeFireWeapon -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeFireWeapon -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeGetInVehicle": {
    "command": "BIS_fnc_curatorChallengeGetInVehicle",
    "timestamp": "2021-01-23T00:07:49Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeGetInVehicle -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeGetInVehicle -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeIlluminate": {
    "command": "BIS_fnc_curatorChallengeIlluminate",
    "timestamp": "2021-01-22T23:10:01Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeIlluminate -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeIlluminate -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorChallengeSpawnLightning": {
    "command": "BIS_fnc_curatorChallengeSpawnLightning",
    "timestamp": "2021-01-22T23:07:27Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_curatorChallengeSpawnLightning -->",
    "docSyntax": "<!-- [] call BIS_fnc_curatorChallengeSpawnLightning -->",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_curatorHint": {
    "command": "BIS_fnc_curatorHint",
    "timestamp": "2021-01-23T00:25:10Z",
    "version": "1.16",
    "syntax": "[<string>, <string>, duration] call BIS_fnc_curatorHint",
    "docSyntax": "[title, text, duration] call BIS_fnc_curatorHint",
    "tags": "",
    "description": "Show hint in curator interface.",
    "example": "[\"Title\", \"Some text\", 1337] call BIS_fnc_curatorHint;",
    "params": "<string> <string> <number>",
    "returns": "control"
  },
  "BIS_fnc_curatorObjectEdited": {
    "command": "BIS_fnc_curatorObjectEdited",
    "timestamp": "2021-01-23T00:28:22Z",
    "version": "1.16",
    "syntax": "[<<object>>, object] call BIS_fnc_curatorObjectEdited",
    "docSyntax": "[module, object] call BIS_fnc_curatorObjectEdited",
    "tags": "",
    "description": "Code executed when curator object is edited (i.e., moved or rotated). When a soldier or a vehicle is moved high above ground, create a parachute for them.",
    "example": "[ module_curator, someObject ] call BIS_fnc_curatorObjectEdited;",
    "params": "<object> <object>",
    "returns": "boolean"
  },
  "BIS_fnc_curatorObjectPlaced": {
    "command": "BIS_fnc_curatorObjectPlaced",
    "timestamp": "2021-01-23T00:48:13Z",
    "version": "1.16",
    "syntax": "[<<object>>,object] call BIS_fnc_curatorObjectPlaced",
    "docSyntax": "[module,object] call BIS_fnc_curatorObjectPlaced",
    "tags": "",
    "description": "Code executed when curator object is placed.",
    "example": "[ curatorModule, player ] call BIS_fnc_curatorObjectPlaced;",
    "params": "<object> <object>",
    "returns": "boolean"
  },
  "BIS_fnc_curatorObjectRegistered": {
    "command": "BIS_fnc_curatorObjectRegistered",
    "timestamp": "2021-01-23T00:58:39Z",
    "version": "1.16",
    "syntax": "[<object>, <code>] call BIS_fnc_curatorObjectRegistered",
    "docSyntax": "[curator, code] call BIS_fnc_curatorObjectRegistered",
    "tags": "",
    "description": "Register \"curatorObjectRegistered\" handler. Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.",
    "example": "[curatorModule,{_this # 0, _this # 1]}] call BIS_fnc_curatorObjectRegistered;",
    "params": "<object> <code>",
    "returns": "nothing"
  },
  "BIS_fnc_curatorObjectRegisteredTable": {
    "command": "BIS_fnc_curatorObjectRegisteredTable",
    "timestamp": "2021-01-22T23:09:41Z",
    "version": "1.16",
    "syntax": "[<object>, [<string>, <number>, className, cost...]] call BIS_fnc_curatorObjectRegisteredTable",
    "docSyntax": "[curatorLogic, [className, cost, className, cost...]] call BIS_fnc_curatorObjectRegisteredTable",
    "tags": "",
    "description": "Register curator object costs from a table.br A table can be exported into a spreadsheet using BIS_fnc_exportCuratorCostTable and used as argument for this function.",
    "example": "// Nothing but the listed flare modules will show up in the curator's unit list [getAssignedCuratorLogic player, [\"ModuleFlareWhite_F\",0.02,\"ModuleFlareYellow_F\",0.02,\"ModuleFlareGreen_F\",0.02]] call BIS_fnc_curatorObjectRegisteredTable;",
    "params": "<object> <string> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_curatorPinged": {
    "command": "BIS_fnc_curatorPinged",
    "timestamp": "2021-01-23T00:58:28Z",
    "version": "1.16",
    "syntax": "[<object>, player] call BIS_fnc_curatorPinged",
    "docSyntax": "[module, player] call BIS_fnc_curatorPinged",
    "tags": "",
    "description": "Show effects when player pings curator. Icon and entity list highlighting is handled by engine",
    "example": "[ module_curator, player ] call BIS_fnc_curatorPinged;",
    "params": "<object> player",
    "returns": "boolean"
  },
  "BIS_fnc_curatorRespawn": {
    "command": "BIS_fnc_curatorRespawn",
    "timestamp": "2021-01-22T23:07:11Z",
    "version": "1.16",
    "syntax": "[<object>,oldUnit] call BIS_fnc_curatorRespawn",
    "docSyntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn",
    "tags": "",
    "description": "Restore unit for curators after respawn. When curator owner, it will transfer ownership to the new unit. When editable by curator, it will remove the dead unit and register the new one.",
    "example": "[BIS_newUnit,BIS_oldUnit] call BIS_fnc_curatorRespawn;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_curatorSayMessage": {
    "command": "BIS_fnc_curatorSayMessage",
    "timestamp": "2021-01-22T23:05:48Z",
    "version": "1.16",
    "syntax": "[speaker, <string>] call BIS_fnc_curatorSayMessage",
    "docSyntax": "[speaker, sentence] call BIS_fnc_curatorSayMessage",
    "tags": "",
    "description": "Plays some radio message from CfgRadio locally.",
    "example": "[ player, \"mp_groundsupport_01_casrequested_BHQ_0\" ] call BIS_fnc_curatorSayMessage;",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_curatorVisionModes": {
    "command": "BIS_fnc_curatorVisionModes",
    "timestamp": "2021-01-23T00:19:51Z",
    "version": "1.16",
    "syntax": "[<object>] call BIS_fnc_curatorVisionModes",
    "docSyntax": "[curator] call BIS_fnc_curatorVisionModes",
    "tags": "",
    "description": "Toggle curator vision mode.",
    "example": "_visionModes = [Curator] call BIS_fnc_curatorVisionModes;",
    "params": "<object>",
    "returns": "numbers - vision modes"
  },
  "BIS_fnc_curatorWaypointPlaced": {
    "command": "BIS_fnc_curatorWaypointPlaced",
    "timestamp": "2021-01-22T23:06:59Z",
    "version": "1.16",
    "syntax": "[<object>, <array>, <number>] call BIS_fnc_curatorWaypointPlaced",
    "docSyntax": "[object, waypointGroup, waypointID] call BIS_fnc_curatorWaypointPlaced",
    "tags": "",
    "description": "Code executed when curator waypoint is placed.",
    "example": "[curatorModule, group player, 5] call BIS_fnc_curatorWaypointPlaced;",
    "params": "<object> <array> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_drawCuratorDeaths": {
    "command": "BIS_fnc_drawCuratorDeaths",
    "timestamp": "2021-01-23T09:07:59Z",
    "version": "1.16",
    "syntax": "[<object>] call BIS_fnc_drawCuratorDeaths",
    "docSyntax": "[unit] call BIS_fnc_drawCuratorDeaths",
    "tags": "",
    "description": "Show skull unit for curator when the unit dies.",
    "example": "player call BIS_fnc_drawCuratorDeaths;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_drawCuratorLocations": {
    "command": "BIS_fnc_drawCuratorLocations",
    "timestamp": "2021-01-23T08:59:34Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_drawCuratorLocations -->",
    "docSyntax": "<!-- [] call BIS_fnc_drawCuratorLocations -->",
    "tags": "",
    "description": "\nDescription: Label every vilage, town and city in curator interface Parameter(s): \n0: OBJECT - curator module \nReturns: BOOL",
    "example": "[] call BIS_fnc_drawCuratorLocations;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_drawCuratorRespawnMarkers": {
    "command": "BIS_fnc_drawCuratorRespawnMarkers",
    "timestamp": "2021-01-23T09:02:21Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_drawCuratorRespawnMarkers -->",
    "docSyntax": "<!-- [] call BIS_fnc_drawCuratorRespawnMarkers -->",
    "tags": "",
    "description": "\nDescription: Create a curator icon on every respawn marker Parameter(s): \n0: OBJECT - curator module \n1: ARRAY of SIDEs \nReturns: BOOL",
    "example": "[] call BIS_fnc_drawCuratorRespawnMarkers;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_exportCfgVehicles": {
    "command": "BIS_fnc_exportCfgVehicles",
    "timestamp": "2021-01-23T09:06:24Z",
    "version": "1.16",
    "syntax": "[render,<array>,<array>,<boolean>] call BIS_fnc_exportCfgVehicles",
    "docSyntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles",
    "tags": "",
    "description": "Export list of objects for Community Wiki (Assets).",
    "example": "[] call BIS_fnc_exportCfgVehicles;",
    "params": "render <array> <array> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_exportCuratorCostTable": {
    "command": "BIS_fnc_exportCuratorCostTable",
    "timestamp": "2021-01-23T09:06:15Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_exportCuratorCostTable -->",
    "docSyntax": "<!-- [] call BIS_fnc_exportCuratorCostTable -->",
    "tags": "",
    "description": "\nDescription: Generate spreadsheet with object classes and copy it to clipboard. The table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable Parameter(s): 0 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation. 1 (Optional): STRING - format, can be \"ods\" or \"xls\" 2 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table 3 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic 4 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (\ndefault: {true}) 5 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (\ndefault: {\"\"}) \nReturns: BOOL",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_finishCuratorChallenge": {
    "command": "BIS_fnc_finishCuratorChallenge",
    "timestamp": "2021-01-23T09:05:39Z",
    "version": "1.16",
    "syntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge",
    "docSyntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge",
    "tags": "",
    "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead. Number of challenges can be retrieved by",
    "example": "[BIS_curator,[\"DestroyVehicle\",BIS_curator],\"SUCCEEDED\"] call BIS_fnc_finishCuratorChallenge; _number = BIS_curator getVariable \"DestroyVehicle\";",
    "params": "<string>",
    "returns": "boolean"
  },
  "BIS_fnc_forceCuratorInterface": {
    "command": "BIS_fnc_forceCuratorInterface",
    "timestamp": "2021-01-23T09:18:24Z",
    "version": "1.16",
    "syntax": "[<boolean>, <boolean>] call BIS_fnc_forceCuratorInterface",
    "docSyntax": "[mode, waitUntil] call BIS_fnc_forceCuratorInterface",
    "tags": "",
    "description": "Force curator interface, so user cannot exit it by pressing Zeus key.",
    "example": "[ true, true ] call BIS_fnc_forceCuratorInterface;",
    "params": "<boolean> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_formatCuratorChallengeObjects": {
    "command": "BIS_fnc_formatCuratorChallengeObjects",
    "timestamp": "2021-01-23T09:20:34Z",
    "version": "1.16",
    "syntax": "strings call BIS_fnc_formatCuratorChallengeObjects",
    "docSyntax": "classes call BIS_fnc_formatCuratorChallengeObjects",
    "tags": "",
    "description": "Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.",
    "example": "[\"class_1\",\"class_2\"] call BIS_fnc_formatCuratorChallengeObjects;",
    "params": "strings",
    "returns": "string"
  },
  "BIS_fnc_initCuratorAttribute": {
    "command": "BIS_fnc_initCuratorAttribute",
    "timestamp": "2021-01-23T10:05:02Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_initCuratorAttribute -->",
    "docSyntax": "<!-- [] call BIS_fnc_initCuratorAttribute -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_initCuratorAttribute;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_isCurator": {
    "command": "BIS_fnc_isCurator",
    "timestamp": "2021-01-23T09:57:47Z",
    "version": "1.16",
    "syntax": "<object> call BIS_fnc_isCurator",
    "docSyntax": "object call BIS_fnc_isCurator",
    "tags": "",
    "description": "Returns if given object is curator logic. Despite the misleading name this does not check if a player has access to Zeus. It just check if the given object's simulation is of type \"curator\".",
    "example": "player call BIS_fnc_isCurator;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_isCuratorEditable": {
    "command": "BIS_fnc_isCuratorEditable",
    "timestamp": "2021-01-23T10:01:44Z",
    "version": "1.16",
    "syntax": "[<object>] call BIS_fnc_isCuratorEditable",
    "docSyntax": "[object] call BIS_fnc_isCuratorEditable",
    "tags": "",
    "description": "Return true if given object is editable by player (when he's curator).",
    "example": "[object_1] call BIS_fnc_isCuratorEditable;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_isForcedCuratorInterface": {
    "command": "BIS_fnc_isForcedCuratorInterface",
    "timestamp": "2021-01-23T10:12:21Z",
    "version": "1.16",
    "syntax": "[] call BIS_fnc_isForcedCuratorInterface",
    "docSyntax": "[] call BIS_fnc_isForcedCuratorInterface",
    "tags": "",
    "description": "Return if curator interface is forced (user cannot leave it by pressing Zeus key).",
    "example": "_isForced = call BIS_fnc_isForcedCuratorInterface;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_listCuratorPlayers": {
    "command": "BIS_fnc_listCuratorPlayers",
    "timestamp": "2021-01-23T10:02:21Z",
    "version": "1.16",
    "syntax": "[] call BIS_fnc_listCuratorPlayers",
    "docSyntax": "[] call BIS_fnc_listCuratorPlayers",
    "tags": "",
    "description": "Returns list of playable units with access to curator.",
    "example": "call BIS_fnc_listCuratorPlayers;",
    "params": "",
    "returns": "array"
  },
  "BIS_fnc_loop": {
    "command": "BIS_fnc_loop",
    "timestamp": "2021-01-23T09:55:04Z",
    "version": "1.16",
    "syntax": "[<string>, <array>] call BIS_fnc_loop",
    "docSyntax": "[action, parameters] call BIS_fnc_loop",
    "tags": "",
    "description": "Loop stacked code/function with timing and conditional control. Code and conditions are executed in non-scheduled environment.",
    "example": "// hints time every five seconds [\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_manageCuratorAddons": {
    "command": "BIS_fnc_manageCuratorAddons",
    "timestamp": "2021-01-23T10:06:14Z",
    "version": "1.16",
    "syntax": "[<object>s,classes,condition,text] call BIS_fnc_manageCuratorAddons",
    "docSyntax": "[curators,classes,condition,text] call BIS_fnc_manageCuratorAddons",
    "tags": "",
    "description": "Set which vision modes curator can access.",
    "example": "[BIS_curator,[\"A3_Air_F_Heli\"],{count allPlayers > 15},\"Helicopters unlocked!\"] call BIS_fnc_manageCuratorAddons;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_manageCuratorChallenges": {
    "command": "BIS_fnc_manageCuratorChallenges",
    "timestamp": "2021-01-23T09:52:51Z",
    "version": "1.16",
    "syntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges",
    "docSyntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges",
    "tags": "",
    "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead.",
    "example": "[ BIS_curator, nil, 1, [ [{ hint \"Message\" }, \"Description\" ] ] ] call BIS_fnc_manageCuratorChallenges;",
    "params": "<code> <code>",
    "returns": "boolean"
  },
  "BIS_fnc_mirrorCuratorSettings": {
    "command": "BIS_fnc_mirrorCuratorSettings",
    "timestamp": "2021-01-23T10:09:02Z",
    "version": "1.16",
    "syntax": "[<object>, <object>, <array>, <boolean>] call BIS_fnc_mirrorCuratorSettings",
    "docSyntax": "[from, to, modes, shareType] call BIS_fnc_mirrorCuratorSettings",
    "tags": "[SE]",
    "description": "Mirrors settings from one curator to another.",
    "example": "[ [curator_1, curator_2], [curator_3, curator_4], [\"addons\", \"objects\", \"coefs\"] ] call BIS_fnc_mirrorCuratorSettings;",
    "params": "<object> <object> <array> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_moduleLightning": {
    "command": "BIS_fnc_moduleLightning",
    "timestamp": "2021-01-23T10:30:32Z",
    "version": "1.16",
    "syntax": "[<object>, <nothing>, <boolean>] call BIS_fnc_moduleLightning",
    "docSyntax": "[target, nil, activate] call BIS_fnc_moduleLightning",
    "tags": "",
    "description": "Zeus lightning strike. FeatureimportantNote that ''target'' will be deleted by the function (part of how Zeus modules work).",
    "example": "player addAction [ \"Eat that!\", { private _tempTarget = createSimpleObject [\"Land_HelipadEmpty_F\", getPosASL cursorTarget]; [_tempTarget, nil, true] spawn BIS_fnc_moduleLightning; cursorTarget setDamage 1; }, [], 1.5, true, true, \"\", \"!isNull cursorTarget\" ];",
    "params": "<object> <nothing> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_registerCuratorObject": {
    "command": "BIS_fnc_registerCuratorObject",
    "timestamp": "2021-01-23T10:33:44Z",
    "version": "1.16",
    "syntax": "[<string>, <boolean>, cost] call BIS_fnc_registerCuratorObject",
    "docSyntax": "[class, status, cost] call BIS_fnc_registerCuratorObject",
    "tags": "",
    "description": "Get individual cost of an object. FeatureimportantThis function is obsolete.",
    "example": "[\"someClass\", true, 5] call BIS_fnc_registerCuratorObject;",
    "params": "<string> <boolean> <number>",
    "returns": "array"
  },
  "BIS_fnc_removeCuratorIcon": {
    "command": "BIS_fnc_removeCuratorIcon",
    "timestamp": "2021-01-23T10:24:50Z",
    "version": "1.16",
    "syntax": "[<object>, <array>] call BIS_fnc_removeCuratorIcon",
    "docSyntax": "[object, id] call BIS_fnc_removeCuratorIcon",
    "tags": "",
    "description": "Remove icon displayed in curator interface.",
    "example": "[curatorModule, 5] call BIS_fnc_removeCuratorIcon;",
    "params": "<object> <array>",
    "returns": "boolean | true"
  },
  "BIS_fnc_removeDestroyedCuratorEditableObjects": {
    "command": "BIS_fnc_removeDestroyedCuratorEditableObjects",
    "timestamp": "2021-01-23T10:42:02Z",
    "version": "1.16",
    "syntax": "[<object>, strings] call BIS_fnc_removeDestroyedCuratorEditableObjects",
    "docSyntax": "[object, parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects",
    "tags": "",
    "description": "Make destroyed curator objects non-editable.",
    "example": "[curatorModule, [\"Man\"]] call BIS_fnc_removeDestroyedCuratorEditableObjects;",
    "params": "<object> strings",
    "returns": "boolean"
  },
  "BIS_fnc_runLater": {
    "command": "BIS_fnc_runLater",
    "timestamp": "2021-01-23T20:18:18Z",
    "version": "1.16",
    "syntax": "[<string>, <code>, <number>, <string>, <code>] call BIS_fnc_runLater",
    "docSyntax": "[id, code, timer, timerType, condition] call BIS_fnc_runLater",
    "tags": "",
    "description": "Stack code/function that should be run later, after some time/frames or/and custom condition. Internally calls BIS_fnc_loop.",
    "example": "// Hints current game time in the next frame after 5 seconds have passed [\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;",
    "params": "<string> <code> <number> <string> <code>",
    "returns": "nothing"
  },
  "BIS_fnc_setCuratorAttributes": {
    "command": "BIS_fnc_setCuratorAttributes",
    "timestamp": "2021-01-23T20:17:58Z",
    "version": "1.16",
    "syntax": "<!-- [] call BIS_fnc_setCuratorAttributes -->",
    "docSyntax": "<!-- [] call BIS_fnc_setCuratorAttributes -->",
    "tags": "",
    "description": "\nDescription: Set which attributes are available for given entity or entity type. Parameter(s): \n0: OBJECT - curator \n1: STRING - general setting for all entities of the given type, can be \"object\", \"player\", \"group', \"waypoint\" or \"marker\" OBJECT - setting for specific object, overrides general settings GROUP - setting for specific group, overrides general settings \n2: ARRAY of STRINGs - attributes \nobject: Skill UnitPos Rank Damage Fuel Lock RespawnVehicle RespawnPosition Exec \ngroup: GroupID Behaviour Formation \nwaypoint: Behaviour Formation \nmarker: MarkerText MarkerColor \nReturns: BOOL",
    "example": "[] call BIS_fnc_setCuratorAttributes;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_setCuratorCamera": {
    "command": "BIS_fnc_setCuratorCamera",
    "timestamp": "2021-01-23T20:17:42Z",
    "version": "1.16",
    "syntax": "[<position>, <array>, <number>] spawn BIS_fnc_setCuratorCamera",
    "docSyntax": "[camPos, targetPos, time] spawn BIS_fnc_setCuratorCamera",
    "tags": "",
    "description": "Move curator camera to a position and direction. Finished when animation ends.",
    "example": "[nil,player,5] spawn BIS_fnc_setCuratorCamera;",
    "params": "<position> <array> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_setCuratorVisionModes": {
    "command": "BIS_fnc_setCuratorVisionModes",
    "timestamp": "2021-01-23T20:31:47Z",
    "version": "1.16",
    "syntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes",
    "docSyntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes",
    "tags": "",
    "description": "Set which vision modes curator can access.",
    "example": "[BIS_curator,[-1,-2]] call BIS_fnc_setCuratorVisionModes;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_shakeCuratorCamera": {
    "command": "BIS_fnc_shakeCuratorCamera",
    "timestamp": "2021-01-23T20:22:58Z",
    "version": "1.16",
    "syntax": "[<number>,<number>,<array>] spawn BIS_fnc_shakeCuratorCamera",
    "docSyntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera",
    "tags": "",
    "description": "Shake curator camera.",
    "example": "[] spawn BIS_fnc_shakeCuratorCamera;",
    "params": "<number> <number> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_showCuratorAttributes": {
    "command": "BIS_fnc_showCuratorAttributes",
    "timestamp": "2021-01-23T20:18:55Z",
    "version": "1.16",
    "syntax": "[<object>] call BIS_fnc_showCuratorAttributes",
    "docSyntax": "[target] call BIS_fnc_showCuratorAttributes",
    "tags": "",
    "description": "Show attributes window of an entity. When no attributes are available, no window is opened.",
    "example": "[BIS_vehicle] call BIS_fnc_showCuratorAttributes;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_showCuratorFeedbackMessage": {
    "command": "BIS_fnc_showCuratorFeedbackMessage",
    "timestamp": "2021-01-23T20:30:44Z",
    "version": "1.16",
    "syntax": "[<object>, <number>] call BIS_fnc_showCuratorFeedbackMessage",
    "docSyntax": "[curator, messageInfo] call BIS_fnc_showCuratorFeedbackMessage",
    "tags": "",
    "description": "Show feedback message when illegal operation is attempted in curator interface.br 'Interface' * '000': Cannot exit Zeus interface * '003': Cannot move camera outside the camera area 'Placing' * '101': Placing objects is not available * '102': Insufficient resources * '103': Selected position is not in an editing area 'Placing waypoints' * '201': Placing waypoints is not available * '206': No objects, groups or waypoints selected 'Editing' * '301': Editing entities is not available * '303': Selected position is not inside editing area * '304': One of the selected entities is not in an editing area * '307': Players cannot be edited * '308': The vehicle is full 'Deleting' * '401': Deleting entities is not available * '404': One of the selected objects is not in an editing area * '405': One of selected vehicles has non-editable crew in it * '407': Players cannot be deleted ' Destroying' * '501': Destroying entities is not available * '504': One of the selected objects is not in an editing area * '505': One of the selected vehicles has non-editable crew in it * '506': No objects selected * '507': Players cannot be destroyed 'Syncing' * '609': At least one AI unit has to be present in synchronization * '610': Cannot change player side (\ntypo: ''\"changle\"'')",
    "example": "nowiki[</nowiki>objNull, 404] call BIS_fnc_showCuratorFeedbackMessage;",
    "params": "<object> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_toggleCuratorVisionMode": {
    "command": "BIS_fnc_toggleCuratorVisionMode",
    "timestamp": "2021-01-24T00:16:59Z",
    "version": "1.16",
    "syntax": "[<object>, <number>] call BIS_fnc_toggleCuratorVisionMode",
    "docSyntax": "[curator, mode] call BIS_fnc_toggleCuratorVisionMode",
    "tags": "",
    "description": "Toggle curator vision mode.",
    "example": "[Curator, -2] call BIS_fnc_toggleCuratorVisionMode;",
    "params": "<object> <number>",
    "returns": "boolean"
  },
  "curatorAddons": {
    "command": "curatorAddons",
    "timestamp": "2021-01-22T22:52:26Z",
    "version": "1.16",
    "syntax": "curatorAddons <object>",
    "docSyntax": "curatorAddons curatorObj",
    "tags": "",
    "description": "Returns list of addons allowed to given curator. The addon names are not guaranteed to be all lower case",
    "example": "private _addons = curatorAddons myCurator;",
    "params": "<object>",
    "returns": "array"
  },
  "curatorCamera": {
    "command": "curatorCamera",
    "timestamp": "2021-01-22T22:45:14Z",
    "version": "1.16",
    "syntax": "curatorCamera",
    "docSyntax": "curatorCamera",
    "tags": "",
    "description": "Returns curator camera object.",
    "example": "_camCurator = curatorCamera",
    "params": "",
    "returns": "object"
  },
  "curatorCameraArea": {
    "command": "curatorCameraArea",
    "timestamp": "2021-01-22T22:46:12Z",
    "version": "1.16",
    "syntax": "curatorCameraArea <object>",
    "docSyntax": "curatorCameraArea curatorObj",
    "tags": "",
    "description": "Returns all curator camera areas.",
    "example": "_camArea = curatorCameraArea myCurator; // [[8052,[4027.36,4024.89,0],250]]",
    "params": "<object>",
    "returns": "array | addcuratorcameraarea"
  },
  "curatorCameraAreaCeiling": {
    "command": "curatorCameraAreaCeiling",
    "timestamp": "2021-01-22T22:51:31Z",
    "version": "1.16",
    "syntax": "curatorCameraAreaCeiling <object>",
    "docSyntax": "curatorCameraAreaCeiling curatorObj",
    "tags": "",
    "description": "Returns ceiling height for curator camera.",
    "example": "private _height = curatorCameraAreaCeiling BIS_curatorUnit;",
    "params": "<object>",
    "returns": "number"
  },
  "curatorCoef": {
    "command": "curatorCoef",
    "timestamp": "2021-01-22T22:52:14Z",
    "version": "1.16",
    "syntax": "<object> curatorCoef <string>",
    "docSyntax": "curatorObj curatorCoef action",
    "tags": "",
    "description": "Returns current coeficient setting.",
    "example": "curatorModule curatorCoef \"Place\"",
    "params": "<object> <string>",
    "returns": "number"
  },
  "curatorEditableObjects": {
    "command": "curatorEditableObjects",
    "timestamp": "2021-01-22T22:58:09Z",
    "version": "1.16",
    "syntax": "curatorEditableObjects <object>",
    "docSyntax": "curatorEditableObjects curatorObj",
    "tags": "[AG]",
    "description": "Returns all editable objects which belong to a curator.",
    "example": "_objects = curatorEditableObjects myCurator;",
    "params": "<object>",
    "returns": "array"
  },
  "curatorEditingArea": {
    "command": "curatorEditingArea",
    "timestamp": "2021-01-22T22:54:43Z",
    "version": "1.16",
    "syntax": "<object>EditingArea curator",
    "docSyntax": "curatorEditingArea curator",
    "tags": "",
    "description": "Returns all curator editing areas.",
    "example": "_editingAreas = curatorEditingArea myCurator;",
    "params": "<object>",
    "returns": "arrays in format: [id, positionagl, radius]"
  },
  "curatorEditingAreaType": {
    "command": "curatorEditingAreaType",
    "timestamp": "2021-01-22T22:49:05Z",
    "version": "1.16",
    "syntax": "<object>EditingAreaType curator",
    "docSyntax": "curatorEditingAreaType curator",
    "tags": "",
    "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).",
    "example": "_isBlacklist = curatorEditingAreaType _curator;",
    "params": "<object>",
    "returns": "boolean"
  },
  "curatorMouseOver": {
    "command": "curatorMouseOver",
    "timestamp": "2021-01-22T22:54:18Z",
    "version": "1.16",
    "syntax": "curatorMouseOver",
    "docSyntax": "curatorMouseOver",
    "tags": "[AL]",
    "description": "Returns Curator Editable Object under curator mouse pointer.",
    "example": "_mouseOver = curatorMouseOver; // Possible return value: [\"OBJECT\", 3594ab00# 164218: apc_wheeled_01_cannon_f.p3d]",
    "params": "",
    "returns": "curator editable object] - if there is curator editable object under the pointer in curator mode"
  },
  "curatorPoints": {
    "command": "curatorPoints",
    "timestamp": "2021-01-22T22:42:29Z",
    "version": "1.16",
    "syntax": "curatorPoints <object>",
    "docSyntax": "curatorPoints curatorObj",
    "tags": "",
    "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.",
    "example": "_points = curatorPoints myCurator;",
    "params": "<object>",
    "returns": "number"
  },
  "curatorRegisteredObjects": {
    "command": "curatorRegisteredObjects",
    "timestamp": "2021-01-22T22:54:37Z",
    "version": "1.16",
    "syntax": "<object>RegisteredObjects curator",
    "docSyntax": "curatorRegisteredObjects curator",
    "tags": "",
    "description": "Returns array with all objects that has curator registered and their settings.",
    "example": "curatorRegisteredObjects _curatorModule;",
    "params": "<object>",
    "returns": "array"
  },
  "curatorSelected": {
    "command": "curatorSelected",
    "timestamp": "2021-01-22T22:46:10Z",
    "version": "1.16",
    "syntax": "'curatorSelected'",
    "docSyntax": "'curatorSelected'",
    "tags": "",
    "description": "Returns list of all curator selected items.",
    "example": "selectedItems = curatorSelected;",
    "params": "",
    "returns": "array"
  },
  "curatorWaypointCost": {
    "command": "curatorWaypointCost",
    "timestamp": "2021-01-22T22:57:09Z",
    "version": "1.16",
    "syntax": "curatorWaypointCost <object>",
    "docSyntax": "curatorWaypointCost curatorObj",
    "tags": "",
    "description": "Return current price for placing waypoints (curator specific).",
    "example": "var_wpcost = curatorWaypointCost bis_curator;",
    "params": "<object>",
    "returns": "number"
  },
  "diag_captureFrameToFile": {
    "command": "diag_captureFrameToFile",
    "timestamp": "2021-05-23T12:56:49Z",
    "version": "1.16",
    "syntax": "diag_captureFrameToFile <number>",
    "docSyntax": "diag_captureFrameToFile frame",
    "tags": "",
    "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and written to a log file in the same directory as the .rpt file.br The full Path to the log file is logged to simultaneously.br The data in the log file can be copied and pasted into the diag_captureFrame UI dialog to get a visualisation later on.",
    "example": "diag_captureFrameToFile 1; //capture the first frame after command execution",
    "params": "<number>",
    "returns": "nothing"
  },
  "forceWeatherChange": {
    "command": "forceWeatherChange",
    "timestamp": "2021-01-23T00:59:47Z",
    "version": "1.16",
    "syntax": "forceWeatherChange",
    "docSyntax": "forceWeatherChange",
    "tags": "[SE]",
    "description": "Will force-apply previously set settings. This might cause lag. FeatureInformativeTo prevent the engine from overwriting custom weather settings, enable the ''Manual Control'' settings in <Eden Editor>'s intel section.",
    "example": "0 setOvercast 1; 0 setRain 1; forceWeatherChange; codecommentForce immediate change overriding smooth transition",
    "params": "",
    "returns": "nothing"
  },
  "getAssignedCuratorLogic": {
    "command": "getAssignedCuratorLogic",
    "timestamp": "2021-01-22T23:11:34Z",
    "version": "1.16",
    "syntax": "getAssignedCuratorLogic <object>",
    "docSyntax": "getAssignedCuratorLogic player",
    "tags": "[AG]",
    "description": "Returns curator logic to which given player has access.",
    "example": "(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead, true];",
    "params": "<object>",
    "returns": "object"
  },
  "getAssignedCuratorUnit": {
    "command": "getAssignedCuratorUnit",
    "timestamp": "2021-01-22T23:17:38Z",
    "version": "1.16",
    "syntax": "getAssignedCuratorUnit <object>",
    "docSyntax": "getAssignedCuratorUnit curatorObj",
    "tags": "",
    "description": "Returns unit assigned to curator logic.",
    "example": "_curatorUnit = getAssignedCuratorUnit (allCurators select 0); _curatorUnit joinAs [createGroup civilian, 0];",
    "params": "<object>",
    "returns": "object"
  },
  "getDLCAssetsUsage": {
    "command": "getDLCAssetsUsage",
    "timestamp": "2021-01-23T00:41:29Z",
    "version": "1.16",
    "syntax": "getDLCAssetsUsage",
    "docSyntax": "getDLCAssetsUsage",
    "tags": "",
    "description": "Returns an array of the DLC usage times.",
    "example": "_dlcAssetsUsageInfo = getDLCAssetsUsage;",
    "params": "",
    "returns": "array | br | br"
  },
  "getDLCAssetsUsageByName": {
    "command": "getDLCAssetsUsageByName",
    "timestamp": "2021-01-23T00:28:11Z",
    "version": "1.16",
    "syntax": "getDLCAssetsUsageByName <string>",
    "docSyntax": "getDLCAssetsUsageByName assetName",
    "tags": "",
    "description": "Returns an array with the session and global time the asset has been used.",
    "example": "_dlcAssetUsage = getDLCAssetsUsageByName \"C_IDAP_Heli_Transport_02_F\";",
    "params": "<string>",
    "returns": "array"
  },
  "getDLCs": {
    "command": "getDLCs",
    "timestamp": "2021-01-23T00:25:43Z",
    "version": "1.16",
    "syntax": "getDLCs <number>",
    "docSyntax": "getDLCs filter",
    "tags": "",
    "description": "Returns array of app IDs of DLCs.",
    "example": "_ownedDLCs = getDLCs 1;",
    "params": "<number>",
    "returns": "array"
  },
  "getTotalDLCUsageTime": {
    "command": "getTotalDLCUsageTime",
    "timestamp": "2021-01-23T09:19:12Z",
    "version": "1.16",
    "syntax": "getTotalDLCUsageTime",
    "docSyntax": "getTotalDLCUsageTime",
    "tags": "",
    "description": "Returns total DLC usage time in this game session",
    "example": "_dlcTime = getTotalDLCUsageTime;",
    "params": "",
    "returns": "number"
  },
  "isAutonomous": {
    "command": "isAutonomous",
    "timestamp": "2021-01-23T09:22:44Z",
    "version": "1.16",
    "syntax": "isAutonomous <object>",
    "docSyntax": "isAutonomous uav",
    "tags": "[AG]",
    "description": "Returns whether the UAV is in autonomous mode or not.",
    "example": "private _isAutonomous = isAutonomous uav;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isEqualTo": {
    "command": "isEqualTo",
    "timestamp": "2021-01-23T09:04:41Z",
    "version": "1.16",
    "syntax": "<anything> isEqualTo <anything>",
    "docSyntax": "val1 isEqualTo val2",
    "tags": "",
    "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.brbr Some differences between isEqualTo and <==>: * It performs case sensitive comparison on Strings * It doesn't throw error when comparing different types, i.e. (\"eleven\" isEqualTo 11) * It can compare Arrays, Scripts and Booleans (alive player isEqualTo true) * It can compare non-existent game objects (grpNull isEqualTo grpNull) * It can compare Namespaces (''As of Arma 3 v1.47'') * It is slightly faster than <==>, especially when comparing Strings Feature Informative A compiled code is not equal to the same compiled code made \nfinal: code_a = compile \"123\"; _b = compileFinal \"123\"; _a isEqualTo _b; // false</code> Feature Warning When comparing Arrays, if an array contains nil element, the comparison will return false. For \n\texample:br codeprivate _array1 = [1,nil,2]; private _array2 = [1,nil,2]; _array1 isEqualTo _array2 // false</code> uUNLESS</u> the compared arrays are the same \narray: codeprivate _array1 = [1,nil,2]; private _array2 = _array1; _array1 isEqualTo _array2 // true</code> \nSee: BIS_fnc_areEqual vs. BIS_fnc_areEqualNotNil",
    "example": "_arr1 = [1,[2,[3]]]; _arr2 = [1,[2,[3]]]; if (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}",
    "params": "<anything> <anything>",
    "returns": "boolean"
  },
  "objectCurators": {
    "command": "objectCurators",
    "timestamp": "2021-01-23T10:04:41Z",
    "version": "1.16",
    "syntax": "<object>ectCurators obj",
    "docSyntax": "objectCurators obj",
    "tags": "",
    "description": "Returns array with all curators which can edit given object.",
    "example": "_curatorsThatcanEdit = objectCurators BIS_Tank;",
    "params": "<object>",
    "returns": "array"
  },
  "openCuratorInterface": {
    "command": "openCuratorInterface",
    "timestamp": "2021-01-23T10:23:46Z",
    "version": "1.16",
    "syntax": "openCuratorInterface",
    "docSyntax": "openCuratorInterface",
    "tags": "[EL]",
    "description": "Force opens curator interface.",
    "example": "openCuratorInterface;",
    "params": "",
    "returns": "nothing"
  },
  "removeAllCuratorAddons": {
    "command": "removeAllCuratorAddons",
    "timestamp": "2021-01-23T10:38:26Z",
    "version": "1.16",
    "syntax": "removeAllCuratorAddons <object>",
    "docSyntax": "removeAllCuratorAddons curatorObj",
    "tags": "[SE]",
    "description": "Restrict access to all addons for given curator.",
    "example": "removeAllCuratorAddons myCurator;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllCuratorCameraAreas": {
    "command": "removeAllCuratorCameraAreas",
    "timestamp": "2021-01-23T10:28:32Z",
    "version": "1.16",
    "syntax": "removeAllCuratorCameraAreas <object>",
    "docSyntax": "removeAllCuratorCameraAreas curatorObj",
    "tags": "[SE]",
    "description": "Delete all curator camera areas.",
    "example": "removeAllCuratorCameraAreas myCurator;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllCuratorEditingAreas": {
    "command": "removeAllCuratorEditingAreas",
    "timestamp": "2021-01-23T10:28:56Z",
    "version": "1.16",
    "syntax": "removeAllCuratorEditingAreas <object>",
    "docSyntax": "removeAllCuratorEditingAreas curatorObj",
    "tags": "[SE]",
    "description": "Delete all curator edit areas.",
    "example": "removeAllCuratorEditingAreas myCurator;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeCuratorAddons": {
    "command": "removeCuratorAddons",
    "timestamp": "2021-01-23T10:35:56Z",
    "version": "1.16",
    "syntax": "<object> removeCuratorAddons <array>",
    "docSyntax": "curatorObj removeCuratorAddons addons",
    "tags": "[SE]",
    "description": "Restrict curator use of given addons.",
    "example": "curatorModule removeCuratorAddons [addon1, addon2];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "removeCuratorCameraArea": {
    "command": "removeCuratorCameraArea",
    "timestamp": "2021-01-23T10:35:24Z",
    "version": "1.16",
    "syntax": "<object> removeCuratorCameraArea <number>",
    "docSyntax": "curatorObj removeCuratorCameraArea cameraAreaID",
    "tags": "[SE]",
    "description": "Removes curator camera area.",
    "example": "myCurator removeCuratorCameraArea 3;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "removeCuratorEditableObjects": {
    "command": "removeCuratorEditableObjects",
    "timestamp": "2021-01-23T10:36:30Z",
    "version": "1.16",
    "syntax": "<object> removeCuratorEditableObjects nowiki[[</nowiki><array>], <boolean>]",
    "docSyntax": "curatorObj removeCuratorEditableObjects nowiki[[</nowiki>objects], removeCrew]",
    "tags": "[SE]",
    "description": "Unregister objects which can be edited by a curator.",
    "example": "curatorModule removeCuratorEditableObjects nowiki<</nowiki>[[cursorTarget>], true]",
    "params": "<object> <array> <boolean>",
    "returns": "nothing"
  },
  "removeCuratorEditingArea": {
    "command": "removeCuratorEditingArea",
    "timestamp": "2021-01-23T10:33:32Z",
    "version": "1.16",
    "syntax": "<object> removeCuratorEditingArea <number>",
    "docSyntax": "curatorObj removeCuratorEditingArea editAreaID",
    "tags": "[SE]",
    "description": "Removes editing area for given curator.",
    "example": "myCurator removeCuratorEditingArea 3;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setAutonomous": {
    "command": "setAutonomous",
    "timestamp": "2021-01-23T20:24:30Z",
    "version": "1.16",
    "syntax": "<object> setAutonomous <boolean>",
    "docSyntax": "uav setAutonomous bool",
    "tags": "",
    "description": "Sets UAV autonomous mode.",
    "example": "uav setAutonomous true;",
    "params": "<object> <boolean>",
    "returns": "boolean | false"
  },
  "setCuratorCameraAreaCeiling": {
    "command": "setCuratorCameraAreaCeiling",
    "timestamp": "2021-01-23T20:24:20Z",
    "version": "1.16",
    "syntax": "curator setCuratorCameraAreaCeiling atl",
    "docSyntax": "curatorObj setCuratorCameraAreaCeiling height",
    "tags": "[SE]",
    "description": "Sets maximal (ATL) height to which curator camera can move.",
    "example": "myCurator setCuratorCameraAreaCeiling 50;",
    "params": "curator atl",
    "returns": "nothing"
  },
  "setCuratorCoef": {
    "command": "setCuratorCoef",
    "timestamp": "2021-01-23T20:32:52Z",
    "version": "1.16",
    "syntax": "<object> setCuratorCoef [<string>, <number>]",
    "docSyntax": "curatorObj setCuratorCoef [action, coef]",
    "tags": "[SE]",
    "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).",
    "example": "curatorModule setCuratorCoef [\"Place\", 1];",
    "params": "<object> <string> <number>",
    "returns": "nothing"
  },
  "setCuratorEditingAreaType": {
    "command": "setCuratorEditingAreaType",
    "timestamp": "2021-01-23T20:31:16Z",
    "version": "1.16",
    "syntax": "<object> setCuratorEditingAreaType <boolean>",
    "docSyntax": "curatorObj setCuratorEditingAreaType bool",
    "tags": "[SE]",
    "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).",
    "example": "curatorModule setCuratorEditingAreaType true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setCuratorWaypointCost": {
    "command": "setCuratorWaypointCost",
    "timestamp": "2021-01-23T20:19:12Z",
    "version": "1.16",
    "syntax": "<object> setCuratorWaypointCost <number>",
    "docSyntax": "curatorObj setCuratorWaypointCost cost",
    "tags": "[SE]",
    "description": "Sets cost of waypoints (used for placing, editing and deleting).",
    "example": "myCurator setCuratorWaypointCost 0.1;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "showCuratorCompass": {
    "command": "showCuratorCompass",
    "timestamp": "2021-01-24T00:15:09Z",
    "version": "1.16",
    "syntax": "showCuratorCompass <boolean>",
    "docSyntax": "showCuratorCompass bool",
    "tags": "",
    "description": "Hides or shows compass in curator interface.",
    "example": "showCuratorCompass true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "shownCuratorCompass": {
    "command": "shownCuratorCompass",
    "timestamp": "2021-01-24T00:13:21Z",
    "version": "1.16",
    "syntax": "shownCuratorCompass",
    "docSyntax": "shownCuratorCompass",
    "tags": "",
    "description": "Returns true if compass is shown.",
    "example": "_isShown = shownCuratorCompass;",
    "params": "",
    "returns": "boolean"
  },
  "shownUAVFeed": {
    "command": "shownUAVFeed",
    "timestamp": "2021-01-24T00:22:04Z",
    "version": "1.16",
    "syntax": "shownUAVFeed",
    "docSyntax": "shownUAVFeed",
    "tags": "",
    "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed.",
    "example": "_bool = shownUAVFeed;",
    "params": "",
    "returns": "boolean"
  },
  "showUAVFeed": {
    "command": "showUAVFeed",
    "timestamp": "2021-01-24T00:41:22Z",
    "version": "1.16",
    "syntax": "<boolean>UAVFeed show",
    "docSyntax": "showUAVFeed show",
    "tags": "",
    "description": "Shows/hides video feed transmitted from UAV in its custom info panel.",
    "example": "showUAVFeed true;",
    "params": "<boolean>",
    "returns": "boolean | true"
  },
  "unassignCurator": {
    "command": "unassignCurator",
    "timestamp": "2021-01-24T10:39:38Z",
    "version": "1.16",
    "syntax": "unassignCurator <object>",
    "docSyntax": "unassignCurator curatorObj",
    "tags": "[SE]",
    "description": "Unassign curator (will destroy both sides of connection).",
    "example": "unassignCurator myCurator;",
    "params": "<object>",
    "returns": "nothing"
  },
  "getFieldManualStartPage": {
    "command": "getFieldManualStartPage",
    "timestamp": "2021-01-25T22:55:53Z",
    "version": "1.18",
    "syntax": "getFieldManualStartPage <display>",
    "docSyntax": "getFieldManualStartPage display",
    "tags": "",
    "description": "Returns array of the starting topic and hint the given field manual should display.",
    "example": "getFieldManualStartPage (findDisplay 46); // returns [\"\", \"\"]",
    "params": "<display>",
    "returns": "array"
  },
  "getStatValue": {
    "command": "getStatValue",
    "timestamp": "2021-01-23T09:00:36Z",
    "version": "1.18",
    "syntax": "getStatValue <string>",
    "docSyntax": "getStatValue name",
    "tags": "",
    "description": "Returns value of the given stat.br A list of possible StatNames can be found \nhere: <Arma \n3: Stat Names>",
    "example": "getStatValue \"ExpWarlockDown\"; // Checks if the \"Warlock Down\" Achivement was already aquired",
    "params": "<string>",
    "returns": "number | nothing"
  },
  "logEntities": {
    "command": "logEntities",
    "timestamp": "2021-01-23T10:03:36Z",
    "version": "1.18",
    "syntax": "'logEntities'",
    "docSyntax": "'logEntities'",
    "tags": "",
    "description": "Creates a log file containing the list of all game entities in scene. brFile is created in the same directory as .rpt file. \nbrSpecial: BattlEye's RCON variant of this command is #logEntities (see also Multiplayer_Server_Commands)",
    "example": "logEntities;",
    "params": "",
    "returns": "nothing"
  },
  "moveInAny": {
    "command": "moveInAny",
    "timestamp": "2021-01-23T10:00:10Z",
    "version": "1.18",
    "syntax": "<object> moveInAny <object>",
    "docSyntax": "unit moveInAny vehicle",
    "tags": "[AG] [EG]",
    "description": "Moves unit to the first available seat in a vehicle. FeatureinformativeSee <AI Group Vehicle Management> for more information. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle.brbr Seat assignment seems to use the following priority \n\tlogic:br driver (moveInDriver) &rarr; commander (moveInCommander) &rarr; gunner (moveInGunner) &rarr; turrets (moveInTurret) &rarr; cargo (moveInCargo). FeatureinformativeThis command will move player into the locked vehicle or seat just as well.",
    "example": "player moveInAny tank;",
    "params": "<object> <object>",
    "returns": "boolean | true | false"
  },
  "setStatValue": {
    "command": "setStatValue",
    "timestamp": "2021-01-23T20:25:24Z",
    "version": "1.18",
    "syntax": "setStatValue [<string>, <number>]",
    "docSyntax": "setStatValue [name, value]",
    "tags": "",
    "description": "Sets a value to a given stat. br A list of possible StatNames can be found \nhere: <Arma \n3: Stat Names>br Its important to note that most Stats are restricted to scripts and missions in certain paths.br For example \"ExpWarlockDown\" is restricted to scripts in any subdirectory of hl\"a3\\Missions_F_Exp\\Campaign\\Missions\\\"",
    "example": "setStatValue [\"ExpWarlockDown\", 1]; // Unlocks the \"Warlock Down\" Steam achivement",
    "params": "<string> <number>",
    "returns": "boolean"
  },
  "squadParams": {
    "command": "squadParams",
    "timestamp": "2021-01-24T00:42:09Z",
    "version": "1.18",
    "syntax": "squadParams <object>",
    "docSyntax": "squadParams unit",
    "tags": "[AG]",
    "description": "Returns data about squad of given unit loaded from squad.xml as well as about unit itself.br All items in returned array are String. FeatureInformative Since Arma 2.05.147777 return array is extended to contain unique squad ID as well as Arma 3 units ID",
    "example": "_info = squadParams player;",
    "params": "<object>",
    "returns": "array | br"
  },
  "BIS_fnc_advHintCall": {
    "command": "BIS_fnc_advHintCall",
    "timestamp": "2021-01-23T00:42:11Z",
    "version": "1.20",
    "syntax": "<boolean>call call BIS_fnc_advHintCall",
    "docSyntax": "fullTextcall call BIS_fnc_advHintCall",
    "tags": "",
    "description": "Advanced hint call, creates hint itself.br This function gets parameters from variable 'BIS_fnc_advHint_hint':br BIS_fnc_advHint_hint select \n0: String - Class of hintbr BIS_fnc_advHint_hint select \n1: String - Structured text of full hintbr BIS_fnc_advHint_hint select \n2: String - Structured text of short hintbr BIS_fnc_advHint_hint select \n3: Number - Duration of short hint in secondsbr BIS_fnc_advHint_hint select \n4: String - Condition for hiding of short hint (\ndefault: \"false\")br BIS_fnc_advHint_hint select \n5: Number - Duration of full hint in secondsbr BIS_fnc_advHint_hint select \n6: String - Condition for hiding of full hint (\ndefault: \"false\")br BIS_fnc_advHint_hint select \n7: Boolean - True shows directly full hint (\ndefault: false)br BIS_fnc_advHint_hint select \n8: Boolean - True for using of sound (\ndefault: true)",
    "example": "false call BIS_fnc_advHintCall;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_initVehicleKart": {
    "command": "BIS_fnc_initVehicleKart",
    "timestamp": "2021-01-23T09:54:19Z",
    "version": "1.20",
    "syntax": "[<object>,<array>,<number>,<number>] call BIS_fnc_initVehicleKart",
    "docSyntax": "[kart,number,livery,raceTeam] call BIS_fnc_initVehicleKart",
    "tags": "",
    "description": "Customise given kart and its driver.",
    "example": "[BIS_kart, [9,7], -1, -1] call BIS_fnc_initVehicleKart;",
    "params": "<object> <array> <number> <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_moduleTimeTrial": {
    "command": "BIS_fnc_moduleTimeTrial",
    "timestamp": "2021-01-23T10:23:58Z",
    "version": "1.20",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for Time Trails, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_moduleTTCPClear": {
    "command": "BIS_fnc_moduleTTCPClear",
    "timestamp": "2021-01-23T10:23:36Z",
    "version": "1.20",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for Time Trails, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_moduleTTCPIn": {
    "command": "BIS_fnc_moduleTTCPIn",
    "timestamp": "2021-01-23T10:39:03Z",
    "version": "1.20",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for Time Trails, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_moduleTTCPOut": {
    "command": "BIS_fnc_moduleTTCPOut",
    "timestamp": "2021-01-23T10:37:05Z",
    "version": "1.20",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for Time Trails, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "lbSetPictureColorDisabled": {
    "command": "lbSetPictureColorDisabled",
    "timestamp": "2021-01-23T09:19:51Z",
    "version": "1.20",
    "syntax": "lbSetPictureColorDisabled [<number>, <number>, color]",
    "docSyntax": "lbSetPictureColorDisabled [idc, index, color]",
    "tags": "",
    "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];",
    "params": "<number> <number> color <control> <number> color",
    "returns": "nothing"
  },
  "lbSetPictureColorSelected": {
    "command": "lbSetPictureColorSelected",
    "timestamp": "2021-01-23T09:21:59Z",
    "version": "1.20",
    "syntax": "lbSetPictureColorSelected [<number>, <number>, color]",
    "docSyntax": "lbSetPictureColorSelected [idc, index, color]",
    "tags": "",
    "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];",
    "params": "<number> <number> color <control> <number> color",
    "returns": "nothing"
  },
  "lbSetPictureRightColorDisabled": {
    "command": "lbSetPictureRightColorDisabled",
    "timestamp": "2021-01-23T09:19:28Z",
    "version": "1.20",
    "syntax": "lbSetPictureRightColorDisabled <array>",
    "docSyntax": "lbSetPictureRightColorDisabled [idc, index, color]",
    "tags": "",
    "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureRightColorDisabled [101, 0, [1, 1, 1, 0.25]];",
    "params": "<array> <number> <number> <array> <control> <array> <number> <array>",
    "returns": "nothing"
  },
  "lbSetPictureRightColorSelected": {
    "command": "lbSetPictureRightColorSelected",
    "timestamp": "2021-01-23T09:20:21Z",
    "version": "1.20",
    "syntax": "lbSetPictureRightColorSelected <array>",
    "docSyntax": "lbSetPictureRightColorSelected [idc, index, color]",
    "tags": "",
    "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureRightColorSelected [101, 0, [0, 1, 0, 0.5]];",
    "params": "<array> <number> <number> <array> <control> <array> <number> <array>",
    "returns": "nothing"
  },
  "enableMimics": {
    "command": "enableMimics",
    "timestamp": "2021-01-22T22:55:40Z",
    "version": "1.22",
    "syntax": "<object> enableMimics <boolean>",
    "docSyntax": "unit enableMimics enabled",
    "tags": "",
    "description": "Enables/disables mimics on a given unit.",
    "example": "cursorTarget enableMimics false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "everyContainer": {
    "command": "everyContainer",
    "timestamp": "2021-01-23T00:06:04Z",
    "version": "1.22",
    "syntax": "everyContainer <object>",
    "docSyntax": "everyContainer object",
    "tags": "",
    "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.",
    "example": "everyContainer cursorTarget; codecommentnowiki/* returns e.g [ [\"V_PlateCarrier1_rgr\",2bc06b00# 163955: dummyweapon.p3d], [\"U_B_CombatUniform_mcam\",2bc07900# 163954: dummyweapon.p3d] ] */</nowiki>",
    "params": "<object>",
    "returns": "array"
  },
  "forceAddUniform": {
    "command": "forceAddUniform",
    "timestamp": "2021-01-22T23:13:45Z",
    "version": "1.22",
    "syntax": "<object> forceAddUniform <string>",
    "docSyntax": "unit forceAddUniform type",
    "tags": "[AG] [EG]",
    "description": "Create a new uniform and hard link it into slot (without any restrictions).",
    "example": "_unit forceAddUniform \"U_B_CombatUniform_mcam\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "isUniformAllowed": {
    "command": "isUniformAllowed",
    "timestamp": "2021-01-23T09:12:33Z",
    "version": "1.22",
    "syntax": "<object> isUniformAllowed <string>",
    "docSyntax": "unit isUniformAllowed type",
    "tags": "[AG]",
    "description": "Check whether given uniform can be dressed by target soldier.",
    "example": "_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";",
    "params": "<object> <string>",
    "returns": "boolean"
  },
  "lbSetPictureColor": {
    "command": "lbSetPictureColor",
    "timestamp": "2021-01-23T09:12:06Z",
    "version": "1.22",
    "syntax": "lbSetPictureColor [<number>, <number>, color]",
    "docSyntax": "lbSetPictureColor [idc, index, color]",
    "tags": "",
    "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]];",
    "params": "<number> <number> color <control> <number> color",
    "returns": "nothing"
  },
  "lbSetPictureRightColor": {
    "command": "lbSetPictureRightColor",
    "timestamp": "2021-01-23T09:17:53Z",
    "version": "1.22",
    "syntax": "lbSetPictureRightColor [<number>, <number>, <array>]",
    "docSyntax": "lbSetPictureRightColor [idc, index, color]",
    "tags": "",
    "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.",
    "example": "lbSetPictureRightColor [101, 0, [0, 1, 0, 0.5]];",
    "params": "<array> <number> <number> <array> <control> <array> <number> <array>",
    "returns": "nothing"
  },
  "magazinesAmmoCargo": {
    "command": "magazinesAmmoCargo",
    "timestamp": "2021-01-23T09:55:57Z",
    "version": "1.22",
    "syntax": "magazinesAmmoCargo <object>",
    "docSyntax": "magazinesAmmoCargo vehicle",
    "tags": "",
    "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.",
    "example": "magazinesAmmoCargo vehicle player;",
    "params": "<object>",
    "returns": "array"
  },
  "openYoutubeVideo": {
    "command": "openYoutubeVideo",
    "timestamp": "2021-01-23T10:24:27Z",
    "version": "1.22",
    "syntax": "openYoutubeVideo <string>",
    "docSyntax": "openYoutubeVideo youTubeUrl",
    "tags": "",
    "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with 'watch?vnowiki=</nowiki>...'. If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.",
    "example": "//Open nowikihttp://www.youtube.com/watch?v=UBIAbm7Rt78</nowiki> _isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";",
    "params": "<string>",
    "returns": "boolean"
  },
  "removeWeaponAttachmentCargo": {
    "command": "removeWeaponAttachmentCargo",
    "timestamp": "2021-01-23T10:41:30Z",
    "version": "1.22",
    "syntax": "<object> removeWeaponAttachmentCargo <array>",
    "docSyntax": "object removeWeaponAttachmentCargo [weaponID,creatorID,\"attachment\"]",
    "tags": "",
    "description": "Remove attachment linked to a weapon from the vehicle cargo space. FeatureWarningThis is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
    "example": "rearmTruckOne removeWeaponAttachmentCargo [weaponID, creatorID, \"attachment\"]",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "removeWeaponCargo": {
    "command": "removeWeaponCargo",
    "timestamp": "2021-01-23T10:36:20Z",
    "version": "1.22",
    "syntax": "<object> removeWeaponCargo <array>",
    "docSyntax": "object removeWeaponCargo [weaponID,creatorID]",
    "tags": "",
    "description": "Remove weapon from the vehicle cargo space. FeatureWarningThis is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
    "example": "rearmTruckOne removeWeaponCargo [19, 1]",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "vectorAdd": {
    "command": "vectorAdd",
    "timestamp": "2021-01-24T10:42:29Z",
    "version": "1.22",
    "syntax": "<array> vectorAdd <array>",
    "docSyntax": "vector1 vectorAdd vector2",
    "tags": "",
    "description": "Adds two 3D vectors. Replaces BIS_fnc_vectorAdd.",
    "example": "hint str (velocity unit1 vectorAdd velocity unit2);",
    "params": "<array> <array>",
    "returns": "array"
  },
  "vectorCos": {
    "command": "vectorCos",
    "timestamp": "2021-01-24T10:39:07Z",
    "version": "1.22",
    "syntax": "<array> vectorCos <array>",
    "docSyntax": "vector1 vectorCos vector2",
    "tags": "",
    "description": "Cosine of angle between two 3D vectors.",
    "example": "_cos = getPos player vectorCos [0,0,2];",
    "params": "<array> <array>",
    "returns": "number"
  },
  "vectorCrossProduct": {
    "command": "vectorCrossProduct",
    "timestamp": "2021-01-24T10:46:10Z",
    "version": "1.22",
    "syntax": "<array> vectorCrossProduct <array>",
    "docSyntax": "vector1 vectorCrossProduct vector2",
    "tags": "",
    "description": "Cross product of two 3D vectors. brIn layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain surfaceNormal). To invert direction of the normal, swap arguments around.",
    "example": "_vector = [1,1,1] vectorCrossProduct [2,2,2];",
    "params": "<array> <array>",
    "returns": "300px"
  },
  "vectorDiff": {
    "command": "vectorDiff",
    "timestamp": "2021-01-24T10:44:03Z",
    "version": "1.22",
    "syntax": "<array> vectorDiff <array>",
    "docSyntax": "vector1 vectorDiff vector2",
    "tags": "",
    "description": "Subtracts one 3D vector from another. (vector1 - vector2)",
    "example": "hint str (velocity car vectorDiff velocity bike);",
    "params": "<array> <array>",
    "returns": "array"
  },
  "vectorDistance": {
    "command": "vectorDistance",
    "timestamp": "2021-01-24T10:39:31Z",
    "version": "1.22",
    "syntax": "position3d vectorDistance position3d",
    "docSyntax": "point1 vectorDistance point2",
    "tags": "",
    "description": "Returns WikipediaEuclidean_distanceEuclidean distance between two points.",
    "example": "_euclideanDist = getPosASL player vectorDistance [0,0,0];",
    "params": "position3d position3d",
    "returns": "number"
  },
  "vectorDistanceSqr": {
    "command": "vectorDistanceSqr",
    "timestamp": "2021-01-24T10:46:24Z",
    "version": "1.22",
    "syntax": "<array> vectorDistanceSqr <array>",
    "docSyntax": "vector1 vectorDistanceSqr vector2",
    "tags": "",
    "description": "Squared distance between two 3D vectors.",
    "example": "_distSqr = getPos player vectorDistanceSqr [0,0,2];",
    "params": "<array> <array>",
    "returns": "number"
  },
  "vectorDotProduct": {
    "command": "vectorDotProduct",
    "timestamp": "2021-01-24T10:43:12Z",
    "version": "1.22",
    "syntax": "<array> vectorDotProduct <array>",
    "docSyntax": "vector1 vectorDotProduct vector2",
    "tags": "",
    "description": "Dot product of two 3D vectors.",
    "example": "_dot = [1,0,1] vectorDotProduct [0,0,2];",
    "params": "<array> <array>",
    "returns": "number"
  },
  "vectorMagnitude": {
    "command": "vectorMagnitude",
    "timestamp": "2021-01-24T10:47:41Z",
    "version": "1.22",
    "syntax": "<array>Magnitude vector",
    "docSyntax": "vectorMagnitude vector",
    "tags": "",
    "description": "Magnitude of a 3D vector.",
    "example": "_size = vectorMagnitude [0,3,4]; // returns 5",
    "params": "<array>",
    "returns": "number"
  },
  "vectorMagnitudeSqr": {
    "command": "vectorMagnitudeSqr",
    "timestamp": "2021-01-24T10:41:46Z",
    "version": "1.22",
    "syntax": "<array>MagnitudeSqr vector",
    "docSyntax": "vectorMagnitudeSqr vector",
    "tags": "",
    "description": "Squared magnitude of a 3D vector.",
    "example": "_sizeSqr = vectorMagnitudeSqr [0,3,4]; // returns 25",
    "params": "<array>",
    "returns": "number"
  },
  "vectorMultiply": {
    "command": "vectorMultiply",
    "timestamp": "2021-01-24T10:43:25Z",
    "version": "1.22",
    "syntax": "<array> vectorMultiply <number>",
    "docSyntax": "vector vectorMultiply scalar",
    "tags": "",
    "description": "Multiplies 3D vector by a scalar.",
    "example": "_newVector = [1,2,3] vectorMultiply 3; // returns [3,6,9]",
    "params": "<array> <number>",
    "returns": "array"
  },
  "visibleCompass": {
    "command": "visibleCompass",
    "timestamp": "2021-01-24T10:38:33Z",
    "version": "1.22",
    "syntax": "'visibleCompass'",
    "docSyntax": "'visibleCompass'",
    "tags": "",
    "description": "Checks if the player has compass opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the direction.",
    "example": "if (visibleCompass) then {hint \"Compass is visible\"};",
    "params": "",
    "returns": "boolean"
  },
  "visibleGPS": {
    "command": "visibleGPS",
    "timestamp": "2021-01-24T10:40:23Z",
    "version": "1.22",
    "syntax": "'visibleGPS'",
    "docSyntax": "'visibleGPS'",
    "tags": "",
    "description": "Checks if the player has GPS receiver (minimap) opened and visible.",
    "example": "if (visibleGPS) then {hint \"GPS is visible\"};",
    "params": "",
    "returns": "boolean"
  },
  "visibleWatch": {
    "command": "visibleWatch",
    "timestamp": "2021-01-24T10:43:04Z",
    "version": "1.22",
    "syntax": "'visibleWatch'",
    "docSyntax": "'visibleWatch'",
    "tags": "",
    "description": "Checks if the player has watch opened and visible. Keep in mind that the GPS minimap in arma3 also shows the time.",
    "example": "if (visibleWatch) then {hint \"Watch is visible\"};",
    "params": "",
    "returns": "boolean"
  },
  "weaponAccessoriesCargo": {
    "command": "weaponAccessoriesCargo",
    "timestamp": "2021-01-24T10:42:52Z",
    "version": "1.22",
    "syntax": "<object> weaponAccessoriesCargo <array>",
    "docSyntax": "container weaponAccessoriesCargo [weaponId, creatorId]",
    "tags": "",
    "description": "Returns array with all items assigned to the given weapon in given cargo container. FeatureWarningThis is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
    "example": "-",
    "params": "<object> <array> <number> <number>",
    "returns": "array"
  },
  "weaponsItemsCargo": {
    "command": "weaponsItemsCargo",
    "timestamp": "2021-01-24T10:47:03Z",
    "version": "1.22",
    "syntax": "weaponsItemsCargo <object>",
    "docSyntax": "weaponsItemsCargo vehicle",
    "tags": "",
    "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info. If the argument is a vehicle with weapons, vehicles cargo is searched, unlike with weaponsItems command, which will return vehicle's weapons instead. * Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with getUnitLoadout format for weapon items.",
    "example": "weaponsItemsCargo vehicle player;",
    "params": "<object>",
    "returns": "array | weaponsitems"
  },
  "allMines": {
    "command": "allMines",
    "timestamp": "2021-01-22T21:34:22Z",
    "version": "1.24",
    "syntax": "'allMines'",
    "docSyntax": "'allMines'",
    "tags": "",
    "description": "Returns an array of all mines in the mission",
    "example": "allMines",
    "params": "",
    "returns": "array"
  },
  "BIS_fnc_addVirtualBackpackCargo": {
    "command": "BIS_fnc_addVirtualBackpackCargo",
    "timestamp": "2021-01-22T23:50:33Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>,<boolean>] call BIS_fnc_addVirtualBackpackCargo",
    "docSyntax": "[object,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo",
    "tags": "",
    "description": "Add virtual backpacks to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualBackpackCargo;",
    "params": "<object> strings <boolean> <boolean>",
    "returns": "strings - all virtual backpacks"
  },
  "BIS_fnc_addVirtualItemCargo": {
    "command": "BIS_fnc_addVirtualItemCargo",
    "timestamp": "2021-01-22T23:05:23Z",
    "version": "1.24",
    "syntax": "[<object>, strings, <boolean>, <boolean>, <number>, <number>] call BIS_fnc_addVirtualItemCargo",
    "docSyntax": "[object, itemClasses, addItemsGlobal, arsenal, mode, itemType] call BIS_fnc_addVirtualItemCargo",
    "tags": "",
    "description": "Add virtual items to an object (e.g., ammo box). Virtual items can be selected in the Arsenal. If parameters 4 and 5 are used this function can replace BIS_fnc_addVirtualWeaponCargo, BIS_fnc_addVirtualMagazineCargo and BIS_fnc_addVirtualBackpackCargo.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualItemCargo;",
    "params": "<object> strings <boolean> <boolean> <number> <number>",
    "returns": "strings - all virtual items"
  },
  "BIS_fnc_addVirtualMagazineCargo": {
    "command": "BIS_fnc_addVirtualMagazineCargo",
    "timestamp": "2021-01-22T23:54:59Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>,<boolean>] call BIS_fnc_addVirtualMagazineCargo",
    "docSyntax": "[object,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo",
    "tags": "",
    "description": "Add virtual magazines to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualMagazineCargo;",
    "params": "<object> strings <boolean> <boolean>",
    "returns": "strings - all virtual magazines"
  },
  "BIS_fnc_addVirtualWeaponCargo": {
    "command": "BIS_fnc_addVirtualWeaponCargo",
    "timestamp": "2021-01-22T23:09:34Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>,<boolean>] call BIS_fnc_addVirtualWeaponCargo",
    "docSyntax": "[object,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo",
    "tags": "",
    "description": "Add virtual weapons to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualWeaponCargo;",
    "params": "<object> strings <boolean> <boolean>",
    "returns": "strings - all virtual weapons"
  },
  "BIS_fnc_animateTaskWaypoint": {
    "command": "BIS_fnc_animateTaskWaypoint",
    "timestamp": "2021-01-22T23:06:11Z",
    "version": "1.24",
    "syntax": "param call BIS_fnc_animateTaskWaypoint",
    "docSyntax": "param call BIS_fnc_animateTaskWaypoint",
    "tags": "",
    "description": "Plays an animation that pushes the active task waypoint up and down.",
    "example": "noWiki[</noWiki>playernoWiki]</noWiki> call BIS_fnc_animateTaskWaypoint;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_arsenal": {
    "command": "BIS_fnc_arsenal",
    "timestamp": "2021-01-22T23:10:02Z",
    "version": "1.24",
    "syntax": "[<string>, arsenal] call BIS_fnc_arsenal",
    "docSyntax": "[mode, params] call BIS_fnc_arsenal",
    "tags": "",
    "description": "Function used for the Virtual Arsenal. The function features four different modes, each mode comes with its own parameters. Feature Informative If Arsenal is launched within the first second from the mission start, the unit loadout will be randomised.",
    "example": "// Opens Arsenal with all items [\"Open\", [true]] call BIS_fnc_arsenal;",
    "params": "<string> arsenal",
    "returns": "nothing"
  },
  "BIS_fnc_compatibleItems": {
    "command": "BIS_fnc_compatibleItems",
    "timestamp": "2021-01-22T23:09:03Z",
    "version": "1.24",
    "syntax": "<string> call BIS_fnc_compatibleItems",
    "docSyntax": "weapon call BIS_fnc_compatibleItems",
    "tags": "",
    "description": "Return all compatible weapon attachments.",
    "example": "(currentWeapon player) call BIS_fnc_compatibleItems;",
    "params": "<string>",
    "returns": "strings"
  },
  "BIS_fnc_getUnitInsignia": {
    "command": "BIS_fnc_getUnitInsignia",
    "timestamp": "2021-01-23T09:01:25Z",
    "version": "1.24",
    "syntax": "[<object>] call BIS_fnc_getUnitInsignia",
    "docSyntax": "[target] call BIS_fnc_getUnitInsignia",
    "tags": "",
    "description": "Get a unit's uniform insignia class set with BIS_fnc_setUnitInsignia.",
    "example": "private _insigniaClass = [player] call BIS_fnc_getUnitInsignia",
    "params": "<object>",
    "returns": "string"
  },
  "BIS_fnc_getVirtualBackpackCargo": {
    "command": "BIS_fnc_getVirtualBackpackCargo",
    "timestamp": "2021-01-23T09:08:42Z",
    "version": "1.24",
    "syntax": "<object> call BIS_fnc_getVirtualBackpackCargo",
    "docSyntax": "object call BIS_fnc_getVirtualBackpackCargo",
    "tags": "",
    "description": "Get virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "BIS_ammoBox call BIS_fnc_getVirtualBackpackCargo;",
    "params": "<object>",
    "returns": "strings - all virtual backpacks"
  },
  "BIS_fnc_getVirtualItemCargo": {
    "command": "BIS_fnc_getVirtualItemCargo",
    "timestamp": "2021-01-23T09:11:19Z",
    "version": "1.24",
    "syntax": "<object> call BIS_fnc_getVirtualItemCargo",
    "docSyntax": "object call BIS_fnc_getVirtualItemCargo",
    "tags": "",
    "description": "Get virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "BIS_ammoBox call BIS_fnc_getVirtualItemCargo;",
    "params": "<object>",
    "returns": "strings - all virtual items"
  },
  "BIS_fnc_getVirtualMagazineCargo": {
    "command": "BIS_fnc_getVirtualMagazineCargo",
    "timestamp": "2021-01-23T09:22:23Z",
    "version": "1.24",
    "syntax": "<object> call BIS_fnc_getVirtualMagazineCargo",
    "docSyntax": "object call BIS_fnc_getVirtualMagazineCargo",
    "tags": "",
    "description": "Get virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "BIS_ammoBox call BIS_fnc_getVirtualMagazineCargo;",
    "params": "<object>",
    "returns": "strings - all virtual magazines"
  },
  "BIS_fnc_getVirtualWeaponCargo": {
    "command": "BIS_fnc_getVirtualWeaponCargo",
    "timestamp": "2021-01-23T09:11:46Z",
    "version": "1.24",
    "syntax": "<object> call BIS_fnc_getVirtualWeaponCargo",
    "docSyntax": "object call BIS_fnc_getVirtualWeaponCargo",
    "tags": "",
    "description": "Get virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "BIS_ammoBox call BIS_fnc_getVirtualWeaponCargo;",
    "params": "<object>",
    "returns": "strings - all virtual weapons"
  },
  "BIS_fnc_removeVirtualBackpackCargo": {
    "command": "BIS_fnc_removeVirtualBackpackCargo",
    "timestamp": "2021-01-23T10:26:22Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>] call BIS_fnc_removeVirtualBackpackCargo",
    "docSyntax": "[object,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo",
    "tags": "",
    "description": "Remove virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualBackpackCargo;",
    "params": "<object> strings <boolean>",
    "returns": "array | array | array | array"
  },
  "BIS_fnc_removeVirtualItemCargo": {
    "command": "BIS_fnc_removeVirtualItemCargo",
    "timestamp": "2021-01-23T10:37:58Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>] call BIS_fnc_removeVirtualItemCargo",
    "docSyntax": "[object,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo",
    "tags": "",
    "description": "Remove virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualItemCargo;",
    "params": "<object> strings <boolean>",
    "returns": "array | array | array | array"
  },
  "BIS_fnc_removeVirtualMagazineCargo": {
    "command": "BIS_fnc_removeVirtualMagazineCargo",
    "timestamp": "2021-01-23T10:42:05Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>] call BIS_fnc_removeVirtualMagazineCargo",
    "docSyntax": "[object,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo",
    "tags": "",
    "description": "Remove virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualMagazineCargo;",
    "params": "<object> strings <boolean>",
    "returns": "array | array | array | array"
  },
  "BIS_fnc_removeVirtualWeaponCargo": {
    "command": "BIS_fnc_removeVirtualWeaponCargo",
    "timestamp": "2021-01-23T10:24:14Z",
    "version": "1.24",
    "syntax": "[<object>,strings,<boolean>] call BIS_fnc_removeVirtualWeaponCargo",
    "docSyntax": "[object,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo",
    "tags": "",
    "description": "Remove virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.",
    "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualWeaponCargo;",
    "params": "<object> strings <boolean>",
    "returns": "array | array | array | array"
  },
  "BIS_fnc_setUnitInsignia": {
    "command": "BIS_fnc_setUnitInsignia",
    "timestamp": "2021-01-23T20:33:28Z",
    "version": "1.24",
    "syntax": "[<object>, <string>Name] call BIS_fnc_setUnitInsignia",
    "docSyntax": "[target, className] call BIS_fnc_setUnitInsignia",
    "tags": "[AG] [EG]",
    "description": "Sets unit insignia (e.g., shoulder insignia on soldiers). See <Arma \n3: Unit Insignia> for more details and a list of official insignias.",
    "example": "[player, \"111thID\"] call BIS_fnc_setUnitInsignia;",
    "params": "<object> <string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_VRCourseBallistics1": {
    "command": "BIS_fnc_VRCourseBallistics1",
    "timestamp": "2021-01-22T22:50:01Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseBallistics2": {
    "command": "BIS_fnc_VRCourseBallistics2",
    "timestamp": "2021-01-22T22:56:01Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseBallistics3": {
    "command": "BIS_fnc_VRCourseBallistics3",
    "timestamp": "2021-01-22T22:45:01Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseBallistics4": {
    "command": "BIS_fnc_VRCourseBallistics4",
    "timestamp": "2021-01-22T22:43:03Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingActions1": {
    "command": "BIS_fnc_VRCourseCommandingActions1",
    "timestamp": "2021-01-22T22:41:00Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingActions2": {
    "command": "BIS_fnc_VRCourseCommandingActions2",
    "timestamp": "2021-01-22T22:44:21Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingActions3": {
    "command": "BIS_fnc_VRCourseCommandingActions3",
    "timestamp": "2021-01-22T22:56:39Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingBehaviour1": {
    "command": "BIS_fnc_VRCourseCommandingBehaviour1",
    "timestamp": "2021-01-22T22:43:41Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingBehaviour2": {
    "command": "BIS_fnc_VRCourseCommandingBehaviour2",
    "timestamp": "2021-01-22T22:42:02Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingBehaviour3": {
    "command": "BIS_fnc_VRCourseCommandingBehaviour3",
    "timestamp": "2021-01-22T22:57:50Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingMovement1": {
    "command": "BIS_fnc_VRCourseCommandingMovement1",
    "timestamp": "2021-01-22T22:53:28Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingMovement2": {
    "command": "BIS_fnc_VRCourseCommandingMovement2",
    "timestamp": "2021-01-22T22:55:11Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingVehicles1": {
    "command": "BIS_fnc_VRCourseCommandingVehicles1",
    "timestamp": "2021-01-22T22:59:08Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingVehicles2": {
    "command": "BIS_fnc_VRCourseCommandingVehicles2",
    "timestamp": "2021-01-22T22:48:02Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseCommandingVehicles3": {
    "command": "BIS_fnc_VRCourseCommandingVehicles3",
    "timestamp": "2021-01-22T22:47:35Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced1": {
    "command": "BIS_fnc_VRCourseHeliAdvanced1",
    "timestamp": "2021-01-22T22:58:03Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced2": {
    "command": "BIS_fnc_VRCourseHeliAdvanced2",
    "timestamp": "2021-01-22T22:42:27Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced3": {
    "command": "BIS_fnc_VRCourseHeliAdvanced3",
    "timestamp": "2021-01-22T22:48:13Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced4": {
    "command": "BIS_fnc_VRCourseHeliAdvanced4",
    "timestamp": "2021-01-22T22:45:42Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced5": {
    "command": "BIS_fnc_VRCourseHeliAdvanced5",
    "timestamp": "2021-01-22T22:56:36Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliAdvanced6": {
    "command": "BIS_fnc_VRCourseHeliAdvanced6",
    "timestamp": "2021-01-22T22:47:11Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliBasics1": {
    "command": "BIS_fnc_VRCourseHeliBasics1",
    "timestamp": "2021-01-22T22:49:35Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliBasics2": {
    "command": "BIS_fnc_VRCourseHeliBasics2",
    "timestamp": "2021-01-22T22:55:55Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliBasics3": {
    "command": "BIS_fnc_VRCourseHeliBasics3",
    "timestamp": "2021-01-22T22:41:17Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliSlingload1": {
    "command": "BIS_fnc_VRCourseHeliSlingload1",
    "timestamp": "2021-01-22T22:41:48Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliWeapons1": {
    "command": "BIS_fnc_VRCourseHeliWeapons1",
    "timestamp": "2021-01-22T22:56:50Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliWeapons2": {
    "command": "BIS_fnc_VRCourseHeliWeapons2",
    "timestamp": "2021-01-22T22:47:08Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliWeapons3": {
    "command": "BIS_fnc_VRCourseHeliWeapons3",
    "timestamp": "2021-01-22T22:43:06Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseHeliWeapons4": {
    "command": "BIS_fnc_VRCourseHeliWeapons4",
    "timestamp": "2021-01-22T22:45:04Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseLaunchers1": {
    "command": "BIS_fnc_VRCourseLaunchers1",
    "timestamp": "2021-01-22T22:58:59Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseLaunchers2": {
    "command": "BIS_fnc_VRCourseLaunchers2",
    "timestamp": "2021-01-22T22:52:58Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseLaunchers3": {
    "command": "BIS_fnc_VRCourseLaunchers3",
    "timestamp": "2021-01-22T22:43:30Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCoursePlaceables1": {
    "command": "BIS_fnc_VRCoursePlaceables1",
    "timestamp": "2021-01-22T22:40:49Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCoursePlaceables2": {
    "command": "BIS_fnc_VRCoursePlaceables2",
    "timestamp": "2021-01-22T22:47:01Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCoursePlaceables3": {
    "command": "BIS_fnc_VRCoursePlaceables3",
    "timestamp": "2021-01-22T22:46:16Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseTargetDesignation1": {
    "command": "BIS_fnc_VRCourseTargetDesignation1",
    "timestamp": "2021-01-22T22:45:06Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseTargetDesignation2": {
    "command": "BIS_fnc_VRCourseTargetDesignation2",
    "timestamp": "2021-01-22T22:43:43Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseTargetDesignation3": {
    "command": "BIS_fnc_VRCourseTargetDesignation3",
    "timestamp": "2021-01-22T22:52:00Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingA1": {
    "command": "BIS_fnc_VRCourseWeaponHandlingA1",
    "timestamp": "2021-01-22T22:48:23Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingA2": {
    "command": "BIS_fnc_VRCourseWeaponHandlingA2",
    "timestamp": "2021-01-22T22:45:02Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingA3": {
    "command": "BIS_fnc_VRCourseWeaponHandlingA3",
    "timestamp": "2021-01-22T22:47:41Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingB1": {
    "command": "BIS_fnc_VRCourseWeaponHandlingB1",
    "timestamp": "2021-01-22T22:42:20Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingB2": {
    "command": "BIS_fnc_VRCourseWeaponHandlingB2",
    "timestamp": "2021-01-22T22:42:32Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingB3": {
    "command": "BIS_fnc_VRCourseWeaponHandlingB3",
    "timestamp": "2021-01-22T22:43:39Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingC1": {
    "command": "BIS_fnc_VRCourseWeaponHandlingC1",
    "timestamp": "2021-01-22T22:55:59Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRCourseWeaponHandlingC2": {
    "command": "BIS_fnc_VRCourseWeaponHandlingC2",
    "timestamp": "2021-01-22T22:41:48Z",
    "version": "1.24",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantUsed for VR Courses, internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_VRDrawBorder": {
    "command": "BIS_fnc_VRDrawBorder",
    "timestamp": "2021-01-22T22:45:38Z",
    "version": "1.24",
    "syntax": "[<position>, <number>] call BIS_fnc_VRDrawBorder",
    "docSyntax": "[center, radius] call BIS_fnc_VRDrawBorder",
    "tags": "",
    "description": "Visualizes area border (used primarily for VR missions).",
    "example": "[nowiki[0,0,0], 200] call BIS_fnc_VRDrawBorder;",
    "params": "<position> <number>",
    "returns": "array"
  },
  "BIS_fnc_VREffectKilled": {
    "command": "BIS_fnc_VREffectKilled",
    "timestamp": "2021-01-22T22:45:55Z",
    "version": "1.24",
    "syntax": "[<object>, eh, <number>] call BIS_fnc_VREffectKilled",
    "docSyntax": "[object, instant, delay] call BIS_fnc_VREffectKilled",
    "tags": "",
    "description": "Delete body of a virtual soldier after he's killed.",
    "example": "[ player ] call BIS_fnc_VREffectKilled;",
    "params": "<object> eh <number>",
    "returns": "boolean | true"
  },
  "BIS_fnc_VRHitpart": {
    "command": "BIS_fnc_VRHitpart",
    "timestamp": "2021-01-22T22:42:35Z",
    "version": "1.24",
    "syntax": "[<object>,<number>] call BIS_fnc_VRHitpart",
    "docSyntax": "[object,time] call BIS_fnc_VRHitpart",
    "tags": "",
    "description": "Initialize hit effects on VR targets.br brgrey - undamaged brorange - damaged brred - destroyed",
    "example": "_delta = [someObject, 60] call BIS_fnc_VRHitpart;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_VRSpawnEffect": {
    "command": "BIS_fnc_VRSpawnEffect",
    "timestamp": "2021-01-22T22:43:47Z",
    "version": "1.24",
    "syntax": "[<object>, reverse, <number>] call BIS_fnc_VRSpawnEffect",
    "docSyntax": "[object, reverse, size] call BIS_fnc_VRSpawnEffect",
    "tags": "",
    "description": "VR (unit) spawn effect.",
    "example": "[ player, false, 5 ] call BIS_fnc_VRSpawnEffect;",
    "params": "<object> <boolean> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_VRSpawnSelector": {
    "command": "BIS_fnc_VRSpawnSelector",
    "timestamp": "2021-01-22T22:48:11Z",
    "version": "1.24",
    "syntax": "[<position>, <string>] call BIS_fnc_VRSpawnSelector",
    "docSyntax": "[center, type] call BIS_fnc_VRSpawnSelector",
    "tags": "",
    "description": "Spawns the course selector (used primarily for VR missions).",
    "example": "[ [0,0,0], \"exit\" ] call BIS_fnc_VRSpawnSelector;",
    "params": "<position> <string>",
    "returns": "object"
  },
  "configClasses": {
    "command": "configClasses",
    "timestamp": "2021-06-13T22:14:08Z",
    "version": "1.24",
    "syntax": "<string> <config>Classes config",
    "docSyntax": "condition configClasses config",
    "tags": "",
    "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative _x\" in the condition. The engine does this check alreadybrbr * arma3 v2.02 brought specific engine optimisations for the following \nconditions: ** hl\"_x >> 'scope') > 0\"",
    "example": "_configs = \"true\" configClasses (configFile >> \"CfgVehicles\");",
    "params": "<string> <config>",
    "returns": "array | config"
  },
  "detectedMines": {
    "command": "detectedMines",
    "timestamp": "2021-01-22T22:53:12Z",
    "version": "1.24",
    "syntax": "detectedMines <side>",
    "docSyntax": "detectedMines side",
    "tags": "",
    "description": "Returns an array of all mines detected by a given side",
    "example": "detectedMines west;",
    "params": "<side>",
    "returns": "array"
  },
  "disableUAVConnectability": {
    "command": "disableUAVConnectability",
    "timestamp": "2021-01-22T22:50:15Z",
    "version": "1.24",
    "syntax": "<object> disableUAVConnectability [<object>, <boolean>]",
    "docSyntax": "object disableUAVConnectability [uav, checkAllItems]",
    "tags": "[EL]",
    "description": "Disables unit's AV terminal(s) connecting to UAV.",
    "example": "myUnit disableUAVConnectability [myUav, true];",
    "params": "<object> <object> <boolean>",
    "returns": "nothing"
  },
  "enableUAVConnectability": {
    "command": "enableUAVConnectability",
    "timestamp": "2021-01-22T23:40:01Z",
    "version": "1.24",
    "syntax": "<object> enableUAVConnectability [<object>, <boolean>]",
    "docSyntax": "object enableUAVConnectability [uav, checkAllItems]",
    "tags": "[EL]",
    "description": "Enables unit's AV terminal(s) connecting to UAV.",
    "example": "unit enableUAVConnectability [uav, true];",
    "params": "<object> <object> <boolean>",
    "returns": "nothing"
  },
  "isAutotest": {
    "command": "isAutotest",
    "timestamp": "2021-01-23T09:23:18Z",
    "version": "1.24",
    "syntax": "isAutotest",
    "docSyntax": "isAutotest",
    "tags": "",
    "description": "Returns true if game was started with autotest parameter",
    "example": "_bool = isAutotest",
    "params": "",
    "returns": "boolean"
  },
  "isUAVConnectable": {
    "command": "isUAVConnectable",
    "timestamp": "2021-01-23T09:21:42Z",
    "version": "1.24",
    "syntax": "<object> isUAVConnectable [<object>, <boolean>]",
    "docSyntax": "object isUAVConnectable [uav, checkAllItems]",
    "tags": "",
    "description": "Returns true if UAV is connectable by AV terminal(s).",
    "example": "private _canConnect = myUnit isUAVConnectable [myUav, true];",
    "params": "<object> <object> <boolean>",
    "returns": "boolean"
  },
  "mineDetectedBy": {
    "command": "mineDetectedBy",
    "timestamp": "2021-01-23T09:58:23Z",
    "version": "1.24",
    "syntax": "<object> mineDetectedBy <side>",
    "docSyntax": "mine mineDetectedBy faction",
    "tags": "",
    "description": "Returns true if mine has been detected by a given side",
    "example": "(allMines select 0) mineDetectedBy west;",
    "params": "<object> <side>",
    "returns": "boolean"
  },
  "reverse": {
    "command": "reverse",
    "timestamp": "2021-01-23T10:25:33Z",
    "version": "1.24",
    "syntax": "reverse <array>",
    "docSyntax": "reverse array",
    "tags": "",
    "description": "Reverses given array by reference (modifies the original array, just like string. If Unicode support is desired, see forceUnicode.",
    "example": "_arr = [1,2,3]; reverse _arr; hint str _arr; cc[3,2,1]",
    "params": "<array> <string>",
    "returns": "nothing"
  },
  "buldozer_enableRoadDiag": {
    "command": "buldozer_enableRoadDiag",
    "timestamp": "2021-06-22T15:21:50Z",
    "version": "1.26",
    "syntax": "buldozer_<boolean>RoadDiag enable",
    "docSyntax": "buldozer_enableRoadDiag enable",
    "tags": "",
    "description": "Enables road diagnostics in buldozer.",
    "example": "buldozer_enableRoadDiag true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "buldozer_isEnabledRoadDiag": {
    "command": "buldozer_isEnabledRoadDiag",
    "timestamp": "2021-06-22T15:22:07Z",
    "version": "1.26",
    "syntax": "buldozer_isEnabledRoadDiag",
    "docSyntax": "buldozer_isEnabledRoadDiag",
    "tags": "",
    "description": "Returns if road diagnostics are enabled in buldozer.",
    "example": "_isEnabled = buldozer_isEnabledRoadDiag;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "ctrlClassName": {
    "command": "ctrlClassName",
    "timestamp": "2021-01-22T22:05:23Z",
    "version": "1.26",
    "syntax": "ctrlClassName control",
    "docSyntax": "ctrlClassName control",
    "tags": "",
    "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display \nitself: code_className nowiki=</nowiki> findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"</code>",
    "example": "_return = [] ; { _return pushBack format [\"IDC: %1, className: %2\", ctrlIDC _x, ctrlClassName _x]; } forEach (allControls (findDisplay 46)); copyToClipboard (_return joinString endl);",
    "params": "<control>",
    "returns": "string"
  },
  "ctrlCreate": {
    "command": "ctrlCreate",
    "timestamp": "2021-01-22T22:02:25Z",
    "version": "1.26",
    "syntax": "<display> ctrlCreate [<string>, <number>, controlsGroup]",
    "docSyntax": "display ctrlCreate [class, idc, controlsGroup]",
    "tags": "",
    "description": "Creates a new control in the given display.br The control class could be an existing class from the main config or a custom class defined in the mission config. The main config is searched first, if the class does not exist there, the mission config is searched. Some of the common controls defined in the main config that can be used with this \ncommand: spoiler text=\"Show list\" {{{!}} class=\"wikitable\" width=\"100%\" {{!}}- ! Class !! Description !! Available since {{!}}- {{!}} RscText {{!}}{{!}} simple text box {{!}}{{!}} {{!}}- {{!}} RscStructuredText {{!}}{{!}} text box which supports structured text {{!}}{{!}} {{!}}- {{!}} RscTextMulti {{!}}{{!}} simple multiline text box {{!}}{{!}} {{!}}- {{!}} RscPicture {{!}}{{!}} simple picture box {{!}}{{!}} {{!}}- {{!}} RscPictureKeepAspect {{!}}{{!}} picture box that doesn't stretch picture {{!}}{{!}} {{!}}- {{!}} RscEdit {{!}}{{!}} input box {{!}}{{!}} {{!}}- {{!}} RscEditMulti {{!}}{{!}} multiline input box {{!}}{{!}} {{!}}- {{!}} RscEditReadOnly {{!}}{{!}} input box with {{hl|c= canModify {{=}} false;}} {{!}}{{!}} v1.98 {{!}}- {{!}} RscEditMultiReadOnly {{!}}{{!}} multiline input box with {{hl|c= canModify {{=}} false;}}{{!}}{{!}} v1.98 {{!}}- {{!}} RscTree {{!}}{{!}} tree view control {{!}}{{!}} {{!}}- {{!}} RscTreeMulti {{!}}{{!}} multi-select tree view {{!}}{{!}} v2.02 {{!}}- {{!}} RscTreeSearch {{!}}{{!}} searchable tree view control (see Example 4) {{!}}{{!}} {{!}}- {{!}} RscVideo {{!}}{{!}} picture control with autostart for video texture (see BIS_fnc_playVideo) {{!}}{{!}} {{!}}- {{!}} RscVideoKeepAspect {{!}}{{!}} picture control for video to keep original video aspect ratio {{!}}{{!}} {{!}}- {{!}} RscButtonMenuBIKI {{!}}{{!}} shortcut button with url pointing to \"https://community.bistudio.com/wiki/\" {{!}}{{!}} v1.98 {{!}}- {{!}} RscControlsGroup {{!}}{{!}} default controls group {{!}}{{!}} {{!}}- {{!}} RscControlsGroupNoScrollbars {{!}}{{!}} controls group without scrollbars {{!}}{{!}} {{!}}- {{!}} RscControlsGroupNoHScrollbars {{!}}{{!}} controls group without horizontal scrollbar {{!}}{{!}} {{!}}- {{!}} RscControlsGroupNoVScrollbars {{!}}{{!}} controls group without vertical scrollbar {{!}}{{!}} {{!}}} </spoiler> FeatureInformativeThis list contains controls which are guaranteed to work with this command. However, controls not listed here should work as well - as long as they are properly defined. FeatureImportantIf you are creating CT_MAP control dynamically, use ctrlMapSetPosition to update control position instead of ctrlSetPosition.",
    "example": "_display ctrlCreate [\"RscText\", 1234];",
    "params": "<display> <string> <number> <control>",
    "returns": "control"
  },
  "ctrlDelete": {
    "command": "ctrlDelete",
    "timestamp": "2021-01-22T22:03:02Z",
    "version": "1.26",
    "syntax": "ctrlDelete <control>",
    "docSyntax": "ctrlDelete control",
    "tags": "",
    "description": "Deletes given control. The control has to be created either by script with ctrlCreate or to have deletable property in config set to true. Use ctrlShow false and ctrlEnable false to disable controls that cannot be deleted. Returns Boolean indicating whether the deletion was successful.",
    "example": "ctrlDelete ((findDisplay 20000) displayCtrl 20001);",
    "params": "<control>",
    "returns": "boolean"
  },
  "getCargoIndex": {
    "command": "getCargoIndex",
    "timestamp": "2021-01-23T00:31:05Z",
    "version": "1.26",
    "syntax": "<object> getCargoIndex <object>",
    "docSyntax": "vehicle getCargoIndex unit",
    "tags": "[AG]",
    "description": "Returns index of the unit in cargo. -1 if not in cargo.",
    "example": "player moveInCargo heli; hint str (heli getCargoIndex player);",
    "params": "<object> <object>",
    "returns": "number"
  },
  "lockCameraTo": {
    "command": "lockCameraTo",
    "timestamp": "2021-01-23T09:55:37Z",
    "version": "1.26",
    "syntax": "<object> lockCameraTo [positionasl, <array>]",
    "docSyntax": "vehicle lockCameraTo [target, turretPath]",
    "tags": "[AL]",
    "description": "Lock/Unlock stabilized camera to target. Works only on turrets which have optic mode selected with direction stabilization enabled. FeatureinformativeSince GVIarma32.08 the command also works with non-stabilized turrets (such as main turret of a tank). See HashLink#Alternative_Syntaxsyntax 2. FeatureinformativeThe command is local to the 'turret' gunner, not the vehicle.",
    "example": "uav lockCameraTo [vehicle, [0,0]];",
    "params": "<object> positionasl <array> <object> positionasl <array> <boolean>",
    "returns": "nothing"
  },
  "pushBack": {
    "command": "pushBack",
    "timestamp": "2021-01-23T10:41:09Z",
    "version": "1.26",
    "syntax": "<array> pushBack <anything>",
    "docSyntax": "array pushBack element",
    "tags": "",
    "description": "Insert an element to the back of the given array. This command modifies the original array. (see \nalso: pushBackUnique)",
    "example": "_arr = [1,2,3]; _arr pushBack 4; hint str _arr; //[1,2,3,4]",
    "params": "<array> <anything>",
    "returns": "number"
  },
  "setTimeMultiplier": {
    "command": "setTimeMultiplier",
    "timestamp": "2021-01-23T23:59:57Z",
    "version": "1.26",
    "syntax": "setTimeMultiplier <number>",
    "docSyntax": "setTimeMultiplier value",
    "tags": "[SE] [EG]",
    "description": "Sets a time multiplier for in-game time. The command range is capped at 0.1 - 120 to avoid performance problems.",
    "example": "setTimeMultiplier 60;",
    "params": "<number>",
    "returns": "nothing"
  },
  "timeMultiplier": {
    "command": "timeMultiplier",
    "timestamp": "2021-01-24T00:01:10Z",
    "version": "1.26",
    "syntax": "'timeMultiplier'",
    "docSyntax": "'timeMultiplier'",
    "tags": "",
    "description": "Returns the value set with setTimeMultiplier.",
    "example": "_multiplier = timeMultiplier;",
    "params": "",
    "returns": "number"
  },
  "vectorFromTo": {
    "command": "vectorFromTo",
    "timestamp": "2021-01-24T10:44:37Z",
    "version": "1.26",
    "syntax": "<array> vectorFromTo <array>",
    "docSyntax": "vector1 vectorFromTo vector2",
    "tags": "",
    "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces normalised vector between given 2 points.br To get a non-normalised vector, use vectorDiff.",
    "example": "[1,2,3] vectorFromTo [4,5,6]; // is the same as vectorNormalized ([4,5,6] vectorDiff [1,2,3]);",
    "params": "<array> <array>",
    "returns": "array"
  },
  "vectorNormalized": {
    "command": "vectorNormalized",
    "timestamp": "2021-01-24T10:47:20Z",
    "version": "1.26",
    "syntax": "<array>Normalized vector",
    "docSyntax": "vectorNormalized vector",
    "tags": "",
    "description": "Returns normalized vector (unit vector, vectorMagnitude == 1) of given vector. If given vector is 0 result is a 0 vector as well.",
    "example": "vectorNormalized [12345,7890,38383]; cc[0.300481,0.192045,0.934254] vectorMagnitude [0.300481,0.192045,0.934254]; cc",
    "params": "<array>",
    "returns": "array"
  },
  "addBackpackGlobal": {
    "command": "addBackpackGlobal",
    "timestamp": "2021-01-22T21:36:25Z",
    "version": "1.32",
    "syntax": "<object> addBackpackGlobal <string>",
    "docSyntax": "unit addBackpackGlobal backpack",
    "tags": "[AG] [EG]",
    "description": "Adds a backpack to a unit (even non-local).Feature Warning Beware, the backpack added with this command will be created on the PC local to the unit you are adding it to, even if executed on the server. Because of this, if non-local unit is the target and one tries to immediately access added backpack, the backpack returned will be Null. When adding backpack dynamically to a remote unit, wait until backpack is added (See Example 2)",
    "example": "player addBackpackGlobal \"B_AssaultPack_khk\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "addMagazineAmmoCargo": {
    "command": "addMagazineAmmoCargo",
    "timestamp": "2021-01-22T21:29:12Z",
    "version": "1.32",
    "syntax": "<object> addMagazineAmmoCargo <array>",
    "docSyntax": "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]",
    "tags": "[AG] [EG]",
    "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.",
    "example": "_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];",
    "params": "<object> <array> <string> <number> <number>",
    "returns": "nothing"
  },
  "addToRemainsCollector": {
    "command": "addToRemainsCollector",
    "timestamp": "2021-01-22T21:32:48Z",
    "version": "1.32",
    "syntax": "addToRemainsCollector <array>",
    "docSyntax": "addToRemainsCollector remains",
    "tags": "[AG] [EG]",
    "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext",
    "example": "addToRemainsCollector [unit1, unit2, vehicle1];",
    "params": "<array>",
    "returns": "nothing"
  },
  "addWeaponTurret": {
    "command": "addWeaponTurret",
    "timestamp": "2021-01-22T21:43:31Z",
    "version": "1.32",
    "syntax": "<object> addWeaponTurret [<string>, <array>]",
    "docSyntax": "vehicle addWeaponTurret [weaponName, turretPath]",
    "tags": "[AL] [EG]",
    "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.",
    "example": "_tank addWeaponTurret [\"LMG_M200\", [0,0]];",
    "params": "<object> <string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_setMissionStatusSlot": {
    "command": "BIS_fnc_setMissionStatusSlot",
    "timestamp": "2021-01-23T20:21:30Z",
    "version": "1.32",
    "syntax": "[<number>, <string>, <string>, <array>, <number>, <array>, <number>] call BIS_fnc_setMissionStatusSlot",
    "docSyntax": "[id, text, texture, color, fade, position, barHeight] call BIS_fnc_setMissionStatusSlot",
    "tags": "",
    "description": "Set a slot for mission status with sectors, respawn tickets, etc.",
    "example": "",
    "params": "<number> <string> <string> <array> <number> <array> <number>",
    "returns": "number"
  },
  "BIS_fnc_showMissionStatus": {
    "command": "BIS_fnc_showMissionStatus",
    "timestamp": "2021-01-23T20:30:56Z",
    "version": "1.32",
    "syntax": "[] call BIS_fnc_showMissionStatus",
    "docSyntax": "[] call BIS_fnc_showMissionStatus",
    "tags": "[EL]",
    "description": "Show mission status with sectors, respawn tickets, etc.",
    "example": "call BIS_fnc_showMissionStatus;",
    "params": "",
    "returns": "boolean"
  },
  "ctrlModel": {
    "command": "ctrlModel",
    "timestamp": "2021-01-22T21:59:57Z",
    "version": "1.32",
    "syntax": "ctrlModel control",
    "docSyntax": "ctrlModel control",
    "tags": "",
    "description": "Returns model used in 3D-Dialog.",
    "example": "_model = ctrlModel _control3D;",
    "params": "<control>",
    "returns": "string"
  },
  "ctrlModelDirAndUp": {
    "command": "ctrlModelDirAndUp",
    "timestamp": "2021-01-22T22:06:37Z",
    "version": "1.32",
    "syntax": "ctrlModelDirAndUp control",
    "docSyntax": "ctrlModelDirAndUp control",
    "tags": "",
    "description": "Returns Dialogs.",
    "example": "_vectorDirAndUp = ctrlModelDirAndUp _control3D;",
    "params": "<control>",
    "returns": "array | vectordir | vectorup"
  },
  "ctrlModelScale": {
    "command": "ctrlModelScale",
    "timestamp": "2021-01-22T22:02:58Z",
    "version": "1.32",
    "syntax": "ctrlModelScale control",
    "docSyntax": "ctrlModelScale control",
    "tags": "",
    "description": "Returns 3D control model scale.",
    "example": "_currentScale = ctrlModelScale _ctrl3D;",
    "params": "<control>",
    "returns": "number"
  },
  "ctrlSetModel": {
    "command": "ctrlSetModel",
    "timestamp": "2021-01-22T22:40:46Z",
    "version": "1.32",
    "syntax": "<control>ctrlSetModel model",
    "docSyntax": "control ctrlSetModel model",
    "tags": "",
    "description": "Sets model for 3D-Dialogs.",
    "example": "_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";",
    "params": "<control> <string>",
    "returns": "nothing"
  },
  "ctrlSetModelDirAndUp": {
    "command": "ctrlSetModelDirAndUp",
    "timestamp": "2021-01-22T22:40:32Z",
    "version": "1.32",
    "syntax": "<control>ctrlSetModelDirAndUp [dir, up]",
    "docSyntax": "control ctrlSetModelDirAndUp [dir, up]",
    "tags": "",
    "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.",
    "example": "_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation",
    "params": "<control> <array> <array> <array>",
    "returns": "nothing"
  },
  "ctrlSetModelScale": {
    "command": "ctrlSetModelScale",
    "timestamp": "2021-01-22T22:42:41Z",
    "version": "1.32",
    "syntax": "<control>ctrlSetModelScale scale",
    "docSyntax": "control ctrlSetModelScale scale",
    "tags": "",
    "description": "Sets 3D control model scale",
    "example": "_ctrl3D ctrlSetModelScale 1.5;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "deleteAt": {
    "command": "deleteAt",
    "timestamp": "2021-01-22T22:51:57Z",
    "version": "1.32",
    "syntax": "<array> deleteAt <number>",
    "docSyntax": "array deleteAt index",
    "tags": "",
    "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find(see Example 2) or findIf(see Example 3) command",
    "example": "_arr = [1,2,3]; _rem = _arr deleteAt 1; hint str [_rem, _arr]; //[2,[1,3]]",
    "params": "<array> <number> <hashmap> <hashmapkey>",
    "returns": "anything"
  },
  "deleteRange": {
    "command": "deleteRange",
    "timestamp": "2021-01-22T22:45:09Z",
    "version": "1.32",
    "syntax": "<array> deleteRange <array>",
    "docSyntax": "array deleteRange [from, count]",
    "tags": "",
    "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).",
    "example": "_arr = [1,2,3,4,5,6]; _arr deleteRange [1,4]; hint str _arr; //[1,6]",
    "params": "<array> <array> <number> <number>",
    "returns": "nothing"
  },
  "deleteVehicleCrew": {
    "command": "deleteVehicleCrew",
    "timestamp": "2021-01-22T22:46:44Z",
    "version": "1.32",
    "syntax": "<object> deleteVehicleCrew <object>",
    "docSyntax": "vehicle deleteVehicleCrew unit",
    "tags": "[AG] [EG]",
    "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted. Since Arma 3 v2.06.147649 it is also possible to delete entire crew all in one sweep using alternative syntax. Feature Informative This command attempts to move the given local as moving units out of the vehicle happens where vehicle is local and you want this to always precede deletion.",
    "example": "_helicopter deleteVehicleCrew driver _helicopter;",
    "params": "<object> <object> <object>",
    "returns": "nothing"
  },
  "getDirVisual": {
    "command": "getDirVisual",
    "timestamp": "2021-01-22T23:40:49Z",
    "version": "1.32",
    "syntax": "getDirVisual <object>",
    "docSyntax": "getDirVisual object",
    "tags": "[AG]",
    "description": "Returns object's heading in the range from 0 to 360 in render time scope.",
    "example": "_dir = getDirVisual player;",
    "params": "<object>",
    "returns": "number"
  },
  "getHit": {
    "command": "getHit",
    "timestamp": "2021-01-23T00:09:03Z",
    "version": "1.32",
    "syntax": "<object>getHit <string>",
    "docSyntax": "vehicle getHit selection",
    "tags": "[AG]",
    "description": "Returns selection damage. Same as translation table.",
    "example": "player getHit \"head\";",
    "params": "<object> <string>",
    "returns": "number | nothing"
  },
  "getPosASLVisual": {
    "command": "getPosASLVisual",
    "timestamp": "2021-01-22T23:53:42Z",
    "version": "1.32",
    "syntax": "getPosASLVisual <object>",
    "docSyntax": "getPosASLVisual object",
    "tags": "[AG]",
    "description": "Returns an object's rendered ASL position (z value above sea level) in render time scope.",
    "example": "private _playerRenderedPosASL = getPosASLVisual player;",
    "params": "<object>",
    "returns": "positionasl"
  },
  "getPosATLVisual": {
    "command": "getPosATLVisual",
    "timestamp": "2021-01-23T00:59:19Z",
    "version": "1.32",
    "syntax": "getPosATLVisual <object>",
    "docSyntax": "getPosATLVisual object",
    "tags": "[AG]",
    "description": "Returns an object's rendered ATL position (z value above ground) in render time scope.",
    "example": "_playerRenderedPosATL = getPosATLVisual player;",
    "params": "<object>",
    "returns": "positionatl"
  },
  "getPosVisual": {
    "command": "getPosVisual",
    "timestamp": "2021-01-22T23:42:28Z",
    "version": "1.32",
    "syntax": "getPosVisual <object>",
    "docSyntax": "getPosVisual object",
    "tags": "[AG]",
    "description": "Returns an object's AGLS position in render time scope. Alias of visiblePosition. Feature Important This command 'should not' be used for actual 3D calculations. See getPos for more details.",
    "example": "_playerRenderedPos = getPosVisual player;",
    "params": "<object>",
    "returns": "positionagls"
  },
  "getPosWorld": {
    "command": "getPosWorld",
    "timestamp": "2021-01-23T00:17:49Z",
    "version": "1.32",
    "syntax": "getPosWorld <object>",
    "docSyntax": "getPosWorld object",
    "tags": "[AG]",
    "description": "Returns the provided object's model centre position ([0,0,0]) in PositionASL, rather than the transformed LandContact vertices.",
    "example": "_obj setPosWorld getPosWorld _obj;",
    "params": "<object>",
    "returns": "positionasl - 'the model's centre'"
  },
  "isCollisionLightOn": {
    "command": "isCollisionLightOn",
    "timestamp": "2021-01-23T09:20:14Z",
    "version": "1.32",
    "syntax": "isCollisionLightOn <object>",
    "docSyntax": "isCollisionLightOn vehicle",
    "tags": "[AG]",
    "description": "Returns true if vehicle collision lights are on otherwise false.",
    "example": "_collisionLightOn = isCollisionLightOn heli;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isInRemainsCollector": {
    "command": "isInRemainsCollector",
    "timestamp": "2021-01-23T09:12:59Z",
    "version": "1.32",
    "syntax": "isInRemainsCollector <object>",
    "docSyntax": "isInRemainsCollector remain",
    "tags": "[AG]",
    "description": "Checks if unit or vehicle is queued for disposal after death.",
    "example": "if (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};",
    "params": "<object>",
    "returns": "boolean"
  },
  "isLightOn": {
    "command": "isLightOn",
    "timestamp": "2021-01-23T09:09:43Z",
    "version": "1.32",
    "syntax": "isLightOn <object>",
    "docSyntax": "isLightOn vehicle",
    "tags": "[AG]",
    "description": "Returns true if vehicle headlights are on otherwise false. Feature Informative Since Arma 3 v1.94 it is possible to get the status of a search light on a turret (see alt syntax).",
    "example": "_headlightsOn = isLightOn vehicle player;",
    "params": "<object> <object> <array>",
    "returns": "boolean"
  },
  "modelToWorldVisual": {
    "command": "modelToWorldVisual",
    "timestamp": "2021-01-23T10:13:01Z",
    "version": "1.32",
    "syntax": "<object> modelToWorldVisual positionrelative",
    "docSyntax": "object modelToWorldVisual modelPos",
    "tags": "",
    "description": "Converts position from object model space to world space in render time scope. For ASL version see scaled objects, the relative position will first be multiplied by the object scale.br For example, if the object scale is 2, ic_obj modelToWorldVisual [0,1,0] will be offset '2 meters' from the model center (ic[0,0,0]).",
    "example": "_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];",
    "params": "<object> positionrelative",
    "returns": "positionagl"
  },
  "removeBackpackGlobal": {
    "command": "removeBackpackGlobal",
    "timestamp": "2021-01-23T10:33:24Z",
    "version": "1.32",
    "syntax": "removeBackpackGlobal <object>",
    "docSyntax": "removeBackpackGlobal unit",
    "tags": "[AG] [EG]",
    "description": "Removes backpack from a unit. (even non-local)",
    "example": "removeBackpackGlobal player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeFromRemainsCollector": {
    "command": "removeFromRemainsCollector",
    "timestamp": "2021-01-23T10:33:26Z",
    "version": "1.32",
    "syntax": "removeFromRemainsCollector <array>",
    "docSyntax": "removeFromRemainsCollector remains",
    "tags": "[AG] [EG]",
    "description": "Removes vehicles/units from the garbage collector, so they do not get deleted automatically; added earlier with addToRemainsCollector.",
    "example": "removeFromRemainsCollector [unit1, unit2, vehicle1];",
    "params": "<array>",
    "returns": "nothing"
  },
  "removeWeaponTurret": {
    "command": "removeWeaponTurret",
    "timestamp": "2021-01-23T10:32:23Z",
    "version": "1.32",
    "syntax": "<object> removeWeaponTurret <array>",
    "docSyntax": "vehicle removeWeaponTurret [weaponName, turretPath]",
    "tags": "[AL] [EG]",
    "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.",
    "example": "_tank removeWeaponTurret [\"LMG_M200\", [0,0]];",
    "params": "<object> <array> <string> <array>",
    "returns": "nothing"
  },
  "scriptNull": {
    "command": "scriptNull",
    "timestamp": "2021-01-23T10:33:04Z",
    "version": "1.32",
    "syntax": "'scriptNull'",
    "docSyntax": "'scriptNull'",
    "tags": "",
    "description": "A non-existing Script or script that has finished (scriptDone). To compare non-existent scripts use isNull or \nisEqualTo: * c= scriptNull nowiki==</nowiki> scriptNull; // ERROR! nowiki==</nowiki> cannot be used with script object * isNull scriptNull; // true * scriptNull isEqualTo scriptNull; // true",
    "example": "[] spawn { _script = scriptNull; for \"_i\" from 1 to 10 do { waitUntil {isNull _script}; _script = _i spawn { hint format [\"script %1 started\", _this]; sleep 1; hint format [\"script %1 finished\", _this]; sleep 0.2; }; }; };",
    "params": "",
    "returns": "script"
  },
  "setCollisionLight": {
    "command": "setCollisionLight",
    "timestamp": "2021-01-23T20:26:28Z",
    "version": "1.32",
    "syntax": "<object> <boolean>CollisionLight set",
    "docSyntax": "vehicle setCollisionLight set",
    "tags": "[AL] [EG]",
    "description": "Switches collision lights of a vehicle on/off.",
    "example": "heli setCollisionLight true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setPilotLight": {
    "command": "setPilotLight",
    "timestamp": "2021-01-23T20:24:57Z",
    "version": "1.32",
    "syntax": "<object> <boolean>PilotLight set",
    "docSyntax": "vehicle setPilotLight set",
    "tags": "[AL] [EG]",
    "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use LightOn\"/\"LightOff\"",
    "example": "car setPilotLight true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setPosWorld": {
    "command": "setPosWorld",
    "timestamp": "2021-01-23T20:34:56Z",
    "version": "1.32",
    "syntax": "<object> setPosWorld positionasl",
    "docSyntax": "object setPosWorld position",
    "tags": "[AG] [EG]",
    "description": "Sets position of an object based on the model's centre position (see getPosWorld).",
    "example": "_obj setPosWorld getPosWorld _obj;",
    "params": "<object> positionasl",
    "returns": "nothing"
  },
  "turretLocal": {
    "command": "turretLocal",
    "timestamp": "2021-01-24T10:40:53Z",
    "version": "1.32",
    "syntax": "<object> turretLocal <array>",
    "docSyntax": "vehicle turretLocal turretPath",
    "tags": "[AG]",
    "description": "Checks if a turret is local.",
    "example": "_isLocal = vehicle player turretLocal [0];",
    "params": "<object> <array>",
    "returns": "boolean | nothing"
  },
  "vectorDirVisual": {
    "command": "vectorDirVisual",
    "timestamp": "2021-01-24T10:42:55Z",
    "version": "1.32",
    "syntax": "vectorDirVisual <object>",
    "docSyntax": "vectorDirVisual objectName",
    "tags": "[AG]",
    "description": "Return object's normalized direction vector in world space (hl[x,y,z]) in render time scope. * A unit facing North would return hl[0,1,0] * A unit facing East would return hl[1,0,0] * A unit facing South would return hl[0,-1,0] * A unit facing West would return hl[-1,0,0]",
    "example": "_dirVector = vectorDirVisual _unit;",
    "params": "<object>",
    "returns": "array | vector3d"
  },
  "vectorUpVisual": {
    "command": "vectorUpVisual",
    "timestamp": "2021-01-24T10:47:40Z",
    "version": "1.32",
    "syntax": "vectorUpVisual <object>",
    "docSyntax": "vectorUpVisual objectName",
    "tags": "[AG]",
    "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.",
    "example": "_vUp = vectorUpVisual vehicle player;",
    "params": "<object>",
    "returns": "array | position"
  },
  "worldToModelVisual": {
    "command": "worldToModelVisual",
    "timestamp": "2021-01-24T10:41:24Z",
    "version": "1.32",
    "syntax": "<object> worldToModelVisual positionagl",
    "docSyntax": "object worldToModelVisual worldPosition",
    "tags": "",
    "description": "Converts position from world space to object model space in render time scope. FeatureimportantFor scaled objects, the relative position will be divided by the object scale.",
    "example": "_relPos = myObject worldToModelVisual [0,0,0];",
    "params": "<object> positionagl",
    "returns": "positionrelative"
  },
  "addForceGeneratorRTD": {
    "command": "addForceGeneratorRTD",
    "timestamp": "2021-01-22T21:33:31Z",
    "version": "1.34",
    "syntax": "addForceGeneratorRTD <array>",
    "docSyntax": "addForceGeneratorRTD parameters",
    "tags": "",
    "description": "Adds force generator to world. Featureafm",
    "example": "",
    "params": "<array>",
    "returns": "number"
  },
  "airDensityCurveRTD": {
    "command": "airDensityCurveRTD",
    "timestamp": "2021-01-22T21:33:27Z",
    "version": "1.34",
    "syntax": "airDensityCurveRTD",
    "docSyntax": "airDensityCurveRTD",
    "tags": "",
    "description": "Returns array with air density data.Featureafm",
    "example": "private _densityArray = airDensityCurveRTD;",
    "params": "",
    "returns": "br"
  },
  "airDensityRTD": {
    "command": "airDensityRTD",
    "timestamp": "2021-06-13T21:55:18Z",
    "version": "1.34",
    "syntax": "airDensityRTD <number>",
    "docSyntax": "airDensityRTD altitude",
    "tags": "",
    "description": "Returns air density in given altitude. Featureafm",
    "example": "_density = airDensityRTD 0; // returns 1.22406",
    "params": "<number>",
    "returns": "number"
  },
  "allTurrets": {
    "command": "allTurrets",
    "timestamp": "2021-01-22T21:36:15Z",
    "version": "1.34",
    "syntax": "allTurrets <object>",
    "docSyntax": "allTurrets vehicle",
    "tags": "",
    "description": "Returns array of available turret paths from vehicle object. Featureinformative * to look up turrets from config, use BIS_fnc_allTurrets * to get config from turret path use BIS_fnc_turretConfig",
    "example": "_turretPaths = allTurrets _mySlammerUP; cc[nowiki[0],[0,0]] _turretPaths = allTurrets [_mySlammerUP, true]; cc[nowiki[0],[0,0]] <- Commander turret is also an FFV turret _turretPaths = allTurrets [_mySlammerUP, false]; cc[nowiki[0]]",
    "params": "<object> <object> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_didJIP": {
    "command": "BIS_fnc_didJIP",
    "timestamp": "2021-01-23T09:25:25Z",
    "version": "1.34",
    "syntax": "s1= [] call BIS_fnc_didJIP",
    "docSyntax": "s1= [] call BIS_fnc_didJIP",
    "tags": "",
    "description": "Return whether or not the local player joined the game while it was already in progress. FeatureimportantUse didJIP instead.",
    "example": "if ([] call BIS_fnc_didJIP) then { forceRespawn player };",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_ffvUpdate": {
    "command": "BIS_fnc_ffvUpdate",
    "timestamp": "2021-01-23T08:58:05Z",
    "version": "1.34",
    "syntax": "<object> call BIS_fnc_ffvUpdate",
    "docSyntax": "vehicle call BIS_fnc_ffvUpdate",
    "tags": "",
    "description": "Update Firing From Vehicle feature depending on condition defined in turret's config.",
    "example": "local _vehicle) then { _vehicle animate [\"Door_1\", 1]; _vehicle call BIS_fnc_ffvUpdate; };",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleSlingload": {
    "command": "BIS_fnc_moduleSlingload",
    "timestamp": "2021-01-23T10:32:26Z",
    "version": "1.34",
    "syntax": "[] call BIS_fnc_moduleSlingload",
    "docSyntax": "[] call BIS_fnc_moduleSlingload",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSpawnAI": {
    "command": "BIS_fnc_moduleSpawnAI",
    "timestamp": "2021-01-23T10:24:27Z",
    "version": "1.34",
    "syntax": "[] call BIS_fnc_moduleSpawnAI",
    "docSyntax": "[] call BIS_fnc_moduleSpawnAI",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- DEBUG LOG FLAG --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSpawnAIOptions": {
    "command": "BIS_fnc_moduleSpawnAIOptions",
    "timestamp": "2021-01-23T10:34:54Z",
    "version": "1.34",
    "syntax": "[] call BIS_fnc_moduleSpawnAIOptions",
    "docSyntax": "[] call BIS_fnc_moduleSpawnAIOptions",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- TERMINATE ALL BUT 1ST MODULE --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSpawnAIPoint": {
    "command": "BIS_fnc_moduleSpawnAIPoint",
    "timestamp": "2021-01-23T10:23:28Z",
    "version": "1.34",
    "syntax": "[] call BIS_fnc_moduleSpawnAIPoint",
    "docSyntax": "[] call BIS_fnc_moduleSpawnAIPoint",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleSpawnAISectorTactic": {
    "command": "BIS_fnc_moduleSpawnAISectorTactic",
    "timestamp": "2021-01-23T10:25:53Z",
    "version": "1.34",
    "syntax": "[] call BIS_fnc_moduleSpawnAISectorTactic",
    "docSyntax": "[] call BIS_fnc_moduleSpawnAISectorTactic",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- RUN ONCE --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "canSlingLoad": {
    "command": "canSlingLoad",
    "timestamp": "2021-01-22T21:58:23Z",
    "version": "1.34",
    "syntax": "<object> canSlingLoad <object>",
    "docSyntax": "heli canSlingLoad cargo",
    "tags": "",
    "description": "Returns true if setSlingLoad is possible.",
    "example": "_canSling = veh1 canSlingLoad veh2;",
    "params": "<object> <object>",
    "returns": "boolean | true | setslingload"
  },
  "difficultyEnabledRTD": {
    "command": "difficultyEnabledRTD",
    "timestamp": "2021-01-22T22:56:03Z",
    "version": "1.34",
    "syntax": "difficultyEnabledRTD",
    "docSyntax": "difficultyEnabledRTD",
    "tags": "",
    "description": "Returns forceRotorLibSimulation.",
    "example": "_rtdOn = difficultyEnabledRTD;",
    "params": "",
    "returns": "boolean"
  },
  "enablePersonTurret": {
    "command": "enablePersonTurret",
    "timestamp": "2021-01-22T22:50:42Z",
    "version": "1.34",
    "syntax": "<object> <boolean>PersonTurret [<array>, enable]",
    "docSyntax": "vehicle enablePersonTurret [turretPath, enable]",
    "tags": "",
    "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.",
    "example": "sqfheli enablePersonTurret [[1], true];</sqf>",
    "params": "<object> <array> <boolean>",
    "returns": "nothing"
  },
  "enableRopeAttach": {
    "command": "enableRopeAttach",
    "timestamp": "2021-01-22T22:50:50Z",
    "version": "1.34",
    "syntax": "<object> <boolean>RopeAttach enable",
    "docSyntax": "entity enableRopeAttach enable",
    "tags": "[AL] [EG]",
    "description": "Enables or disables the ability to be attached to a rope end for the given entity.",
    "example": "vehicle player enableRopeAttach false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "enableStressDamage": {
    "command": "enableStressDamage",
    "timestamp": "2021-01-22T23:05:37Z",
    "version": "1.34",
    "syntax": "enableStressDamage <boolean>",
    "docSyntax": "enableStressDamage state",
    "tags": "[AL] [EL]",
    "description": "Toggles stress damage in Advanced Flight Model, which otherwise could be manually toggles in game \nsetting: Options &gt; Game &gt; Helicopter Flight Model &gt; Advanced &gt; Stress Damage. Featureafm",
    "example": "if (difficultyEnabledRTD) then { enableStressDamage true };",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "enginesIsOnRTD": {
    "command": "enginesIsOnRTD",
    "timestamp": "2021-01-23T00:18:38Z",
    "version": "1.34",
    "syntax": "enginesIsOnRTD <object>",
    "docSyntax": "enginesIsOnRTD RTD_helicopter",
    "tags": "",
    "description": "Returns which engines are producing some work. Featureafm",
    "example": "_enginesTaru = enginesIsOnRTD _taru; // returns [true, true]",
    "params": "<object>",
    "returns": "array | boolean"
  },
  "enginesPowerRTD": {
    "command": "enginesPowerRTD",
    "timestamp": "2021-01-22T23:05:16Z",
    "version": "1.34",
    "syntax": "enginesPowerRTD <object>",
    "docSyntax": "enginesPowerRTD RTD_helicopter",
    "tags": "",
    "description": "Returns power produced by engines in Watts. Featureafm",
    "example": "_array = enginesPowerRTD vehicle player;",
    "params": "<object>",
    "returns": "advanced flight model is disabled."
  },
  "enginesRpmRTD": {
    "command": "enginesRpmRTD",
    "timestamp": "2021-01-22T23:07:43Z",
    "version": "1.34",
    "syntax": "enginesRpmRTD <object>",
    "docSyntax": "enginesRpmRTD RTD_helicopter",
    "tags": "",
    "description": "Returns all engines RPM.Featureafm",
    "example": "enginesRpmRTD RTD_helicopter params [\"_RPMEngine1\",\"_RPMEngine2\"];",
    "params": "<object>",
    "returns": "array"
  },
  "enginesTorqueRTD": {
    "command": "enginesTorqueRTD",
    "timestamp": "2021-01-22T23:56:43Z",
    "version": "1.34",
    "syntax": "enginesTorqueRTD <object>",
    "docSyntax": "enginesTorqueRTD RTD_helicopter",
    "tags": "",
    "description": "Torque produced by engines in 'N·m' (Newton &times; meter). Featureafm",
    "example": "_UH80_E1 = (enginesTorqueRTD _UH80) select 0; // engine 1 Torque _UH80_E2 = (enginesTorqueRTD _UH80) select 1; // engine 2 Torque",
    "params": "<object>",
    "returns": "array"
  },
  "fullCrew": {
    "command": "fullCrew",
    "timestamp": "2021-01-23T00:37:38Z",
    "version": "1.34",
    "syntax": "fullCrew <object>",
    "docSyntax": "fullCrew vehicle",
    "tags": "[AG]",
    "description": "Returns an array with all crew inside given vehicle, with or without empty seats. Feature important With the introduction of person turrets (FFV), the returned ''cargoIndex'' works with moveInCargo but does not with actions such as \"GetInCargo\" and \"MoveToCargo\". To find out indexes for actions, use the \"cargo\" filter (See HashLink#Example 3).",
    "example": "sqf_list = fullCrew vehicle player;</sqf>",
    "params": "<object> <object> <string> <boolean>",
    "returns": "array | object | string | number | array | boolean"
  },
  "getSlingLoad": {
    "command": "getSlingLoad",
    "timestamp": "2021-01-23T08:59:08Z",
    "version": "1.34",
    "syntax": "getSlingLoad <object>",
    "docSyntax": "getSlingLoad vehicle",
    "tags": "",
    "description": "Return object which is sling loaded by vehicle",
    "example": "_cargo = getSlingLoad heli1;",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "getTrimOffsetRTD": {
    "command": "getTrimOffsetRTD",
    "timestamp": "2021-01-23T08:57:42Z",
    "version": "1.34",
    "syntax": "getTrimOffsetRTD <object>",
    "docSyntax": "getTrimOffsetRTD RTD_helicopter",
    "tags": "",
    "description": "Returns controls trim offset.Featureafm",
    "example": "_array = 'getTrimOffsetRTD' vehicle player;",
    "params": "<object>",
    "returns": "array"
  },
  "isAutoStartUpEnabledRTD": {
    "command": "isAutoStartUpEnabledRTD",
    "timestamp": "2021-01-23T09:27:32Z",
    "version": "1.34",
    "syntax": "isAutoStartUpEnabledRTD <object>",
    "docSyntax": "isAutoStartUpEnabledRTD helicopter",
    "tags": "",
    "description": "Returns state of automatic start up action. Featureafm",
    "example": "_state = isAutoStartUpEnabledRTD _myHelicopter;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "isAutoTrimOnRTD": {
    "command": "isAutoTrimOnRTD",
    "timestamp": "2021-01-23T09:16:57Z",
    "version": "1.34",
    "syntax": "isAutoTrimOnRTD <object>",
    "docSyntax": "isAutoTrimOnRTD helicopter",
    "tags": "",
    "description": "Returns state of auto trim functionality. Featureafm",
    "example": "_state = isAutoTrimOnRTD _myHelicopter;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "isObjectRTD": {
    "command": "isObjectRTD",
    "timestamp": "2021-01-23T09:11:17Z",
    "version": "1.34",
    "syntax": "isObjectRTD <object>",
    "docSyntax": "isObjectRTD helicopter",
    "tags": "",
    "description": "Returns true if RTD model is loaded.Featureafm",
    "example": "_heliRTD = isObjectRTD vehicle player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isStressDamageEnabled": {
    "command": "isStressDamageEnabled",
    "timestamp": "2021-01-23T09:14:57Z",
    "version": "1.34",
    "syntax": "isStressDamageEnabled",
    "docSyntax": "isStressDamageEnabled",
    "tags": "[AL] [EL]",
    "description": "Returns true if stress damage is enabled in the game settings. A getter for enableStressDamage. Featureafm",
    "example": "_settingEnabled = isStressDamageEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "magazineTurretAmmo": {
    "command": "magazineTurretAmmo",
    "timestamp": "2021-01-23T09:56:51Z",
    "version": "1.34",
    "syntax": "<object> magazineTurretAmmo <array>",
    "docSyntax": "vehicle magazineTurretAmmo [magazineClass, turretPath]",
    "tags": "",
    "description": "Returns ammo count of given type from given turret Feature Warning Broken when vehicle has multiple magazines of the same type",
    "example": "vehicle player magazineTurretAmmo [\"cls\", [0]]",
    "params": "<object> <array>",
    "returns": "number"
  },
  "ropeAttachedObjects": {
    "command": "ropeAttachedObjects",
    "timestamp": "2021-01-23T10:36:32Z",
    "version": "1.34",
    "syntax": "ropeAttachedObjects <object>",
    "docSyntax": "ropeAttachedObjects ropesOwner",
    "tags": "",
    "description": "Returns an array of all entities that are attached to the transport with 400px",
    "example": "_cargoArray = ropeAttachedObjects heli1;",
    "params": "<object>",
    "returns": "array"
  },
  "ropeAttachedTo": {
    "command": "ropeAttachedTo",
    "timestamp": "2021-01-23T10:38:38Z",
    "version": "1.34",
    "syntax": "ropeAttachedTo <object>",
    "docSyntax": "ropeAttachedTo cargo",
    "tags": "",
    "description": "Returns the owner of the first rope - the transport to which other entities are attached with 400px",
    "example": "_heli = ropeAttachedTo veh1;",
    "params": "<object>",
    "returns": "object"
  },
  "ropeAttachEnabled": {
    "command": "ropeAttachEnabled",
    "timestamp": "2021-01-23T10:33:12Z",
    "version": "1.34",
    "syntax": "ropeAttachEnabled <object>",
    "docSyntax": "ropeAttachEnabled entity",
    "tags": "",
    "description": "Returns true if entity can be attached to a rope end.",
    "example": "ropeAttachEnabled veh1;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "ropeAttachTo": {
    "command": "ropeAttachTo",
    "timestamp": "2021-01-23T10:37:30Z",
    "version": "1.34",
    "syntax": "[<object>, toPoint, <string>] <object>AttachTo <object>",
    "docSyntax": "[entity, toPoint, ropeEndDownVector] ropeAttachTo rope",
    "tags": "",
    "description": "Attaches entity to the rope end with optional offset. For detach operation use ropeDetach.",
    "example": "[veh1, [0,0,0], [0,0,-1]] ropeAttachTo (ropes heli1 select 0);",
    "params": "<object> <string> <string> <object> <object> <object>",
    "returns": "nothing"
  },
  "ropeCreate": {
    "command": "ropeCreate",
    "timestamp": "2021-01-23T10:32:38Z",
    "version": "1.34",
    "syntax": "ropeCreate [<object>, <array>, <object>, <array>, <number>, <number>]",
    "docSyntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]",
    "tags": "[EG]",
    "description": "Creates a rope.",
    "example": "myRope = ropeCreate [vehicle player, \"fastrope0\", 10, 10, true];",
    "params": "<object> <array> <object> <array> <number> <number> <object> <array> <number> <number> <boolean> transport <string> attached <string> <number> <array> <array> <string> transport <string> <number> <array> <array> <string>",
    "returns": "object"
  },
  "ropeCut": {
    "command": "ropeCut",
    "timestamp": "2021-01-23T10:23:02Z",
    "version": "1.34",
    "syntax": "<object>Cut [rope, <number>]",
    "docSyntax": "ropeCut [rope, length]",
    "tags": "",
    "description": "Cuts the given rope to the specified length. If some entity was attached to the end of the rope, it will be detached. The rope remains attached to its parent transport and if the length is set to 0 or even negative does not get destroyed. Use ropeDestroy to remove it completely.Feature Informative The rope could only be shortened. If the cut length is greater than current rope length, nothing happens",
    "example": "ropeCut [ropes heli1 select 0, 5];",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "ropeEndPosition": {
    "command": "ropeEndPosition",
    "timestamp": "2021-01-23T10:32:05Z",
    "version": "1.34",
    "syntax": "<object>EndPosition rope",
    "docSyntax": "ropeEndPosition rope",
    "tags": "",
    "description": "Returns start and end positions for the given rope. If command fails, empty array hl[] is returned.",
    "example": "_ends = ropeEndPosition (ropes heli1 select 0); _start = _ends select 0; _end = _ends select 1;",
    "params": "<object>",
    "returns": "positionagl * endpos: positionagl"
  },
  "ropeLength": {
    "command": "ropeLength",
    "timestamp": "2021-01-23T10:37:34Z",
    "version": "1.34",
    "syntax": "<object>Length rope",
    "docSyntax": "ropeLength rope",
    "tags": "",
    "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind). FeatureInformativeReturned rope length will remain the same, even if the rope is stretched.",
    "example": "_length = ropeLength (ropes heli1 select 0);",
    "params": "<object>",
    "returns": "number"
  },
  "ropes": {
    "command": "ropes",
    "timestamp": "2021-01-23T10:23:07Z",
    "version": "1.34",
    "syntax": "ropes <object>",
    "docSyntax": "ropes ropesOwner",
    "tags": "",
    "description": "Returns all ropes attached to a ropes owner transport in an Array, otherwise an empty array hl[] is returned.",
    "example": "hint str (ropes vehicle player);",
    "params": "<object>",
    "returns": "array"
  },
  "ropeUnwind": {
    "command": "ropeUnwind",
    "timestamp": "2021-01-23T10:40:30Z",
    "version": "1.34",
    "syntax": "<object>Unwind [rope, <number>, <number>, relative]",
    "docSyntax": "ropeUnwind [rope, speed, length, relative]",
    "tags": "",
    "description": "Increases or decreases the rope length by the given amount. Use relative parameter for changing rope length +/- from current length.",
    "example": "ropeUnwind [ropes heli1 select 0, 3, 10]; // set rope length to 10m at 3m/s",
    "params": "<object> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "ropeUnwound": {
    "command": "ropeUnwound",
    "timestamp": "2021-01-23T10:36:20Z",
    "version": "1.34",
    "syntax": "<object>Unwound rope",
    "docSyntax": "ropeUnwound rope",
    "tags": "",
    "description": "Returns false if rope length changing animation is in progress. Returns true if animation is done.",
    "example": "waitUntil { ropeUnwound (ropes heli1 select 0) }; hint \"Unwinding Complete\";",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "rotorsForcesRTD": {
    "command": "rotorsForcesRTD",
    "timestamp": "2021-01-23T10:31:51Z",
    "version": "1.34",
    "syntax": "rotorsForcesRTD <object>",
    "docSyntax": "rotorsForcesRTD RTD_helicopter",
    "tags": "",
    "description": "Returns force produced by rotors.Featureafm",
    "example": "_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]",
    "params": "<object>",
    "returns": "array"
  },
  "rotorsRpmRTD": {
    "command": "rotorsRpmRTD",
    "timestamp": "2021-01-23T10:24:04Z",
    "version": "1.34",
    "syntax": "rotorsRpmRTD <object>",
    "docSyntax": "rotorsRpmRTD RTD_helicopter",
    "tags": "",
    "description": "Returns rotors RPM. Featureafm",
    "example": "_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor _mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor",
    "params": "<object>",
    "returns": "array"
  },
  "serverCommandExecutable": {
    "command": "serverCommandExecutable",
    "timestamp": "2021-01-23T20:20:08Z",
    "version": "1.34",
    "syntax": "serverCommandExecutable multiplayer",
    "docSyntax": "serverCommandExecutable command",
    "tags": "",
    "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from <User Interface Event Handlers>, and this command also checks if that's the case.",
    "example": "_canKick = serverCommandAvailable \"#kick\";",
    "params": "multiplayer",
    "returns": "boolean"
  },
  "setForceGeneratorRTD": {
    "command": "setForceGeneratorRTD",
    "timestamp": "2021-01-23T20:32:25Z",
    "version": "1.34",
    "syntax": "<object> setForceGeneratorRTD ????",
    "docSyntax": "helicopter setForceGeneratorRTD ????",
    "tags": "",
    "description": "Wikistub Featureafm",
    "example": "myHelicopter setForceGeneratorRTD ????;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setMagazineTurretAmmo": {
    "command": "setMagazineTurretAmmo",
    "timestamp": "2021-01-23T20:33:06Z",
    "version": "1.34",
    "syntax": "<object> setMagazineTurretAmmo <array>",
    "docSyntax": "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]",
    "tags": "",
    "description": "Sets ammo count to given amount for given turret. Feature Warning Broken when vehicle has multiple magazines of the same type",
    "example": "",
    "params": "<object> <array>",
    "returns": "number"
  },
  "setSlingLoad": {
    "command": "setSlingLoad",
    "timestamp": "2021-01-23T20:32:21Z",
    "version": "1.34",
    "syntax": "<object> setSlingLoad <object>",
    "docSyntax": "heli setSlingLoad cargo",
    "tags": "",
    "description": "Creates a sling loading from a helicopter to an entity if possible. To unload cargo, pass rope attachment enabled, TO object has to be an entity, alive with rope attachment enabled.",
    "example": "_success = heli1 setSlingLoad veh1;",
    "params": "<object> <object>",
    "returns": "boolean | true"
  },
  "slingLoadAssistantShown": {
    "command": "slingLoadAssistantShown",
    "timestamp": "2021-01-24T00:57:36Z",
    "version": "1.34",
    "syntax": "slingLoadAssistantShown",
    "docSyntax": "slingLoadAssistantShown",
    "tags": "",
    "description": "Returns true if Sling Load Assistant is open.",
    "example": "waitUntil { slingLoadAssistantShown }; hint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; // scold user for unethical practices ",
    "params": "",
    "returns": "boolean | true | false"
  },
  "weightRTD": {
    "command": "weightRTD",
    "timestamp": "2021-01-24T10:45:59Z",
    "version": "1.34",
    "syntax": "weightRTD <object>",
    "docSyntax": "weightRTD helicopter",
    "tags": "",
    "description": "FeatureafmReturns weight of RTD helicopter.",
    "example": "_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]",
    "params": "<object>",
    "returns": "custom weight, weapons weight] (kilograms)"
  },
  "BIS_fnc_configExtremes": {
    "command": "BIS_fnc_configExtremes",
    "timestamp": "2021-01-22T23:44:27Z",
    "version": "1.36",
    "syntax": "[<array>, <array>, propertyTypes, propertyDefaults] call BIS_fnc_configExtremes",
    "docSyntax": "[paths, properties, propertyTypes, propertyDefaults] call BIS_fnc_configExtremes",
    "tags": "",
    "description": "Scan config paths and return min and max values for each property.br Can be used only for properties of type Number and Array (value is considered to be the geometric mean of all numbers in the array).",
    "example": "private _paths = [configFile >> \"cfgWeapons\"] call BIS_fnc_returnChildren; [_paths, [\"maxRange\", \"reloadTime\"]] call BIS_fnc_configExtremes;",
    "params": "<array> <array> <array> <array>",
    "returns": "array"
  },
  "BIS_fnc_openFieldManual": {
    "command": "BIS_fnc_openFieldManual",
    "timestamp": "2021-01-23T10:37:16Z",
    "version": "1.36",
    "syntax": "[<string>, <string>, <display>, <string>] call BIS_fnc_openFieldManual",
    "docSyntax": "[topic, hint, display, filter] call BIS_fnc_openFieldManual",
    "tags": "",
    "description": "Opens Field Manual in briefing (SP, MP Server, MP Client) and players's map or journal. Selects the topic and hint passed as parameters. Can apply a (search) filter if desired.",
    "example": "[\"Damage\", \"HitDamage\"] call BIS_fnc_openFieldManual;",
    "params": "<string> <string> <display> <string>",
    "returns": "nothing"
  },
  "configProperties": {
    "command": "configProperties",
    "timestamp": "2021-06-13T22:09:48Z",
    "version": "1.36",
    "syntax": "<config>Properties [config, <string>, <boolean>]",
    "docSyntax": "configProperties [config, condition, inherit]",
    "tags": "",
    "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entries. FeatureWarningThe condition code passed to configProperties should only be used for 'simple filter expressions' and nothing more. FeatureInformativeSince GVIarma32.02 the following conditions are optimised for \nperformance: * hl\"true\" (omitted condition) * hl\"isClass _x\" * hl\"isClass _x &amp;&amp; (...)\"",
    "example": "_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];",
    "params": "<config> <string> <boolean>",
    "returns": "array | config"
  },
  "getObjectDLC": {
    "command": "getObjectDLC",
    "timestamp": "2021-01-23T00:24:26Z",
    "version": "1.36",
    "syntax": "getObjectDLC <object>",
    "docSyntax": "getObjectDLC obj",
    "tags": "[AG]",
    "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.",
    "example": "_appID = getObjectDLC cursorTarget; if (!isNil \"_appID\") then { hint format [\"This object belongs to DLC with id: %1\", _appID]; } else { hint \"This object is vanilla\"; };",
    "params": "<object>",
    "returns": "number | nothing"
  },
  "getPersonUsedDLCs": {
    "command": "getPersonUsedDLCs",
    "timestamp": "2021-01-23T00:53:01Z",
    "version": "1.36",
    "syntax": "getPersonUsedDLCs <object>",
    "docSyntax": "getPersonUsedDLCs unit",
    "tags": "[AG]",
    "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.",
    "example": "_objects = getPersonUsedDLCs player;",
    "params": "<object>",
    "returns": "numbers"
  },
  "setUnloadInCombat": {
    "command": "setUnloadInCombat",
    "timestamp": "2021-01-24T00:43:57Z",
    "version": "1.36",
    "syntax": "<object> setUnloadInCombat <array>",
    "docSyntax": "vehicle setUnloadInCombat [allowCargo, allowTurrets]",
    "tags": "[AL] [EG]",
    "description": "If cargo or turret units ''should'' get out of vehicle when in combat. If 'true', vehicle will stop and units will dismount. Vehicle must be local.",
    "example": "_veh setUnloadInCombat [true, false];",
    "params": "<object> <array> <boolean> <boolean>",
    "returns": "nothing"
  },
  "shownChat": {
    "command": "shownChat",
    "timestamp": "2021-01-24T00:00:08Z",
    "version": "1.36",
    "syntax": "'shownChat'",
    "docSyntax": "'shownChat'",
    "tags": "",
    "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.",
    "example": "_bool = shownChat;",
    "params": "",
    "returns": "boolean"
  },
  "addWeaponItem": {
    "command": "addWeaponItem",
    "timestamp": "2021-01-22T21:24:39Z",
    "version": "1.38",
    "syntax": "<object> addWeaponItem <array>",
    "docSyntax": "unit addWeaponItem [weaponName, itemName, instant]",
    "tags": "[AL] [EG]",
    "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified. * Since Arma 3 v1.95 it is possible to add item instantly skipping the animation by providing optional boolean",
    "example": "player addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];",
    "params": "<object> <array> <string> <string> <boolean> <object> <array> <string> <array> <string> <number> <string> <boolean>",
    "returns": "nothing"
  },
  "allControls": {
    "command": "allControls",
    "timestamp": "2021-01-22T21:23:19Z",
    "version": "1.38",
    "syntax": "allControls <display>",
    "docSyntax": "allControls display",
    "tags": "",
    "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from CT_CONTROLS_GROUPs.",
    "example": "_allCtrls = allControls findDisplay 46;",
    "params": "<display> <control>",
    "returns": "array | control"
  },
  "allDisplays": {
    "command": "allDisplays",
    "timestamp": "2021-01-22T21:37:30Z",
    "version": "1.38",
    "syntax": "allDisplays",
    "docSyntax": "allDisplays",
    "tags": "",
    "description": "Returns a list of all opened GUI displays. Feature informative Other displays could be accessed via uiNamespace variable which is updated every time a display is opened or closed. For example, to access IGUI \ndisplays: codeprivate _iguiDisplays = uiNamespace getVariable [\"IGUI_displays\", []];</code> Other display \nvariables: Columns4 * hl\"3DENDisplaysTemp_displays\" * hl\"3DENDisplays_displays\" * hl\"BootcampDisplays_displays\" * hl\"BootcampTitles_displays\" * hl\"CuratorDisplays_displays\" * hl\"CuratorTitles_displays\" * hl\"GUI_displays\" * hl\"IGUI_displays\" * hl\"KartDisplays_displays\" * hl\"Loading_displays\"",
    "example": "private _allDisps = allDisplays;",
    "params": "",
    "returns": "array | display"
  },
  "allVariables": {
    "command": "allVariables",
    "timestamp": "2021-01-22T21:24:11Z",
    "version": "1.38",
    "syntax": "allVariables <control>",
    "docSyntax": "allVariables namespace",
    "tags": "",
    "description": "Returns a list of all variables from desired namespace. Namespaces \n\tsupported:br *Control - ''Since arma3 v2.01'' *Display - ''Since arma3 v2.01'' *<Team Member> *Namespace *Object *Group *Task *Location",
    "example": "_allVarsUINamespace = allVariables uiNamespace;",
    "params": "<control>",
    "returns": "array | string | tolower"
  },
  "configSourceMod": {
    "command": "configSourceMod",
    "timestamp": "2021-01-22T21:58:27Z",
    "version": "1.38",
    "syntax": "<config>SourceMod config",
    "docSyntax": "configSourceMod config",
    "tags": "",
    "description": "Returns modDir of the mod that given config class was loaded from.",
    "example": "configSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); // returns \"heli\"",
    "params": "<config>",
    "returns": "string"
  },
  "getObjectMaterials": {
    "command": "getObjectMaterials",
    "timestamp": "2021-01-23T00:05:12Z",
    "version": "1.38",
    "syntax": "getObjectMaterials <object>",
    "docSyntax": "getObjectMaterials obj",
    "tags": "[AG]",
    "description": "Gets all custom materials associated with the object.",
    "example": "_materials = getObjectMaterials car;",
    "params": "<object>",
    "returns": "array | string"
  },
  "getObjectTextures": {
    "command": "getObjectTextures",
    "timestamp": "2021-01-23T00:54:32Z",
    "version": "1.38",
    "syntax": "getObjectTextures <object>",
    "docSyntax": "getObjectTextures obj",
    "tags": "[AG]",
    "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object. FeatureimportantIt will return an empty simple objects.",
    "example": "_textures = getObjectTextures player;",
    "params": "<object>",
    "returns": "array | string"
  },
  "removeSecondaryWeaponItem": {
    "command": "removeSecondaryWeaponItem",
    "timestamp": "2021-01-23T10:36:33Z",
    "version": "1.38",
    "syntax": "<object> removeSecondaryWeaponItem <string>",
    "docSyntax": "unit removeSecondaryWeaponItem item",
    "tags": "[AL] [EG]",
    "description": "Removes given weapon item, including magazine, from the secondaryWeapon.",
    "example": "player removeSecondaryWeaponItem (secondaryWeaponItems player select 0);",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "turretOwner": {
    "command": "turretOwner",
    "timestamp": "2021-01-24T10:47:30Z",
    "version": "1.38",
    "syntax": "<object> turretOwner <array>",
    "docSyntax": "vehicle turretOwner turretPath",
    "tags": "[SE] [AG]",
    "description": "Returns id of the local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle. A vehicle can have one owner while turrets have different owners.",
    "example": "_ownerId = vehicle player turretOwner [0];",
    "params": "<object> <array>",
    "returns": "number | owner"
  },
  "append": {
    "command": "append",
    "timestamp": "2021-01-22T21:24:32Z",
    "version": "1.40",
    "syntax": "<array> append <array>",
    "docSyntax": "array1 append array2",
    "tags": "",
    "description": "Appends array2 to the back of array1 modifying array1. br Feature Informative 'append' does not return array, it modifies existing array. If you need to return a copy, use \"+\": codearray3 nowiki=</nowiki> array1 + array2;</code>",
    "example": "_arr = [1,2,3]; _arr append [4,5,6]; hint str _arr; cc[1,2,3,4,5,6]",
    "params": "<array> <array>",
    "returns": "nothing"
  },
  "configSourceModList": {
    "command": "configSourceModList",
    "timestamp": "2021-01-22T21:58:02Z",
    "version": "1.40",
    "syntax": "<config>SourceModList config",
    "docSyntax": "configSourceModList config",
    "tags": "",
    "description": "Returns an array of mods (CfgMods) in which the given config class is defined.",
    "example": "_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\"); hint str _mods; cc[\"A3\",\"curator\",\"heli\"]",
    "params": "<config>",
    "returns": "array | string"
  },
  "enableUAVWaypoints": {
    "command": "enableUAVWaypoints",
    "timestamp": "2021-01-22T23:43:57Z",
    "version": "1.40",
    "syntax": "<object> <boolean>UAVWaypoints enable",
    "docSyntax": "uav enableUAVWaypoints enable",
    "tags": "",
    "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.",
    "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "groupOwner": {
    "command": "groupOwner",
    "timestamp": "2021-01-23T09:06:11Z",
    "version": "1.40",
    "syntax": "<group>Owner group",
    "docSyntax": "groupOwner group",
    "tags": "[SE] [AG]",
    "description": "Returns the machine network ID of the client to which the group is local. This command only works when called from the server. When called from a client, it always returns 0.",
    "example": "_clientID = groupOwner _someGroup;",
    "params": "<group>",
    "returns": "number"
  },
  "serverCommand": {
    "command": "serverCommand",
    "timestamp": "2021-11-05T21:44:01Z",
    "version": "1.40",
    "syntax": "serverCommand command",
    "docSyntax": "serverCommand command",
    "tags": "",
    "description": "Executes the given server command. Featureinformative * Available commands for execution can be found with UI context, such as \"onButtonDown\" or similar events (see <User Interface Event Handlers>).",
    "example": "serverCommand \"#logout\";",
    "params": "<string> <string> <string>",
    "returns": "boolean | true | false"
  },
  "setGroupOwner": {
    "command": "setGroupOwner",
    "timestamp": "2021-01-23T20:20:37Z",
    "version": "1.40",
    "syntax": "<group> setGroupOwner machine",
    "docSyntax": "group setGroupOwner clientID",
    "tags": "[SE]",
    "description": "Changes the ownership of a group (and all its units) to a given client. The group leader must not be a player. This command only works when called from the server. Returns true if locality was changed. For agents use setOwner command.",
    "example": "_localityChanged = _someGroup setGroupOwner (owner _playerObject);",
    "params": "<group> machine",
    "returns": "boolean"
  },
  "waypointsEnabledUAV": {
    "command": "waypointsEnabledUAV",
    "timestamp": "2021-01-24T10:38:28Z",
    "version": "1.40",
    "syntax": "waypointsEnabledUAV <object>",
    "docSyntax": "waypointsEnabledUAV uav",
    "tags": "",
    "description": "Checks if the UAV has waypoints enabled.",
    "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_dataTerminalAnimate": {
    "command": "BIS_fnc_dataTerminalAnimate",
    "timestamp": "2021-01-22T22:01:45Z",
    "version": "1.42",
    "syntax": "[<object>, <number>] call BIS_fnc_dataTerminalAnimate",
    "docSyntax": "[dataTerminal, step] call BIS_fnc_dataTerminalAnimate",
    "tags": "",
    "description": "Animate a Data Terminal (\"Land_DataTerminal_01_F\").",
    "example": "[myTerminal, 3] call BIS_fnc_dataTerminalAnimate;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_dataTerminalColor": {
    "command": "BIS_fnc_dataTerminalColor",
    "timestamp": "2021-01-22T22:01:00Z",
    "version": "1.42",
    "syntax": "[<object>, <string>, <string>, <string>] call BIS_fnc_dataTerminalColor",
    "docSyntax": "[dataTerminal, step1color, step2color, step3color] call BIS_fnc_dataTerminalColor",
    "tags": "",
    "description": "Set Data Terminal colors for its different steps. Steps \nare: # closed terminal # opening terminal # emitting terminal. Default step colors are \"blue\", \"orange\", \"green\". See BIS_fnc_dataTerminalAnimate to animate a terminal.",
    "example": "[myTerminal, \"purple\", \"red\", \"orange\"] call BIS_fnc_dataTerminalColor;",
    "params": "<object> <string> <string> <string>",
    "returns": "boolean | false | true"
  },
  "BIS_fnc_disableRevive": {
    "command": "BIS_fnc_disableRevive",
    "timestamp": "2021-01-23T09:27:44Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_disableRevive",
    "docSyntax": "[player] call BIS_fnc_disableRevive",
    "tags": "",
    "description": "Disable revive on given unit.",
    "example": "[BIS_unit] call BIS_fnc_disableRevive;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_dynamicGroups": {
    "command": "BIS_fnc_dynamicGroups",
    "timestamp": "2021-01-23T08:59:18Z",
    "version": "1.42",
    "syntax": "[<string>, <array>] call BIS_fnc_dynamicGroups",
    "docSyntax": "[mode, params] call BIS_fnc_dynamicGroups",
    "tags": "",
    "description": "Function that adds dynamic groups to the mission as seen in End Game. Function needs to be initialized on server and client. Clients can then use action TeamSwitch (\"U\" by default) to access the Dynamic Groups interface.",
    "example": "[\"Initialize\"] call BIS_fnc_dynamicGroups;//Exec on Server",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_garage": {
    "command": "BIS_fnc_garage",
    "timestamp": "2021-01-23T09:02:52Z",
    "version": "1.42",
    "syntax": "[<string>, <anything>] call BIS_fnc_garage",
    "docSyntax": "[mode, params] call BIS_fnc_garage",
    "tags": "",
    "description": "Splendid&trade; Virtual Arsenal Garage.",
    "example": "[] call BIS_fnc_garage;",
    "params": "<string> <anything>",
    "returns": "nothing"
  },
  "BIS_fnc_initVehicle": {
    "command": "BIS_fnc_initVehicle",
    "timestamp": "2021-01-23T10:04:29Z",
    "version": "1.42",
    "syntax": "[<object>, variant, animations, mass] call BIS_fnc_initVehicle",
    "docSyntax": "[vehicle, variant, animations, mass] call BIS_fnc_initVehicle",
    "tags": "[AL] [EG]",
    "description": "This function changes the textures, animation sources and/or mass of a given vehicle. * Unless explicitly mentioned , the function will restore the initial state of every animation sources of the given object ('Example 3').",
    "example": "result = [nowikithis, \"\", []] call BIS_fnc_initVehicle;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_moduleHvtInit": {
    "command": "BIS_fnc_moduleHvtInit",
    "timestamp": "2021-01-23T09:53:25Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_moduleHvtInit",
    "docSyntax": "[] call BIS_fnc_moduleHvtInit",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHvtObjective": {
    "command": "BIS_fnc_moduleHvtObjective",
    "timestamp": "2021-01-23T10:30:50Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_moduleHvtObjective",
    "docSyntax": "[] call BIS_fnc_moduleHvtObjective",
    "tags": "",
    "description": "pre/*, _objects",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHvtObjectives": {
    "command": "BIS_fnc_moduleHvtObjectives",
    "timestamp": "2021-01-23T10:34:49Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_moduleHvtObjectives",
    "docSyntax": "[] call BIS_fnc_moduleHvtObjectives",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHvtObjectivesInstance": {
    "command": "BIS_fnc_moduleHvtObjectivesInstance",
    "timestamp": "2021-01-23T10:41:43Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_moduleHvtObjectivesInstance",
    "docSyntax": "[] call BIS_fnc_moduleHvtObjectivesInstance",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_reenableRevive": {
    "command": "BIS_fnc_reenableRevive",
    "timestamp": "2021-01-23T10:41:27Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reenableRevive",
    "docSyntax": "[player] call BIS_fnc_reenableRevive",
    "tags": "",
    "description": "Enable revive on given unit. Revive system needs to be initialized and running.",
    "example": "[BIS_unit] call BIS_fnc_reenableRevive;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_reviveAllowed": {
    "command": "BIS_fnc_reviveAllowed",
    "timestamp": "2021-01-23T10:31:47Z",
    "version": "1.42",
    "syntax": "[<object>, <array>] call BIS_fnc_reviveAllowed",
    "docSyntax": "[medic, unit] call BIS_fnc_reviveAllowed",
    "tags": "",
    "description": "Returns true if unit is in general able to revive someone.",
    "example": "_canRevive = [medic,target] call BIS_fnc_reviveAllowed;",
    "params": "<object> <array>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_reviveBleedOut": {
    "command": "BIS_fnc_reviveBleedOut",
    "timestamp": "2021-01-23T10:33:47Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveBleedOut",
    "docSyntax": "[player] call BIS_fnc_reviveBleedOut",
    "tags": "",
    "description": "Make a unit bleed out over time while incapacitated.",
    "example": "[BIS_unit] call BIS_fnc_reviveBleedOut;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_reviveDamageReset": {
    "command": "BIS_fnc_reviveDamageReset",
    "timestamp": "2021-01-23T10:24:06Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveDamageReset",
    "docSyntax": "[player] call BIS_fnc_reviveDamageReset",
    "tags": "[AL] [EL]",
    "description": "Resets player's damage data and recieved damage.",
    "example": "noWiki[</noWiki>playernoWiki]</noWiki> call BIS_fnc_reviveDamageReset;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_reviveDebug": {
    "command": "BIS_fnc_reviveDebug",
    "timestamp": "2021-01-23T10:40:38Z",
    "version": "1.42",
    "syntax": "[<number>] call BIS_fnc_reviveDebug",
    "docSyntax": "[mode] call BIS_fnc_reviveDebug",
    "tags": "",
    "description": "Debug script for revive system.",
    "example": "[1] call BIS_fnc_reviveDebug;",
    "params": "<number>",
    "returns": "nothing"
  },
  "BIS_fnc_reviveEhDammaged": {
    "command": "BIS_fnc_reviveEhDammaged",
    "timestamp": "2021-01-23T10:39:13Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_reviveEhDammaged",
    "docSyntax": "[] call BIS_fnc_reviveEhDammaged",
    "tags": "",
    "description": "\nunit: Object - Object the event handler is assigned to \nhitSelection: String - Name of the selection where the unit was damaged \ndamage: Number - Resulting level of damage \nhitPartIndex: Number - hit index of the hit selection \nhitPoint: String - hit point Cfg name \nshooter: Object - shooter reference (to get instigator use getShotParents on projectile) \nprojectile: Object - the projectile that caused damage",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_reviveEhHandleDamage": {
    "command": "BIS_fnc_reviveEhHandleDamage",
    "timestamp": "2021-01-23T10:34:54Z",
    "version": "1.42",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Should be excuted by HandleDamage event handler. See example. Handles damage calculation.",
    "example": "BIS_unit _this call BIS_fnc_reviveEhHandleDamage; }];",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_reviveEhHandleHeal": {
    "command": "BIS_fnc_reviveEhHandleHeal",
    "timestamp": "2021-01-23T10:25:18Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveEhHandleHeal",
    "docSyntax": "[unit] call BIS_fnc_reviveEhHandleHeal",
    "tags": "",
    "description": "Handles healing of unit. Unit gets fully healed after 10 seconds if current damage is smaller than initial damage, e.g. a medic healed the unit.",
    "example": "[BIS_unit] call BIS_fnc_reviveEhHandleHeal; ",
    "params": "<object>",
    "returns": "boolean | false | nothing"
  },
  "BIS_fnc_reviveEhKilled": {
    "command": "BIS_fnc_reviveEhKilled",
    "timestamp": "2021-01-23T10:40:15Z",
    "version": "1.42",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Should be called from Killed event handler. Handles what happens if unit dies if revive system is enabled.",
    "example": "BIS_unit addEventHandler [\"Killed\", { _this call BIS_fnc_reviveEhKilled; }];",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_reviveEhRespawn": {
    "command": "BIS_fnc_reviveEhRespawn",
    "timestamp": "2021-01-23T10:40:58Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveEhRespawn",
    "docSyntax": "[unit] call BIS_fnc_reviveEhRespawn",
    "tags": "",
    "description": "Sets unit's state to respawned. Should probably only be called on respawn event.",
    "example": "BIS_unit call BIS_fnc_reviveEhRespawn; ",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "BIS_fnc_reviveEnabled": {
    "command": "BIS_fnc_reviveEnabled",
    "timestamp": "2021-01-23T10:26:35Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveEhRespawn",
    "docSyntax": "[unit] call BIS_fnc_reviveEhRespawn",
    "tags": "",
    "description": "Returns is revive is enabled or not for the unit.",
    "example": "_reviveEnabled = [BIS_unit] call BIS_fnc_reviveEnabled; ",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_reviveGet3dIcons": {
    "command": "BIS_fnc_reviveGet3dIcons",
    "timestamp": "2021-01-23T10:36:20Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveGet3dIcons",
    "docSyntax": "[unit] call BIS_fnc_reviveGet3dIcons",
    "tags": "",
    "description": "Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.",
    "example": "_structuredText = [BIS_unit] call BIS_fnc_reviveGet3dIcons;",
    "params": "<object>",
    "returns": "<structured text> - structured text with animated unconscious state 'hold action' icon."
  },
  "BIS_fnc_reviveGetActionIcon": {
    "command": "BIS_fnc_reviveGetActionIcon",
    "timestamp": "2021-01-23T10:35:21Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveGetActionIcon",
    "docSyntax": "[unit] call BIS_fnc_reviveGetActionIcon",
    "tags": "",
    "description": "Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.",
    "example": "_structuredText = [BIS_unit] call BIS_fnc_reviveGetActionIcon; ",
    "params": "<object>",
    "returns": "<structured text> - structured text with animated unconscious state 'hold action' icon."
  },
  "BIS_fnc_reviveIconControl": {
    "command": "BIS_fnc_reviveIconControl",
    "timestamp": "2021-01-23T10:35:43Z",
    "version": "1.42",
    "syntax": "[<string>, <string>] call BIS_fnc_reviveIconControl",
    "docSyntax": "[mode, unitVar] call BIS_fnc_reviveIconControl",
    "tags": "",
    "description": "Manage the adding, removing, and effects applied to 3D icons used for visualizing incapacitated units.",
    "example": "",
    "params": "<string> <string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_reviveInit": {
    "command": "BIS_fnc_reviveInit",
    "timestamp": "2021-01-23T10:29:41Z",
    "version": "1.42",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Initialize the Revive system on all machines.",
    "example": "call BIS_fnc_reviveInit;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_reviveIsValid": {
    "command": "BIS_fnc_reviveIsValid",
    "timestamp": "2021-01-23T10:24:28Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveIsValid",
    "docSyntax": "[unit] call BIS_fnc_reviveIsValid",
    "tags": "",
    "description": "Check if player can perform revive action on given unit.",
    "example": "[BIS_player] call BIS_fnc_reviveIsValid;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_reviveIsValidSecure": {
    "command": "BIS_fnc_reviveIsValidSecure",
    "timestamp": "2021-01-23T10:23:29Z",
    "version": "1.42",
    "syntax": "[<object>] call BIS_fnc_reviveIsValidSecure",
    "docSyntax": "[unit] call BIS_fnc_reviveIsValidSecure",
    "tags": "",
    "description": "Check if player can perform secure action on given unit.",
    "example": "[BIS_player] call BIS_fnc_reviveIsValidSecure;",
    "params": "<object>",
    "returns": "boolean"
  },
  "BIS_fnc_reviveOnBeingRevived": {
    "command": "BIS_fnc_reviveOnBeingRevived",
    "timestamp": "2021-01-23T20:16:50Z",
    "version": "1.42",
    "syntax": "[<nothing>, <boolean>, <object>] call BIS_fnc_reviveOnBeingRevived",
    "docSyntax": "[nil, flagState, unit] call BIS_fnc_reviveOnBeingRevived",
    "tags": "",
    "description": "Used to execute specific code locally on every client whenever \"being revived\" flag changes.",
    "example": "[nil, true, squadLeader] call BIS_fnc_reviveOnBeingRevived;",
    "params": "<nothing> <boolean> <object>",
    "returns": "boolean | true | nothing"
  },
  "BIS_fnc_reviveOnForcingRespawn": {
    "command": "BIS_fnc_reviveOnForcingRespawn",
    "timestamp": "2021-01-23T20:28:58Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_reviveOnForcingRespawn",
    "docSyntax": "[] call BIS_fnc_reviveOnForcingRespawn",
    "tags": "",
    "description": "\nAuthor: Jiri Wainar \nDescription: Used to execute specific code localy on every client whenever 'forcing respawn' flag changes. \nParameters: _this select \n0: STRING - Variable that carries the 'being revived' flag over the network, defined by macro VAR_TRANSFER_FORCING_RESPAWN. _this select \n1: BOOL - Flag state - true or false. _this select \n2: OBJECT - Unit to set the flag for. \nReturns: True if successful, false if not.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_reviveOnState": {
    "command": "BIS_fnc_reviveOnState",
    "timestamp": "2021-01-23T20:23:42Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_reviveOnState",
    "docSyntax": "[] call BIS_fnc_reviveOnState",
    "tags": "",
    "description": "\nAuthor: Jiri Wainar \nDescription: Used to execute specific code localy on every client whenever unit's state changes. \nParameters: _this select \n0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE. _this select \n1: SCALAR - State. _this select \n2: OBJECT - Unit to set the status for. \nReturns: True if successful, false if not. \nStates: #define STATE_RESPAWNED 0 #define STATE_REVIVED 1 #define STATE_INCAPACITATED 2 #define STATE_DEAD 3",
    "example": "{ [nowiki_x] call BIS_fnc_reviveOnState; } forEach (curatorSelected select 0);",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_reviveOnStateJIP": {
    "command": "BIS_fnc_reviveOnStateJIP",
    "timestamp": "2021-01-23T20:20:23Z",
    "version": "1.42",
    "syntax": "[] call BIS_fnc_reviveOnStateJIP",
    "docSyntax": "[] call BIS_fnc_reviveOnStateJIP",
    "tags": "",
    "description": "\nAuthor: Jiri Wainar \nDescription: Used to execute state specific code localy on client that is JIPping. \nParameters: _this select \n0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE. _this select \n1: SCALAR - State. _this select \n2: OBJECT - Unit to set the status for. \nReturns: True if successful, false if not. \nStates: #define STATE_RESPAWNED 0 #define STATE_REVIVED 1 #define STATE_INCAPACITATED 2 #define STATE_DEAD 3",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_reviveSecureUnit": {
    "command": "BIS_fnc_reviveSecureUnit",
    "timestamp": "2021-01-23T20:28:27Z",
    "version": "1.42",
    "syntax": "[<object>, <object>] call BIS_fnc_reviveSecureUnit",
    "docSyntax": "[unit, source] call BIS_fnc_reviveSecureUnit",
    "tags": "",
    "description": "Make player secured (killed without execution penalties) by _source unit.",
    "example": "[player_1,player2] call BIS_fnc_reviveSecureUnit;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "channelEnabled": {
    "command": "channelEnabled",
    "timestamp": "2021-02-16T22:10:07Z",
    "version": "1.42",
    "syntax": "channelEnabled channel",
    "docSyntax": "channelEnabled channelID",
    "tags": "",
    "description": "Returns channel ID number correspondence !- ! Global ! Side ! Command ! Group ! Vehicle ! Direct ! Custom1 ! Custom2 ! Custom3 ! Custom4 ! Custom5 ! Custom6 ! Custom7 ! Custom8 ! Custom9 ! Custom10 !- ! 0 ! 1 ! 2 ! 3 ! 4 ! 5 ! 6 ! 7 ! 8 ! 9 ! 10 ! 11 ! 12 ! 13 ! 14 ! 15 !}",
    "example": "_isGlobalChatEnabled = (channelEnabled 0) select 0; // check if user can use text on global channel",
    "params": "channel",
    "returns": "array"
  },
  "controlsGroupCtrl": {
    "command": "controlsGroupCtrl",
    "timestamp": "2021-01-22T22:02:37Z",
    "version": "1.42",
    "syntax": "<control> controlsGroupCtrl <number>",
    "docSyntax": "ctrlgrp controlsGroupCtrl idc",
    "tags": "",
    "description": "Returns a child control with specified idc from a controls group",
    "example": "_control = _controlsGroup controlsGroupCtrl 101;",
    "params": "<control> <number>",
    "returns": "control"
  },
  "currentChannel": {
    "command": "currentChannel",
    "timestamp": "2021-01-22T22:47:04Z",
    "version": "1.42",
    "syntax": "'currentChannel'",
    "docSyntax": "'currentChannel'",
    "tags": "",
    "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP). {! class=\"wikitable\" style=\"text-\nalign: center\" ! colspan=\"16\" ! channel ID number correspondence !- ! colspan=\"6\" ! Default Channels ! colspan=\"10\" ! Custom Channels !- style=\"font-\nsize: .9em\" ! Global ! Side ! Command ! Group ! Vehicle ! Direct ! CC&nbsp;1 ! CC&nbsp;2 ! CC&nbsp;3 ! CC&nbsp;4 ! CC&nbsp;5 ! CC&nbsp;6 ! CC&nbsp;7 ! CC&nbsp;8 ! CC&nbsp;9 ! CC&nbsp;10 !- ! 0 ! 1 ! 2 ! 3 ! 4 ! 5 ! 6 ! 7 ! 8 ! 9 ! 10 ! 11 ! 12 ! 13 ! 14 ! 15 !} For Custom Radio, see radioChannelCreate.",
    "example": "_selected = currentChannel; // 3 - for example for the Group",
    "params": "",
    "returns": "number"
  },
  "enableChannel": {
    "command": "enableChannel",
    "timestamp": "2021-01-22T22:54:10Z",
    "version": "1.42",
    "syntax": "channel <boolean>Channel enable",
    "docSyntax": "channelID enableChannel enable",
    "tags": "[EL]",
    "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. FeatureInformative This \ncommand: * can override Channel ID number correspondence !- ! colspan=\"6\" ! Default Channels ! colspan=\"10\" ! Custom Channels !- style=\"font-\nsize: .9em\" ! Global ! Side ! Command ! Group ! Vehicle ! Direct ! CC&nbsp;1 ! CC&nbsp;2 ! CC&nbsp;3 ! CC&nbsp;4 ! CC&nbsp;5 ! CC&nbsp;6 ! CC&nbsp;7 ! CC&nbsp;8 ! CC&nbsp;9 ! CC&nbsp;10 !- ! 0 ! 1 ! 2 ! 3 ! 4 ! 5 ! 6 ! 7 ! 8 ! 9 ! 10 ! 11 ! 12 ! 13 ! 14 ! 15 !}",
    "example": "0 enableChannel false; // disable user ability to send voice and text on global channel",
    "params": "channel <boolean> channel <boolean> <boolean>",
    "returns": "nothing"
  },
  "getPlayerChannel": {
    "command": "getPlayerChannel",
    "timestamp": "2021-01-23T00:17:20Z",
    "version": "1.42",
    "syntax": "getPlayerChannel <object>",
    "docSyntax": "getPlayerChannel player",
    "tags": "[AG]",
    "description": "Returns channel number for given player, 'provided that player is speaking', otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this \ncommand: * It does not work on dedicated server, the return is always -1, only client can detect other client talking. * Prior to Arma 3 v2.01.146856 did not detect when someone talked on direct chat at all anywhere. * The client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on. In short, this command mimics the speaking icon from the UI. Correspondence between channel and \nnumber: {! class=\"wikitable\" style=\"text-\nalign: center\" ! colspan=\"17\" ! channel ID number correspondence !- ! N/A ! Global ! Side ! Command ! Group ! Vehicle ! Direct ! Custom1 ! Custom2 ! Custom3 ! Custom4 ! Custom5 ! Custom6 ! Custom7 ! Custom8 ! Custom9 ! Custom10 !- ! -1 ! 0 ! 1 ! 2 ! 3 ! 4 ! 5 ! 6 ! 7 ! 8 ! 9 ! 10 ! 11 ! 12 ! 13 ! 14 ! 15 !}",
    "example": "private _channelID = getPlayerChannel player;",
    "params": "<object>",
    "returns": "channel id"
  },
  "getSuppression": {
    "command": "getSuppression",
    "timestamp": "2021-01-23T09:15:04Z",
    "version": "1.42",
    "syntax": "getSuppression <object>",
    "docSyntax": "getSuppression unit",
    "tags": "[AL]",
    "description": "Gets the suppression value for the given unit. Returns varying local and alive",
    "example": "getSuppression AI_unit_1; ",
    "params": "<object>",
    "returns": "number"
  },
  "isTurnedOut": {
    "command": "isTurnedOut",
    "timestamp": "2021-01-23T09:18:32Z",
    "version": "1.42",
    "syntax": "isTurnedOut <object>",
    "docSyntax": "isTurnedOut unit",
    "tags": "",
    "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.",
    "example": "_commanderOut = isTurnedOut (tank turretUnit [0,0]);",
    "params": "<object>",
    "returns": "boolean"
  },
  "isWeaponDeployed": {
    "command": "isWeaponDeployed",
    "timestamp": "2021-01-23T08:55:23Z",
    "version": "1.42",
    "syntax": "isWeaponDeployed <object>",
    "docSyntax": "isWeaponDeployed unit",
    "tags": "[AG]",
    "description": "Returns true if weapon is currently deployed.",
    "example": "_dep = isWeaponDeployed player;",
    "params": "<object> <object> <boolean>",
    "returns": "boolean"
  },
  "isWeaponRested": {
    "command": "isWeaponRested",
    "timestamp": "2021-01-23T08:55:34Z",
    "version": "1.42",
    "syntax": "isWeaponRested <object>",
    "docSyntax": "isWeaponRested unit",
    "tags": "[AL]",
    "description": "Returns true if weapon is currently rested.",
    "example": "_rest = isWeaponRested player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "leaderboardRequestRowsFriends": {
    "command": "leaderboardRequestRowsFriends",
    "timestamp": "2021-01-23T09:59:23Z",
    "version": "1.42",
    "syntax": "leaderboardRequestRowsFriends <string>",
    "docSyntax": "leaderboardRequestRowsFriends boardName",
    "tags": "",
    "description": "Requests given leaderboard to download friends rows from the given leaderboard",
    "example": "leaderboardRequestRowsFriends \"TT01\";",
    "params": "<string>",
    "returns": "boolean"
  },
  "leaderboardsRequestUploadScore": {
    "command": "leaderboardsRequestUploadScore",
    "timestamp": "2021-01-23T10:12:28Z",
    "version": "1.42",
    "syntax": "leaderboardsRequestUploadScore [boardName, <number>, [<array>]]",
    "docSyntax": "leaderboardsRequestUploadScore [boardName, score, [details]]",
    "tags": "",
    "description": "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.",
    "example": "leaderboardsRequestUploadScore [\"TT01\", 1234, [5,6,7,8]]",
    "params": "<string> <number> <array>",
    "returns": "boolean"
  },
  "leaderboardsRequestUploadScoreKeepBest": {
    "command": "leaderboardsRequestUploadScoreKeepBest",
    "timestamp": "2021-01-23T09:57:52Z",
    "version": "1.42",
    "syntax": "leaderboardsRequestUploadScoreKeepBest [boardName, <number>, numbers]",
    "docSyntax": "leaderboardsRequestUploadScoreKeepBest [boardName, score, details]",
    "tags": "",
    "description": "Starts async. operation to upload score to board with given name, value is only stored to board if it is better than one already in the board. The details array is optional. The board has to be initialized before the call.",
    "example": "leaderboardsRequestUploadScoreKeepBest [\"TT01\", 1234, [5,6,7,8]]",
    "params": "<string> <number> numbers",
    "returns": "boolean"
  },
  "leaderboardState": {
    "command": "leaderboardState",
    "timestamp": "2021-01-23T09:56:59Z",
    "version": "1.42",
    "syntax": "leaderboardState <string>",
    "docSyntax": "leaderboardState boardname",
    "tags": "",
    "description": "returns state of the board with given name. \n0: Busy (async. operation in progress); \n1: Async. operation ended with success; \n2: Async. operation ended with error; \n3: Invalid board (bad board name, not initialized etc.).",
    "example": "leaderboardState [\"TT01\", 1234, [5,6,7,8]]",
    "params": "<string>",
    "returns": "number"
  },
  "lnbSetPictureColor": {
    "command": "lnbSetPictureColor",
    "timestamp": "2021-01-25T22:54:55Z",
    "version": "1.42",
    "syntax": "lnbSetPictureColor [<number>, [<number>, <number>], color]",
    "docSyntax": "lnbSetPictureColor [idc, [row, column], colour]",
    "tags": "",
    "description": "Sets the cell picture's colour.",
    "example": "lnbSetPictureColor [1492, [1,0], [0,0.75,0.3,0.5]];",
    "params": "<number> <number> <number> color <control> <number> <number> color",
    "returns": "nothing"
  },
  "setCurrentChannel": {
    "command": "setCurrentChannel",
    "timestamp": "2021-01-23T20:31:22Z",
    "version": "1.42",
    "syntax": "setCurrentChannel channel",
    "docSyntax": "setCurrentChannel channelID",
    "tags": "[EL]",
    "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see channel ID number correspondence !- ! Global ! Side ! Command ! Group ! Vehicle ! Direct ! Custom1 ! Custom2 ! Custom3 ! Custom4 ! Custom5 ! Custom6 ! Custom7 ! Custom8 ! Custom9 ! Custom10 !- ! 0 ! 1 ! 2 ! 3 ! 4 ! 5 ! 6 ! 7 ! 8 ! 9 ! 10 ! 11 ! 12 ! 13 ! 14 ! 15 !} For Custom Radio (see radioChannelCreate)",
    "example": "_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active",
    "params": "channel",
    "returns": "boolean | true"
  },
  "setSuppression": {
    "command": "setSuppression",
    "timestamp": "2021-01-23T20:33:58Z",
    "version": "1.42",
    "syntax": "<object> setSuppression <number>",
    "docSyntax": "unit setSuppression value",
    "tags": "[AL]",
    "description": "Sets the given suppression value for the given unit.",
    "example": "unit_1 setSuppression 1;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "diag_activeMissionFSMs": {
    "command": "diag_activeMissionFSMs",
    "timestamp": "2021-01-22T22:44:21Z",
    "version": "1.44",
    "syntax": "diag_activeMissionFSMs",
    "docSyntax": "diag_activeMissionFSMs",
    "tags": "",
    "description": "Returns array with active Mission FSMs. To see number of all scripts currently in the scheduler use diag_activeScripts.",
    "example": "{systemChat str _x} forEach diag_activeMissionFSMs;",
    "params": "",
    "returns": "array | string"
  },
  "diag_activeSQFScripts": {
    "command": "diag_activeSQFScripts",
    "timestamp": "2021-01-22T22:44:17Z",
    "version": "1.44",
    "syntax": "diag_activeSQFScripts",
    "docSyntax": "diag_activeSQFScripts",
    "tags": "",
    "description": "Returns information about active SQF scripts. To see number of all scripts currently in the scheduler use diag_activeScripts.",
    "example": "[] spawn { hint str diag_activeSQFScripts; }; // displays [nowiki[\"spawn hint str diag_activeSQFScripts;\", \"\", true, 1]]",
    "params": "",
    "returns": "string | scriptname | string | boolean | number"
  },
  "diag_activeSQSScripts": {
    "command": "diag_activeSQSScripts",
    "timestamp": "2021-01-22T22:39:24Z",
    "version": "1.44",
    "syntax": "diag_activeSQSScripts",
    "docSyntax": "diag_activeSQSScripts",
    "tags": "",
    "description": "Returns array with active SQSs. To see number of all scripts currently in the scheduler use diag_activeScripts.",
    "example": "{systemChat str _x} forEach diag_activeSQSScripts;",
    "params": "",
    "returns": "array | string | string | boolean | number"
  },
  "sort": {
    "command": "sort",
    "timestamp": "2021-01-24T00:03:41Z",
    "version": "1.44",
    "syntax": "<array> sort <boolean>",
    "docSyntax": "array sort order",
    "tags": "",
    "description": "Attempts to sort given array either in ascending (true) or descending (false) order. FeatureImportantThis will 'modify' the original array!",
    "example": "_arr = [5.21725,1.30859,4,5.03028,1]; _arr sort true; hint str _arr; //[1,1.30859,4,5.03028,5.21725]",
    "params": "<array> <boolean>",
    "returns": "nothing"
  },
  "lbSetSelectColor": {
    "command": "lbSetSelectColor",
    "timestamp": "2021-01-23T09:24:44Z",
    "version": "1.46",
    "syntax": "lbSetSelectColor <array>",
    "docSyntax": "lbSetSelectColor [idc, index, color]",
    "tags": "",
    "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user Color (RGBA).",
    "example": "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]];",
    "params": "<array> <number> <number> color <control> <array> <number> color",
    "returns": "nothing"
  },
  "lbSetSelectColorRight": {
    "command": "lbSetSelectColorRight",
    "timestamp": "2021-01-23T09:20:23Z",
    "version": "1.46",
    "syntax": "lbSetSelectColorRight <array>",
    "docSyntax": "lbSetSelectColorRight [idc, index, color]",
    "tags": "",
    "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user Color (RGBA).",
    "example": "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];",
    "params": "<array> <number> <number> color <control> <array> <number> color",
    "returns": "nothing"
  },
  "profileNameSteam": {
    "command": "profileNameSteam",
    "timestamp": "2021-01-23T10:40:44Z",
    "version": "1.46",
    "syntax": "'profileNameSteam'",
    "docSyntax": "'profileNameSteam'",
    "tags": "",
    "description": "Returns name of the current Steam profile. For currently chosen user profile name see profileName",
    "example": "_mySteamProfileName = profileNameSteam;",
    "params": "",
    "returns": "string"
  },
  "allPlayers": {
    "command": "allPlayers",
    "timestamp": "2021-01-22T21:36:05Z",
    "version": "1.48",
    "syntax": "allPlayers",
    "docSyntax": "allPlayers",
    "tags": "",
    "description": "Returns a list of all units controlled by ''connected clients'' - human players including dead players, but also Headless Clients.br Use BIS_fnc_listPlayers or see HashLink#Example 1 to only get human players.",
    "example": "// only gets human players private _headlessClients = entities \"HeadlessClient_F\"; private _humanPlayers = allPlayers - _headlessClients;",
    "params": "",
    "returns": "array | object"
  },
  "arrayIntersect": {
    "command": "arrayIntersect",
    "timestamp": "2021-01-22T21:29:28Z",
    "version": "1.48",
    "syntax": "<array> arrayIntersect <array>",
    "docSyntax": "array1 arrayIntersect array2",
    "tags": "",
    "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.",
    "example": "_arr1 = [1,2,3,4,5,2,3,4]; _arr2 = [4,5,6,1,2,3,5,6]; hint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]",
    "params": "<array> <array>",
    "returns": "array"
  },
  "BIS_fnc_unitHeadgear": {
    "command": "BIS_fnc_unitHeadgear",
    "timestamp": "2021-01-24T10:46:10Z",
    "version": "1.48",
    "syntax": "[<object>, description, description] call BIS_fnc_unitHeadgear",
    "docSyntax": "[unit, headgear, facewear] call BIS_fnc_unitHeadgear",
    "tags": "[AL]",
    "description": "Randomise headgear and facewear of a character. FeatureimportantIf the randomization is disabled, only strings parameters will be processed, array will be ignored and considered as false.",
    "example": "[nowikithis] call BIS_fnc_unitHeadgear; // headgear and face wear, same as [this, [], []]",
    "params": "<object> description description",
    "returns": "boolean | true"
  },
  "configHierarchy": {
    "command": "configHierarchy",
    "timestamp": "2021-06-13T22:11:54Z",
    "version": "1.48",
    "syntax": "configHierarchy <config>",
    "docSyntax": "configHierarchy configClass",
    "tags": "",
    "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported.",
    "example": "_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\"); cc[bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]",
    "params": "<config>",
    "returns": "array"
  },
  "currentNamespace": {
    "command": "currentNamespace",
    "timestamp": "2021-01-22T22:47:55Z",
    "version": "1.48",
    "syntax": "'currentNamespace'",
    "docSyntax": "'currentNamespace'",
    "tags": "",
    "description": "Returns current global namespace the script runs in. Could be one of the \nfollowing: * missionNamespace * uiNamespace * parsingNamespace * profileNamespace * localNamespace (since Arma 3 v2.00) Feature Informative Since Arma 3 v2.00, Namespaces can be compared with <==> and <!=> operators in addition to isEqualTo",
    "example": "if (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};",
    "params": "",
    "returns": "namespace"
  },
  "currentThrowable": {
    "command": "currentThrowable",
    "timestamp": "2021-01-22T22:46:10Z",
    "version": "1.48",
    "syntax": "currentThrowable <object>",
    "docSyntax": "currentThrowable player",
    "tags": "",
    "description": "Returns currently selected throwable, which will be launched if the user presses \"G\".Feature Informative The weapon/magazine id system is W.I.P. and may change without notice.",
    "example": "currentThrowable player; cc[\"SmokeShellGreen\", \"SmokeShellGreenMuzzle\", [1.00002e+007, 0]]",
    "params": "<object>",
    "returns": "array"
  },
  "getObjectViewDistance": {
    "command": "getObjectViewDistance",
    "timestamp": "2021-01-22T23:55:36Z",
    "version": "1.48",
    "syntax": "'getObjectViewDistance'",
    "docSyntax": "'getObjectViewDistance'",
    "tags": "",
    "description": "Gets the values of rendering distances of objects and shadows.",
    "example": "_arr = getObjectViewDistance;",
    "params": "",
    "returns": "array"
  },
  "isObjectHidden": {
    "command": "isObjectHidden",
    "timestamp": "2021-01-23T09:26:49Z",
    "version": "1.48",
    "syntax": "isObjectHidden <object>",
    "docSyntax": "isObjectHidden object",
    "tags": "[AG] [EL]",
    "description": "Checks visibility of a given object on the local machine.",
    "example": "_bobIsHidden = isObjectHidden bob;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "param": {
    "command": "param",
    "timestamp": "2021-01-23T10:29:31Z",
    "version": "1.48",
    "syntax": "param [<number>, defaultValue, expectedDataTypes, expectedArrayCount]",
    "docSyntax": "param [index, defaultValue, expectedDataTypes, expectedArrayCount]",
    "tags": "",
    "description": "Extracts a single value with given index from input argument, similar to _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array. brbr If extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size.",
    "example": "[1, 2, 3] call { private _one = param [0, 1]; private _two = param [1, 2]; private _three = param [2, 3]; cc... };",
    "params": "<number> <anything> data <number> <anything> <number> <anything> data <number>",
    "returns": "anything | nothing"
  },
  "params": {
    "command": "params",
    "timestamp": "2021-05-19T14:23:32Z",
    "version": "1.48",
    "syntax": "params [element1, element2,...data]",
    "docSyntax": "params [element1, element2,...elementN]",
    "tags": "",
    "description": "Parses input argument into array of _this, which is usually available inside functions and event handlers, is used as argument.brbr In addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size. FeatureWarning All variables names must start with underscore and be enclosed in \nquotes: c= params [<span style=\"\n\tcolor:red;font-\n\tweight:bold\">\"_</span>myVar1<span style=\"\n\tcolor:red;font-\n\tweight:bold\">\"</span>, <span style=\"\n\tcolor:red;font-\n\tweight:bold\">\"_</span>myVar2<span style=\"\n\tcolor:red;font-\n\tweight:bold\">\"</span>]; FeatureInformative It is a good practice to make your local variables 'private' (through private or params) in order to avoid overwriting a local variable of the same name.",
    "example": "[1, 2, 3] call { private [\"_one\", \"_two\", \"_three\"]; _one = _this select 0; _two = _this select 1; _three = _this select 2; cc... }; // Same as above, only using params [1, 2, 3] call { params [\"_one\", \"_two\", \"_three\"]; cc... };",
    "params": "data <anything> data",
    "returns": "boolean | false | true"
  },
  "roleDescription": {
    "command": "roleDescription",
    "timestamp": "2021-01-23T10:35:18Z",
    "version": "1.48",
    "syntax": "roleDescription <object>",
    "docSyntax": "roleDescription unit",
    "tags": "",
    "description": "Returns unit description set in the editor and visible on role selection screen in multiplayer.",
    "example": "_playerRole = roleDescription player;",
    "params": "<object>",
    "returns": "string"
  },
  "serverName": {
    "command": "serverName",
    "timestamp": "2021-01-23T20:25:45Z",
    "version": "1.48",
    "syntax": "serverName",
    "docSyntax": "serverName",
    "tags": "",
    "description": "Returns name of the hosting server in MP, \"\" in SP.",
    "example": "hint format [\"Welcome to the %1 server!\", serverName];",
    "params": "",
    "returns": "string"
  },
  "setGroupIdGlobal": {
    "command": "setGroupIdGlobal",
    "timestamp": "2021-01-23T20:24:06Z",
    "version": "1.48",
    "syntax": "<object> setGroupIdGlobal [<string>, keyword1, ..., keywordN]",
    "docSyntax": "group setGroupIdGlobal [format, keyword1, ..., keywordN]",
    "tags": "[AG] [EG]",
    "description": "A global equivalent of setGroupId.",
    "example": "group player setGroupIdGlobal [\"PAPA BEAR\"]; hint groupId group player; cc\"PAPA BEAR\"",
    "params": "<object> <string> <string>",
    "returns": "nothing"
  },
  "weaponInertia": {
    "command": "weaponInertia",
    "timestamp": "2021-01-24T10:40:33Z",
    "version": "1.48",
    "syntax": "weaponInertia <object>",
    "docSyntax": "weaponInertia unit",
    "tags": "",
    "description": "Returns current rate of how much the weapon view is distorted because of quick aiming.",
    "example": "_inertia = weaponInertia player; //[-0.0126307,0.038023]",
    "params": "<object>",
    "returns": "array"
  },
  "worldSize": {
    "command": "worldSize",
    "timestamp": "2021-01-24T10:41:03Z",
    "version": "1.48",
    "syntax": "worldSize",
    "docSyntax": "worldSize",
    "tags": "",
    "description": "Returns the engine calculated size (terrain side length) of the current world (config).",
    "example": "private _size = worldSize;",
    "params": "",
    "returns": "number"
  },
  "AGLToASL": {
    "command": "AGLToASL",
    "timestamp": "2021-01-22T20:11:01Z",
    "version": "1.50",
    "syntax": "AGLToASL positionagl",
    "docSyntax": "AGLToASL posAGL",
    "tags": "",
    "description": "Converts position from PositionAGL to PositionASL.",
    "example": "_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);",
    "params": "positionagl",
    "returns": "positionasl"
  },
  "ASLToAGL": {
    "command": "ASLToAGL",
    "timestamp": "2021-01-22T21:36:25Z",
    "version": "1.50",
    "syntax": "ASLToAGL positionasl",
    "docSyntax": "ASLToAGL posASL",
    "tags": "",
    "description": "Converts position from PositionASL to PositionAGL",
    "example": "_playerPosAGL = ASLToAGL getPosASL player;",
    "params": "positionasl",
    "returns": "positionagl"
  },
  "didJIP": {
    "command": "didJIP",
    "timestamp": "2021-01-22T22:53:19Z",
    "version": "1.50",
    "syntax": "'didJIP'",
    "docSyntax": "'didJIP'",
    "tags": "",
    "description": "Checks if the current client Joined In Progress.",
    "example": "clientDidJIP = didJIP;",
    "params": "",
    "returns": "boolean"
  },
  "didJIPOwner": {
    "command": "didJIPOwner",
    "timestamp": "2021-01-22T22:50:47Z",
    "version": "1.50",
    "syntax": "didJIPOwner <object>",
    "docSyntax": "didJIPOwner object",
    "tags": "[SE]",
    "description": "Checks if the current owner of supplied Object Joined In Progress. Returns false on clients.",
    "example": "_ownerDidJip = didJIPOwner tank;",
    "params": "<object>",
    "returns": "boolean"
  },
  "distance2D": {
    "command": "distance2D",
    "timestamp": "2021-01-22T22:58:47Z",
    "version": "1.50",
    "syntax": "position2d distance2D position2d",
    "docSyntax": "from distance2D to",
    "tags": "[AG]",
    "description": "Returns a 2D distance (250px|right",
    "example": "_meters = player distance2D heli;",
    "params": "position2d position2d",
    "returns": "number"
  },
  "getAllHitPointsDamage": {
    "command": "getAllHitPointsDamage",
    "timestamp": "2021-01-23T00:36:09Z",
    "version": "1.50",
    "syntax": "getAllHitPointsDamage <object>",
    "docSyntax": "getAllHitPointsDamage entity",
    "tags": "[AG]",
    "description": "Returns 3 arrays for easy cross \nreference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage \nare: * \n0: no damage * \n1: full damage",
    "example": "getAllHitPointsDamage player; //[ //[\"hitface\",\"hitneck\",\"hithead\",\"hitpelvis\",\"hitabdomen\",\"hitdiaphragm\",\"hitchest\",\"hitbody\",\"hitarms\",\"hithands\",\"hitlegs\",\"incapacitated\"], //[\"face_hub\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"arms\",\"hands\",\"legs\",\"body\"], //[0,0,0,0,0,0,0,0,0,0,0,0] //] ",
    "params": "<object>",
    "returns": "array"
  },
  "getHitIndex": {
    "command": "getHitIndex",
    "timestamp": "2021-01-23T00:02:33Z",
    "version": "1.50",
    "syntax": "<object>getHitIndex <number>",
    "docSyntax": "vehicle getHitIndex hitPartIndex",
    "tags": "[AG]",
    "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command. * \n0: no damage * \n1: full damage",
    "example": "vehicle player getHitIndex 3;",
    "params": "<object> <number>",
    "returns": "number | nothing"
  },
  "getModelInfo": {
    "command": "getModelInfo",
    "timestamp": "2021-01-22T23:51:14Z",
    "version": "1.50",
    "syntax": "getModelInfo <object>",
    "docSyntax": "getModelInfo object",
    "tags": "",
    "description": "Returns object's model info. Model path is suitable for use with createSimpleObject command. Since Arma 3 v2.08.148608 the command also returns placing point of the model in model coordinates. Placing point is always in format [0,0,z].",
    "example": "_modelInfo = getModelInfo player; cc[\"b_soldier_03.p3d\", \"a3\\characters_f\\blufor\\b_soldier_03.p3d\", true, [0,0,0]]",
    "params": "<object>",
    "returns": "array"
  },
  "getObjectType": {
    "command": "getObjectType",
    "timestamp": "2021-01-23T00:26:00Z",
    "version": "1.50",
    "syntax": "getObjectType <object>",
    "docSyntax": "getObjectType object",
    "tags": "",
    "description": "Returns object type as a \nnumber: * 1 - Primary - Normal object placed in Visitor, part of landscape * 2 - Network - Road placed in Visitor, part of landscape * 4 - Temporary - Temporary object (like tracks) * 8 - TypeVehicle - Some entity added by game * 16 - TypeTempVehicle - Temporary entity * 32 - LandDecal - Land decal",
    "example": "_objType = getObjectType player;",
    "params": "<object>",
    "returns": "number"
  },
  "joinString": {
    "command": "joinString",
    "timestamp": "2021-01-23T09:09:46Z",
    "version": "1.50",
    "syntax": "<array> joinString <string>",
    "docSyntax": "array joinString separator",
    "tags": "",
    "description": "Joins ''array'' into String with provided ''separator''. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.",
    "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"",
    "params": "<array> <string>",
    "returns": "string"
  },
  "lineIntersectsSurfaces": {
    "command": "lineIntersectsSurfaces",
    "timestamp": "2021-01-23T09:57:20Z",
    "version": "1.50",
    "syntax": "lineIntersectsSurfaces [positionasl, positionasl, <object>, <object>, <boolean>, <number>, <string>, <string>, <boolean>]",
    "docSyntax": "lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]",
    "tags": "[AG]",
    "description": "Returns a list of intersections with surfaces and ground from ''begPosASL'' to ''endPosASL''. Doesn't return intersection with sea surface. Works underwater, unlike lineIntersects. Hardcoded max \ndistance: 5000m. Featureimportant * if ''begPosASL'' is under the ground and ''endPosASL'' is above it, the command will only return intersection with the ground, this is an engine limitation and none of the intersectXXX commands will work when initiated from under the ground. * only a single LOD is checked for intersection. LOD2 will only be checked if LOD1 is unavailable.",
    "example": "_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];",
    "params": "positionasl positionasl <object> <object> <boolean> <number> <string> <string> <boolean>",
    "returns": "array | surfacenormal | objnull | objnull"
  },
  "objectParent": {
    "command": "objectParent",
    "timestamp": "2021-01-23T10:05:31Z",
    "version": "1.50",
    "syntax": "<object>Parent object",
    "docSyntax": "objectParent object",
    "tags": "",
    "description": "Returns parent of an object if the object is proxy, otherwise 600px Feature Informative When used on a soldier, if the soldier is in a vehicle, this command will return soldier's vehicle. Apart from being faster than vehicle command, it is also more reliable, as when used on dead crew inside a vehicle, it returns the vehicle object, where as vehicle command may surprisingly return unit object instead. For example, to delete a unit which is in a vehicle, \nexecute: codeobjectParent _unit deleteVehicleCrew _unit;</code>",
    "example": "_weaponholder = objectParent _mybackpack; ",
    "params": "<object>",
    "returns": "object"
  },
  "remoteExec": {
    "command": "remoteExec",
    "timestamp": "2021-01-23T10:28:17Z",
    "version": "1.50",
    "syntax": "params remoteExec [order, targets, JIP]",
    "docSyntax": "params remoteExec [order, targets, JIP]",
    "tags": "",
    "description": "Asks the server to execute the given function or script command on the given target machine(s). * Functions are executed in the scheduled environment; suspension is allowed. * Script commands are executed in the unscheduled environment; suspension is not allowed (see HashLink#Example 7). Read CfgRemoteExec. It is instead recommended to create a function to be itself remote-executed.",
    "example": "Colordarkorangehint Colorteal\"Hello\"; // becomes [Colorteal\"Hello\"] remoteExec [\"Colordarkorangehint\"]; Colorteal\"Hello\" remoteExec [\"Colordarkorangehint\"]; // alternatively </code> codeColorgreenunit1 ColordarkorangesetFace Colorteal\"Miller\"; // becomes [Colorgreenunit1, Colorteal\"Miller\"] remoteExec [\"ColordarkorangesetFace\"]; </code> codeColordarkorangecutRsc Colordarkred[\"\", \"BLACK OUT\"]; // becomes [Colordarkred[\"\", \"BLACK OUT\"]] remoteExec [\"ColordarkorangecutRsc\"]; // double brackets are needed as the unary command takes an array </code> codeccfunctions, however, do not need double squared brackets Colorteal[\"line 1\", \"line 2\"] spawn ColordarkorangeBIS_fnc_infoText; // becomes Colorteal[\"line 1\", \"line 2\"] remoteExec [\"ColordarkorangeBIS_fnc_infoText\"]; ",
    "params": "<anything> cfgremoteexec 0 example <string> 0 <false>",
    "returns": "nil | string | false | true | object | group | netid | netid"
  },
  "remoteExecCall": {
    "command": "remoteExecCall",
    "timestamp": "2021-01-23T10:35:20Z",
    "version": "1.50",
    "syntax": "see remoteExec",
    "docSyntax": "see remoteExec",
    "tags": "",
    "description": "Unscheduled version of unscheduled environment. Featureimportant The \"Call\" in unscheduled environment and does 'not' mean it will happen right away (see HashLink#Example 3).",
    "example": "[\"hello\"] remoteExec [\"hint\"]; // runs unscheduled [\"hello\"] remoteExecCall [\"hint\"]; // no difference at all",
    "params": "",
    "returns": "remoteexec"
  },
  "setHitIndex": {
    "command": "setHitIndex",
    "timestamp": "2021-04-18T08:02:04Z",
    "version": "1.50",
    "syntax": "<object>setHitIndex [<number>, <number>, useEffects, instigator]",
    "docSyntax": "vehicle setHitIndex [hitPartIndex, damage, useEffects, instigator]",
    "tags": "[AL] [EG]",
    "description": "Sets the current level of damage for a specific Hit Point. All hit points can be obtained with getAllHitPointsDamage command.",
    "example": "vehicle player setHitIndex [1, 1];",
    "params": "<object> <number> <number> false killed",
    "returns": "nothing"
  },
  "splitString": {
    "command": "splitString",
    "timestamp": "2021-01-23T23:59:35Z",
    "version": "1.50",
    "syntax": "<string> splitString <string>",
    "docSyntax": "str splitString delimiters",
    "tags": "",
    "description": "An SQF version of C++ [http://www.cplusplus.com/reference/cstring/strtok/ strtok]. Splits given ANSI string ''str'' into an array of tokens according to given ''delimiters''. In addition, if empty string \"\" is used for ''delimiters'', ''str'' is split by each character. If Unicode support is desired, see forceUnicode.",
    "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"",
    "params": "<string> <string>",
    "returns": "array"
  },
  "targetKnowledge": {
    "command": "targetKnowledge",
    "timestamp": "2021-01-24T00:09:28Z",
    "version": "1.50",
    "syntax": "<object> <object>Knowledge target",
    "docSyntax": "unit targetKnowledge target",
    "tags": "",
    "description": "Returns unit's knowledge about target.",
    "example": "private _allInfo = _soldierOne targetKnowledge _jeepOne; _allInfo params [\"_knownByGroup\", \"_knownByUnit\", \"_lastSeen\", \"_lastThreat\", \"_side\", \"_errorMargin\", \"_position\"];",
    "params": "<object> <object>",
    "returns": "array | boolean | boolean | number | number | side | number | array | position"
  },
  "ctrlAngle": {
    "command": "ctrlAngle",
    "timestamp": "2021-01-22T22:02:18Z",
    "version": "1.52",
    "syntax": "ctrlAngle control",
    "docSyntax": "ctrlAngle control",
    "tags": "",
    "description": "Gets rotation info of an ST_PICTURE control.",
    "example": "ctrlAngle _control;",
    "params": "<control>",
    "returns": "array"
  },
  "disableNVGEquipment": {
    "command": "disableNVGEquipment",
    "timestamp": "2021-01-22T22:52:25Z",
    "version": "1.52",
    "syntax": "<object> disableNVGEquipment <boolean>",
    "docSyntax": "vehicle disableNVGEquipment state",
    "tags": "[AG] [EG]",
    "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.",
    "example": "myTank disableNVGEquipment true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "disableRemoteSensors": {
    "command": "disableRemoteSensors",
    "timestamp": "2021-01-22T22:47:05Z",
    "version": "1.52",
    "syntax": "disableRemoteSensors <boolean>",
    "docSyntax": "disableRemoteSensors state",
    "tags": "[EL]",
    "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain ''any'' local entities. Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time. If a group contains a single local entity then calculations will still be performed for the entire group. brbr These raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like knowsAbout, nearTargets and targetKnowledge will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.",
    "example": "disableRemoteSensors true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "getRemoteSensorsDisabled": {
    "command": "getRemoteSensorsDisabled",
    "timestamp": "2021-01-23T00:11:23Z",
    "version": "1.52",
    "syntax": "getRemoteSensorsDisabled",
    "docSyntax": "getRemoteSensorsDisabled",
    "tags": "",
    "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.",
    "example": "_status = getRemoteSensorsDisabled;",
    "params": "",
    "returns": "boolean"
  },
  "magazinesAllTurrets": {
    "command": "magazinesAllTurrets",
    "timestamp": "2021-01-23T10:01:14Z",
    "version": "1.52",
    "syntax": "magazinesAllTurrets <object>",
    "docSyntax": "magazinesAllTurrets vehicle",
    "tags": "[AG]",
    "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts. Since Arma 3 v2.08.148327 it is possible to exclude person turrets from returned results.",
    "example": "_mags = magazinesAllTurrets vehicle player;",
    "params": "<object> <object> <boolean>",
    "returns": "array | string | array | number | number | number | owner | clientowner"
  },
  "shownHUD": {
    "command": "shownHUD",
    "timestamp": "2021-01-24T00:06:39Z",
    "version": "1.52",
    "syntax": "'shownHUD'",
    "docSyntax": "'shownHUD'",
    "tags": "",
    "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).",
    "example": "_hudStatus = shownHUD;",
    "params": "",
    "returns": "array"
  },
  "allowSprint": {
    "command": "allowSprint",
    "timestamp": "2021-06-13T23:56:32Z",
    "version": "1.54",
    "syntax": "<object> allowSprint <boolean>",
    "docSyntax": "unit allowSprint state",
    "tags": "",
    "description": "Force player to run/jog if set to false.",
    "example": "player allowSprint false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_EGObjectiveVisualizer": {
    "command": "BIS_fnc_EGObjectiveVisualizer",
    "timestamp": "2021-01-22T22:00:43Z",
    "version": "1.54",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "Part of the <EG Spectator Mode>. FeatureimportantFor internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_EGObjectiveVisualizerDraw": {
    "command": "BIS_fnc_EGObjectiveVisualizerDraw",
    "timestamp": "2021-01-22T22:03:18Z",
    "version": "1.54",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "Part of the <EG Spectator Mode>. FeatureimportantFor internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_EGSpectator": {
    "command": "BIS_fnc_EGSpectator",
    "timestamp": "2021-01-22T21:58:15Z",
    "version": "1.54",
    "syntax": "[ingame, [<object>, whitelistedSides, allowAi, allowFreeCamera, allow3PPCamera, showFocusInfo, showCameraButtons, showControlsHelper, showHeader, showLists]] call BIS_fnc_EGSpectator",
    "docSyntax": "[mode, [spectator, whitelistedSides, allowAi, allowFreeCamera, allow3PPCamera, showFocusInfo, showCameraButtons, showControlsHelper, showHeader, showLists]] call BIS_fnc_EGSpectator",
    "tags": "",
    "description": "Spectator instance.",
    "example": "[\"Initialize\", [player]] call BIS_fnc_EGSpectator;",
    "params": "ingame <object> <array> <true> <true> <true> <true> <true> <true> <true> <true>",
    "returns": "boolean | boolean"
  },
  "BIS_fnc_EGSpectatorCamera": {
    "command": "BIS_fnc_EGSpectatorCamera",
    "timestamp": "2021-01-22T22:00:19Z",
    "version": "1.54",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "Part of the <EG Spectator Mode>. FeatureimportantFor internal use only.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "enableStamina": {
    "command": "enableStamina",
    "timestamp": "2021-01-22T22:55:10Z",
    "version": "1.54",
    "syntax": "<object> enableStamina <boolean>",
    "docSyntax": "unit enableStamina enabled",
    "tags": "[AL] [EG]",
    "description": "Enable/disable stamina system",
    "example": "player 'enableStamina' true; ",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "flagSide": {
    "command": "flagSide",
    "timestamp": "2021-01-22T23:11:09Z",
    "version": "1.54",
    "syntax": "<object>Side flag",
    "docSyntax": "flagSide flag",
    "tags": "[AG] [EL]",
    "description": "Returns local instance of the flag. A getter for setFlagSide.",
    "example": "_flagSide = flagSide flag;",
    "params": "<object>",
    "returns": "side"
  },
  "flagTexture": {
    "command": "flagTexture",
    "timestamp": "2021-01-23T00:58:48Z",
    "version": "1.54",
    "syntax": "flagTexture <object>",
    "docSyntax": "flagTexture flagCarrier",
    "tags": "[AG] [EL]",
    "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.",
    "example": "_flagTexture = flagTexture _flag1;",
    "params": "<object>",
    "returns": "string"
  },
  "getAnimAimPrecision": {
    "command": "getAnimAimPrecision",
    "timestamp": "2021-01-22T23:11:19Z",
    "version": "1.54",
    "syntax": "getAnimAimPrecision <object>",
    "docSyntax": "getAnimAimPrecision unit",
    "tags": "",
    "description": "Returns aim precision for current animation",
    "example": "'getAnimAimPrecision' player;",
    "params": "<object>",
    "returns": "number"
  },
  "getAnimSpeedCoef": {
    "command": "getAnimSpeedCoef",
    "timestamp": "2021-01-22T23:11:35Z",
    "version": "1.54",
    "syntax": "getAnimSpeedCoef <object>",
    "docSyntax": "getAnimSpeedCoef unit",
    "tags": "",
    "description": "Get coefficient for animation speed.",
    "example": "'getAnimSpeedCoef' player; ",
    "params": "<object>",
    "returns": "number"
  },
  "getCustomAimCoef": {
    "command": "getCustomAimCoef",
    "timestamp": "2021-01-23T00:58:06Z",
    "version": "1.54",
    "syntax": "getCustomAimCoef <object>",
    "docSyntax": "getCustomAimCoef unit",
    "tags": "[AG]",
    "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.",
    "example": "_coef = 'getCustomAimCoef' player",
    "params": "<object>",
    "returns": "number"
  },
  "getMousePosition": {
    "command": "getMousePosition",
    "timestamp": "2021-01-22T23:33:11Z",
    "version": "1.54",
    "syntax": "getMousePosition",
    "docSyntax": "getMousePosition",
    "tags": "",
    "description": "Returns mouse position in UI coordinates.",
    "example": "getMousePosition params [\"_mouseX\", \"_mouseY\"];",
    "params": "",
    "returns": "array"
  },
  "getStamina": {
    "command": "getStamina",
    "timestamp": "2021-01-23T09:04:38Z",
    "version": "1.54",
    "syntax": "getStamina <object>",
    "docSyntax": "getStamina unit",
    "tags": "",
    "description": "Get current stamina (~ seconds until depletion)",
    "example": "'getStamina' player; ",
    "params": "<object>",
    "returns": "number"
  },
  "inPolygon": {
    "command": "inPolygon",
    "timestamp": "2021-01-23T09:11:03Z",
    "version": "1.54",
    "syntax": "position3d inPolygon position3d",
    "docSyntax": "position inPolygon polygon",
    "tags": "",
    "description": "Checks whether position is inside given polygon",
    "example": "_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];",
    "params": "position3d position3d",
    "returns": "boolean"
  },
  "isAimPrecisionEnabled": {
    "command": "isAimPrecisionEnabled",
    "timestamp": "2021-01-23T09:15:13Z",
    "version": "1.54",
    "syntax": "isAimPrecisionEnabled <object>",
    "docSyntax": "isAimPrecisionEnabled unit",
    "tags": "",
    "description": "Returns true if procedural aiming precision affects weapon sway.",
    "example": "_isAffected = isAimPrecisionEnabled player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isEqualType": {
    "command": "isEqualType",
    "timestamp": "2021-01-23T09:21:56Z",
    "version": "1.54",
    "syntax": "<anything> isEqualType <anything>",
    "docSyntax": "val1 isEqualType val2",
    "tags": "",
    "description": "Compares two values' types. A much faster alternative to ictypeName a == typeName b.",
    "example": "_var = [1,2,3]; _var isEqualType 0; // false _var isEqualType []; // true",
    "params": "<anything> <anything>",
    "returns": "boolean"
  },
  "isEqualTypeAll": {
    "command": "isEqualTypeAll",
    "timestamp": "2021-01-23T09:08:07Z",
    "version": "1.54",
    "syntax": "<array> isEqualTypeAll <anything>",
    "docSyntax": "arr isEqualTypeAll val",
    "tags": "",
    "description": "Compares types of all elements of an array to the type of a single value. FeatureimportantAn empty array will return false (see HashLink#Example 2).",
    "example": "_arr = [1,2,3,4,5,6,7,8,9,0]; _arr isEqualTypeAll \"\"; // false _arr isEqualTypeAll 0; // true",
    "params": "<array> <anything>",
    "returns": "boolean"
  },
  "isEqualTypeAny": {
    "command": "isEqualTypeAny",
    "timestamp": "2021-01-23T09:26:10Z",
    "version": "1.54",
    "syntax": "<anything> isEqualTypeAny <array>",
    "docSyntax": "val isEqualTypeAny types",
    "tags": "",
    "description": "Compares type of given value to every type in the given array and if match is found, true is returned.",
    "example": "_var = [1, 2, 3]; _var isEqualTypeAny [0, \"\", objNull]; //false _var isEqualTypeAny [0, \"\", objNull, []]; //true",
    "params": "<anything> <array>",
    "returns": "boolean"
  },
  "isEqualTypeArray": {
    "command": "isEqualTypeArray",
    "timestamp": "2021-01-23T09:20:22Z",
    "version": "1.54",
    "syntax": "<array> isEqualTypeArray <array>",
    "docSyntax": "arr1 isEqualTypeArray arr2",
    "tags": "",
    "description": "Compares types of all elements of one array to types of all elements of another array.",
    "example": "_arr = [1,true,\"three\"]; _arr isEqualTypeArray [0,objNull,\"\"]; // false _arr isEqualTypeArray [0,false,\"\"]; // true",
    "params": "<array> <array>",
    "returns": "boolean"
  },
  "isEqualTypeParams": {
    "command": "isEqualTypeParams",
    "timestamp": "2021-01-23T09:06:49Z",
    "version": "1.54",
    "syntax": "<anything> isEqualTypeParams <array>",
    "docSyntax": "input isEqualTypeParams template",
    "tags": "",
    "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are \ndifferences: * Input can be anything but will be expected to be an Array, otherwise false is returned * Input array can be longer but not shorter than template array, will return false if shorter * nil could be used in template type array as a wild card to allow any type match",
    "example": "// These all return true [1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"]; [1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; [1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];",
    "params": "<anything> <array>",
    "returns": "boolean"
  },
  "isSprintAllowed": {
    "command": "isSprintAllowed",
    "timestamp": "2021-01-23T09:14:00Z",
    "version": "1.54",
    "syntax": "isSprintAllowed <object>",
    "docSyntax": "isSprintAllowed unit",
    "tags": "",
    "description": "Returns true if player is allowed to sprint",
    "example": "'isSprintAllowed' player; ",
    "params": "<object>",
    "returns": "boolean"
  },
  "isStaminaEnabled": {
    "command": "isStaminaEnabled",
    "timestamp": "2021-01-23T09:16:20Z",
    "version": "1.54",
    "syntax": "isStaminaEnabled <object>",
    "docSyntax": "isStaminaEnabled unit",
    "tags": "[AG]",
    "description": "Check if stamina depletion is enabled.",
    "example": "'isStaminaEnabled' player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "nearestTerrainObjects": {
    "command": "nearestTerrainObjects",
    "timestamp": "2021-01-23T10:07:12Z",
    "version": "1.54",
    "syntax": "nearestTerrainObjects [positionagl, <array>, <number>, <boolean>, <boolean>]",
    "docSyntax": "nearestTerrainObjects [position, types, radius, sort, 2Dmode]",
    "tags": "",
    "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). In contrast to Informative|Types which are missing are not present in the given world. <Virtual Reality has no terrain objects. Last updated {{GVI|arma3|1.99}}}} big5| * \nBUSH: 47974 * \nCHAPEL: 2 * \nCROSS: 1 * \nFENCE: 1728 * \nFUELSTATION: 3 * \nHIDE: 70975 * \nHOUSE: 684 * \nLIGHTHOUSE: 3 * \nROAD: 143 * \nROCK: 820 * \nSHIPWRECK: 11 * \nTRACK: 2063 * \nTRANSMITTER: 11 * \nTREE: 40110 * \nWALL: 1355 * \nWATERTOWER: 1 }} big[[Altis</big> {{Columns|5| * \nBUSH: 747193 * \nCHAPEL: 165 * \nCHURCH: 54 * \nCROSS: 48 * \nFENCE: 47940 * \nFUELSTATION: 32 * \nHIDE: 655958 * \nHOSPITAL: 1 * \nHOUSE: 17472 * \nLIGHTHOUSE: 7 * MAIN \nROAD: 2061 * POWER \nLINES: 2224 * \nPOWERSOLAR: 10 * \nPOWERWAVE: 51 * \nPOWERWIND: 128 * \nROAD: 4849 * \nROCK: 5483 * \nRUIN: 3 * \nSHIPWRECK: 43 * \nTOURISM: 1 * \nTRACK: 26823 * \nTRANSMITTER: 23 * \nTREE: 263630 * \nWALL: 38943 * \nWATERTOWER: 10 }} big5| * \nBUSH: 288461 * \nBUSSTOP: 45 * \nCHAPEL: 14 * \nCHURCH: 14 * \nCROSS: 16 * \nFENCE: 11189 * \nFUELSTATION: 24 * \nHIDE: 192553 * \nHOUSE: 4062 * \nLIGHTHOUSE: 15 * MAIN \nROAD: 1050 * POWER \nLINES: 3427 * \nPOWERSOLAR: 1 * \nROAD: 1442 * \nROCK: 3513 * \nSHIPWRECK: 23 * \nTRACK: 3489 * \nTRANSMITTER: 7 * \nTREE: 101960 * \nWALL: 14189 * \nWATERTOWER: 63 }} big[[Tanoa</big> {{Columns|5| * \nBUSH: 754347 * \nCHURCH: 21 * \nFENCE: 2912 * \nFUELSTATION: 85 * \nHIDE: 356904 * \nHOUSE: 13389 * MAIN \nROAD: 2921 * POWER \nLINES: 3985 * \nPOWERSOLAR: 2 * \nPOWERWIND: 19 * \nRAILWAY: 2138 * \nROAD: 1485 * \nROCK: 8909 * \nSHIPWRECK: 58 * \nTOURISM: 35 * \nTRACK: 9419 * \nTRAIL: 6936 * \nTRANSMITTER: 16 * \nTREE: 506993 * \nWALL: 20526 * \nWATERTOWER: 73 }} big5| * \nBUILDING: 1262 * \nBUNKER: 40 * \nBUSH: 473543 * \nBUSSTOP: 73 * \nCHAPEL: 8 * \nCHURCH: 17 * \nFENCE: 48426 * \nFOUNTAIN: 36 * \nFUELSTATION: 7 * \nHIDE: 474123 * \nHOUSE: 6762 * MAIN \nROAD: 2118 * POWER \nLINES: 2671 * \nPOWERSOLAR: 2 * \nPOWERWIND: 1 * \nRAILWAY: 843 * \nROAD: 5378 * \nROCK: 744 * \nSHIPWRECK: 4 * \nSTACK: 11 * \nTRACK: 12834 * \nTRANSMITTER: 15 * \nTREE: 1881630 * VIEW-\nTOWER: 239 * \nWALL: 4418 * \nWATERTOWER: 7 }} big[[Weferlingen</big> {{Columns|5| * \nBUILDING: 5072 * \nBUSH: 731315 * \nBUSSTOP: 106 * \nCHAPEL: 13 * \nCHURCH: 21 * \nFENCE: 83908 * \nFUELSTATION: 9 * \nHIDE: 231818 * \nHOUSE: 4562 * MAIN \nROAD: 1535 * POWER \nLINES: 1958 * \nRAILWAY: 2324 * \nROAD: 8740 * \nSTACK: 18 * \nTRACK: 24372 * \nTRANSMITTER: 1 * \nTREE: 829449 * VIEW-\nTOWER: 34 }} big[[Weferlingen (Winter)></big> {{Columns|5| * \nBUILDING: 5072 * \nBUSH: 519827 * \nBUSSTOP: 106 * \nCHAPEL: 13 * \nCHURCH: 21 * \nFENCE: 83908 * \nFUELSTATION: 9 * \nHIDE: 229792 * \nHOUSE: 4562 * MAIN \nROAD: 1535 * POWER \nLINES: 1958 * \nRAILWAY: 2324 * \nROAD: 8740 * \nSTACK: 18 * \nTRACK: 24372 * \nTRANSMITTER: 1 * \nTREE: 829449 * VIEW-\nTOWER: 34 }} {{Wiki|extractionScript}} </spoiler>",
    "example": "nearestTerrainObjects [player, [\"Tree\", \"Bush\"], 200];",
    "params": "positionagl <array> <number> <boolean> <boolean>",
    "returns": "array"
  },
  "setAnimSpeedCoef": {
    "command": "setAnimSpeedCoef",
    "timestamp": "2021-01-23T20:19:39Z",
    "version": "1.54",
    "syntax": "<object> setAnimSpeedCoef <number>",
    "docSyntax": "unit setAnimSpeedCoef coef",
    "tags": "[AG] [EL]",
    "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).br Doesn't affect upper body animations (reloading, etc.)",
    "example": "player setAnimSpeedCoef 0.75;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setCustomAimCoef": {
    "command": "setCustomAimCoef",
    "timestamp": "2021-01-23T20:31:29Z",
    "version": "1.54",
    "syntax": "<object> setCustomAimCoef <number>",
    "docSyntax": "unit setCustomAimCoef coef",
    "tags": "[AL] [EL]",
    "description": "Set custom aim precision coefficient for weapon sway",
    "example": "player setCustomAimCoef 3;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setObjectMaterialGlobal": {
    "command": "setObjectMaterialGlobal",
    "timestamp": "2021-01-23T20:32:17Z",
    "version": "1.54",
    "syntax": "<object> setObjectMaterialGlobal [<number>, <string>]",
    "docSyntax": "obj setObjectMaterialGlobal [selection, material]",
    "tags": "[AG] [EG]",
    "description": "Set the material of the given selection on all computers in a network session.",
    "example": "player setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];",
    "params": "<object> <array> <number> <string>",
    "returns": "nothing"
  },
  "setStamina": {
    "command": "setStamina",
    "timestamp": "2021-01-23T20:29:19Z",
    "version": "1.54",
    "syntax": "<object> setStamina <number>",
    "docSyntax": "unit setStamina stamina",
    "tags": "[AL] [EL]",
    "description": "Set units' stamina (seconds until depletion)",
    "example": "player setStamina 42;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setStaminaScheme": {
    "command": "setStaminaScheme",
    "timestamp": "2021-01-23T20:31:13Z",
    "version": "1.54",
    "syntax": "setStaminaScheme <string>",
    "docSyntax": "setStaminaScheme scheme",
    "tags": "",
    "description": "Sets the scheme used for the Stamina system.",
    "example": "setStaminaScheme \"Default\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "add3DENConnection": {
    "command": "add3DENConnection",
    "timestamp": "2021-01-22T21:24:29Z",
    "version": "1.56",
    "syntax": "add3DENConnection [<string>, eden, <eden]",
    "docSyntax": "add3DENConnection [type, from, to]",
    "tags": "",
    "description": "Connect entities together.",
    "example": "add3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];ccSet random start on marker \"marker_0\" for all selected objects.",
    "params": "<string> eden <eden",
    "returns": "boolean | true"
  },
  "add3DENEventHandler": {
    "command": "add3DENEventHandler",
    "timestamp": "2021-06-13T23:47:57Z",
    "version": "1.56",
    "syntax": "add3DENEventHandler [eden, <code>]",
    "docSyntax": "add3DENEventHandler [type, code]",
    "tags": "",
    "description": "Adds an Eden Editor Event Handler.",
    "example": "eh = add3DENEventHandler [\"onUndo\", {systemChat \"Zip...\"}];",
    "params": "eden <code>",
    "returns": "number"
  },
  "add3DENLayer": {
    "command": "add3DENLayer",
    "timestamp": "2021-01-22T21:34:01Z",
    "version": "1.56",
    "syntax": "<number>add3DENLayer <string>",
    "docSyntax": "parentLayerID add3DENLayer name",
    "tags": "",
    "description": "Adds an editing layer in <Eden Editor>.",
    "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; _myLayerFort = _myLayer add3DENLayer \"Fortifications\"; _myLayerPatrol = _myLayer add3DENLayer \"Patrols\";",
    "params": "<number> <string>",
    "returns": "number"
  },
  "all3DENEntities": {
    "command": "all3DENEntities",
    "timestamp": "2021-01-22T21:38:09Z",
    "version": "1.56",
    "syntax": "all3DENEntities",
    "docSyntax": "all3DENEntities",
    "tags": "",
    "description": "Returns an array of all currently placed Eden Editor entities. FeatureEdenEditorThis information is only available in <Eden Editor>. If used during mission, it will return hl[nowiki[],[],[],[],[],[],[],[-999]].",
    "example": "systemChat str all3DENEntities;",
    "params": "",
    "returns": "array"
  },
  "apply": {
    "command": "apply",
    "timestamp": "2021-01-22T21:27:37Z",
    "version": "1.56",
    "syntax": "<array> apply _x",
    "docSyntax": "array apply code",
    "tags": "",
    "description": "Applies the given code to each element of the given data structure and collects the results in an array.",
    "example": "_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x % 2 == 0)}; cc[1,0,1,0,1,0,1,0,1,0]",
    "params": "<array> _x <hashmap> _x",
    "returns": "array"
  },
  "BIS_fnc_3den_init": {
    "command": "BIS_fnc_3den_init",
    "timestamp": "2021-01-22T22:00:38Z",
    "version": "1.56",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Adds needed event handlers.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3den_onKeyDown": {
    "command": "BIS_fnc_3den_onKeyDown",
    "timestamp": "2021-01-22T21:57:24Z",
    "version": "1.56",
    "syntax": "[<display>, <number>, <boolean>, <boolean>, <boolean>] call BIS_fnc_3den_onKeyDown",
    "docSyntax": "[display, button, shift, ctrl, alt] call BIS_fnc_3den_onKeyDown",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Called when a button is pressed.",
    "example": "_this call BIS_fnc_3den_onKeyDown}];",
    "params": "<display> <number> <boolean> <boolean> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_3den_onKeyUp": {
    "command": "BIS_fnc_3den_onKeyUp",
    "timestamp": "2021-01-22T21:57:56Z",
    "version": "1.56",
    "syntax": "[<display>, <number>, <boolean>, <boolean>, <boolean>] call BIS_fnc_3den_onKeyUp",
    "docSyntax": "[display, button, shift, ctrl, alt] call BIS_fnc_3den_onKeyUp",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Called when a button is released.",
    "example": "_this call BIS_fnc_3den_onKeyUp}];",
    "params": "<display> <number> <boolean> <boolean> <boolean>",
    "returns": "boolean"
  },
  "BIS_fnc_3den_onMissionLoad": {
    "command": "BIS_fnc_3den_onMissionLoad",
    "timestamp": "2021-01-22T21:55:34Z",
    "version": "1.56",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Executed when a new mission is loaded.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3den_onMissionNew": {
    "command": "BIS_fnc_3den_onMissionNew",
    "timestamp": "2021-01-22T22:05:38Z",
    "version": "1.56",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Executed when a new mission is created.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3den_onMissionPreviewEnd": {
    "command": "BIS_fnc_3den_onMissionPreviewEnd",
    "timestamp": "2021-01-22T21:56:21Z",
    "version": "1.56",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system. Executed when preview ended.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3den_onSelectionChange": {
    "command": "BIS_fnc_3den_onSelectionChange",
    "timestamp": "2021-01-22T22:01:27Z",
    "version": "1.56",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Used internally by the <Arma 3 Key Frame Animation> system.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3DENDiagCreateList": {
    "command": "BIS_fnc_3DENDiagCreateList",
    "timestamp": "2021-01-22T21:54:06Z",
    "version": "1.56",
    "syntax": "class call BIS_fnc_3DENDiagCreateList",
    "docSyntax": "class call BIS_fnc_3DENDiagCreateList",
    "tags": "",
    "description": "Copies all in <Eden Editor> available objects to the clipboard.",
    "example": "call BIS_fnc_3DENDiagCreateList;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3DENDiagFonts": {
    "command": "BIS_fnc_3DENDiagFonts",
    "timestamp": "2021-01-22T21:57:21Z",
    "version": "1.56",
    "syntax": "<number> call BIS_fnc_3DENDiagFonts",
    "docSyntax": "fontID call BIS_fnc_3DENDiagFonts",
    "tags": "",
    "description": "thumb|This display is opened when the function is called in Eden. Displays given font in various different sizes. The fontID is the index of the font in icconfigFile >> \"CfgFontFamilies\".br Fonts for GVIarma32.\n00: <ol start=\"0\"> liLucidaConsoleB</li> liTahomaB</li> liEtelkaMonospacePro</li> liLCD14</li> liEtelkaMonospaceProBold</li> liEtelkaNarrowMediumPro</li> liPuristaBold</li> liPuristaLight</li> liPuristaMedium</li> liPuristaSemibold</li> liRobotoCondensed</li> liRobotoCondensedBold</li> liRobotoCondensedLight</li> liCaveat</li> </ol>",
    "example": "2 call BIS_fnc_3DENDiagFonts;",
    "params": "<number>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENDiagMouseControl": {
    "command": "BIS_fnc_3DENDiagMouseControl",
    "timestamp": "2021-01-22T21:58:19Z",
    "version": "1.56",
    "syntax": "call BIS_fnc_3DENDiagMouseControl",
    "docSyntax": "call BIS_fnc_3DENDiagMouseControl",
    "tags": "",
    "description": "Creates a display which highlights currently pressed mouse buttons and CTRL, ALT or SHIFT key.",
    "example": "call BIS_fnc_3DENDiagMouseControl;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3DENExportAttributes": {
    "command": "BIS_fnc_3DENExportAttributes",
    "timestamp": "2021-01-22T21:59:58Z",
    "version": "1.56",
    "syntax": "class call BIS_fnc_3DENExportAttributes",
    "docSyntax": "class call BIS_fnc_3DENExportAttributes",
    "tags": "",
    "description": "Copies all available attributes to the clipboard.",
    "example": "\"trigger\" call BIS_fnc_3DENExportAttributes;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENExportOldSQM": {
    "command": "BIS_fnc_3DENExportOldSQM",
    "timestamp": "2021-01-22T22:05:53Z",
    "version": "1.56",
    "syntax": "call BIS_fnc_3DENExportOldSQM",
    "docSyntax": "call BIS_fnc_3DENExportOldSQM",
    "tags": "",
    "description": "Export current mission (usually in <Eden Editor>) in <2D Editor> format to the clipboard.",
    "example": "Debug Console",
    "params": "",
    "returns": "copied to the clipboard"
  },
  "BIS_fnc_3DENExportTerrainBuilder": {
    "command": "BIS_fnc_3DENExportTerrainBuilder",
    "timestamp": "2021-01-22T22:04:25Z",
    "version": "1.56",
    "syntax": "call BIS_fnc_3DENExportTerrainBuilder",
    "docSyntax": "call BIS_fnc_3DENExportTerrainBuilder",
    "tags": "",
    "description": "Gets all empty vehicles placed in the currently opened Eden mission and converts data into the format used by the <Terrain Builder>.",
    "example": "call BIS_fnc_3DENExportTerrainBuilder;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_3DENFlashlight": {
    "command": "BIS_fnc_3DENFlashlight",
    "timestamp": "2021-01-22T21:57:47Z",
    "version": "1.56",
    "syntax": "<number> call BIS_fnc_3DENFlashlight",
    "docSyntax": "mode call BIS_fnc_3DENFlashlight",
    "tags": "",
    "description": "Toggle or set <Eden Editor> flashlight (light source snapped to the camera).",
    "example": "_mode = 0 call BIS_fnc_3DENFlashlight;",
    "params": "<number>",
    "returns": "number"
  },
  "BIS_fnc_3DENMissionPreview": {
    "command": "BIS_fnc_3DENMissionPreview",
    "timestamp": "2021-01-22T21:53:41Z",
    "version": "1.56",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantThis function is used internally by the <Eden Editor>",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_3DENTutorial": {
    "command": "BIS_fnc_3DENTutorial",
    "timestamp": "2021-01-22T21:52:59Z",
    "version": "1.56",
    "syntax": "[<array>, <number>, <boolean>, <display>] call BIS_fnc_3DENTutorial",
    "docSyntax": "[path, index, oneStep, display] call BIS_fnc_3DENTutorial",
    "tags": "",
    "description": "Show tutorial in <Eden Editor>.",
    "example": "nowiki[</nowiki>[\"Editing\", \"Connecting\"], 0, false] call BIS_fnc_3DENTutorial;",
    "params": "<array> <number> <boolean> <display>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENVisionMode": {
    "command": "BIS_fnc_3DENVisionMode",
    "timestamp": "2021-01-22T21:53:26Z",
    "version": "1.56",
    "syntax": "<number> call BIS_fnc_3DENVisionMode",
    "docSyntax": "mode call BIS_fnc_3DENVisionMode",
    "tags": "",
    "description": "Toggle or set <Eden Editor> vision mode. Has to be executed while Eden interface is opened.",
    "example": "_mode = 0 call BIS_fnc_3DENVisionMode;",
    "params": "<number>",
    "returns": "number"
  },
  "BIS_fnc_camera_edenAttributesChanged": {
    "command": "BIS_fnc_camera_edenAttributesChanged",
    "timestamp": "2021-01-22T23:11:21Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenAttributesChanged",
    "docSyntax": "[] call BIS_fnc_camera_edenAttributesChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a camera Parameter(s): _this select \n0: Object - The camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenConnectionChanged": {
    "command": "BIS_fnc_camera_edenConnectionChanged",
    "timestamp": "2021-01-22T23:08:14Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenConnectionChanged",
    "docSyntax": "[] call BIS_fnc_camera_edenConnectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN connections of a camera are changed Parameter(s): _this select \n0: Object - The camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenDeleted": {
    "command": "BIS_fnc_camera_edenDeleted",
    "timestamp": "2021-01-22T23:07:17Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenDeleted",
    "docSyntax": "[] call BIS_fnc_camera_edenDeleted",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Camera is deleted Parameter(s): _this select \n0: Object - The destroyed camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenInit": {
    "command": "BIS_fnc_camera_edenInit",
    "timestamp": "2021-01-22T23:05:53Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenInit",
    "docSyntax": "[] call BIS_fnc_camera_edenInit",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Camera is initialized in 3den Parameter(s): _this select \n0: Object - The camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenIsSelected": {
    "command": "BIS_fnc_camera_edenIsSelected",
    "timestamp": "2021-01-23T00:48:24Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenIsSelected",
    "docSyntax": "[] call BIS_fnc_camera_edenIsSelected",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether this camera is selected in 3den Parameter(s): _this select \n0: Object - The camera \nReturns: Bool - True if selected, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenRegisteredToWorld": {
    "command": "BIS_fnc_camera_edenRegisteredToWorld",
    "timestamp": "2021-01-22T23:08:35Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenRegisteredToWorld",
    "docSyntax": "[] call BIS_fnc_camera_edenRegisteredToWorld",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenReset": {
    "command": "BIS_fnc_camera_edenReset",
    "timestamp": "2021-01-22T23:09:15Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenReset",
    "docSyntax": "[] call BIS_fnc_camera_edenReset",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Resets camera in 3DEN Parameter(s): _this select \n0: Object - The camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenSelectionChanged": {
    "command": "BIS_fnc_camera_edenSelectionChanged",
    "timestamp": "2021-01-23T00:58:34Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenSelectionChanged",
    "docSyntax": "[] call BIS_fnc_camera_edenSelectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: The selection state of given camera changes Parameter(s): _this select \n0: Object - The camera _this select \n1: Bool - True if selected, false if not \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_camera_edenUnregisteredFromWorld": {
    "command": "BIS_fnc_camera_edenUnregisteredFromWorld",
    "timestamp": "2021-01-23T00:55:18Z",
    "version": "1.56",
    "syntax": "[] call BIS_fnc_camera_edenUnregisteredFromWorld",
    "docSyntax": "[] call BIS_fnc_camera_edenUnregisteredFromWorld",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a camera Parameter(s): _this select \n0: Object - The camera \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_garage3DEN": {
    "command": "BIS_fnc_garage3DEN",
    "timestamp": "2021-01-23T08:58:29Z",
    "version": "1.56",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "The code is identical to the one of BIS_fnc_garage, except that icFNC_IS3DEN is set to 1. For more information about the garage, visit BIS_fnc_garage FeatureimportantThis function is used internally by the <Eden Editor>.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_highlightControl": {
    "command": "BIS_fnc_highlightControl",
    "timestamp": "2021-01-23T09:52:40Z",
    "version": "1.56",
    "syntax": "[<control>, <number>] call BIS_fnc_highlightControl",
    "docSyntax": "[displayOrControl, thickness] call BIS_fnc_highlightControl",
    "tags": "",
    "description": "Highlights given control by drawing a border around it and letting it pulsate. The effect is visible until explicitly removed. br <\n\tFile:A3 BIS fnc highlightControl.jpg>",
    "example": "nowiki[</nowiki>findDisplay 313 displayCtrl 1023] call BIS_fnc_highlightControl; // Will highlight the play button in <Eden Editor> nowiki[</nowiki>findDisplay 313] call BIS_fnc_highlightControl; // Will remove the previously created highlight effect",
    "params": "<control> <number>",
    "returns": "control"
  },
  "BIS_fnc_initAmmoBox": {
    "command": "BIS_fnc_initAmmoBox",
    "timestamp": "2021-01-23T09:57:54Z",
    "version": "1.56",
    "syntax": "-",
    "docSyntax": "-",
    "tags": "",
    "description": "FeatureimportantThis function is used internally by the <Eden Editor> to set the inventory of vehicles.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_initListNBoxSorting": {
    "command": "BIS_fnc_initListNBoxSorting",
    "timestamp": "2021-01-23T09:52:27Z",
    "version": "1.56",
    "syntax": "[<control>, <control>, columnIndexes, idc] call BIS_fnc_initListNBoxSorting",
    "docSyntax": "[ctrlFilter, ctrlContent, columnIndexes, idc] call BIS_fnc_initListNBoxSorting",
    "tags": "",
    "description": "thumb|right|A GUI using <BIS fnc initListNBoxSorting> Automatically creates buttons and sets them up so they can be used to sort a CT_LISTNBOX - BIS_fnc_initListNBoxSorting Example for a full example including a config.",
    "example": "[_lnbFilter, _lnbContent, [0,1,2,3]] call BIS_fnc_initListNBoxSorting;",
    "params": "<control> <control> <array> 200",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_sideIsEnemy": {
    "command": "BIS_fnc_sideIsEnemy",
    "timestamp": "2021-01-23T20:25:10Z",
    "version": "1.56",
    "syntax": "[<side>, <side>] call BIS_fnc_sideIsEnemy",
    "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsEnemy",
    "tags": "",
    "description": "Determines if side B is enemy to side A the way the game engine does it. The relationship table can be found \nhere: <Side relations>.",
    "example": "_isEnemy = [west, east] call BIS_fnc_sideIsEnemy; //Checks if EAST is enemy to WEST.",
    "params": "<side> <side>",
    "returns": "boolean"
  },
  "BIS_fnc_sideIsFriendly": {
    "command": "BIS_fnc_sideIsFriendly",
    "timestamp": "2021-01-23T20:19:25Z",
    "version": "1.56",
    "syntax": "[<side>, <side>] call BIS_fnc_sideIsFriendly",
    "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsFriendly",
    "tags": "",
    "description": "Determines if side B is friendly to side A the way the game engine does it. The relationship table can be found \nhere: <Side relations>.",
    "example": "_isFriendly = [west, east] call BIS_fnc_sideIsFriendly; //Checks if EAST is friendly to WEST.",
    "params": "<side> <side>",
    "returns": "boolean"
  },
  "checkVisibility": {
    "command": "checkVisibility",
    "timestamp": "2021-01-22T21:58:01Z",
    "version": "1.56",
    "syntax": "[<object>, <string>, <object>] checkVisibility [positionasl, positionasl]",
    "docSyntax": "[ignore, LOD, ignore2] checkVisibility [beg, end]",
    "tags": "",
    "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.",
    "example": "_cansee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];",
    "params": "<object> <string> <object> positionasl positionasl",
    "returns": "number"
  },
  "clear3DENAttribute": {
    "command": "clear3DENAttribute",
    "timestamp": "2021-01-22T22:07:19Z",
    "version": "1.56",
    "syntax": "<eden clear3DENAttribute <string>",
    "docSyntax": "entity clear3DENAttribute attribute",
    "tags": "",
    "description": "Clears the value of the given entity's attribute in Setting Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
    "example": "0 clear3DENAttribute \"name\";",
    "params": "<eden <string>",
    "returns": "boolean | true"
  },
  "clear3DENInventory": {
    "command": "clear3DENInventory",
    "timestamp": "2021-01-22T22:00:08Z",
    "version": "1.56",
    "syntax": "clear3DENInventory <array>",
    "docSyntax": "clear3DENInventory entities",
    "tags": "",
    "description": "Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default.",
    "example": "'clear3DENInventory' get3DENSelected \"Object\";",
    "params": "<array>",
    "returns": "nothing"
  },
  "clientOwner": {
    "command": "clientOwner",
    "timestamp": "2021-01-22T22:02:13Z",
    "version": "1.56",
    "syntax": "clientOwner",
    "docSyntax": "clientOwner",
    "tags": "",
    "description": "Returns the machine network ID of the client executing the command.",
    "example": "private _myNetworkId = clientOwner;",
    "params": "",
    "returns": "number"
  },
  "collect3DENHistory": {
    "command": "collect3DENHistory",
    "timestamp": "2021-01-22T21:58:52Z",
    "version": "1.56",
    "syntax": "collect3DENHistory unscheduled",
    "docSyntax": "collect3DENHistory code",
    "tags": "",
    "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single 'collect3DENHistory' block will group them together and the user will need to undo only once to revert the changes. FeatureInformativeIn order to only change the 2nd or 3rd parameter of the alternative syntax use nil as the preceding parameters. Some useful icons \nare: spoiler text=\"Show texture paths\" * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\addtolayer_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\changeattributes_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\changeseat_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\connectitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\create_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\createcomment_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\deleteitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\disconnectitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\makenewlayer_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\missionnew_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\moveitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\multipleoperations_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\pasteitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\removefromlayer_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\rotateitems_ca.paa\"}} * {{hl|\"\\a3\\3den\\data\\cfg3den\\history\\scaleitems_ca.paa\"}} </spoiler>",
    "example": "collect3DENHistory { _logic = create3DENEntity [\"Logic\", \"Logic\", position player]; add3DENConnection [\"Sync\", [_logic], player ]; }; // Creates a logic and connects it to player in one history step.",
    "params": "unscheduled <string> localized <string> unscheduled",
    "returns": "nothing"
  },
  "configNull": {
    "command": "configNull",
    "timestamp": "2021-01-22T22:02:32Z",
    "version": "1.56",
    "syntax": "configNull",
    "docSyntax": "configNull",
    "tags": "",
    "description": "A non-existing Config. Feature important Unlike other null values (objNull, grpNull, etc), configNull returns true when compared to itself.brbr * c= configNull nowiki==</nowiki> configNull; ccreturns true * isNull configNull; ccreturns true * configNull isEqualTo configNull; ccreturns true * c= configNull nowiki==</nowiki> configFile >> \"ANonExistentEntry\"; ccreturns true",
    "example": "_config = missionNamespace getVariable [\"myConfig\", configNull];",
    "params": "",
    "returns": "config"
  },
  "create3DENComposition": {
    "command": "create3DENComposition",
    "timestamp": "2021-01-22T21:58:34Z",
    "version": "1.56",
    "syntax": "create3DENCom<array> [<config>, position]",
    "docSyntax": "create3DENComposition [configPath, position]",
    "tags": "",
    "description": "Create new Composition. To create individual entities, use create3DENEntity.",
    "example": "myComposition = create3DENComposition [nowiki configFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\", screenToWorld [0.5,0.5] ];",
    "params": "<config> <array>",
    "returns": "eden entities"
  },
  "create3DENEntity": {
    "command": "create3DENEntity",
    "timestamp": "2021-01-22T21:59:05Z",
    "version": "1.56",
    "syntax": "create3DENEntity [<string>, <string>, <array>, <boolean>]",
    "docSyntax": "create3DENEntity [mode, class, position, isEmpty]",
    "tags": "",
    "description": "Create new composition (e.g., infantry squad), use Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity will not be editable.",
    "example": "dude1 = create3DENEntity [\"Object\", \"B_Soldier_F\", screenToWorld [0.5, 0.5]];",
    "params": "<string> <string> <array> <boolean> <group> <string> <string> <array> <boolean>",
    "returns": "<eden entity>"
  },
  "current3DENOperation": {
    "command": "current3DENOperation",
    "timestamp": "2021-01-22T22:51:20Z",
    "version": "1.56",
    "syntax": "current3DENOperation",
    "docSyntax": "current3DENOperation",
    "tags": "",
    "description": "Returns the currently performed editing operation in <Eden Editor>.",
    "example": "if (current3DENOperation == \"Move\") then {hint \"Moving\";};",
    "params": "",
    "returns": "string"
  },
  "cursorObject": {
    "command": "cursorObject",
    "timestamp": "2021-01-22T22:58:11Z",
    "version": "1.56",
    "syntax": "'cursorObject'",
    "docSyntax": "'cursorObject'",
    "tags": "",
    "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.",
    "example": "hint str [getModelInfo cursorObject, typeOf cursorObject];",
    "params": "",
    "returns": "object"
  },
  "delete3DENEntities": {
    "command": "delete3DENEntities",
    "timestamp": "2021-01-22T22:43:48Z",
    "version": "1.56",
    "syntax": "delete3DENEntities <array>",
    "docSyntax": "delete3DENEntities entities",
    "tags": "",
    "description": "Delete given entities in <Eden Editor>.",
    "example": "delete3DENEntities (all3DENEntities select 0); // Removes all objects",
    "params": "<array>",
    "returns": "nothing"
  },
  "do3DENAction": {
    "command": "do3DENAction",
    "timestamp": "2021-01-22T22:47:29Z",
    "version": "1.56",
    "syntax": "do3DENAction <string>",
    "docSyntax": "do3DENAction action",
    "tags": "",
    "description": "Performs given Eden Editor action.",
    "example": "do3DENAction \"MissionSave\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "edit3DENMissionAttributes": {
    "command": "edit3DENMissionAttributes",
    "timestamp": "2021-01-22T22:51:37Z",
    "version": "1.56",
    "syntax": "edit3DENMissionAttributes <string>",
    "docSyntax": "edit3DENMissionAttributes section",
    "tags": "",
    "description": "Open a window with scenario attribute in given section.",
    "example": "edit3DENMissionAttributes \"Multiplayer\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "exportJIPMessages": {
    "command": "exportJIPMessages",
    "timestamp": "2021-01-23T00:49:24Z",
    "version": "1.56",
    "syntax": "exportJIPMessages <string>",
    "docSyntax": "exportJIPMessages fileName",
    "tags": "",
    "description": "Export list of JIP to a file. \nbrSpecial: BattlEye's RCON variant of this command is #exportJIPqueue (see also Multiplayer_Server_Commands)",
    "example": "'exportJIPMessages' \"myFileNameWithoutExtension\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "get3DENActionState": {
    "command": "get3DENActionState",
    "timestamp": "2021-01-22T23:19:07Z",
    "version": "1.56",
    "syntax": "get3DENActionState <string>",
    "docSyntax": "get3DENActionState action",
    "tags": "",
    "description": "Returns state of given Eden Editor action.",
    "example": "if (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};",
    "params": "<string>",
    "returns": "number"
  },
  "get3DENAttribute": {
    "command": "get3DENAttribute",
    "timestamp": "2021-01-23T00:48:21Z",
    "version": "1.56",
    "syntax": "<eden get3DENAttribute <string>",
    "docSyntax": "entity get3DENAttribute attribute",
    "tags": "",
    "description": "Returns the value of the given entity's attribute in Setting Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
    "example": "// returns variable name of the object under cursor systemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\");",
    "params": "<eden <string>",
    "returns": "array | anything"
  },
  "get3DENCamera": {
    "command": "get3DENCamera",
    "timestamp": "2021-01-22T23:12:16Z",
    "version": "1.56",
    "syntax": "get3DENCamera",
    "docSyntax": "get3DENCamera",
    "tags": "",
    "description": "Returns the camera Object used by the <Eden Editor>.",
    "example": "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; get3DENCamera setVectorDirAndUp [ [ sin _y * cos _p,cos _y * cos _p,sin _p], [ [sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];",
    "params": "",
    "returns": "object"
  },
  "get3DENConnections": {
    "command": "get3DENConnections",
    "timestamp": "2021-01-22T23:10:35Z",
    "version": "1.56",
    "syntax": "get3DENConnections <eden",
    "docSyntax": "get3DENConnections entity",
    "tags": "",
    "description": "Returns all connections currently present on an entity.",
    "example": "get3DENConnections _trigger; // Can return <\"WaypointActivation\",[B Alpha 4-5,0>]",
    "params": "<eden",
    "returns": "array | string"
  },
  "get3DENEntity": {
    "command": "get3DENEntity",
    "timestamp": "2021-01-23T00:21:30Z",
    "version": "1.56",
    "syntax": "get3DENEntity <number>",
    "docSyntax": "get3DENEntity ID",
    "tags": "",
    "description": "Returns <Eden Entity> based on its <Eden ID>.",
    "example": "myEntity = get3DENEntity 1;",
    "params": "<number>",
    "returns": "number"
  },
  "get3DENEntityID": {
    "command": "get3DENEntityID",
    "timestamp": "2021-01-22T23:13:25Z",
    "version": "1.56",
    "syntax": "get3DENEntityID <eden",
    "docSyntax": "get3DENEntityID entity",
    "tags": "",
    "description": "Returns unique index of an <Eden Entity>. This number remains the same even after saving and loading the scenario. FeatureInformativeThis ID is only available in <Eden Editor>.",
    "example": "myID = get3DENEntityID player",
    "params": "<eden",
    "returns": "number"
  },
  "get3DENGrid": {
    "command": "get3DENGrid",
    "timestamp": "2021-01-22T23:31:57Z",
    "version": "1.56",
    "syntax": "get3DENGrid <string>",
    "docSyntax": "get3DENGrid type",
    "tags": "",
    "description": "Returns the grid increment for the given transformation type.",
    "example": "_currentIncrement = get3DENGrid \"t\";",
    "params": "<string>",
    "returns": "number"
  },
  "get3DENIconsVisible": {
    "command": "get3DENIconsVisible",
    "timestamp": "2021-01-23T00:29:42Z",
    "version": "1.56",
    "syntax": "get3DENIconsVisible",
    "docSyntax": "get3DENIconsVisible",
    "tags": "",
    "description": "Gets visibility state of <Eden Editor> icons.",
    "example": "if (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};",
    "params": "",
    "returns": "array | boolean | boolean"
  },
  "get3DENLayerEntities": {
    "command": "get3DENLayerEntities",
    "timestamp": "2021-05-19T14:23:59Z",
    "version": "1.56",
    "syntax": "get3DENLayerEntities <number>",
    "docSyntax": "get3DENLayerEntities layerID",
    "tags": "",
    "description": "Return all entities and sub-layer in <Eden Entity> layer. In order to get all layer entities during a scenario use getMissionLayerEntities.",
    "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer; _entities = get3DENLayerEntities _myLayer;",
    "params": "<number>",
    "returns": "eden entities"
  },
  "get3DENLinesVisible": {
    "command": "get3DENLinesVisible",
    "timestamp": "2021-01-22T23:52:56Z",
    "version": "1.56",
    "syntax": "get3DENLinesVisible",
    "docSyntax": "get3DENLinesVisible",
    "tags": "",
    "description": "Get visibility state of <Eden Editor> lines.",
    "example": "if (get3DENLinesVisible select 0) then { hint \"Lines are visible in the map.\"; };",
    "params": "",
    "returns": "array | boolean | boolean"
  },
  "get3DENMissionAttribute": {
    "command": "get3DENMissionAttribute",
    "timestamp": "2021-01-22T23:59:47Z",
    "version": "1.56",
    "syntax": "<string> get3DENMissionAttribute <string>",
    "docSyntax": "section get3DENMissionAttribute class",
    "tags": "",
    "description": "Return value of scenario attribute. For a list of all available mission attributes see Mission Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
    "example": "systemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");",
    "params": "<string> <string>",
    "returns": "anything"
  },
  "get3DENMouseOver": {
    "command": "get3DENMouseOver",
    "timestamp": "2021-01-23T00:32:03Z",
    "version": "1.56",
    "syntax": "get3DENMouseOver",
    "docSyntax": "get3DENMouseOver",
    "tags": "",
    "description": "Returns the <Eden Entity> the mouse is hovering over in <Eden Editor>.",
    "example": "systemChat str get3DENMouseOver; // returns e.g [\"Object\", B Alpha 1-1:1]",
    "params": "",
    "returns": "array | string"
  },
  "get3DENSelected": {
    "command": "get3DENSelected",
    "timestamp": "2021-01-22T23:54:26Z",
    "version": "1.56",
    "syntax": "get3DENSelected <string>",
    "docSyntax": "get3DENSelected type",
    "tags": "",
    "description": "Returns an array of all selected Eden Editor Entities of the given type.br If a wrong type is provided, hl[[], [], [], [], [], []] is returned and an error message is shown.",
    "example": "get3DENSelected \"\"; codecomment /* [ [B Alpha 2-1:1], // objects [B Alpha 2-1], // groups [164494: <no shape>], // triggers [<No center> Charlie 1-2:4], // logic [nowiki[B Alpha 2-1,0]], // waypoints [\"Hotel_Whiskey\"] // markers ] nowiki*/",
    "params": "<string>",
    "returns": "array"
  },
  "getClientStateNumber": {
    "command": "getClientStateNumber",
    "timestamp": "2021-01-23T00:31:54Z",
    "version": "1.56",
    "syntax": "getClientStateNumber",
    "docSyntax": "getClientStateNumber",
    "tags": "",
    "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are \npossible: {! class=\"wikitable\" ! getClientStateNumber ! getClientState ! Description !- ! 0 !! \"NONE\" !! No client (or singleplayer) !- ! 1 !! \"CREATED\" !! Client is created !- ! 2 !! \"CONNECTED\" !! Client is connected to server, message formats are registered !- ! 3 !! \"LOGGED IN\" !! Identity is created !- ! 4 !! \"MISSION SELECTED\" !!Mission is selected !- ! 5 !! \"MISSION ASKED\" !! Server was asked to send / not send mission !- ! 6 !! \"ROLE ASSIGNED\" !! Role was assigned (and confirmed) !- ! 7 !! \"MISSION RECEIVED\" !! Mission received !- ! 8 !! \"GAME LOADED\" !! Island loaded, vehicles received !- ! 9 !! \"BRIEFING SHOWN\" !! Briefing was displayed !- ! 10 !! \"BRIEFING READ\" !! Ready to play mission !- ! 11 !! \"GAME FINISHED\" !! Game was finished !- ! 12 !! \"DEBRIEFING READ\" !! Debriefing read, ready to continue with next mission !}",
    "example": "_state = getClientStateNumber;",
    "params": "",
    "returns": "number"
  },
  "getMissionConfig": {
    "command": "getMissionConfig",
    "timestamp": "2021-01-22T23:07:32Z",
    "version": "1.56",
    "syntax": "getMissionConfig <string>",
    "docSyntax": "getMissionConfig attribute",
    "tags": "",
    "description": "Returns Eden Editor scenario attribute So if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from ''Description.ext'' using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
    "example": "_header = getMissionConfig \"Header\"</code> Returns scenario header config. Replaces the previous approach which would scan only the external ''Description.ext'' file, but ignore the value set in the Eden Editor: code_header = missionConfigFile >> \"Header\"; // Old approach",
    "params": "<string>",
    "returns": "config"
  },
  "getMissionConfigValue": {
    "command": "getMissionConfigValue",
    "timestamp": "2021-01-22T23:55:22Z",
    "version": "1.56",
    "syntax": "getMissionConfigValue <string>",
    "docSyntax": "getMissionConfigValue attribute",
    "tags": "",
    "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is Eden Editor scenario attribute So if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from ''Description.ext'' using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.brbr Feature important This command cannot force return type, it will return the value of the type given in config. Use isEqualType to additionally reaffirm the correct type if necessary to account for human error.",
    "example": "_respawnDelay = getMissionConfigValue [\"respawnDelay\",0]</code> Returns respawn delay value. Replaces the previous approach which would scan only the external ''Description.ext file'', but ignore the value set in the Eden Editor: code_respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach",
    "params": "<string> <string> <anything>",
    "returns": "nil when the attribute is undefined."
  },
  "getMissionLayerEntities": {
    "command": "getMissionLayerEntities",
    "timestamp": "2021-01-23T00:31:18Z",
    "version": "1.56",
    "syntax": "getMissionLayerEntities can",
    "docSyntax": "getMissionLayerEntities layerName",
    "tags": "[SE]",
    "description": "Returns all entities within the specific Eden Editor layer and its sub-layers. To be used when the scenario is running, not in the editor workspace. Useful to disable/enable whole parts of the scenario if layers are used during mission design. FeatureinformativeDefault layers are not returned.",
    "example": "<private >_base = getMissionLayerEntities \"Base\";",
    "params": "can",
    "returns": "array"
  },
  "getMissionLayers": {
    "command": "getMissionLayers",
    "timestamp": "2021-01-23T00:58:07Z",
    "version": "1.56",
    "syntax": "getMissionLayers",
    "docSyntax": "getMissionLayers",
    "tags": "",
    "description": "Returns a list of all layers created in <Eden Editor>. Designed to be used during a scenario. Default layers (BLUFOR, OPFOR...) are not returned.",
    "example": "getMissionLayers; cc[\"Electronics\",\"Camp Endurance\",\"UGV Workstation\",\"Comments\",\"Extraction Air\",\"Comments\",\"Extraction Ground\",\"Extraction\",\"test\"]",
    "params": "",
    "returns": "array"
  },
  "getPlayerScores": {
    "command": "getPlayerScores",
    "timestamp": "2021-01-22T23:09:56Z",
    "version": "1.56",
    "syntax": "getPlayerScores <object>",
    "docSyntax": "getPlayerScores unitName",
    "tags": "",
    "description": "* In \nMP: Returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). * In \nSP: Empty array []",
    "example": "getPlayerScores BIS_player1;",
    "params": "<object>",
    "returns": "array"
  },
  "getRelDir": {
    "command": "getRelDir",
    "timestamp": "2021-01-22T23:50:36Z",
    "version": "1.56",
    "syntax": "<object> getRelDir position2d",
    "docSyntax": "object getRelDir position",
    "tags": "[AG]",
    "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo. Taking the current direction of the object into account.",
    "example": "_reldir = player 'getRelDir' tank;",
    "params": "<object> position2d",
    "returns": "number"
  },
  "getRelPos": {
    "command": "getRelPos",
    "timestamp": "2021-01-23T00:08:17Z",
    "version": "1.56",
    "syntax": "<object> getRelPos [<number>, <number>]",
    "docSyntax": "object getRelPos [distance, direction]",
    "tags": "[AG]",
    "description": "Returns position that is given distance and relative direction away from original object.",
    "example": "_relpos = player getRelPos [100, 90];",
    "params": "<object> <number> <number>",
    "returns": "positionagl"
  },
  "is3DEN": {
    "command": "is3DEN",
    "timestamp": "2021-01-23T09:08:24Z",
    "version": "1.56",
    "syntax": "is3DEN",
    "docSyntax": "is3DEN",
    "tags": "",
    "description": "Returns true if the <Eden Editor> is currently being used.",
    "example": "if is3DEN then {systemChat \"Welcome to Eden Editor!\"};",
    "params": "",
    "returns": "boolean | true | false"
  },
  "is3DENMultiplayer": {
    "command": "is3DENMultiplayer",
    "timestamp": "2021-01-23T09:07:28Z",
    "version": "1.56",
    "syntax": "is3DENMultiplayer",
    "docSyntax": "is3DENMultiplayer",
    "tags": "",
    "description": "Returns true if the <Eden Editor> is in multiplayer mode.",
    "example": "if is3DENMultiplayer then {systemChat \"You are hosting a test server!\"};",
    "params": "",
    "returns": "boolean | true | true | true"
  },
  "isFilePatchingEnabled": {
    "command": "isFilePatchingEnabled",
    "timestamp": "2021-01-23T09:15:48Z",
    "version": "1.56",
    "syntax": "isFilePatchingEnabled",
    "docSyntax": "isFilePatchingEnabled",
    "tags": "",
    "description": "Returns true if file patching is enabled otherwise false",
    "example": "_state = isFilePatchingEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "leaderboardDeInit": {
    "command": "leaderboardDeInit",
    "timestamp": "2021-01-23T10:05:53Z",
    "version": "1.56",
    "syntax": "leaderboardDeInit <string>",
    "docSyntax": "leaderboardDeInit boardName",
    "tags": "",
    "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.",
    "example": "leaderboardDeInit \"TT01\"",
    "params": "<string>",
    "returns": "boolean"
  },
  "leaderboardGetRows": {
    "command": "leaderboardGetRows",
    "timestamp": "2021-01-23T10:09:15Z",
    "version": "1.56",
    "syntax": "leaderboardGetRows <string>",
    "docSyntax": "leaderboardGetRows boardName",
    "tags": "",
    "description": "Returns an array with values for the given leaderboard, the array is in \nformat: nowiki[[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]</nowiki>; This can be called after the one of the row request function has been called and successfully finished!",
    "example": "leaderboardGetRows \"TT01\"",
    "params": "<string>",
    "returns": "array"
  },
  "leaderboardInit": {
    "command": "leaderboardInit",
    "timestamp": "2021-01-23T10:02:10Z",
    "version": "1.56",
    "syntax": "leaderboardInit <string>",
    "docSyntax": "leaderboardInit boardName",
    "tags": "",
    "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.",
    "example": "leaderboardInit \"TT01\"",
    "params": "<string>",
    "returns": "boolean"
  },
  "leaderboardRequestRowsGlobal": {
    "command": "leaderboardRequestRowsGlobal",
    "timestamp": "2021-01-23T09:59:35Z",
    "version": "1.56",
    "syntax": "<string>RequestRowsGlobal [leaderboard, <number>, <number>]",
    "docSyntax": "leaderboardRequestRowsGlobal [leaderboard, offset, rows]",
    "tags": "",
    "description": "Requests given leaderboard to download values from global table.",
    "example": "_isGettingValues = leaderboardRequestRowsGlobal [\"TT01\", 0, 10];",
    "params": "<string> <number> <number>",
    "returns": "boolean | true"
  },
  "leaderboardRequestRowsGlobalAroundUser": {
    "command": "leaderboardRequestRowsGlobalAroundUser",
    "timestamp": "2021-01-23T10:03:40Z",
    "version": "1.56",
    "syntax": "<string>RequestRowsGlobalAroundUser [leaderboard, <number>, <number>]",
    "docSyntax": "leaderboardRequestRowsGlobalAroundUser [leaderboard, offset, rows]",
    "tags": "",
    "description": "Requests given leaderboard to download values around the user position in the table.",
    "example": "_isGettingValues = leaderboardRequestRowsGlobalAroundUser [\"TT01\", -5, 10];",
    "params": "<string> <number> <number>",
    "returns": "boolean | true"
  },
  "lockIdentity": {
    "command": "lockIdentity",
    "timestamp": "2021-01-23T10:01:23Z",
    "version": "1.56",
    "syntax": "lockIdentity <object>",
    "docSyntax": "lockIdentity unit",
    "tags": "",
    "description": "Locks the identity of a person. This will disable default identity.",
    "example": "_success = 'lockIdentity' player;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "logNetwork": {
    "command": "logNetwork",
    "timestamp": "2021-01-23T09:55:48Z",
    "version": "1.56",
    "syntax": "logNetwork <string>",
    "docSyntax": "logNetwork logFile",
    "tags": "",
    "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the arma3 root folder. FeatureimportantlogNetwork can potentially create a large log file.",
    "example": "_handle = logNetwork [\"myLog.txt\", [\"\"]];",
    "params": "<string> strings",
    "returns": "number"
  },
  "logNetworkTerminate": {
    "command": "logNetworkTerminate",
    "timestamp": "2021-01-23T10:12:10Z",
    "version": "1.56",
    "syntax": "logNetworkTerminate <number>",
    "docSyntax": "logNetworkTerminate handle",
    "tags": "",
    "description": "Terminates a network log file started with logNetwork with the given handle",
    "example": "logNetworkTerminate _someHandle;",
    "params": "<number>",
    "returns": "nothing"
  },
  "menuAction": {
    "command": "menuAction",
    "timestamp": "2021-01-23T10:08:53Z",
    "version": "1.56",
    "syntax": "menuAction [<number>, <array>]",
    "docSyntax": "menuAction [idc, path]",
    "tags": "",
    "description": "Returns action stored in item on given path in CT_MENU_STRIP control.",
    "example": "menuAction [120, [1, 0]];",
    "params": "<number> <array> <number> <array>",
    "returns": "string"
  },
  "menuAdd": {
    "command": "menuAdd",
    "timestamp": "2021-01-23T10:07:34Z",
    "version": "1.56",
    "syntax": "menuAdd [<number>, <array>, <string>]",
    "docSyntax": "menuAdd [idc, path, text]",
    "tags": "",
    "description": "Adds new submenu entry into item on given path.",
    "example": "findDisplay 313 displayCtrl 120 menuAdd [nowiki[], \"Custom Tools\"]; // Add new entry at the top level to the menu strip in <Eden Editor>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "number"
  },
  "menuChecked": {
    "command": "menuChecked",
    "timestamp": "2021-01-23T10:06:33Z",
    "version": "1.56",
    "syntax": "menuChecked [<number>, <array>]",
    "docSyntax": "menuChecked [idc, path]",
    "tags": "",
    "description": "Returns if item on given path is checked or not.",
    "example": "Code_isChecked = findDisplay 313 displayCtrl 120 menuChecked [0,1];</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "boolean"
  },
  "menuClear": {
    "command": "menuClear",
    "timestamp": "2021-01-23T10:06:19Z",
    "version": "1.56",
    "syntax": "menuClear <number>",
    "docSyntax": "menuClear idc",
    "tags": "",
    "description": "Removes all entries from given menu strip.",
    "example": "menuClear (findDisplay 313 displayCtrl 120); // Removes all entries from <Eden Editor>. Restart the editor to reset the menu.",
    "params": "<number> <control>",
    "returns": "nothing"
  },
  "menuCollapse": {
    "command": "menuCollapse",
    "timestamp": "2021-01-23T09:56:30Z",
    "version": "1.56",
    "syntax": "menuCollapse [<number>, <array>]",
    "docSyntax": "menuCollapse [idc, path]",
    "tags": "",
    "description": "Collapses item on given path and all its children.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuCollapse [0];</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "nothing"
  },
  "menuData": {
    "command": "menuData",
    "timestamp": "2021-01-23T10:04:57Z",
    "version": "1.56",
    "syntax": "menuData [<number>, <array>]",
    "docSyntax": "menuData [idc, path]",
    "tags": "",
    "description": "Returns data stored in menu entry on given path.",
    "example": "// Create an entry which will return its data once clicked private _ctrlMenuStrip = findDisplay 313 displayCtrl 120; private _indexMain = _ctrlMenuStrip menuAdd [nowiki[], \"Custom Tools\"]; private _indexData = _ctrlMenuStrip menuAdd [nowiki[_indexMain],\"This entry will print its data to system chat when clicked\"]; _ctrlMenuStrip menuSetData [nowiki[_indexMain,_indexData], \"nowiki[</nowiki>objNull,'Some String',true]\"]; _ctrlMenuStrip menuSetAction [nowiki[_indexMain,_indexData], \"systemChat (findDisplay 313 displayCtrl 120 menuData (menuHover (findDisplay 313 displayCtrl 120)));\"]; ",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "menuDelete": {
    "command": "menuDelete",
    "timestamp": "2021-01-23T10:12:05Z",
    "version": "1.56",
    "syntax": "menuDelete [<number>,<array>]",
    "docSyntax": "menuDelete [idc,path]",
    "tags": "",
    "description": "Deletes menu entry on given path.",
    "example": "(findDisplay 313 displayCtrl 120) menuDelete [1]; // Removes second entry from <Eden Editor> menu strip. Restart <Eden Editor> to reset the menu.",
    "params": "<number> <array> <control> <array>",
    "returns": "nothing"
  },
  "menuEnable": {
    "command": "menuEnable",
    "timestamp": "2021-01-23T10:05:10Z",
    "version": "1.56",
    "syntax": "menuEnable [<number>, <array>, enable]",
    "docSyntax": "menuEnable [idc, path, enable]",
    "tags": "",
    "description": "Enables or disables menu entry on given path. Feature Important The old alternative syntax control menuEnable path is still in use and left for backward compatibility.",
    "example": "findDisplay 313 displayCtrl 120 menuEnable [0];",
    "params": "<number> <array> <boolean> <control> <array> <boolean>",
    "returns": "nothing"
  },
  "menuEnabled": {
    "command": "menuEnabled",
    "timestamp": "2021-01-23T09:57:29Z",
    "version": "1.56",
    "syntax": "menuEnabled [<number>, <array>]",
    "docSyntax": "menuEnabled [idc, path]",
    "tags": "",
    "description": "Returns if menu entry on given path is enabled or not.",
    "example": "_isEnabled = findDisplay 313 displayCtrl 120 menuEnabled [0];",
    "params": "<number> <array> <control> <array>",
    "returns": "boolean"
  },
  "menuExpand": {
    "command": "menuExpand",
    "timestamp": "2021-01-23T10:06:50Z",
    "version": "1.56",
    "syntax": "menuExpand [<number>, <array>]",
    "docSyntax": "menuExpand [idc, path]",
    "tags": "",
    "description": "Expands given menu entry on given path and all its parents so entry is visible.",
    "example": "findDisplay 313 displayCtrl 120 menuExpand [0, 1];",
    "params": "<number> <array> <control> <array>",
    "returns": "nothing"
  },
  "menuHover": {
    "command": "menuHover",
    "timestamp": "2021-01-23T10:12:10Z",
    "version": "1.56",
    "syntax": "menuHover <number>",
    "docSyntax": "menuHover idc",
    "tags": "",
    "description": "Returns path to menu entry mouse is currently hovering over.",
    "example": "Code_path = menuHover (findDisplay 313 displayCtrl 120);</code>",
    "params": "<number> <control>",
    "returns": "array"
  },
  "menuPicture": {
    "command": "menuPicture",
    "timestamp": "2021-01-23T10:03:25Z",
    "version": "1.56",
    "syntax": "menuPicture [<number>, <array>]",
    "docSyntax": "menuPicture [idc, path]",
    "tags": "",
    "description": "Returns picture set into item on given path.",
    "example": "Code_picturePath = (findDisplay 313 displayCtrl 120) menuPicture [0, 1];</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "menuSetAction": {
    "command": "menuSetAction",
    "timestamp": "2021-01-23T09:59:09Z",
    "version": "1.56",
    "syntax": "menuSetAction [<number>, <array>, <string>]",
    "docSyntax": "menuSetAction [idc, path, action]",
    "tags": "",
    "description": "Sets new action into menu entry on given path.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSetAction [nowiki[0, 1], \"systemChat 'Hello World!'\"];</code>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "menuSetCheck": {
    "command": "menuSetCheck",
    "timestamp": "2021-01-23T10:06:59Z",
    "version": "1.56",
    "syntax": "menuSetCheck [<number>, <array>, <boolean>]",
    "docSyntax": "menuSetCheck [idc, path, checked]",
    "tags": "",
    "description": "Sets item on given path to be checked or not. By default menu strip entries are not checkable. Once this command was executed, an entry can become checked and unchecked. If an entry is checked is indicated by a tick to the left of the entry's text. Setting an entry to be checkable will overwrite set picture with menuSetPicture.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSetCheck [nowiki[0,1], true];</code>",
    "params": "<number> <array> <boolean> <control> <array> <boolean>",
    "returns": "nothing"
  },
  "menuSetData": {
    "command": "menuSetData",
    "timestamp": "2021-01-23T10:10:36Z",
    "version": "1.56",
    "syntax": "menuSetData [<number>, <array>, <string>]",
    "docSyntax": "menuSetData [idc, path, data]",
    "tags": "",
    "description": "Sets data into menu entry on given path.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSetData [nowiki[0, 1], \"nowiki[</nowiki>true, player, 'Hello World!', 1337]\"];</code>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "menuSetPicture": {
    "command": "menuSetPicture",
    "timestamp": "2021-01-23T10:04:48Z",
    "version": "1.56",
    "syntax": "menuSetPicture [<number>, <array>, <string>]",
    "docSyntax": "menuSetPicture [idc, path, picture]",
    "tags": "",
    "description": "Sets new picture into menu entry on given path. The picture will be replaced by a tick if the entry was set to checkable with menuSetCheck.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSetPicture [nowiki[0, 1], \"\\a3\\modules_f\\data\\iconunlock_ca.paa\"];</code>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "menuSetValue": {
    "command": "menuSetValue",
    "timestamp": "2021-01-23T10:07:39Z",
    "version": "1.56",
    "syntax": "menuSetValue [<number>, <array>, <number>]",
    "docSyntax": "menuSetValue [idc, path, value]",
    "tags": "",
    "description": "Sets new value into menu entry on given path.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSetValue [nowiki[0, 1], 1337];</code>",
    "params": "<number> <array> <number> <control> <array> <number>",
    "returns": "nothing"
  },
  "menuShortcut": {
    "command": "menuShortcut",
    "timestamp": "2021-01-23T10:05:54Z",
    "version": "1.56",
    "syntax": "menuShortcut [<number>, <array>]",
    "docSyntax": "menuShortcut [idc, path]",
    "tags": "",
    "description": "Returns shortcut related to menu entry on given path. Returns the shortcut in form of a bitflag. To get the shortcut text use menuShortcutText command.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuShortcut [0, 1];</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "number"
  },
  "menuShortcutText": {
    "command": "menuShortcutText",
    "timestamp": "2021-01-23T10:00:25Z",
    "version": "1.56",
    "syntax": "menuShortcutText [<number>, <array>]",
    "docSyntax": "menuShortcutText [idc, path]",
    "tags": "",
    "description": "Returns a string containing shortcut text for menu item on the given path. FeatureWarningThis command is currently broken in Arma 3 2.00. It only returns shortcuts which do not use a modifier key (CTRL, ALT and SHIFT).",
    "example": "CodefindDisplay 313 displayCtrl 120 menuShortcutText [1, 8]; // Returns \"#\"</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "menuSize": {
    "command": "menuSize",
    "timestamp": "2021-01-23T10:09:24Z",
    "version": "1.56",
    "syntax": "menuSize [<number>, <array>]",
    "docSyntax": "menuSize [idc, path]",
    "tags": "",
    "description": "Returns how many sub entries is in item on given path.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSize [];</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "number"
  },
  "menuSort": {
    "command": "menuSort",
    "timestamp": "2021-01-23T10:03:52Z",
    "version": "1.56",
    "syntax": "menuSort [<number>, <array>, <boolean>]",
    "docSyntax": "menuSort [idc, path, AtoZ]",
    "tags": "",
    "description": "Sorts subentries of item on given path by their text.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuSort [nowiki[],true];</code>",
    "params": "<number> <array> <boolean> <control> <array> <boolean>",
    "returns": "nothing"
  },
  "menuText": {
    "command": "menuText",
    "timestamp": "2021-01-23T10:11:03Z",
    "version": "1.56",
    "syntax": "menuText [<number>, <array>]",
    "docSyntax": "menuText [idc, path]",
    "tags": "",
    "description": "Returns current text set in menu entry on given path.",
    "example": "_ctrlMenuStrip menuText [1];",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "menuURL": {
    "command": "menuURL",
    "timestamp": "2021-01-23T10:09:25Z",
    "version": "1.56",
    "syntax": "menuURL [<number>, <array>]",
    "docSyntax": "menuURL [idc, path]",
    "tags": "",
    "description": "Returns current URL set in entry on given path.",
    "example": "CodefindDisplay 313 displayCtrl 120 menuURL [7, 0]; // Returns \"https://community.bistudio.com/wiki/Eden_Editor\"</code>",
    "params": "<number> <array> <control> <array>",
    "returns": "string"
  },
  "menuValue": {
    "command": "menuValue",
    "timestamp": "2021-01-23T09:58:51Z",
    "version": "1.56",
    "syntax": "menuValue [<number>, <array>]",
    "docSyntax": "menuValue [idc, path]",
    "tags": "",
    "description": "Returns current value set in menu entry on given path.",
    "example": "",
    "params": "<number> <array>",
    "returns": "number"
  },
  "missionVersion": {
    "command": "missionVersion",
    "timestamp": "2021-01-23T10:09:13Z",
    "version": "1.56",
    "syntax": "missionVersion",
    "docSyntax": "missionVersion",
    "tags": "",
    "description": "Returns the version of the current mission. * Mission from the <2D Editor>: 12 * Mission from the <Eden Editor>: 15 and higher (for example current version for <Eden Editor> mission in Arma 3 v1.57 is 51)",
    "example": "_version = missionVersion;",
    "params": "",
    "returns": "number"
  },
  "move3DENCamera": {
    "command": "move3DENCamera",
    "timestamp": "2021-01-23T10:10:47Z",
    "version": "1.56",
    "syntax": "move3DENCamera [<position>, <boolean>]",
    "docSyntax": "move3DENCamera [position, useOffset]",
    "tags": "",
    "description": "Moves the Eden Editor camera.",
    "example": "move3DENCamera [getPos player, true];",
    "params": "<position> <boolean>",
    "returns": "nothing"
  },
  "ppEffectEnabled": {
    "command": "ppEffectEnabled",
    "timestamp": "2021-01-23T10:23:15Z",
    "version": "1.56",
    "syntax": "ppEffectEnabled <number>",
    "docSyntax": "ppEffectEnabled effect",
    "tags": "",
    "description": "Checks whether given post process effect is enabled",
    "example": "_enabled = ppEffectEnabled _hndl;",
    "params": "<number> <string>",
    "returns": "boolean"
  },
  "pushBackUnique": {
    "command": "pushBackUnique",
    "timestamp": "2021-01-23T10:33:37Z",
    "version": "1.56",
    "syntax": "<array> pushBackUnique <anything>",
    "docSyntax": "array pushBackUnique element",
    "tags": "",
    "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array. FeatureInformativeAdding string elements is 'case sensitive'.",
    "example": "_arr = [1,2,3]; _index = _arr pushBackUnique 3; hint str [_index, _arr]; cc[-1,[1,2,3]]",
    "params": "<array> <anything>",
    "returns": "number"
  },
  "remove3DENConnection": {
    "command": "remove3DENConnection",
    "timestamp": "2021-01-23T10:28:46Z",
    "version": "1.56",
    "syntax": "remove3DENConnection [<string>, eden, <eden]",
    "docSyntax": "remove3DENConnection [type, from, to]",
    "tags": "",
    "description": "Removes connection between entities.",
    "example": "remove3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];ccRemove random start on marker \"marker_0\" from all selected objects.",
    "params": "<string> eden <eden",
    "returns": "boolean | true"
  },
  "remove3DENEventHandler": {
    "command": "remove3DENEventHandler",
    "timestamp": "2021-01-23T10:40:27Z",
    "version": "1.56",
    "syntax": "remove3DENEventHandler [<string>,<number>]",
    "docSyntax": "remove3DENEventHandler [type,id]",
    "tags": "",
    "description": "Removes Eden Editor event handler of given type and ID. brbr See the list of all Eden Editor Event Handlers.",
    "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}]; remove3DENEventHandler [\"onUndo\",eh];",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "remove3DENLayer": {
    "command": "remove3DENLayer",
    "timestamp": "2021-01-23T10:37:27Z",
    "version": "1.56",
    "syntax": "remove3DENLayer layerID",
    "docSyntax": "remove3DENLayer layerID",
    "tags": "",
    "description": "Remove <Eden Editor> editing layer.",
    "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; remove3DENLayer _myLayer ;",
    "params": "<number>",
    "returns": "boolean | true"
  },
  "removeAll3DENEventHandlers": {
    "command": "removeAll3DENEventHandlers",
    "timestamp": "2021-01-23T10:36:53Z",
    "version": "1.56",
    "syntax": "removeAll3DENEventHandlers <string>",
    "docSyntax": "removeAll3DENEventHandlers type",
    "tags": "",
    "description": "Removes all Eden Editor Event Handlers.",
    "example": "removeAll3DENEventHandlers \"onUndo\";",
    "params": "<string>",
    "returns": "nothing"
  },
  "save3DENInventory": {
    "command": "save3DENInventory",
    "timestamp": "2021-01-23T10:34:04Z",
    "version": "1.56",
    "syntax": "save3DENInventory <array>",
    "docSyntax": "save3DENInventory entities",
    "tags": "",
    "description": "Saves the current state of entities' inventory to the <Mission.sqm>.",
    "example": "save3DENInventory [_soldier1, _solider2];",
    "params": "<array>",
    "returns": "nothing"
  },
  "selectRandom": {
    "command": "selectRandom",
    "timestamp": "2021-01-23T20:33:25Z",
    "version": "1.56",
    "syntax": "selectRandom <array>",
    "docSyntax": "selectRandom array",
    "tags": "",
    "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom",
    "example": "_randomElement = selectRandom [1,2,3,4,5];",
    "params": "<array>",
    "returns": "anything | nothing"
  },
  "set3DENAttribute": {
    "command": "set3DENAttribute",
    "timestamp": "2021-01-23T20:18:34Z",
    "version": "1.56",
    "syntax": "<eden set3DENAttribute [<string>, <anything>]",
    "docSyntax": "entity set3DENAttribute [class, value]",
    "tags": "",
    "description": "Sets one of entity attributes. For the list of all attributes with their properties see Setting Attributes. FeatureimportantAttributes are available only within the <Eden Editor> workspace. You cannot access them in scenario preview or exported scenario!",
    "example": "player set3DENAttribute [\"allowDamage\", false]; // Mark player as invincible",
    "params": "<eden <string> <anything>",
    "returns": "boolean | true"
  },
  "set3DENAttributes": {
    "command": "set3DENAttributes",
    "timestamp": "2021-01-23T20:32:02Z",
    "version": "1.56",
    "syntax": "set3DENAttributes [nowiki[entities1, class1, value1], [entities2, class2, value2], ...]",
    "docSyntax": "set3DENAttributes [nowiki[entities1, class1, value1], [entities2, class2, value2], ...]",
    "tags": "",
    "description": "Set entity attributes. An attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace and cannot be accessed in scenario preview or exported scenario!",
    "example": "// Set all selected objects as playable set3DENAttributes nowiki<</nowiki>[[get3DENSelected> \"Object\",\"ControlMP\",true]];",
    "params": "<array> <string> <anything>",
    "returns": "boolean | true"
  },
  "set3DENGrid": {
    "command": "set3DENGrid",
    "timestamp": "2021-01-23T20:28:21Z",
    "version": "1.56",
    "syntax": "set3DENGrid [<string>, <number>]",
    "docSyntax": "set3DENGrid [type, value]",
    "tags": "",
    "description": "Sets the grid increment for the given transformation type.",
    "example": "set3DENGrid [\"t\",100]; // 100m movement increment",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "set3DENIconsVisible": {
    "command": "set3DENIconsVisible",
    "timestamp": "2021-01-23T20:35:21Z",
    "version": "1.56",
    "syntax": "set3DENIconsVisible [showMap, <boolean>]",
    "docSyntax": "set3DENIconsVisible [showMap, showScene]",
    "tags": "",
    "description": "Toggle visibility of <Eden Editor> icons.",
    "example": "sqfset3DENIconsVisible [false, false]; // Hide all icons</sqf>",
    "params": "<boolean> <boolean>",
    "returns": "nothing"
  },
  "set3DENLayer": {
    "command": "set3DENLayer",
    "timestamp": "2021-01-23T20:19:15Z",
    "version": "1.56",
    "syntax": "<eden set3DENLayer <number>",
    "docSyntax": "entity set3DENLayer layerID",
    "tags": "",
    "description": "Set layer for <Eden Entity>.",
    "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer;",
    "params": "<eden <number>",
    "returns": "boolean | true"
  },
  "set3DENLinesVisible": {
    "command": "set3DENLinesVisible",
    "timestamp": "2021-01-23T20:24:51Z",
    "version": "1.56",
    "syntax": "set3DENLinesVisible [showMap, <boolean>]",
    "docSyntax": "set3DENLinesVisible [showMap, showScene]",
    "tags": "",
    "description": "Toggle visibility of <Eden Editor> lines.",
    "example": "set3DENLinesVisible [false, false];ccHide all lines",
    "params": "<boolean> <boolean>",
    "returns": "nothing"
  },
  "set3DENMissionAttribute": {
    "command": "set3DENMissionAttribute",
    "timestamp": "2021-01-23T20:22:40Z",
    "version": "1.56",
    "syntax": "<string> set3DENMissionAttribute [<string>, <anything>]",
    "docSyntax": "section set3DENMissionAttribute [class, value]",
    "tags": "",
    "description": "Set scenario attribute. An attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace. They cannot be accessed in scenario preview or exported scenario!",
    "example": "\"Multiplayer\" set3DENMissionAttribute [\"respawn\", 3]; // Set respawn type to 3",
    "params": "<string> <string> <anything>",
    "returns": "boolean | true"
  },
  "set3DENMissionAttributes": {
    "command": "set3DENMissionAttributes",
    "timestamp": "2021-01-23T20:21:09Z",
    "version": "1.56",
    "syntax": "set3DENMissionAttributes [nowiki[section1, class1, value1], ...]",
    "docSyntax": "set3DENMissionAttributes [nowiki[section1, class1, value1], ...]",
    "tags": "",
    "description": "Set scenario attributes. An attribute is identified by its property (data when it is an engine-driven attribute) value in config. For the list of all attributes with their properties, see Mission Attributes. FeatureimportantAttributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
    "example": "// set respawn type to 3 and respawn delay to 10 seconds set3DENMissionAttributes nowiki[[</nowiki>\"Multiplayer\", \"respawn\", 3], [\"Multiplayer\", \"respawnDelay\", 10]];",
    "params": "<string> <string> <anything>",
    "returns": "boolean | true"
  },
  "set3DENModelsVisible": {
    "command": "set3DENModelsVisible",
    "timestamp": "2021-01-23T20:20:04Z",
    "version": "1.56",
    "syntax": "set3DENModelsVisible [<boolean>, <boolean>]",
    "docSyntax": "set3DENModelsVisible [map, scene]",
    "tags": "",
    "description": "Enables or disables trigger area visibility.",
    "example": "set3DENModelsVisible [true, true];",
    "params": "<boolean> <boolean>",
    "returns": "nothing"
  },
  "set3DENObjectType": {
    "command": "set3DENObjectType",
    "timestamp": "2021-01-23T20:23:17Z",
    "version": "1.56",
    "syntax": "<array> set3DENObjectType <string>",
    "docSyntax": "objects set3DENObjectType classname",
    "tags": "",
    "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType.",
    "example": "[get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\"; // turns object under cursor into a blufor crewman",
    "params": "<array> <string>",
    "returns": "nothing"
  },
  "set3DENSelected": {
    "command": "set3DENSelected",
    "timestamp": "2021-01-23T20:33:10Z",
    "version": "1.56",
    "syntax": "set3DENSelected <array>",
    "docSyntax": "set3DENSelected entities",
    "tags": "",
    "description": "Changes selection in <Eden Editor> to what is inside entities array. FeatureWarningThis command will trigger the 3DEN event handler '\"OnSelectionChange\"'. Do not use it inside this event handler!",
    "example": "set3DENSelected [0,5,3,6,7,12];",
    "params": "<array>",
    "returns": "nothing"
  },
  "tvSetText": {
    "command": "tvSetText",
    "timestamp": "2021-01-24T10:42:57Z",
    "version": "1.56",
    "syntax": "tvSetText [<number>, <array>, <string>]",
    "docSyntax": "tvSetText [idc, path, text]",
    "tags": "",
    "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
    "example": "tvSetText [101, [0], \"Test data\"];",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "allCutLayers": {
    "command": "allCutLayers",
    "timestamp": "2021-01-22T21:30:46Z",
    "version": "1.58",
    "syntax": "allCutLayers",
    "docSyntax": "allCutLayers",
    "tags": "",
    "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like \nso: bric_layerNum nowiki=</nowiki> \"TAG_myLayerName\" cutFadeOut 0;.",
    "example": "private _allLayers = allCutLayers;",
    "params": "",
    "returns": "array | strings"
  },
  "animateSource": {
    "command": "animateSource",
    "timestamp": "2021-01-22T21:24:20Z",
    "version": "1.58",
    "syntax": "<object> animateSource [<string>, <number>, <boolean>]",
    "docSyntax": "object animateSource [source, phase, speed]",
    "tags": "[AG] [EG]",
    "description": "Process an animation of the object. If CfgVehicles' AnimationSources (see <Arma \n3: createVehicle/vehicles>). Featurearma3 It is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimized for MP FeaturewarningMixing animateSource command with animate command to animate the same part may produce some undefined behaviour.",
    "example": "sqfhouse animateSource [\"Door_1_source\", 1, true];</sqf>",
    "params": "<object> <string> <number> <boolean>",
    "returns": "nothing"
  },
  "animationNames": {
    "command": "animationNames",
    "timestamp": "2021-01-22T21:37:08Z",
    "version": "1.58",
    "syntax": "animationNames <object>",
    "docSyntax": "animationNames object",
    "tags": "",
    "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.",
    "example": "_names = animationNames static_AT;",
    "params": "<object>",
    "returns": "array | strings"
  },
  "animationSourcePhase": {
    "command": "animationSourcePhase",
    "timestamp": "2021-01-22T21:29:57Z",
    "version": "1.58",
    "syntax": "<object> animationSourcePhase <string>",
    "docSyntax": "object animationSourcePhase source",
    "tags": "",
    "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see HashLink#Example 2).",
    "example": "sqfprivate _phase = house animationSourcePhase \"Door_1_source\";</sqf>",
    "params": "<object> <string>",
    "returns": "number"
  },
  "BIS_fnc_3DENEntityMenu": {
    "command": "BIS_fnc_3DENEntityMenu",
    "timestamp": "2021-01-22T21:55:11Z",
    "version": "1.58",
    "syntax": "[<string>] call BIS_fnc_3DENEntityMenu",
    "docSyntax": "[mode] call BIS_fnc_3DENEntityMenu",
    "tags": "",
    "description": "Excutes actions available in the entity menu (context menu).",
    "example": "[\"reset\"] call BIS_fnc_3DENEntityMenu;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENGrid": {
    "command": "BIS_fnc_3DENGrid",
    "timestamp": "2021-01-22T21:57:16Z",
    "version": "1.58",
    "syntax": "[<string>, <array>] call BIS_fnc_3DENGrid",
    "docSyntax": "[mode, input] call BIS_fnc_3DENGrid",
    "tags": "",
    "description": "Handles action when grid button is pressed in the toolbar in <Eden Editor>.",
    "example": "-",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENIntel": {
    "command": "BIS_fnc_3DENIntel",
    "timestamp": "2021-01-22T21:53:48Z",
    "version": "1.58",
    "syntax": "[<control>, <number>] call BIS_fnc_3DENIntel",
    "docSyntax": "[controlGroup, value] call BIS_fnc_3DENIntel",
    "tags": "",
    "description": "Is used to set the weather settings in <Eden Editor>. Internal use only.",
    "example": "-",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENListLocations": {
    "command": "BIS_fnc_3DENListLocations",
    "timestamp": "2021-01-22T21:55:39Z",
    "version": "1.58",
    "syntax": "[<string>] call BIS_fnc_3DENListLocations",
    "docSyntax": "[mode] call BIS_fnc_3DENListLocations",
    "tags": "",
    "description": "Used in the locations display in <Eden Editor>. Internal use only.",
    "example": "[\"init\"] call BIS_fnc_3DENListLocations;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENModuleDescription": {
    "command": "BIS_fnc_3DENModuleDescription",
    "timestamp": "2021-01-22T21:58:18Z",
    "version": "1.58",
    "syntax": "[<control>,<config>] call BIS_fnc_3DENModuleDescription",
    "docSyntax": "[ctrl,cfg] call BIS_fnc_3DENModuleDescription",
    "tags": "",
    "description": "Used to display module description in the attribute window.",
    "example": "-",
    "params": "<control> <config>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENNotification": {
    "command": "BIS_fnc_3DENNotification",
    "timestamp": "2021-01-22T21:58:18Z",
    "version": "1.58",
    "syntax": "[<string>, <number>, <number>, <boolean>] call BIS_fnc_3DENNotification",
    "docSyntax": "[text, type, duration, animate] call BIS_fnc_3DENNotification",
    "tags": "[AL] [EL]",
    "description": "Shows notification in the <Eden Editor>.",
    "example": "[\"This is an animated notification\", 0] call BIS_fnc_3DENNotification;",
    "params": "<string> <number> <number> <boolean>",
    "returns": "number"
  },
  "BIS_fnc_3DENShowMessage": {
    "command": "BIS_fnc_3DENShowMessage",
    "timestamp": "2021-01-22T21:55:25Z",
    "version": "1.58",
    "syntax": "[<string>, <string>, <string>, <string>, <string>, <display>] call BIS_fnc_3DENShowMessage",
    "docSyntax": "[text, title, buttonOK, buttonCancel, icon, parentDisplay] call BIS_fnc_3DENShowMessage",
    "tags": "",
    "description": "Shows a pop-up message. In order to skip any optional parameter in between other parameters, send stringtable entries are useful to add custom Code but keep the default button \ntexts: * hl\"STR_DISP_OK\" * hl\"STR_DISP_CLOSE\" * hl\"STR_DISP_CANCEL\"",
    "example": "sqf[\"Message\",\"Title of the Message\"] call BIS_fnc_3DENShowMessage;</sqf>",
    "params": "<string> <string> <string> <string> <string> <display>",
    "returns": "display"
  },
  "BIS_fnc_3DENToolbar": {
    "command": "BIS_fnc_3DENToolbar",
    "timestamp": "2021-01-22T21:58:24Z",
    "version": "1.58",
    "syntax": "[<string>] call BIS_fnc_3DENToolbar",
    "docSyntax": "[mode] call BIS_fnc_3DENToolbar",
    "tags": "",
    "description": "Interacts with the <Eden Editor> toolbar",
    "example": "\"ToggleFlashlight\" call BIS_fnc_3DENToolbar;",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_diagObjectPerformance": {
    "command": "BIS_fnc_diagObjectPerformance",
    "timestamp": "2021-01-23T09:02:50Z",
    "version": "1.58",
    "syntax": "[] call BIS_fnc_diagObjectPerformance",
    "docSyntax": "[] call BIS_fnc_diagObjectPerformance",
    "tags": "",
    "description": "Benchmarks objects vs. simple objects performance and exports the data into .csv sheet. Output \nformat: classname,simulation,fpsClean,fpsObjects,fpsSimpleObjects \nExample: bis_scriptHandle = [] spawn BIS_fnc_diagObjectPerformance;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_getArea": {
    "command": "BIS_fnc_getArea",
    "timestamp": "2021-01-23T08:56:59Z",
    "version": "1.58",
    "syntax": "param call BIS_fnc_getArea",
    "docSyntax": "param call BIS_fnc_getArea",
    "tags": "",
    "description": "Extracts area information from trigger, marker, location or array",
    "example": "_area = [player, 100] call BIS_fnc_getArea;",
    "params": "",
    "returns": "array"
  },
  "BIS_fnc_groupFromNetId": {
    "command": "BIS_fnc_groupFromNetId",
    "timestamp": "2021-01-23T09:05:58Z",
    "version": "1.58",
    "syntax": "<string> call BIS_fnc_groupFromNetId",
    "docSyntax": "netId call BIS_fnc_groupFromNetId",
    "tags": "",
    "description": "Extends MP-only groupFromNetId functionality to SP",
    "example": "_grp = \"0:3\" call BIS_fnc_groupFromNetId;",
    "params": "<string>",
    "returns": "group | grpnull"
  },
  "BIS_fnc_initSliderValue": {
    "command": "BIS_fnc_initSliderValue",
    "timestamp": "2021-01-23T10:01:42Z",
    "version": "1.58",
    "syntax": "[<control>, <control>, <string>, <number>] call BIS_fnc_initSliderValue",
    "docSyntax": "[ctrlSlider, ctrlEdit, unit, default] call BIS_fnc_initSliderValue",
    "tags": "",
    "description": "Initialises a slider attribute control within the <Eden Editor>. Can also be used outside of <Eden Editor>. FeatureInformative The slider and the edit control have to share the same controls group!",
    "example": "[_this controlsGroupCtrl 100, _this controlsGroupCtrl 101, \"m\", 50] call BIS_fnc_initSliderValue;",
    "params": "<control> <control> <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_netId": {
    "command": "BIS_fnc_netId",
    "timestamp": "2021-01-23T10:29:36Z",
    "version": "1.58",
    "syntax": "<object> call BIS_fnc_netId",
    "docSyntax": "objOrGrp call BIS_fnc_netId",
    "tags": "",
    "description": "Extends MP-only netId functionality to SP",
    "example": "_objNetId = player call BIS_fnc_netId; // \"0:2\"",
    "params": "<object>",
    "returns": "string"
  },
  "BIS_fnc_objectFromNetId": {
    "command": "BIS_fnc_objectFromNetId",
    "timestamp": "2021-01-23T10:35:10Z",
    "version": "1.58",
    "syntax": "<string> call BIS_fnc_objectFromNetId",
    "docSyntax": "netId call BIS_fnc_objectFromNetId",
    "tags": "",
    "description": "Extends MP-only objectFromNetId functionality to SP",
    "example": "_obj = \"0:2\" call BIS_fnc_objectFromNetId;",
    "params": "<string>",
    "returns": "object | objnull"
  },
  "BIS_fnc_sunriseSunsetTime": {
    "command": "BIS_fnc_sunriseSunsetTime",
    "timestamp": "2021-01-23T20:19:08Z",
    "version": "1.58",
    "syntax": "<array> call BIS_fnc_sunriseSunsetTime",
    "docSyntax": "date call BIS_fnc_sunriseSunsetTime",
    "tags": "",
    "description": "Calculate sunrise and sunset time.",
    "example": "_sunriseSunsetTime = date call BIS_fnc_sunriseSunsetTime; // get sunrise/sunset time for the current date",
    "params": "<array>",
    "returns": "array | number"
  },
  "BIS_fnc_taskSetAlwaysVisible": {
    "command": "BIS_fnc_taskSetAlwaysVisible",
    "timestamp": "2021-01-23T20:30:04Z",
    "version": "1.58",
    "syntax": "[<string>,<boolean>] call BIS_fnc_taskSetAlwaysVisible",
    "docSyntax": "[taskID,alwaysVisible] call BIS_fnc_taskSetAlwaysVisible",
    "tags": "[AG] [EG]",
    "description": "Flags task to be or not to be always visible. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_Task_01\",true] call BIS_fnc_taskSetAlwaysVisible;",
    "params": "<string> <boolean>",
    "returns": "string"
  },
  "BIS_fnc_taskSetType": {
    "command": "BIS_fnc_taskSetType",
    "timestamp": "2021-01-23T20:17:51Z",
    "version": "1.58",
    "syntax": "[<string>,type] call BIS_fnc_taskSetType",
    "docSyntax": "[taskID,type] call BIS_fnc_taskSetType",
    "tags": "[AG] [EG]",
    "description": "Sets task type to given task. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_Task_01\",\"attack\"] call BIS_fnc_taskSetType;",
    "params": "<string> <string>",
    "returns": "string"
  },
  "BIS_fnc_taskType": {
    "command": "BIS_fnc_taskType",
    "timestamp": "2021-01-23T20:19:26Z",
    "version": "1.58",
    "syntax": "<string> call BIS_fnc_taskType",
    "docSyntax": "taskID call BIS_fnc_taskType",
    "tags": "[AG]",
    "description": "Returns type of given task. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"BIS_Task_01\"] call BIS_fnc_taskType;",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_taskTypeIcon": {
    "command": "BIS_fnc_taskTypeIcon",
    "timestamp": "2021-01-23T20:19:24Z",
    "version": "1.58",
    "syntax": "[<string>, <config>] call BIS_fnc_taskTypeIcon",
    "docSyntax": "[type, default] call BIS_fnc_taskTypeIcon",
    "tags": "",
    "description": "Returns path to the icon texture associated with given task type. FeatureInformative See <Arma \n3: Task Framework> for more information.",
    "example": "[\"attack\",configFile >> \"CfgTaskTypes\" >> \"Run\" >> \"icon\"] call BIS_fnc_taskTypeIcon;",
    "params": "<string> <config>",
    "returns": "string"
  },
  "canSuspend": {
    "command": "canSuspend",
    "timestamp": "2021-01-22T21:54:24Z",
    "version": "1.58",
    "syntax": "canSuspend",
    "docSyntax": "canSuspend",
    "tags": "",
    "description": "Returns unscheduled environment, the script engine would ignore any suspension command and throw \nerror: \"Suspending not allowed in this context\". Using scheduled and unscheduled environment is not the same as whether or not the script execution can or cannot be suspended. For example while .''sqs'' and .''fsm'' scripts are scheduled (i.e. added to the \nscheduler: diag_activeSQSScripts, diag_activeMissionFSMs), they cannot use sleep or be suspended like execVM or spawn scripts can, therefore canSuspend for these types of scripts will return false.",
    "example": "sqf onEachFrame { systemChat str canSuspend; // false [] spawn { hint str canSuspend }; // true onEachFrame {}; }; </sqf>",
    "params": "",
    "returns": "boolean"
  },
  "configSourceAddonList": {
    "command": "configSourceAddonList",
    "timestamp": "2021-01-22T22:02:47Z",
    "version": "1.58",
    "syntax": "<config>SourceAddonList config",
    "docSyntax": "configSourceAddonList config",
    "tags": "",
    "description": "Returns an array of addons (CfgPatches) in which the given config class is defined.",
    "example": "_addons = configSourceAddonList (configFile >> \"CfgVehicles\" >> \"Man\"); // returns [\"A3_Data_F\", \"A3_Characters_F\", \"A3_Data_F_Curator\", \"A3_Air_F_Heli\"]",
    "params": "<config>",
    "returns": "array | string"
  },
  "createSimpleObject": {
    "command": "createSimpleObject",
    "timestamp": "2021-01-22T21:58:44Z",
    "version": "1.58",
    "syntax": "createSimpleObject [<string>, positionasl, local]",
    "docSyntax": "createSimpleObject [shapeName, positionWorld, local]",
    "tags": "[EG]",
    "description": "Create object with given shape defined as path to .p3d model. Supported Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.brbr Given the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command \nare: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally.br Some of the models can be found \nhere: <createSimpleObject/objects>.brbr See <Arma \n3: Simple Objects> to learn more about simple objects. Feature Informative * addAction does not work with simple objects. * Objects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction. * Objects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle. * Only as of GVIarma31.67 do simple objects support getVariable and setVariable.",
    "example": "_pos = player getRelPos [10, 0]; _tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos]; _tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0]))); _tank hideSelection [\"zasleh\", true]; _tank hideSelection [\"zasleh2\", true]; _tank hideSelection [\"clan\", true]; _tank animate [\"Wheel_podkoloL3\", 0.5, true]; _tank animate [\"Wheel_podkoloL6\", 0.5, true];",
    "params": "<string> positionasl <boolean> <string> positionasl <boolean>",
    "returns": "object"
  },
  "ctrlParentControlsGroup": {
    "command": "ctrlParentControlsGroup",
    "timestamp": "2021-01-22T22:05:58Z",
    "version": "1.58",
    "syntax": "<control>ParentControlsGroup ctrl",
    "docSyntax": "ctrlParentControlsGroup ctrl",
    "tags": "",
    "description": "Returns the parent control of a given child control. If the control is not part of a CT_CONTROLS_GROUP control then controlNull is returned. To return parent Display of the control use ctrlParent.",
    "example": "_ctrlCombo = _ctrl controlsGroupCtrl 100; // control ctrlParentControlsGroup _ctrlCombo; // parent control group (_ctrl)",
    "params": "<control>",
    "returns": "control"
  },
  "diag_codePerformance": {
    "command": "diag_codePerformance",
    "timestamp": "2021-01-22T22:57:25Z",
    "version": "1.58",
    "syntax": "diag_<code>Performance [code, <anything>, <number>]",
    "docSyntax": "diag_codePerformance [code, arguments, cycles]",
    "tags": "",
    "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance.",
    "example": "private _result = diag_codePerformance [{ private _a = 123; }, 0, 10000];",
    "params": "<code> <anything> <number>",
    "returns": "array | number | number"
  },
  "difficultyOption": {
    "command": "difficultyOption",
    "timestamp": "2021-01-22T22:57:21Z",
    "version": "1.58",
    "syntax": "difficultyOption <string>",
    "docSyntax": "difficultyOption optionName",
    "tags": "",
    "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in ArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran). This command replaces difficultyEnabled as many options have multiple values and former command only provided Boolean return.",
    "example": "hint str (difficultyOption \"friendlyTags\");",
    "params": "<string>",
    "returns": "number"
  },
  "displayParent": {
    "command": "displayParent",
    "timestamp": "2021-01-22T22:39:42Z",
    "version": "1.58",
    "syntax": "<display>Parent display",
    "docSyntax": "displayParent display",
    "tags": "",
    "description": "Returns parent display of the given display.",
    "example": "_display = displayParent findDisplay 49; // Display #46",
    "params": "<display>",
    "returns": "display"
  },
  "drawPolygon": {
    "command": "drawPolygon",
    "timestamp": "2021-01-22T22:49:06Z",
    "version": "1.58",
    "syntax": "<control> drawPolygon [position3d, color]",
    "docSyntax": "map drawPolygon [polygon, color]",
    "tags": "",
    "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw* commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.",
    "example": "test_polygon = []; for \"_i\" from 1 to 12 do { test_polygon pushBack (player getPos [10 + random 100, 360/_i]); }; findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { params [\"_control\"]; _control drawPolygon [test_polygon, [0,0,1,1]]; }];",
    "params": "<control> position3d color",
    "returns": "nothing"
  },
  "getCameraViewDirection": {
    "command": "getCameraViewDirection",
    "timestamp": "2021-01-23T00:57:49Z",
    "version": "1.58",
    "syntax": "getCameraViewDirection <object>",
    "docSyntax": "getCameraViewDirection unit",
    "tags": "[AG]",
    "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]",
    "example": "bob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"]; bob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"]; onEachFrame { _beg = ASLToAGL eyePos bob; _endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100)); drawLine3D [ _beg, _endE, [0,1,0,1]]; _endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100)); drawLine3D [_beg, _endW, [1,0,0,1]]; _endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100)); drawLine3D [_beg, _endV, [0,0,1,1]]; };",
    "params": "<object>",
    "returns": "array"
  },
  "getUnitLoadout": {
    "command": "getUnitLoadout",
    "timestamp": "2021-01-23T09:22:07Z",
    "version": "1.58",
    "syntax": "getUnitLoadout <object>",
    "docSyntax": "getUnitLoadout unit",
    "tags": "",
    "description": "Returns a 'mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for \nexample: \nclass MyLoadout { \n uniformClass = \"U_B_CombatUniform_mcam\"; backpack = \"B_AssaultPack_mcamo\"; linkedItems[] = { \"V_PlateCarrier1_rgr\", \"H_HelmetB\", \"ItemCompass\", \"ItemWatch\", \"ItemRadio\", \"NVGoggles\" }; weapons[] = { \"arifle_MX_ACO_pointer_F\", \"hgun_P07_F\" }; items[] = { \"FirstAidKit\", \"FirstAidKit\", \"FirstAidKit\" }; magazines[] = { \"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\", \"SmokeShell\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\" }; \n};\nFeature Informative Since arma3 v1.92 an empty loadout could be obtained with getUnitLoadout (configFile >> \"EmptyLoadout\")",
    "example": "getUnitLoadout player;",
    "params": "<object> <array> <object> <boolean> <string> <config>",
    "returns": "array"
  },
  "getUnitTrait": {
    "command": "getUnitTrait",
    "timestamp": "2021-01-23T09:14:26Z",
    "version": "1.58",
    "syntax": "unit get<object>Trait <string>",
    "docSyntax": "unit getUnitTrait skillName",
    "tags": "[AG]",
    "description": "Gets the current value of a trait of the given unit. Feature Informative For the default values please visit setUnitTrait.",
    "example": "player getUnitTrait \"Medic\";",
    "params": "<object> <string>",
    "returns": "boolean | number | nothing"
  },
  "hideSelection": {
    "command": "hideSelection",
    "timestamp": "2021-01-23T09:14:39Z",
    "version": "1.58",
    "syntax": "<object> hideSelection <array>",
    "docSyntax": "object hideSelection [selection, hidden]",
    "tags": "[AL] [EG]",
    "description": "Hides or enables the given selection for the simple object",
    "example": "_simpleObject hideSelection [\"some_selection\", true];",
    "params": "<object> <array> <string> <boolean>",
    "returns": "nothing"
  },
  "inArea": {
    "command": "inArea",
    "timestamp": "2021-01-23T09:18:25Z",
    "version": "1.58",
    "syntax": "position2d2d inAre<num<number>er> <obje<number>t>",
    "docSyntax": "position inArea area",
    "tags": "",
    "description": "Checks whether given position or object is inside given area. Use inAreaArray to check multiple positions/objects within area. FeatureinformativeThis command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse.",
    "example": "_playerIsInside = player inArea _myTrigger;",
    "params": "position2d <object> position2d position2d <number> <number> <number> <boolean> <number>",
    "returns": "boolean"
  },
  "moonPhase": {
    "command": "moonPhase",
    "timestamp": "2021-01-23T10:03:12Z",
    "version": "1.58",
    "syntax": "moonPhase <array>",
    "docSyntax": "moonPhase date",
    "tags": "",
    "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on Moon Phase Utility to find out date for a mission with desired moon.",
    "example": "_currentMoonPhase = moonPhase date;",
    "params": "<array>",
    "returns": "number"
  },
  "roadAt": {
    "command": "roadAt",
    "timestamp": "2021-01-23T10:37:16Z",
    "version": "1.58",
    "syntax": "roadAt positionagl",
    "docSyntax": "roadAt position",
    "tags": "[AG]",
    "description": "Returns a road segment containing given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.",
    "example": "_road = roadAt ASLToAGL getPosASL player;",
    "params": "positionagl",
    "returns": "object | objnull"
  },
  "selectionNames": {
    "command": "selectionNames",
    "timestamp": "2021-01-23T20:27:22Z",
    "version": "1.58",
    "syntax": "selectionNames <<object>>",
    "docSyntax": "selectionNames object",
    "tags": "",
    "description": "Returns the list of model selections. When using default syntax, the named selections are returned from the first LOD only (LOD index 0). Alternative syntax allows to select LOD by name or by LOD resolution. FeatureImportantSometimes internally \"ViewGeometry\" could be nowiki==</nowiki> \"Geometry\" and \"FireGeometry\" could be nowiki==</nowiki> \"ViewGeometry\". In order to pinpoint the actual LOD, use LOD resolution as argument for selecting the LOD",
    "example": "_house= \"Land_i_House_Small_02_V3_F\" createVehicle _pos; selectionNames _house; cc[\"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\",\"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\",\"glass_4_hide\",\"glass_4_unhide\"]",
    "params": "<object> <object> resolution",
    "returns": "array"
  },
  "setSimpleTaskAlwaysVisible": {
    "command": "setSimpleTaskAlwaysVisible",
    "timestamp": "2021-01-23T20:30:45Z",
    "version": "1.58",
    "syntax": "<task> setSimpleTaskAlwaysVisible <boolean>",
    "docSyntax": "taskID setSimpleTaskAlwaysVisible state",
    "tags": "[EL]",
    "description": "Sets task's visibility.",
    "example": "currentTask player setSimpleTaskAlwaysVisible true;",
    "params": "<task> <boolean>",
    "returns": "nothing"
  },
  "setSimpleTaskCustomData": {
    "command": "setSimpleTaskCustomData",
    "timestamp": "2021-01-23T20:35:37Z",
    "version": "1.58",
    "syntax": "<task> setSimpleTaskCustomData [IconPath, <string>, <string>]",
    "docSyntax": "task setSimpleTaskCustomData [IconPath, tooltip, description]",
    "tags": "",
    "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.",
    "example": "_task setSimpleTaskCustomData [\"\\A3\\Ui_f\\data\\IGUI\\Cfg\\simpleTasks\\letters\\h_ca.paa\", \"This is the tooltip\", \"This is the description\"];",
    "params": "<task> <string> <string> <string>",
    "returns": "nothing"
  },
  "setSimpleTaskType": {
    "command": "setSimpleTaskType",
    "timestamp": "2021-01-23T20:27:54Z",
    "version": "1.58",
    "syntax": "<task> setSimpleTaskType <string>",
    "docSyntax": "task setSimpleTaskType taskType",
    "tags": "",
    "description": "Attach type to the simple task. See Default Task Types.",
    "example": "(currentTask player) setSimpleTaskType \"attack\";",
    "params": "<task> <string>",
    "returns": "nothing"
  },
  "setTaskMarkerOffset": {
    "command": "setTaskMarkerOffset",
    "timestamp": "2021-01-23T20:31:14Z",
    "version": "1.58",
    "syntax": "<object> setTaskState <array>",
    "docSyntax": "obj setTaskState position",
    "tags": "",
    "description": "Sets the task marker position in model space.",
    "example": "player setTaskMarkerOffset [0,0.5,1];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "setUnitLoadout": {
    "command": "setUnitLoadout",
    "timestamp": "2021-01-24T00:57:09Z",
    "version": "1.58",
    "syntax": "<object> setUnitLoadout <array>",
    "docSyntax": "unit setUnitLoadout loadout",
    "tags": "[AG] [EG]",
    "description": "Creates a loadout from given inventory structure and applies it to a unit. When mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for \nexample: \nclass MyLoadout { \n uniformClass = \"U_B_CombatUniform_mcam\"; backpack = \"B_AssaultPack_mcamo\"; linkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"}; weapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"}; items[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"}; magazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"}; \n};\n",
    "example": "player_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2",
    "params": "<object> <array> <object> <array> <boolean> <object> <string> <object> <config>",
    "returns": "nothing"
  },
  "setUnitTrait": {
    "command": "setUnitTrait",
    "timestamp": "2021-01-24T00:28:09Z",
    "version": "1.58",
    "syntax": "<object> setUnitTrait [<string>, <boolean>, isCustom]",
    "docSyntax": "unit setUnitTrait [skillName, value, isCustom]",
    "tags": "[AL] [EG]",
    "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.brbr Default traits \nare: * CfgVehicles * Boolean 'explosiveSpecialist' - Ability to defuse mines with toolkit, equivalent to c= canDeactivateMines nowiki=</nowiki> 1; in CfgVehicles * Boolean 'medic' - Ability to treat self and others with medikit, equivalent to c= attendant nowiki=</nowiki> 1; in CfgVehicles * Boolean 'UAVHacker' - Ability to hack drones, equivalent to c= uavHacker nowiki=</nowiki> 1; in CfgVehicles",
    "example": "player setUnitTrait [\"Medic\", true];",
    "params": "<object> <string> <boolean> <boolean>",
    "returns": "nothing"
  },
  "setWaypointForceBehaviour": {
    "command": "setWaypointForceBehaviour",
    "timestamp": "2021-01-24T00:02:16Z",
    "version": "1.58",
    "syntax": "<waypoint> setWaypointForceBehaviour <boolean>",
    "docSyntax": "waypoint setWaypointForceBehaviour state",
    "tags": "",
    "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.",
    "example": "[grp, 2] setWaypointForceBehaviour true;",
    "params": "<waypoint> <boolean>",
    "returns": "nothing"
  },
  "sideAmbientLife": {
    "command": "sideAmbientLife",
    "timestamp": "2021-01-24T00:31:57Z",
    "version": "1.58",
    "syntax": "sideAmbientLife",
    "docSyntax": "sideAmbientLife",
    "tags": "",
    "description": "Returns side of ambient life, for example ambient life placed in <Eden Editor>.",
    "example": "_sideAmbientLife = sideAmbientLife;",
    "params": "",
    "returns": "side"
  },
  "sideEmpty": {
    "command": "sideEmpty",
    "timestamp": "2021-01-24T00:02:50Z",
    "version": "1.58",
    "syntax": "'sideEmpty'",
    "docSyntax": "'sideEmpty'",
    "tags": "",
    "description": "Returns empty side, for example static buildings in <Eden Editor>.",
    "example": "_sideEmpty = sideEmpty;",
    "params": "",
    "returns": "side"
  },
  "taskAlwaysVisible": {
    "command": "taskAlwaysVisible",
    "timestamp": "2021-01-24T00:03:11Z",
    "version": "1.58",
    "syntax": "<task>AlwaysVisible task",
    "docSyntax": "taskAlwaysVisible task",
    "tags": "",
    "description": "Returns true if the task is flagged to be always visible or false if not.",
    "example": "_isAlwaysVisible = taskAlwaysVisible (currentTask player);",
    "params": "<task>",
    "returns": "boolean"
  },
  "taskCustomData": {
    "command": "taskCustomData",
    "timestamp": "2021-01-24T00:54:31Z",
    "version": "1.58",
    "syntax": "<task>CustomData task",
    "docSyntax": "taskCustomData task",
    "tags": "",
    "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.",
    "example": "_data = taskCustomData \"someTask\";",
    "params": "<task>",
    "returns": "array"
  },
  "taskMarkerOffset": {
    "command": "taskMarkerOffset",
    "timestamp": "2021-01-24T00:48:59Z",
    "version": "1.58",
    "syntax": "taskMarkerOffset <object>",
    "docSyntax": "taskMarkerOffset unit",
    "tags": "",
    "description": "Returns model space position for the task marker",
    "example": "_offset = taskMarkerOffset player;",
    "params": "<object>",
    "returns": "array"
  },
  "taskType": {
    "command": "taskType",
    "timestamp": "2021-01-24T00:39:43Z",
    "version": "1.58",
    "syntax": "<task>Type task",
    "docSyntax": "taskType task",
    "tags": "",
    "description": "Returns the type of the given task. A new task returns \"Default\" for the type.",
    "example": "_type = taskType (currentTask player);",
    "params": "<task>",
    "returns": "string"
  },
  "waypointForceBehaviour": {
    "command": "waypointForceBehaviour",
    "timestamp": "2021-01-24T10:44:53Z",
    "version": "1.58",
    "syntax": "<waypoint>ForceBehaviour waypoint",
    "docSyntax": "waypointForceBehaviour waypoint",
    "tags": "",
    "description": "Returns true if the waypoint behavior is forced.",
    "example": "_isForced = waypointForceBehaviour [groupOne, 1];",
    "params": "<waypoint>",
    "returns": "boolean"
  },
  "BIS_fnc_addRespawnInventory": {
    "command": "BIS_fnc_addRespawnInventory",
    "timestamp": "2021-01-22T23:06:04Z",
    "version": "1.60",
    "syntax": "[receiver, cfgrespawninventory] call BIS_fnc_addRespawnInventory",
    "docSyntax": "[target, inventoryParams] call BIS_fnc_addRespawnInventory",
    "tags": "[EG]",
    "description": "Add a respawn inventory for respawn menu.br Available loadouts are defined in CfgRespawnInventory.",
    "example": "nowiki[</nowiki>west, \"WEST1\"] call BIS_fnc_addRespawnInventory;",
    "params": "receiver cfgrespawninventory",
    "returns": "array | bis_fnc_removerespawninventory"
  },
  "BIS_fnc_exportEditorPreviews": {
    "command": "BIS_fnc_exportEditorPreviews",
    "timestamp": "2021-01-23T09:27:11Z",
    "version": "1.60",
    "syntax": "[<number>, <string>, sides, <array>, <array>, <array>] spawn BIS_fnc_exportEditorPreviews",
    "docSyntax": "[duration, type, sides, mods, addons, classes] spawn BIS_fnc_exportEditorPreviews",
    "tags": "",
    "description": "Export screenshots of objects for Arma 3 assets. Featureinformative The file is saved into ''Screenshots'' folder in the Profile directory. The folder is by default limited to 250 MB to prevent abuse.br To increase the limit, add the following line at the end of the profile \nfile: maxScreenShotFolderSizeMB = 2000; // size in MB",
    "example": "// All objects [] spawn BIS_fnc_exportEditorPreviews;",
    "params": "<number> <string> sides <array> <array> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_getRespawnInventories": {
    "command": "BIS_fnc_getRespawnInventories",
    "timestamp": "2021-01-23T09:19:36Z",
    "version": "1.60",
    "syntax": "[<namespace>, <boolean>, <boolean>] call BIS_fnc_getRespawnInventories",
    "docSyntax": "[target, showDisabled, returnAllInfo] call BIS_fnc_getRespawnInventories",
    "tags": "",
    "description": "Return respawn inventories available for the given target.",
    "example": "private _respawnInfo = [player] call BIS_fnc_getRespawnInventories;",
    "params": "<namespace> <boolean> <boolean>",
    "returns": "array | string"
  },
  "BIS_fnc_removeRespawnInventory": {
    "command": "BIS_fnc_removeRespawnInventory",
    "timestamp": "2021-01-23T10:33:28Z",
    "version": "1.60",
    "syntax": "[<namespace>, <number>] call BIS_fnc_removeRespawnInventory",
    "docSyntax": "[target, id] call BIS_fnc_removeRespawnInventory",
    "tags": "[EG]",
    "description": "Remove a respawn inventory added by BIS_fnc_addRespawnInventory.",
    "example": "nowiki[</nowiki>west, 1] call BIS_fnc_removeRespawnInventory;",
    "params": "<namespace> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_setRespawnInventory": {
    "command": "BIS_fnc_setRespawnInventory",
    "timestamp": "2021-01-23T20:27:20Z",
    "version": "1.60",
    "syntax": "[<namespace>, strings] call BIS_fnc_setRespawnInventory",
    "docSyntax": "[target, inventory] call BIS_fnc_setRespawnInventory",
    "tags": "",
    "description": "Set respawn loadouts.",
    "example": "[player, [\"B_T_Recon_TL_F\"]] call BIS_fnc_setRespawnInventory;",
    "params": "<namespace> strings",
    "returns": "array | bis_fnc_removerespawninventory"
  },
  "BIS_fnc_showRespawnMenuDisableItem": {
    "command": "BIS_fnc_showRespawnMenuDisableItem",
    "timestamp": "2021-01-23T20:16:45Z",
    "version": "1.60",
    "syntax": "[mode, uiControl, listboxItem, message, respawnReference] call BIS_fnc_showRespawnMenuDisableItem",
    "docSyntax": "[mode, uiControl, listboxItem, message, respawnReference] call BIS_fnc_showRespawnMenuDisableItem",
    "tags": "[EG]",
    "description": "Disables respawn loadout, role or position for <Arma \n3: Respawn>. * Only role or only loadout can be limited at one moment, if there is limit for both, then only role uses limit. * If the limit definition for role is called multiple times with different numbers, then the highest number is used. * If disabling a position then respawnReference must be supplied",
    "example": "[ \"disable\", uiNamespace getVariable \"BIS_RscRespawnControlsMap_ctrlLocList\", 2, \"Restricted for this part of mission!\", myRespawnModule call BIS_fnc_objectVar ] call BIS_fnc_showRespawnMenuDisableItem;",
    "params": "<string> <control> <number> <string> object",
    "returns": "nothing"
  },
  "commandSuppressiveFire": {
    "command": "commandSuppressiveFire",
    "timestamp": "2021-01-22T22:06:02Z",
    "version": "1.60",
    "syntax": "<object> commandSuppressiveFire positionasl",
    "docSyntax": "unit commandSuppressiveFire target",
    "tags": "[AL] [EG]",
    "description": "Orders the given unit or a group of units to suppress the given position or target (with radio messages, see PositionASL of the object, and it is fixed even if the target is able to change position later.",
    "example": "_soldier commandSuppressiveFire [1869.508,5760.962,0.000] ",
    "params": "<object> positionasl",
    "returns": "nothing"
  },
  "doSuppressiveFire": {
    "command": "doSuppressiveFire",
    "timestamp": "2021-01-22T22:55:36Z",
    "version": "1.60",
    "syntax": "<object> doSuppressiveFire positionasl",
    "docSyntax": "unit doSuppressiveFire target",
    "tags": "[AL] [EG]",
    "description": "Orders the given unit or a group of units to suppress the given position or target (without radio messages, see PositionASL of the object, and it is fixed even if the target is able to change position later.",
    "example": "_soldier doSuppressiveFire [1869.508,5760.962,0.000]",
    "params": "<object> positionasl",
    "returns": "nothing"
  },
  "getTerrainGrid": {
    "command": "getTerrainGrid",
    "timestamp": "2021-01-23T09:26:52Z",
    "version": "1.60",
    "syntax": "'getTerrainGrid'",
    "docSyntax": "'getTerrainGrid'",
    "tags": "",
    "description": "A getter for setTerrainGrid, returns the current terrain grid.",
    "example": "_terrainGrid = getTerrainGrid;",
    "params": "",
    "returns": "number"
  },
  "pixelGrid": {
    "command": "pixelGrid",
    "timestamp": "2021-01-23T10:37:25Z",
    "version": "1.60",
    "syntax": "'pixelGrid'",
    "docSyntax": "'pixelGrid'",
    "tags": "",
    "description": "Returns grid size based on screen resolution, UI size and \nconfigs: uiScaleFactor, uiScaleMaxGrids.",
    "example": "_gridHeight = pixelH * pixelGrid;",
    "params": "",
    "returns": "number"
  },
  "pixelH": {
    "command": "pixelH",
    "timestamp": "2021-01-23T10:33:20Z",
    "version": "1.60",
    "syntax": "'pixelH'",
    "docSyntax": "'pixelH'",
    "tags": "",
    "description": "Returns the height of one pixel for current resolution.",
    "example": "_pixelHeight = 'pixelH';",
    "params": "",
    "returns": "number"
  },
  "pixelW": {
    "command": "pixelW",
    "timestamp": "2021-01-23T10:35:55Z",
    "version": "1.60",
    "syntax": "'pixelW'",
    "docSyntax": "'pixelW'",
    "tags": "",
    "description": "Returns width of one pixel for current resolution.",
    "example": "_pixelWidth = 'pixelW';",
    "params": "",
    "returns": "number"
  },
  "screenshot": {
    "command": "screenshot",
    "timestamp": "2021-01-23T10:41:05Z",
    "version": "1.60",
    "syntax": "screenshot <string>",
    "docSyntax": "screenshot filename",
    "tags": "",
    "description": "Captures a screenshot and stores it to given filename. uPNG is the only available format</u> and the file must have .png extension.brbr The file is saved into ''Screenshots'' folder in the Profile directory. The folder is by default limited to 250 MB to prevent abuse.br To increase the limit, add the following line at the end of the profile \nfile: maxScreenShotFolderSizeMB = 2000; // 2 GB",
    "example": "sqfscreenshot \"\";</sqf>",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "shownScoretable": {
    "command": "shownScoretable",
    "timestamp": "2021-01-24T00:07:21Z",
    "version": "1.60",
    "syntax": "shownScoretable",
    "docSyntax": "shownScoretable",
    "tags": "",
    "description": "Returns the state of the score table set with showScoretable command. FeatureWarningSince Arma 3 v1.64, the previous functionality of this command (score table visibility check) is moved to visibleScoretable command. Please update your scripts and sorry for any inconvinience.",
    "example": "_state = shownScoretable;",
    "params": "",
    "returns": "number"
  },
  "showScoretable": {
    "command": "showScoretable",
    "timestamp": "2021-01-23T23:59:23Z",
    "version": "1.60",
    "syntax": "showScoretable <number>",
    "docSyntax": "showScoretable force",
    "tags": "",
    "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be closed manually, when it is force closed, it cannot be opened manually.",
    "example": "showScoretable 1;",
    "params": "<number>",
    "returns": "nothing"
  },
  "useAISteeringComponent": {
    "command": "useAISteeringComponent",
    "timestamp": "2021-01-24T10:38:45Z",
    "version": "1.60",
    "syntax": "useAISteeringComponent <boolean>",
    "docSyntax": "useAISteeringComponent state",
    "tags": "[EG]",
    "description": "Enable the new ExternalLinklink= https://forums.bistudio.com/topic/191515-ai-driving-feedback-topic/text= AI driving, used to test the old and new AI driving.",
    "example": "useAISteeringComponent true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "userInputDisabled": {
    "command": "userInputDisabled",
    "timestamp": "2021-01-24T10:39:13Z",
    "version": "1.60",
    "syntax": "'userInputDisabled'",
    "docSyntax": "'userInputDisabled'",
    "tags": "",
    "description": "Returns true if user input is disabled",
    "example": "!userInputDisabled;",
    "params": "",
    "returns": "boolean"
  },
  "addOwnedMine": {
    "command": "addOwnedMine",
    "timestamp": "2021-01-22T21:34:22Z",
    "version": "1.62",
    "syntax": "<object> addOwnedMine <object>",
    "docSyntax": "unit addOwnedMine mine",
    "tags": "",
    "description": "Sets ownership over a remotely detonatable mine to the unit.",
    "example": "player addOwnedMine _superMine;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "addPlayerScores": {
    "command": "addPlayerScores",
    "timestamp": "2021-01-22T21:27:47Z",
    "version": "1.62",
    "syntax": "<object> addPlayerScores <array>",
    "docSyntax": "unit addPlayerScores values",
    "tags": "[SE]",
    "description": "MP server \nonly: Adds player score.",
    "example": "player addPlayerScores [0, 1, 0, 0, 1];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_adjustSimpleObject": {
    "command": "BIS_fnc_adjustSimpleObject",
    "timestamp": "2021-01-23T00:12:13Z",
    "version": "1.62",
    "syntax": "[<object>, <array>] call BIS_fnc_adjustSimpleObject",
    "docSyntax": "[object, [class, model, reversed, verticalOffset, animAdjustments, selectionToHide]] call BIS_fnc_adjustSimpleObject",
    "tags": "",
    "description": "Adjust simple object vertical position, animations and selection according to provided data.br 'NOTE:' function is automatically called by BIS_fnc_createSimpleObject. In case both adjustment data and class are being used, data has higher priority and only undefined parts are filled from config.",
    "example": "[myCar, [\"B_MyCar_F\", \"path\\to\\file.p3d\"]] call BIS_fnc_adjustSimpleObject;",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_createSimpleObject": {
    "command": "BIS_fnc_createSimpleObject",
    "timestamp": "2021-01-22T23:50:17Z",
    "version": "1.62",
    "syntax": "[<string>, positionasl, <number>, <boolean>, <boolean>] call BIS_fnc_createSimpleObject",
    "docSyntax": "[input, position, direction, followTerrain, forceSuperSimpleObject] call BIS_fnc_createSimpleObject",
    "tags": "",
    "description": "Creates non-simulated framerate and network performance friendly object - a Simple Object - and applies different adjustments to fake non-existing physX and engine interactions. The adjustments need either to be stored in the object config or provided as the function input, otherwise they need to be done manually.br br Simple objects cannot be destroyed and do not interact with the environment. They are useful for creating low performance-demanding static compositions (walls, rocks, wrecks, …) and/or environments where shooting and collisions are not expected.",
    "example": "[\"B_Boat_Armed_01_minigun_F\", getPosWorld player, getDir player] call BIS_fnc_createSimpleObject;",
    "params": "<string> positionasl <number> <boolean> <boolean> <boolean>",
    "returns": "object | objnull"
  },
  "BIS_fnc_EXP_camp_addTickets": {
    "command": "BIS_fnc_EXP_camp_addTickets",
    "timestamp": "2021-01-22T22:02:08Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_addTickets",
    "docSyntax": "[] call BIS_fnc_EXP_camp_addTickets",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_balanceGroup": {
    "command": "BIS_fnc_EXP_camp_balanceGroup",
    "timestamp": "2021-01-22T22:01:00Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_balanceGroup",
    "docSyntax": "[] call BIS_fnc_EXP_camp_balanceGroup",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Balances a group depending on the amount of connected players \nParameters: \n_group: The group to balance \n_minCount: The minimal count of units group must end up with \n_bExcludeVehicleRoles: Whether to exclude units in important vehicle roles (driver, gunner, commander) \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_checkpoint": {
    "command": "BIS_fnc_EXP_camp_checkpoint",
    "timestamp": "2021-01-22T21:58:16Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_checkpoint",
    "docSyntax": "[] call BIS_fnc_EXP_camp_checkpoint",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Set's a mission checkpoint, in single-player an auto save happens, in multiplayer a new respawn position is added \nParameters: \n_target: The target namespace \n_position: The desired position \n_name: The name of the position \nReturns: Added respawn position identifier",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_dynamicAISkill": {
    "command": "BIS_fnc_EXP_camp_dynamicAISkill",
    "timestamp": "2021-01-22T21:56:07Z",
    "version": "1.62",
    "syntax": "[<boolean>,<array>] call BIS_fnc_EXP_camp_dynamicAISkill",
    "docSyntax": "[mode,affectedSides] call BIS_fnc_EXP_camp_dynamicAISkill",
    "tags": "[SE]",
    "description": "Changes AI skill based on player count, responding to player connected / player disconnected events. This function does exactly the same as BIS_fnc_EXP_camp_setSkill execept that it automatically executes when a player joins or disconnects.",
    "example": "[ true, [ [WEST,0.1,0.2,0.7,0.6 ], [EAST,0.1,0.2,0.7,0.6 ] ] ] call BIS_fnc_EXP_camp_dynamicAISkill;",
    "params": "<boolean> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_EXP_camp_getCinematicMode": {
    "command": "BIS_fnc_EXP_camp_getCinematicMode",
    "timestamp": "2021-01-22T21:57:02Z",
    "version": "1.62",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Returns whether or not player is in cinematic mode.",
    "example": "call BIS_fnc_EXP_camp_getCinematicMode;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_getPlayersGroup": {
    "command": "BIS_fnc_EXP_camp_getPlayersGroup",
    "timestamp": "2021-01-22T21:55:49Z",
    "version": "1.62",
    "syntax": "",
    "docSyntax": "",
    "tags": "[AL]",
    "description": "Returns group that players belong to in coop campaign scenario.",
    "example": "_group = call BIS_fnc_EXP_camp_getPlayersGroup;",
    "params": "",
    "returns": "group"
  },
  "BIS_fnc_EXP_camp_guidedProjectile": {
    "command": "BIS_fnc_EXP_camp_guidedProjectile",
    "timestamp": "2021-01-22T22:02:47Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_guidedProjectile",
    "docSyntax": "[] call BIS_fnc_EXP_camp_guidedProjectile",
    "tags": "[SE]",
    "description": "\nAuthor: Nelson Duarte \nDescription: Spawns object of given class and makes it travel, hooming towards the target To be used with CfgAmmo type of entity, but can be used with virtually any kind of object \nParameters: \n_startPos: ARRAY The initial position of the projectile (ASL) \n_class: STRING or OBJECT The class name of the object to spawn or an object entity already existing \n_target: OBJECT The target object the projectile will be hooming towards to \n_speed: SCALAR The speed the object should assume \n_destroyTarget: BOOL Whether to force destruction of the target object on detonation \n_localOffset: ARRAY The model space position offset that projectile should be hooming towards to \n_minDistanceToTarget: SCALAR The minimal distance projectile needs to be from target position to enter ballistic mode _function STRING The function to execute on the created object with params [object] _isGlobalFunction BOOL Whether the executed function should be executed on all connected machine, false to execute only on the server \nReturns: NOTHING",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_hasMissionStarted": {
    "command": "BIS_fnc_EXP_camp_hasMissionStarted",
    "timestamp": "2021-01-22T22:00:32Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_hasMissionStarted",
    "docSyntax": "[] call BIS_fnc_EXP_camp_hasMissionStarted",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Returns whether the mission has actually started (see Manager) \nParameters: Nothing \nReturns: True if mission was started, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_IFF": {
    "command": "BIS_fnc_EXP_camp_IFF",
    "timestamp": "2021-01-22T22:06:46Z",
    "version": "1.62",
    "syntax": "[<array>] call BIS_fnc_EXP_camp_IFF",
    "docSyntax": "[units] call BIS_fnc_EXP_camp_IFF",
    "tags": "[AL] [EL]",
    "description": "Simple handling of the Support Team's scripted IFF.br br \nNotes: *To always show the icon and name of a unit, \nuse: icunit setVariable [\"BIS_iconAlways\", true]; *Otherwise, icons can be hidden \nwith: icunit setVariable [\"BIS_iconShow\", false]; *And names can be hidden \nwith: icunit setVariable [\"BIS_iconName\", false];",
    "example": "noWiki<</nowiki>[[player>noWiki]]</nowiki> call BIS_fnc_EXP_camp_IFF;",
    "params": "<array>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_initCharacter": {
    "command": "BIS_fnc_EXP_camp_initCharacter",
    "timestamp": "2021-01-22T21:59:31Z",
    "version": "1.62",
    "syntax": "[<object>, <string>] call BIS_fnc_EXP_camp_initCharacter",
    "docSyntax": "[unit, mode] call BIS_fnc_EXP_camp_initCharacter",
    "tags": "[EL]",
    "description": "Assigns correct appearance and loadout of story characters based upon their vehicle classnames.",
    "example": "[BIS_unit,\"NIGHT\"] call BIS_fnc_EXP_camp_initCharacter;",
    "params": "<object> <string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_initClasses": {
    "command": "BIS_fnc_EXP_camp_initClasses",
    "timestamp": "2021-01-22T22:04:05Z",
    "version": "1.62",
    "syntax": "[<string>] call BIS_fnc_EXP_camp_initClasses",
    "docSyntax": "[mode] call BIS_fnc_EXP_camp_initClasses",
    "tags": "[SE]",
    "description": "Initializes the classes players can choose from before spawning.",
    "example": "[\"NIGHT\"] call BIS_fnc_EXP_camp_initClasses;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_initDifficulty": {
    "command": "BIS_fnc_EXP_camp_initDifficulty",
    "timestamp": "2021-01-22T21:54:45Z",
    "version": "1.62",
    "syntax": "",
    "docSyntax": "",
    "tags": "[EL]",
    "description": "Initializes difficulty settings in Apex Protocol campaign.",
    "example": "call BIS_fnc_EXP_camp_initDifficulty;",
    "params": "",
    "returns": "boolean | true"
  },
  "BIS_fnc_EXP_camp_lobby": {
    "command": "BIS_fnc_EXP_camp_lobby",
    "timestamp": "2021-01-22T21:56:05Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby.sqf Campaign \nLobby: Core Function Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_clearVars": {
    "command": "BIS_fnc_EXP_camp_lobby_clearVars",
    "timestamp": "2021-01-22T22:50:08Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_clearVars",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_clearVars",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_clearVars.sqf Campaign \nLobby: Clear variables Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_ctrlSetColor": {
    "command": "BIS_fnc_EXP_camp_lobby_ctrlSetColor",
    "timestamp": "2021-01-22T22:55:45Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_ctrlSetColor",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_ctrlSetColor",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_ctrlSetColor.sqf Campaign \nLobby: Updates controls with defined colors Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_findHost": {
    "command": "BIS_fnc_EXP_camp_lobby_findHost",
    "timestamp": "2021-01-22T22:51:29Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_findHost",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_findHost",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_findHost.sqf Campaign \nLobby: Find host Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_getHostSettings": {
    "command": "BIS_fnc_EXP_camp_lobby_getHostSettings",
    "timestamp": "2021-01-22T22:57:02Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_getHostSettings",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_getHostSettings",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 08-08-2016 fn_EXP_camp_lobby_getHostSettings.sqf Campaign \nLobby: Grabs the host settings for respawn and revive Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_getPlayerSquadName": {
    "command": "BIS_fnc_EXP_camp_lobby_getPlayerSquadName",
    "timestamp": "2021-01-22T22:41:41Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_getPlayerSquadName",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_getPlayerSquadName",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_getPlayerSquadName.sqf Campaign \nLobby: Return the player squad name Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_go": {
    "command": "BIS_fnc_EXP_camp_lobby_go",
    "timestamp": "2021-01-22T22:48:57Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_go",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_go",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_go.sqf Campaign \nLobby: Run Mission Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_intro": {
    "command": "BIS_fnc_EXP_camp_lobby_intro",
    "timestamp": "2021-01-22T22:47:47Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_intro",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_intro",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_intro.sqf Campaign \nLobby: On Load Function (Does nothing) Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_launch": {
    "command": "BIS_fnc_EXP_camp_lobby_launch",
    "timestamp": "2021-01-22T22:40:41Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_launch",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_launch",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_launch.sqf Campaign \nLobby: Launch Function Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_loop": {
    "command": "BIS_fnc_EXP_camp_lobby_loop",
    "timestamp": "2021-01-22T22:41:40Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_loop",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_loop",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_loop.sqf Campaign \nLobby: Update UI Loop Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_missionCountdown": {
    "command": "BIS_fnc_EXP_camp_lobby_missionCountdown",
    "timestamp": "2021-01-22T22:58:52Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_missionCountdown",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_missionCountdown",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_missionCountdown.sqf Campaign \nLobby: Countdown to run mission Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_onLoad": {
    "command": "BIS_fnc_EXP_camp_lobby_onLoad",
    "timestamp": "2021-01-22T22:48:50Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_onLoad",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_onLoad",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_onLoad.sqf Campaign \nLobby: On Load Function (Does nothing) Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_onUnLoad": {
    "command": "BIS_fnc_EXP_camp_lobby_onUnLoad",
    "timestamp": "2021-01-22T22:51:37Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_onUnLoad",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_onUnLoad",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_onUnLoad.sqf Campaign \nLobby: On display unload function - clear variables and close as necessary Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_playMissionVideo": {
    "command": "BIS_fnc_EXP_camp_lobby_playMissionVideo",
    "timestamp": "2021-01-22T22:42:53Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_playMissionVideo",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_playMissionVideo",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_playMissionVideo.sqf Campaign \nLobby: Creates the control and plays mission video Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_serverPing": {
    "command": "BIS_fnc_EXP_camp_lobby_serverPing",
    "timestamp": "2021-01-22T22:46:25Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_serverPing",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_serverPing",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_serverPing.sqf Campaign \nLobby: Updates player status Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_serverUpdate": {
    "command": "BIS_fnc_EXP_camp_lobby_serverUpdate",
    "timestamp": "2021-01-22T22:39:53Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_serverUpdate",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_serverUpdate",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_serverUpdate.sqf Campaign \nLobby: Server update function (runs on \"host\" machine for dedicated servers) Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_structuredText": {
    "command": "BIS_fnc_EXP_camp_lobby_structuredText",
    "timestamp": "2021-01-22T22:50:56Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_structuredText",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_structuredText",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_structuredText.sqf Campaign \nLobby: Formats structured text Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UIMilitaryManager": {
    "command": "BIS_fnc_EXP_camp_lobby_UIMilitaryManager",
    "timestamp": "2021-01-22T21:56:04Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMilitaryManager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMilitaryManager",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 15-08-2016 fn_EXP_camp_lobby_UIMilitaryManager.sqf Campaign \nLobby: Updates military efficiency based on mission settings Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UIMissionCountdown": {
    "command": "BIS_fnc_EXP_camp_lobby_UIMissionCountdown",
    "timestamp": "2021-01-22T21:58:55Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionCountdown",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionCountdown",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_missionCountdown.sqf Campaign \nLobby: Countdown to run mission Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UIMissionManager": {
    "command": "BIS_fnc_EXP_camp_lobby_UIMissionManager",
    "timestamp": "2021-01-22T21:55:00Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionManager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionManager",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_UIMissionManager.sqf Campaign \nLobby: Handles UI behaviour of tree mission options Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UIOverlayManager": {
    "command": "BIS_fnc_EXP_camp_lobby_UIOverlayManager",
    "timestamp": "2021-01-22T21:53:04Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIOverlayManager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIOverlayManager",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_updateIntel.sqf Campaign \nLobby: Updates the mission overview and intel from tree interactions Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UIProgressManager": {
    "command": "BIS_fnc_EXP_camp_lobby_UIProgressManager",
    "timestamp": "2021-01-22T22:51:24Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIProgressManager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIProgressManager",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_UIProgressManager.sqf Campaign \nLobby: Handles Progress button UI behaviour Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_UISettingsManager": {
    "command": "BIS_fnc_EXP_camp_lobby_UISettingsManager",
    "timestamp": "2021-01-22T22:56:51Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_UISettingsManager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UISettingsManager",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 08-08-2016 fn_EXP_camp_lobby_UISettingsManager.sqf Campaign \nLobby: Handles the mission settings for Respawn and Revive Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_updateHostSettings": {
    "command": "BIS_fnc_EXP_camp_lobby_updateHostSettings",
    "timestamp": "2021-01-22T22:54:26Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateHostSettings",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateHostSettings",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 08-08-2016 fn_EXP_camp_lobby_updateHostSettings.sqf Campaign \nLobby: Updates all clients with the latest host settings Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_updateIntel": {
    "command": "BIS_fnc_EXP_camp_lobby_updateIntel",
    "timestamp": "2021-01-22T22:56:08Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateIntel",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateIntel",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_updateIntel.sqf Campaign \nLobby: Updates the mission overview and intel from tree interactions Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency": {
    "command": "BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency",
    "timestamp": "2021-01-22T22:48:03Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 15-08-2016 fn_EXP_camp_lobby_updateMilitaryEfficiency.sqf Campaign \nLobby: Updates military efficiency radial bar Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_updatePlayers": {
    "command": "BIS_fnc_EXP_camp_lobby_updatePlayers",
    "timestamp": "2021-01-22T22:44:02Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayers",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayers",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_updatePlayers.sqf Campaign \nLobby: Updates UI based on player status changes Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_lobby_updatePlayerStatus": {
    "command": "BIS_fnc_EXP_camp_lobby_updatePlayerStatus",
    "timestamp": "2021-01-22T22:45:28Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayerStatus",
    "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayerStatus",
    "tags": "",
    "description": "\nPROJECT: R&D \nAUTHOR: Endstar \nDATE: 18-04-2016 fn_EXP_camp_lobby_updatePlayerStatus.sqf Campaign \nLobby: Updates player status Params \n0: Return 0:",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_manager": {
    "command": "BIS_fnc_EXP_camp_manager",
    "timestamp": "2021-01-22T22:46:17Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_manager",
    "docSyntax": "[] call BIS_fnc_EXP_camp_manager",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Handles match start synchronization between server and clients The following states are \nvalid: - Waiting : State is set when joining the mission - Intro : State is set when mission intro starts - Loadout : State is set when mission loadout selection starts - Started : State is set when mission gameplay starts \nParameters: \n_introVideos: The videos directory to play, empty array leads to skipping intro videos completely \n_introVideosSubtitles: The subtitles files to execute for intro videos \n_minWaitDelay: The time to wait after waiting has been completed \n_minLoadoutDelay: The time to wait after loadout has been completed \n_maxWaitDelay: The maximum time to wait for all players during the waiting, if reached, mission is forced onto next state \n_maxLoadoutDelay: The maximum time to wait for all players during the loadout, mission is forced onto next state \n_bWantsLoadoutSelection: Whether or not to go into loadout selection, if false this is skipped \n_bNoCinematics: Whether to force no cinematics, these need to be handled manually then \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_manager_getState": {
    "command": "BIS_fnc_EXP_camp_manager_getState",
    "timestamp": "2021-01-22T22:49:14Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_manager_getState",
    "docSyntax": "[] call BIS_fnc_EXP_camp_manager_getState",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Get's the mission state, can be one of \"Waiting\", \"Intro\", \"Loadout\" or \"Started\" \nParameters: Nothing \nReturns: The mission state",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_manager_onPlayerRegistered": {
    "command": "BIS_fnc_EXP_camp_manager_onPlayerRegistered",
    "timestamp": "2021-01-22T22:42:40Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_manager_onPlayerRegistered",
    "docSyntax": "[] call BIS_fnc_EXP_camp_manager_onPlayerRegistered",
    "tags": "[SE]",
    "description": "\nAuthor: Nelson Duarte \nDescription: A player is registered for given state \nParameters: \n_who: The player to be registered \n_listId: The state corresponding list, and where given player will be added to \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_manager_setState": {
    "command": "BIS_fnc_EXP_camp_manager_setState",
    "timestamp": "2021-01-22T22:52:07Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_manager_setState",
    "docSyntax": "[] call BIS_fnc_EXP_camp_manager_setState",
    "tags": "[SE]",
    "description": "\nAuthor: Nelson Duarte \nDescription: Set's the state of the mission \nParameters: \n_state: The new mission state to set \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_manager_triggerEvent": {
    "command": "BIS_fnc_EXP_camp_manager_triggerEvent",
    "timestamp": "2021-01-22T22:55:11Z",
    "version": "1.62",
    "syntax": "[] call BIS_fnc_EXP_camp_manager_triggerEvent",
    "docSyntax": "[] call BIS_fnc_EXP_camp_manager_triggerEvent",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte \nDescription: Triggers corresponding event for given mission state \nParameters: \n_state: The mission state \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_playerChecklist": {
    "command": "BIS_fnc_EXP_camp_playerChecklist",
    "timestamp": "2021-01-22T22:46:44Z",
    "version": "1.62",
    "syntax": "[<<code>>, <code>, code] call BIS_fnc_EXP_camp_playerChecklist",
    "docSyntax": "[conditionProceed, conditionPlayer, code] call BIS_fnc_EXP_camp_playerChecklist",
    "tags": "",
    "description": "Display a checklist of players that don't meet the given condition, thus preventing mission progress.",
    "example": "[{count allPlayers == 4}] call BIS_fnc_EXP_camp_playerChecklist;",
    "params": "<code> <code> <code>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_playSubtitles": {
    "command": "BIS_fnc_EXP_camp_playSubtitles",
    "timestamp": "2021-01-22T22:48:18Z",
    "version": "1.62",
    "syntax": "[subtitleDetail1, subtitleDetail2, ...] spawn BIS_fnc_EXP_camp_playSubtitles",
    "docSyntax": "[subtitleDetail1, subtitleDetail2, ...] spawn BIS_fnc_EXP_camp_playSubtitles",
    "tags": "",
    "description": "Displays the given subtitles at the correctly defined moments. Each array added to the parameters represents one subtitle. Feature Informative Subtitles can be cancel by setting BIS_fnc_EXP_camp_playSubtitles_terminate to true.",
    "example": "[ [\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go! Crossroad, out.\", 0] ] spawn BIS_fnc_EXP_camp_playSubtitles; // Shows a subtitle immediately",
    "params": "<array>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_playTimelineVideo": {
    "command": "BIS_fnc_EXP_camp_playTimelineVideo",
    "timestamp": "2021-01-22T22:39:46Z",
    "version": "1.62",
    "syntax": "[<string>] call BIS_fnc_EXP_camp_playTimelineVideo",
    "docSyntax": "[videoPath] call BIS_fnc_EXP_camp_playTimelineVideo",
    "tags": "[EL]",
    "description": "Plays a video with BIS_fnc_EXP_camp_setCinematicMode enabled.",
    "example": "\"someVideoPath\" call BIS_fnc_EXP_camp_playTimelineVideo;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_EXP_camp_replaceVehicles": {
    "command": "BIS_fnc_EXP_camp_replaceVehicles",
    "timestamp": "2021-01-22T22:55:28Z",
    "version": "1.62",
    "syntax": "",
    "docSyntax": "",
    "tags": "[SE] [EG]",
    "description": "Replaces textures of \"I_G_Offroad_01_armed_F\" and \"I_G_Quadbike_01_F\" randomly.",
    "example": "call BIS_fnc_EXP_camp_replaceVehicles;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_EXP_camp_setCinematicMode": {
    "command": "BIS_fnc_EXP_camp_setCinematicMode",
    "timestamp": "2021-01-22T22:41:22Z",
    "version": "1.62",
    "syntax": "[<boolean>,<number>,<number>] call BIS_fnc_EXP_camp_setCinematicMode",
    "docSyntax": "[mode,fadeBlack,fadeSound] call BIS_fnc_EXP_camp_setCinematicMode",
    "tags": "",
    "description": "Set's cinematic mode, with cinematic mode enabled the sounds are muted and screen is black.",
    "example": "noWiki[</noWiki>truenoWiki,3,3]</noWiki> call BIS_fnc_EXP_camp_setCinematicMode;",
    "params": "<boolean> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_EXP_camp_setSkill": {
    "command": "BIS_fnc_EXP_camp_setSkill",
    "timestamp": "2021-01-22T22:48:21Z",
    "version": "1.62",
    "syntax": "[<side>,<number>,<number>,<number>,<number>] call BIS_fnc_EXP_camp_setSkill",
    "docSyntax": "[side,skillMin,skillAimMin,skillMax,skillAimMax] call BIS_fnc_EXP_camp_setSkill",
    "tags": "[SE]",
    "description": "Sets skill for an entire AI side. The skill will be calculated using a lerp function. Function will take player as multiplier.",
    "example": "[WEST,0.1,0.2,0.7,0.6] call BIS_fnc_EXP_camp_setSkill;",
    "params": "<side> <number> <number> <number> <number>",
    "returns": ""
  },
  "BIS_fnc_EXP_camp_SITREP": {
    "command": "BIS_fnc_EXP_camp_SITREP",
    "timestamp": "2021-01-22T21:58:01Z",
    "version": "1.62",
    "syntax": "[line_1, line_2, line_n] spawn BIS_fnc_EXP_camp_SITREP",
    "docSyntax": "[line_1, line_2, line_n] spawn BIS_fnc_EXP_camp_SITREP",
    "tags": "[EL]",
    "description": "Displays multiple lines of text in given order. *Each array you pass represents a line that should be displayed *Lines will be displayed in the order you define them left|400px",
    "example": "[[\"line1\", 4, 5], [\"line2\", 3, 5, 8]] spawn BIS_fnc_EXP_camp_SITREP;",
    "params": "<array>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_holdActionAdd": {
    "command": "BIS_fnc_holdActionAdd",
    "timestamp": "2021-01-23T10:08:19Z",
    "version": "1.62",
    "syntax": "[<object>, <string>, <string>, <string>, <string>, <string>, <code>, <code>, <code>, <code>, <array>, <number>, <number>, <boolean>, <boolean>, <boolean>] call BIS_fnc_holdActionAdd",
    "docSyntax": "[target, title, idleIcon, progressIcon, conditionShow, conditionProgress, codeStart, codeProgress, codeCompleted, codeInterrupted, arguments, duration, priority, removeCompleted, showUnconscious, showWindow] call BIS_fnc_holdActionAdd",
    "tags": "[AG] [EL]",
    "description": "Adds an action to an object which requires the user to hold a key to perform the action.br Available official icons as of GVIarma32.\n02: * spoiler text=\"Show holdActionAdd list\" thumb|\nNote: This image does not contain all available icons.|500px * \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_access_fm_CA.paa\" * \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_end_sim_CA.paa\" * \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_exit_CA.paa\" * \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_start_sim_CA.paa\" * \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_view_article_CA.paa\" * \"\\a3\\data_f_destroyer\\data\\UI\\IGUI\\Cfg\\holdactions\\holdAction_loadVehicle_ca.paa\" * \"\\a3\\data_f_destroyer\\data\\UI\\IGUI\\Cfg\\holdactions\\holdAction_unloadVehicle_ca.paa\" * \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_box_ca.paa\" * \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_follow_start_ca.paa\" * \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_follow_stop_ca.paa\" * \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_talk_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_connect_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_forceRespawn_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_hack_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_loaddevice_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_passleadership_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_requestleadership_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_reviveMedic_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_revive_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_search_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_secure_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_takeOff1_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_takeOff2_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_thumbsdown_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_thumbsup_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_unbind_ca.paa\" * \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_unloaddevice_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\attack_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\destroy_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_market_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_sleep2_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_sleep_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\map_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\meet_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\refuel_ca.paa\" * \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\repair_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_aaf_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_csat_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_escape_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fia_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fragment_back_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fragment_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_idap_ca.paa\" * \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_nato_ca.paa\" * \"\\a3\\ui_f_aow\\data\\igui\\cfg\\holdactions\\holdaction_charity_ca.paa\" </spoiler> * spoiler text=\"Show addAction list\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\takeflag_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\talk_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadallvehicles_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadincapacitated_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadvehicle_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\vtolvectoring_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\vtolvectoringcancel_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\arrow_down_gs.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\arrow_up_gs.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\autohover_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\bandage_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\beacons_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\beacons_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\cancelhover_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\clear_empty_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\close_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\eject_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\engine_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\engine_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\flapsextend_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\flapsretract_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\gear_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getincargo_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getincommander_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getindriver_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getingunner_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getinpilot_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getout_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\heal_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_batt_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_batt_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_brk_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_col_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_col_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_land_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_land_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_start_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_start_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_idl_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderdown_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderoff_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderup_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\landingautopilot_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\landingautopilot_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\loadvehicle_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\open_door_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\periscopedepth_off_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\periscopedepth_on_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\radaroff_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\radaron_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\reammo_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\refuel_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\reload_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\repair_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\returnflag_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\settimer_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\take_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_arrow_up_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_cancel_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_cancel_manualfire_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_deactivate_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_enter_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_exit_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_fire_in_flame_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_fire_put_down_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_gear_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_getin_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_getincargo.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_ladderondown_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_ladderonup_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_manualfire_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_open_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takemagazine_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takemine_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takeweapon_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_teamswitch_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_turnin_ca.paa\" * \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_turnout_ca.paa\" * \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_attachtocatapult_ca.paa\" * \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_detachtocatapult_ca.paa\" * \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_launchfromcatapult_ca.paa\" </spoiler> * spoiler text=\"UI that shows all icons\"sqf[] spawn { // EXECUTE IN EDEN EDITOR OR EDITOR PREVIEW! disableSerialization; private _display = findDisplay 313 createDisplay \"RscDisplayEmpty\"; private _edit = _display ctrlCreate [\"RscEdit\", 645]; _edit ctrlSetPosition [safezoneX + 50 * pixelW, safezoneY + 50 * pixelH, safezoneW - 500 * pixelW, 50 * pixelH]; _edit ctrlSetBackgroundColor [0,0,0,1]; _edit ctrlCommit 0; private _status = _display ctrlCreate [\"RscEdit\", 1337]; _status ctrlSetPosition [safezoneX + safezoneW - 400 * pixelW, safezoneY + 50 * pixelH, 350 * pixelW, 50 * pixelH]; _status ctrlSetBackgroundColor [0,0,0,1]; _status ctrlCommit 0; _status ctrlEnable false; private _tv = _display ctrlCreate [\"RscTreeSearch\", -1]; _tv ctrlSetFont \"EtelkaMonospacePro\"; _tv ctrlSetFontHeight 0.05; _tv ctrlSetPosition [safezoneX + 50 * pixelW, safezoneY + 125 * pixelH, safezoneW - 100 * pixelW, safeZoneH - 175 * pixelH]; _tv ctrlSetBackgroundColor [0,0,0,1]; _tv ctrlCommit 0; _tv ctrlAddEventHandler [\"treeSelChanged\", { params [\"_ctrlTV\", \"_selectionPath\"]; copyToClipboard (_ctrlTV tvText _selectionPath); playSound (\"RscDisplayCurator_ping\" + selectRandom [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\"]); (ctrlParent _ctrlTv) displayCtrl 1337 ctrlSetText \"Path copied to clipboard!\"; }]; private _counter = 0; { private _files = addonFiles [_x # 0, \".paa\"]; { if (\"\\actions\" in _x || \"\\holdaction\" in _x) then { _counter = _counter + 1; _status ctrlSetText format [\"%1 textures found.\", _counter]; private _index = _tv tvAdd [[], _x]; _tv tvSetPicture [[_index], _x]; }; } forEach _files; } foreach allAddonsInfo; _tv tvSortall [[], false]; };</sqf></spoiler>",
    "example": "sqf [ player, \"Kill\", \"\", \"\", \"true\", \"true\", { hint \"Started!\" }, { systemChat str (_this select 3) }, { player setDamage 1 }, { hint \"Afraid of death?\" }, [], 10, nil, true, false ] call BIS_fnc_holdActionAdd; </sqf>",
    "params": "<object> <string> <string> <string> <string> <string> <code> <code> <code> <code> <array> <number> <number> <boolean> <boolean> <boolean>",
    "returns": "number"
  },
  "BIS_fnc_holdActionRemove": {
    "command": "BIS_fnc_holdActionRemove",
    "timestamp": "2021-01-23T10:00:36Z",
    "version": "1.62",
    "syntax": "[<object>,<number>] call BIS_fnc_holdActionRemove",
    "docSyntax": "[target,ID] call BIS_fnc_holdActionRemove",
    "tags": "",
    "description": "Removes a hold action. This does exactly the same as removeAction.",
    "example": "[ player,10 ] call BIS_fnc_holdActionRemove;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_isThrowable": {
    "command": "BIS_fnc_isThrowable",
    "timestamp": "2021-01-23T09:56:52Z",
    "version": "1.62",
    "syntax": "<string> call BIS_fnc_isThrowable",
    "docSyntax": "magazine call BIS_fnc_isThrowable",
    "tags": "",
    "description": "Returns true if given magazine is throwable",
    "example": "_isThrowable = \"SmokeShellGreen\" call BIS_fnc_isThrowable;",
    "params": "<string>",
    "returns": "boolean | true"
  },
  "BIS_fnc_replaceWithSimpleObject": {
    "command": "BIS_fnc_replaceWithSimpleObject",
    "timestamp": "2021-01-23T10:26:15Z",
    "version": "1.62",
    "syntax": "[<object>] call BIS_fnc_replaceWithSimpleObject",
    "docSyntax": "[object] call BIS_fnc_replaceWithSimpleObject",
    "tags": "",
    "description": "Replaces a normal object with a Simple Object. Object must not contain any crew and must be placed on the ground. FeatureInformative * Useful if you do not have access to simple object adjustment data - e.g. in case of unsupported/discontinued asset. * All official assets have the adjustment data defined in config.",
    "example": "[tank] call BIS_fnc_replaceWithSimpleObject;",
    "params": "<object>",
    "returns": "simple object"
  },
  "BIS_fnc_simpleObjectData": {
    "command": "BIS_fnc_simpleObjectData",
    "timestamp": "2021-01-23T20:22:41Z",
    "version": "1.62",
    "syntax": "[<object>] call BIS_fnc_simpleObjectData",
    "docSyntax": "[classname] call BIS_fnc_simpleObjectData",
    "tags": "",
    "description": "Get complete data needed for simple object creation.",
    "example": "[\"B_Boat_Armed_01_minigun_F\"] call BIS_fnc_simpleObjectData;",
    "params": "<object>",
    "returns": "array | string | string | number | array | array | array | number | asl | array | boolean | boolean | bis_fnc_adjustsimpleobject"
  },
  "canVehicleCargo": {
    "command": "canVehicleCargo",
    "timestamp": "2021-01-22T22:02:13Z",
    "version": "1.62",
    "syntax": "<object> canVehicleCargo <object>",
    "docSyntax": "vehicle canVehicleCargo cargo",
    "tags": "",
    "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle",
    "example": "Blackfish with no vehicle cargo loaded sqfprivate _result = blackfish canVehicleCargo offroad; // [true, true]</sqf>",
    "params": "<object> <object>",
    "returns": "array | boolean"
  },
  "createMPCampaignDisplay": {
    "command": "createMPCampaignDisplay",
    "timestamp": "2021-01-22T22:04:28Z",
    "version": "1.62",
    "syntax": "<display> createMPCampaignDisplay <string>",
    "docSyntax": "display createMPCampaignDisplay class",
    "tags": "[AL] [EL]",
    "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; for example, icconfigFile&nbsp;>>&nbsp;\"CfgMissions\"&nbsp;>>&nbsp;\"MPMissions\"&nbsp;>>&nbsp;\"Apex\"br If the class doesn't exist or isn't a mission collection, the display will be created empty.",
    "example": "findDisplay 46 createMPCampaignDisplay \"Apex\";",
    "params": "<display> <string>",
    "returns": "nothing"
  },
  "ctrlSetAngle": {
    "command": "ctrlSetAngle",
    "timestamp": "2021-01-22T22:02:02Z",
    "version": "1.62",
    "syntax": "<control> ctrlSetAngle [<number>, <number>, <number>, <boolean>]",
    "docSyntax": "control ctrlSetAngle [angle, centerX, centerY, now]",
    "tags": "[AL] [EL]",
    "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Only requires ctrlCommit when fourth parameter is set to false. Procedural textures filled controls do not rotate.",
    "example": "_control ctrlSetAngle [25, 0.5, 0.5];",
    "params": "<control> <number> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "ctrlSetFontHeightSecondary": {
    "command": "ctrlSetFontHeightSecondary",
    "timestamp": "2021-01-22T22:02:03Z",
    "version": "1.62",
    "syntax": "<control> ctrlSetFontHeightSecondary <number>",
    "docSyntax": "ctrl ctrlSetFontHeightSecondary value",
    "tags": "[EL]",
    "description": "Sets the font size of the secondary text of given control.",
    "example": "_control ctrlSetFontHeightSecondary 0.05;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctrlSetFontSecondary": {
    "command": "ctrlSetFontSecondary",
    "timestamp": "2021-01-22T22:03:17Z",
    "version": "1.62",
    "syntax": "<control> ctrlSetFontSecondary <string>",
    "docSyntax": "ctrl ctrlSetFontSecondary fontClass",
    "tags": "[EL]",
    "description": "Sets the font size of the secondary text of given control.",
    "example": "_control ctrlSetFontSecondary \"TahomaB\";",
    "params": "<control> <string>",
    "returns": "nothing"
  },
  "enableAimPrecision": {
    "command": "enableAimPrecision",
    "timestamp": "2021-01-22T22:56:08Z",
    "version": "1.62",
    "syntax": "<object> <boolean>AimPrecision enable",
    "docSyntax": "unit enableAimPrecision enable",
    "tags": "",
    "description": "Set whether animation's aim precision affects weapon sway.",
    "example": "player enableAimPrecision false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "enableVehicleCargo": {
    "command": "enableVehicleCargo",
    "timestamp": "2021-01-23T00:26:19Z",
    "version": "1.62",
    "syntax": "<object> <boolean>VehicleCargo enable",
    "docSyntax": "vehicle enableVehicleCargo enable",
    "tags": "",
    "description": "Enable/disable option to transport other vehicles (if configured) or be transported.",
    "example": "vehicle enableVehicleCargo true; ",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "flyInHeightASL": {
    "command": "flyInHeightASL",
    "timestamp": "2021-01-22T23:32:03Z",
    "version": "1.62",
    "syntax": "<object> flyInHeightASL [<number>, <number>, <number>]",
    "docSyntax": "aircraft flyInHeightASL [standardAltitude, combatAltitude, stealthAltitude]",
    "tags": "",
    "description": "Sets the minimal ASL height. Final height is ic''flyInHeight'' max ''flyInHeightASL'' - the higher altitude has priority.",
    "example": "cobraOne flyInHeightASL [200, 100, 400];",
    "params": "<object> <number> <number> <number>",
    "returns": "nothing"
  },
  "forcedMap": {
    "command": "forcedMap",
    "timestamp": "2021-01-23T00:59:33Z",
    "version": "1.62",
    "syntax": "forcedMap",
    "docSyntax": "forcedMap",
    "tags": "",
    "description": "Returns if map was forced by using forceMap command or openMap command with force option",
    "example": "_forceMapForced = forcedMap select 0; _openMapForced = forcedMap select 1;",
    "params": "",
    "returns": "array | boolean | true | forcemap | boolean | true | openmap"
  },
  "getAimingCoef": {
    "command": "getAimingCoef",
    "timestamp": "2021-01-22T23:41:16Z",
    "version": "1.62",
    "syntax": "getAimingCoef <object>",
    "docSyntax": "getAimingCoef unit",
    "tags": "",
    "description": "Get current aiming coefficient (higher ~ less precise, default is 1)",
    "example": "_coef = getAimingCoef player",
    "params": "<object>",
    "returns": "number"
  },
  "getAllOwnedMines": {
    "command": "getAllOwnedMines",
    "timestamp": "2021-05-23T16:36:36Z",
    "version": "1.62",
    "syntax": "getAllOwnedMines <object>",
    "docSyntax": "getAllOwnedMines unit",
    "tags": "",
    "description": "Gets all mine objects this unit has ownership over.",
    "example": "_mines = getAllOwnedMines player;",
    "params": "<object>",
    "returns": "array"
  },
  "getContainerMaxLoad": {
    "command": "getContainerMaxLoad",
    "timestamp": "2021-01-23T00:03:32Z",
    "version": "1.62",
    "syntax": "getContainerMaxLoad <string>",
    "docSyntax": "getContainerMaxLoad containerClass",
    "tags": "",
    "description": "Returns max load value of given uniform, vest or backpack container. For other types of containers, use maxLoad command",
    "example": "_maxLoadUniform = getContainerMaxLoad uniform player; _maxLoadVest = getContainerMaxLoad vest player; _maxLoadBackpack = getContainerMaxLoad backpack player;",
    "params": "<string>",
    "returns": "number"
  },
  "getMissionDLCs": {
    "command": "getMissionDLCs",
    "timestamp": "2021-01-23T00:53:38Z",
    "version": "1.62",
    "syntax": "getMissionDLCs",
    "docSyntax": "getMissionDLCs",
    "tags": "",
    "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and does not detect units created by scripts!",
    "example": "_usedDLCs = getMissionDLCs;",
    "params": "",
    "returns": "array"
  },
  "getShotParents": {
    "command": "getShotParents",
    "timestamp": "2021-01-23T09:02:47Z",
    "version": "1.62",
    "syntax": "getShotParents <object>",
    "docSyntax": "getShotParents projectile",
    "tags": "",
    "description": "Returns shot information for the given projectile. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.",
    "example": "_shotParents = getShotParents myProjectile;",
    "params": "<object>",
    "returns": "array"
  },
  "getVehicleCargo": {
    "command": "getVehicleCargo",
    "timestamp": "2021-01-23T09:10:49Z",
    "version": "1.62",
    "syntax": "getVehicleCargo <object>",
    "docSyntax": "getVehicleCargo storingVehicle",
    "tags": "[AG] [EG]",
    "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.",
    "example": "_vehicleCargo = getVehicleCargo blackfish; codecomment// returns [] if empty",
    "params": "<object>",
    "returns": "array"
  },
  "getWeaponSway": {
    "command": "getWeaponSway",
    "timestamp": "2021-01-23T09:05:51Z",
    "version": "1.62",
    "syntax": "getWeaponSway <object>",
    "docSyntax": "getWeaponSway unit",
    "tags": "",
    "description": "Returns current size of weapon sway of a given unit, in radians.",
    "example": "_sway = getWeaponSway player;",
    "params": "<object>",
    "returns": "number"
  },
  "isVehicleCargo": {
    "command": "isVehicleCargo",
    "timestamp": "2021-01-23T09:21:21Z",
    "version": "1.62",
    "syntax": "isVehicleCargo <object>",
    "docSyntax": "isVehicleCargo cargo",
    "tags": "",
    "description": "Despite a misleading name, returns the vehicle that is transporting given vehicle in cargo. If the given vehicle is not in vehicle cargo, objNull is returned.",
    "example": "_transportingVehicle = isVehicleCargo quad; //returns blackfish",
    "params": "<object>",
    "returns": "object"
  },
  "missionDifficulty": {
    "command": "missionDifficulty",
    "timestamp": "2021-01-23T10:05:26Z",
    "version": "1.62",
    "syntax": "missionDifficulty",
    "docSyntax": "missionDifficulty",
    "tags": "",
    "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it is used one from player's options.",
    "example": "_number = missionDifficulty;",
    "params": "",
    "returns": "number"
  },
  "modParams": {
    "command": "modParams",
    "timestamp": "2021-01-23T09:59:23Z",
    "version": "1.62",
    "syntax": "modParams [<string>, <array>]",
    "docSyntax": "modParams [modClass, options]",
    "tags": "",
    "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options \nare: {! style=\"border-\nspacing: 1.5em 0\" ! hl\"name\" !! String !! Name to be shown (Arma 3 instead of A3, etc.) !- ! hl\"picture\" !! String !! Picture shown in Mod Launcher !- ! hl\"logo\" !! String !! Logo to be shown in Main Menu !- ! hl\"logoOver\" !! String !! Logo to be shown in Main Menu when mouse is over !- ! hl\"logoSmall\" !! String !! Small version of logo, prepared for drawing small icons !- ! hl\"tooltip\" !! String !! Tooltip to be shown on mouse over !- ! hl\"tooltipOwned\" !! String !! Tooltip to be shown on mouse over the icon when DLC is owned by player !- ! hl\"action\" !! String !! URL to be triggered when mod button is clicked !- ! hl\"actionName\" !! String !! What to put on Action Button !- ! hl\"overview\" !! String !! Overview text visible in expansion menu !- ! hl\"hidePicture\" !! Boolean !! Do not show mod picture icon in the main menu mod list !- ! hl\"hideName\" !! Boolean !! Do not show mod name in the main menu mod list !- ! hl\"defaultMod\" !! Boolean !! Default mods cannot be moved or disabled by Mod Launcher !- ! hl\"serverOnly\" !! Boolean !! Mod does not have to be installed on client in order to play on server with this mod running !- ! hl\"active\" !! Boolean !! Active mod (activated through command line or stored in profile by mod launcher) !} Feature Informative Please note that hl\"active\" Does not actually tell you if a mod is running / pretends to be running.",
    "example": "_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];",
    "params": "<string> <array>",
    "returns": "array"
  },
  "openDLCPage": {
    "command": "openDLCPage",
    "timestamp": "2021-01-23T10:26:00Z",
    "version": "1.62",
    "syntax": "openDLCPage <number>",
    "docSyntax": "openDLCPage dlcID",
    "tags": "",
    "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)",
    "example": "openDLCPage 288520",
    "params": "<number>",
    "returns": "boolean"
  },
  "pixelGridBase": {
    "command": "pixelGridBase",
    "timestamp": "2021-01-23T10:24:07Z",
    "version": "1.62",
    "syntax": "'pixelGridBase'",
    "docSyntax": "'pixelGridBase'",
    "tags": "",
    "description": "Returns grid size based on screen resolution.",
    "example": "_gridBaseHeight = pixelH * pixelGridBase;",
    "params": "",
    "returns": "number"
  },
  "pixelGridNoUIScale": {
    "command": "pixelGridNoUIScale",
    "timestamp": "2021-01-23T10:30:48Z",
    "version": "1.62",
    "syntax": "'pixelGridNoUIScale'",
    "docSyntax": "'pixelGridNoUIScale'",
    "tags": "",
    "description": "Returns grid size based on screen resolution and \nconfigs: uiScaleFactor, uiScaleMaxGrids. As mentioned in the name of this command, the 'user interface scale is ignored'.",
    "example": "_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;",
    "params": "",
    "returns": "number"
  },
  "removeAllOwnedMines": {
    "command": "removeAllOwnedMines",
    "timestamp": "2021-05-23T16:35:54Z",
    "version": "1.62",
    "syntax": "removeAllOwnedMines <object>",
    "docSyntax": "removeAllOwnedMines unit",
    "tags": "",
    "description": "Removes ownership of all owned mines/explosive devices of the given unit",
    "example": "removeAllOwnedMines player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeOwnedMine": {
    "command": "removeOwnedMine",
    "timestamp": "2021-01-23T10:37:43Z",
    "version": "1.62",
    "syntax": "unit removeOwnedMine <object>",
    "docSyntax": "unit removeOwnedMine mine",
    "tags": "",
    "description": "Removes ownership over a remotely detonatable mine from the unit.",
    "example": "player removeOwnedMine SuperMine;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "setVehicleCargo": {
    "command": "setVehicleCargo",
    "timestamp": "2021-01-24T00:24:20Z",
    "version": "1.62",
    "syntax": "<object> setVehicleCargo <object>",
    "docSyntax": "vehicle setVehicleCargo cargo",
    "tags": "[EG]",
    "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded. Can also be used to unload a specific loaded vehicle or all loaded vehicles.",
    "example": "_success = blackfish setVehicleCargo offroad; // true ",
    "params": "<object> <object>",
    "returns": "boolean"
  },
  "tvSetPictureColorDisabled": {
    "command": "tvSetPictureColorDisabled",
    "timestamp": "2021-01-24T10:42:13Z",
    "version": "1.62",
    "syntax": "<control> tvSetPictureColorDisabled <array>",
    "docSyntax": "control tvSetPictureColorDisabled [path, color]",
    "tags": "",
    "description": "Sets the color of left picture of a tree item defined by path when item is disabled",
    "example": "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]",
    "params": "<control> <array> <array> <array>",
    "returns": "nothing"
  },
  "tvSetPictureColorSelected": {
    "command": "tvSetPictureColorSelected",
    "timestamp": "2021-01-24T10:42:02Z",
    "version": "1.62",
    "syntax": "<control> tvSetPictureColorSelected <array>",
    "docSyntax": "control tvSetPictureColorSelected [path, color]",
    "tags": "",
    "description": "Sets the color of the left picture of a tree item defined by path when item is selected",
    "example": "_control tvSetPictureColorSelected [[0], [1,0,1,1]]",
    "params": "<control> <array> <array> <array>",
    "returns": "nothing"
  },
  "tvSetPictureRight": {
    "command": "tvSetPictureRight",
    "timestamp": "2021-01-24T10:38:44Z",
    "version": "1.62",
    "syntax": "tvSetPictureRight [<number>, <array>, <string>]",
    "docSyntax": "tvSetPictureRight [idc, path, name]",
    "tags": "",
    "description": "Sets right picture on the tree view item defined by path.",
    "example": "tvSetPictureRight [101, [0], \"picture\"];",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "tvSetPictureRightColor": {
    "command": "tvSetPictureRightColor",
    "timestamp": "2021-01-24T10:47:51Z",
    "version": "1.62",
    "syntax": "tvSetPictureRightColor [<number>, <array>, color]",
    "docSyntax": "tvSetPictureRightColor [idc, path, color]",
    "tags": "",
    "description": "Sets color of the right picture on the tree view item defined by path",
    "example": "tvSetPictureRightColor [101, [0], [1,0,1,1]];",
    "params": "<number> <array> color <control> <array> color",
    "returns": "nothing"
  },
  "tvSetPictureRightColorDisabled": {
    "command": "tvSetPictureRightColorDisabled",
    "timestamp": "2021-01-24T10:44:34Z",
    "version": "1.62",
    "syntax": "<control> tvSetPictureRightColorDisabled <array>",
    "docSyntax": "control tvSetPictureRightColorDisabled [path, color]",
    "tags": "",
    "description": "Sets the color of the right picture of a tree item defined by path when item is disabled",
    "example": "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]",
    "params": "<control> <array> <array> <array>",
    "returns": "nothing"
  },
  "tvSetPictureRightColorSelected": {
    "command": "tvSetPictureRightColorSelected",
    "timestamp": "2021-01-24T10:42:44Z",
    "version": "1.62",
    "syntax": "<control> tvSetPictureRightColorSelected <array>",
    "docSyntax": "control tvSetPictureRightColorSelected [path, color]",
    "tags": "",
    "description": "Sets the color of the right picture of a tree item defined by path when item is selected",
    "example": "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]",
    "params": "<control> <array> <array> <array>",
    "returns": "nothing"
  },
  "vehicleCargoEnabled": {
    "command": "vehicleCargoEnabled",
    "timestamp": "2021-01-24T10:47:42Z",
    "version": "1.62",
    "syntax": "<object>CargoEnabled vehicle",
    "docSyntax": "vehicleCargoEnabled vehicle",
    "tags": "",
    "description": "Check if the vehicle has enabled transporting other vehicles or not.",
    "example": "_canTransportVehicles = vehicleCargoEnabled blackfish; //returns true ",
    "params": "<object>",
    "returns": "boolean"
  },
  "actionIDs": {
    "command": "actionIDs",
    "timestamp": "2021-01-22T21:37:39Z",
    "version": "1.64",
    "syntax": "actionIDs <object>",
    "docSyntax": "actionIDs entity",
    "tags": "[AG] [EL]",
    "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.",
    "example": "_actions = actionIDs player;",
    "params": "<object>",
    "returns": "array"
  },
  "actionParams": {
    "command": "actionParams",
    "timestamp": "2021-01-22T21:28:50Z",
    "version": "1.64",
    "syntax": "<object> actionParams <number>",
    "docSyntax": "entity actionParams id",
    "tags": "",
    "description": "Returns Array with params for given user action id (similar to addAction param array).",
    "example": "_params = player actionParams 0;",
    "params": "<object> <number>",
    "returns": "string | setuseractiontext | string | setuseractiontext | string | string | objnull | code | nil | true | true | false | nothing"
  },
  "BIS_fnc_attachToRelative": {
    "command": "BIS_fnc_attachToRelative",
    "timestamp": "2021-01-22T23:38:42Z",
    "version": "1.64",
    "syntax": "[<object>, <object>, visual] call BIS_fnc_attachToRelative",
    "docSyntax": "[object1, object2, visual] call BIS_fnc_attachToRelative",
    "tags": "[AL] [EG]",
    "description": "Attaches object 1 to object 2, while preserving object 1 initial position and orientation against object 2",
    "example": "[tank, car] call BIS_fnc_attachToRelative;",
    "params": "<object> <object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_switchLamp": {
    "command": "BIS_fnc_switchLamp",
    "timestamp": "2021-01-23T20:23:47Z",
    "version": "1.64",
    "syntax": "[<object>, <boolean>] call BIS_fnc_switchLamp",
    "docSyntax": "[object, state] call BIS_fnc_switchLamp",
    "tags": "[EL]",
    "description": "Switch streetlamp on/off.",
    "example": "// switches all lamps off in a radius of 200m private _lampsIn200m = nearestObjects [player, [\"Lamps_base_F\", \"PowerLines_base_F\", \"PowerLines_Small_base_F\"], 200]; { [_x, false] call BIS_fnc_switchLamp; } forEach _lampsIn200m;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_vectorDirAndUpRelative": {
    "command": "BIS_fnc_vectorDirAndUpRelative",
    "timestamp": "2021-01-24T10:44:57Z",
    "version": "1.64",
    "syntax": "[<object>, <object>, <boolean>] call BIS_fnc_vectorDirAndUpRelative",
    "docSyntax": "[object1, object2, visual] call BIS_fnc_vectorDirAndUpRelative",
    "tags": "",
    "description": "Returns vectorDirAndUp of object 1 relative to object 2",
    "example": "_vectorDirAndUp = [tank, car] call BIS_fnc_vectorDirAndUpRelative;",
    "params": "<object> <object> <boolean>",
    "returns": "array | vectordir | vectorup"
  },
  "BIS_fnc_weaponDirectionRelative": {
    "command": "BIS_fnc_weaponDirectionRelative",
    "timestamp": "2021-01-24T10:42:57Z",
    "version": "1.64",
    "syntax": "[<object>, <string> visual] call BIS_fnc_weaponDirectionRelative",
    "docSyntax": "[vehicle, weapon visual] call BIS_fnc_weaponDirectionRelative",
    "tags": "",
    "description": "Returns relative direction vector of given weapon for the given vehicle",
    "example": "_relweapondir = [tank, \"cannon_105mm\"] call BIS_fnc_weaponDirectionRelative;",
    "params": "<object> <string> <boolean>",
    "returns": "array"
  },
  "diag_activeScripts": {
    "command": "diag_activeScripts",
    "timestamp": "2021-01-22T22:49:36Z",
    "version": "1.64",
    "syntax": "diag_activeScripts",
    "docSyntax": "diag_activeScripts",
    "tags": "",
    "description": "Returns 4 element array with numbers of currently running scripts in \nformat: [nowikispawn-ed, execVM-ed, exec-ed, execFSM-ed]",
    "example": "hint str diag_activeScripts; //[0,0,0,1]",
    "params": "",
    "returns": "array"
  },
  "diag_recordTurretLimits": {
    "command": "diag_recordTurretLimits",
    "timestamp": "2021-05-23T11:56:51Z",
    "version": "1.64",
    "syntax": "diag_recordTurretLimits <boolean>",
    "docSyntax": "diag_recordTurretLimits section",
    "tags": "",
    "description": "Start recording tool for creating turret aiming limits.",
    "example": "diag_recordTurretLimits true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "enableAudioFeature": {
    "command": "enableAudioFeature",
    "timestamp": "2021-01-22T22:55:28Z",
    "version": "1.64",
    "syntax": "<boolean>AudioFeature [<string>, enable]",
    "docSyntax": "enableAudioFeature [feature, enable]",
    "tags": "",
    "description": "Enable/disable an audio feature, features \nare: \"lowpass\", \"building_interior\".",
    "example": "prevState = enableAudioFeature [\"lowpass\", true];",
    "params": "<string> <boolean>",
    "returns": "boolean"
  },
  "forceFollowRoad": {
    "command": "forceFollowRoad",
    "timestamp": "2021-05-23T16:32:13Z",
    "version": "1.64",
    "syntax": "<object> forceFollowRoad <boolean>",
    "docSyntax": "vehicle forceFollowRoad state",
    "tags": "",
    "description": "Forces the vehicle to stay on road.",
    "example": "car forceFollowRoad true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "getAllEnvSoundControllers": {
    "command": "getAllEnvSoundControllers",
    "timestamp": "2021-01-22T23:27:21Z",
    "version": "1.64",
    "syntax": "getAllEnvSoundControllers <position>",
    "docSyntax": "getAllEnvSoundControllers position",
    "tags": "",
    "description": "Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds. Feature Important The names of controllers are case sensitive Feature Important Please note that the name for the wind param for 2D controller is 'windy'. 'wind' is the name for 3D controller getAllEnv3DSoundControllers",
    "example": "getAllEnvSoundControllers position player; codecomment/* returns e.g [ [\"rain\",0], [\"night\",0], [\"windy\",0.161588], ... ] nowiki*/",
    "params": "<position>",
    "returns": "array"
  },
  "getAllSoundControllers": {
    "command": "getAllSoundControllers",
    "timestamp": "2021-01-22T23:47:51Z",
    "version": "1.64",
    "syntax": "getAllSoundControllers <object>",
    "docSyntax": "getAllSoundControllers vehicle",
    "tags": "",
    "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.",
    "example": "getAllSoundControllers vehicle player; codecomment/* returns e.g [ [\"rpm\",0], [\"randomizer\",0.874332], [\"speed\",0], [\"thrust\",0], ... ] nowiki*/",
    "params": "<object>",
    "returns": "array"
  },
  "getEnvSoundController": {
    "command": "getEnvSoundController",
    "timestamp": "2021-01-23T00:45:56Z",
    "version": "1.64",
    "syntax": "<position> getEnvSoundController <string>",
    "docSyntax": "position getEnvSoundController controller",
    "tags": "",
    "description": "Returns value of the specified controller, see getAllEnvSoundControllers",
    "example": "position player getEnvSoundController \"trees\"; //0.3333",
    "params": "<position> <string>",
    "returns": "number"
  },
  "getPilotCameraDirection": {
    "command": "getPilotCameraDirection",
    "timestamp": "2021-01-23T00:58:09Z",
    "version": "1.64",
    "syntax": "getPilotCameraDirection <object>",
    "docSyntax": "getPilotCameraDirection object",
    "tags": "[AL]",
    "description": "Returns model space vector of the object airplane or helicopter pilotCamera .",
    "example": "_pilotCamVector = 'getPilotCameraDirection' vehicle player",
    "params": "<object>",
    "returns": "positionrelative). returns [0,0,0] if object has no pilotcamera."
  },
  "getPilotCameraPosition": {
    "command": "getPilotCameraPosition",
    "timestamp": "2021-01-23T00:55:22Z",
    "version": "1.64",
    "syntax": "getPilotCameraPosition <object>",
    "docSyntax": "getPilotCameraPosition object",
    "tags": "[AG]",
    "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .",
    "example": "_pilotCamPos = 'getPilotCameraPosition' vehicle player",
    "params": "<object>",
    "returns": "positionrelative. returns [0,0,0] if object has no pilotcamera."
  },
  "getPilotCameraRotation": {
    "command": "getPilotCameraRotation",
    "timestamp": "2021-01-22T23:50:52Z",
    "version": "1.64",
    "syntax": "getPilotCameraRotation <object>",
    "docSyntax": "getPilotCameraRotation object",
    "tags": "[AL]",
    "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
    "example": "_pilotCamRot = 'getPilotCameraRotation' vehicle player",
    "params": "<object>",
    "returns": "pilotcamera."
  },
  "getPilotCameraTarget": {
    "command": "getPilotCameraTarget",
    "timestamp": "2021-01-22T23:51:19Z",
    "version": "1.64",
    "syntax": "getPilotCameraTarget <object>",
    "docSyntax": "getPilotCameraTarget object",
    "tags": "[AL]",
    "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.",
    "example": "getPilotCameraTarget params [\"_pilotCamTracking\", \"_pilotCamTargetPos\", \"_pilotCamTarget\"];",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "getSoundController": {
    "command": "getSoundController",
    "timestamp": "2021-01-23T09:05:54Z",
    "version": "1.64",
    "syntax": "<object> getSoundController <string>",
    "docSyntax": "vehicle getSoundController controller",
    "tags": "",
    "description": "Returns value of the given sound controller.",
    "example": "vehicle player getSoundController \"rpm\"; //600",
    "params": "<object> <string>",
    "returns": "number"
  },
  "getSoundControllerResult": {
    "command": "getSoundControllerResult",
    "timestamp": "2021-01-23T08:57:20Z",
    "version": "1.64",
    "syntax": "<object> getSoundControllerResult <config>",
    "docSyntax": "vehicle getSoundControllerResult config",
    "tags": "",
    "description": "Returns the calculated value of mission config entry. It is more important that the vehicle is a transport and not any object. If the expression contains sound controllers, the controller values will be taken from the given vehicle.",
    "example": "_result = (>> \"cfgVehicles\" >> >> \"sounds\" >> \"idle_ext\" >> \"volume\");",
    "params": "<object> <config>",
    "returns": "number"
  },
  "hasPilotCamera": {
    "command": "hasPilotCamera",
    "timestamp": "2021-01-23T09:26:50Z",
    "version": "1.64",
    "syntax": "hasPilotCamera <object>",
    "docSyntax": "hasPilotCamera object",
    "tags": "[AG]",
    "description": "Returns true if the object airplane or helicopter has a pilotCamera.",
    "example": "hasPilotCamera vehicle player",
    "params": "<object>",
    "returns": "boolean"
  },
  "setPilotCameraDirection": {
    "command": "setPilotCameraDirection",
    "timestamp": "2021-01-23T20:32:10Z",
    "version": "1.64",
    "syntax": "<object> setPilotCameraDirection positionrelative",
    "docSyntax": "object setPilotCameraDirection Vector3D",
    "tags": "[AL]",
    "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).",
    "example": "vehicle player 'setPilotCameraDirection' [0,1,0] //re-centers the camera",
    "params": "<object> positionrelative",
    "returns": "nothing"
  },
  "setPilotCameraRotation": {
    "command": "setPilotCameraRotation",
    "timestamp": "2021-01-23T20:26:56Z",
    "version": "1.64",
    "syntax": "<object> setPilotCameraRotation <array>",
    "docSyntax": "object setPilotCameraRotation rotation",
    "tags": "[AL]",
    "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
    "example": "vehicle player setPilotCameraRotation [rad 90, rad 45]",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "setPilotCameraTarget": {
    "command": "setPilotCameraTarget",
    "timestamp": "2021-01-23T20:34:16Z",
    "version": "1.64",
    "syntax": "<object> setPilotCameraTarget <object>",
    "docSyntax": "object setPilotCameraTarget target",
    "tags": "[AL]",
    "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. To track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type. Using objNull will unlock the camera",
    "example": "_pilotCamTrack = vehicle player 'setPilotCameraTarget' [2100,4200,4.2];",
    "params": "<object> <object>",
    "returns": "boolean"
  },
  "unitAimPosition": {
    "command": "unitAimPosition",
    "timestamp": "2021-01-24T10:43:49Z",
    "version": "1.64",
    "syntax": "<object>AimPosition unit",
    "docSyntax": "unitAimPosition unit",
    "tags": "[AG]",
    "description": "Returns the position on the unit other units can aim at. Same as PositionAGL format and has render scope alternative unitAimPositionVisual.",
    "example": "unitAimPosition player;",
    "params": "<object>",
    "returns": "positionagl"
  },
  "unitAimPositionVisual": {
    "command": "unitAimPositionVisual",
    "timestamp": "2021-01-24T10:45:04Z",
    "version": "1.64",
    "syntax": "<object>AimPositionVisual unit",
    "docSyntax": "unitAimPositionVisual unit",
    "tags": "[AG]",
    "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.",
    "example": "unitAimPositionVisual player;",
    "params": "<object>",
    "returns": "positionagl"
  },
  "unitIsUAV": {
    "command": "unitIsUAV",
    "timestamp": "2021-01-24T10:46:02Z",
    "version": "1.64",
    "syntax": "unitIsUAV <object>",
    "docSyntax": "unitIsUAV object",
    "tags": "",
    "description": "Returns whether or not the given object is an UAV, UGV (drone). Command will also return true for empty drones. Corresponding to transport parameter isUAV.",
    "example": "_isUAV = unitIsUAV _vehicle;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "useAIOperMapObstructionTest": {
    "command": "useAIOperMapObstructionTest",
    "timestamp": "2021-01-24T10:43:24Z",
    "version": "1.64",
    "syntax": "useAIOperMapObstructionTest <boolean>",
    "docSyntax": "useAIOperMapObstructionTest state",
    "tags": "",
    "description": "Toggle secondary obstruction test on road paths.",
    "example": "useAIOperMapObstructionTest true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "visibleScoretable": {
    "command": "visibleScoretable",
    "timestamp": "2021-01-24T10:43:37Z",
    "version": "1.64",
    "syntax": "visibleScoretable",
    "docSyntax": "visibleScoretable",
    "tags": "",
    "description": "Checks whether the score table is visible.",
    "example": "_visible = visibleScoretable;",
    "params": "",
    "returns": "boolean"
  },
  "BIS_fnc_bitflagsCheck": {
    "command": "BIS_fnc_bitflagsCheck",
    "timestamp": "2021-01-22T23:08:38Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitflagsCheck",
    "docSyntax": "[flagset, flag] call BIS_fnc_bitflagsCheck",
    "tags": "",
    "description": "Checks if one or more flags are set in the given flagset, represented with decimal or hexadecimal numberbr (Hexadecimal number representation is simply auto-converted into decimal by the engine)br In other words, it simply performs a bitwise AND (&) operation on the two \nnumbers: icflags & flagset > 0br To check which flags are present in given flagset use BIS_fnc_bitflagsToArraybrbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[2 + 4 + 8, 8] call BIS_fnc_bitflagsCheck; // true [2 + 4 + 8, 2 + 32] call BIS_fnc_bitflagsCheck; // true [2 + 4 + 8, 1] call BIS_fnc_bitflagsCheck; // false [2 + 4 + 8, 1 + 32] call BIS_fnc_bitflagsCheck; // false",
    "params": "<number> <number>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_bitflagsFlip": {
    "command": "BIS_fnc_bitflagsFlip",
    "timestamp": "2021-01-23T00:47:40Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitflagsFlip",
    "docSyntax": "[flagset, flag] call BIS_fnc_bitflagsFlip",
    "tags": "",
    "description": "Flips one or more flags (set gets unset and vice versa) in the given flagset, represented with decimal or hexadecimal numberbr (Hexadecimal number representation is simply auto-converted into decimal by the engine)br To check which flags are present in given flagset use BIS_fnc_bitflagsToArraybrbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[1 + 16, 8] call BIS_fnc_bitflagsFlip; // 25 (which is 1 + 8 + 16) [25, 8] call BIS_fnc_bitflagsFlip; // 17 (which is 1 + 16) [2 + 4 + 8, 2 + 8] call BIS_fnc_bitflagsFlip; // 4 [4, 2 + 8] call BIS_fnc_bitflagsFlip; // 14 (which is 2 + 4 + 8)",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_bitflagsSet": {
    "command": "BIS_fnc_bitflagsSet",
    "timestamp": "2021-01-23T00:56:49Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitflagsSet",
    "docSyntax": "[flagset, flag] call BIS_fnc_bitflagsSet",
    "tags": "",
    "description": "Sets one or more flags in the given flagset, represented with decimal or hexadecimal numberbr (Hexadecimal number representation is simply auto-converted into decimal by the engine)br To check which flags are present in given flagset use BIS_fnc_bitflagsToArraybrbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[0, 16] call BIS_fnc_bitflagsSet; // 16 [16, 2] call BIS_fnc_bitflagsSet; // 18 (which is 2 + 16) [18, 2 + 8 + 16] call BIS_fnc_bitflagsSet; // 26 (which is 2 + 8 + 16)",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_bitflagsToArray": {
    "command": "BIS_fnc_bitflagsToArray",
    "timestamp": "2021-01-23T00:58:31Z",
    "version": "1.66",
    "syntax": "<number> call BIS_fnc_bitflagsToArray",
    "docSyntax": "flagset call BIS_fnc_bitflagsToArray",
    "tags": "",
    "description": "Returns array with all bit flags which are set in the given flagsetbrbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "15 call BIS_fnc_bitflagsToArray; // [1,2,4,8] 2342 call BIS_fnc_bitflagsToArray; // [2,4,32,256,2048] [2 + 4 + 8] call BIS_fnc_bitflagsToArray; // [2,4,8] [2 + 2 + 2 + 4 + 8 + 8 + 8] call BIS_fnc_bitflagsToArray; // [2,32]",
    "params": "<number>",
    "returns": "array"
  },
  "BIS_fnc_bitflagsUnset": {
    "command": "BIS_fnc_bitflagsUnset",
    "timestamp": "2021-01-22T23:49:18Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitflagsUnset",
    "docSyntax": "[flagset, flag] call BIS_fnc_bitflagsUnset",
    "tags": "",
    "description": "Unsets one or more flags in the given flagset, represented with decimal or hexadecimal numberbr (Hexadecimal number representation is simply auto-converted into decimal by the engine)br To check which flags are present in given flagset use BIS_fnc_bitflagsToArraybrbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[2 + 4 + 8, 8] call BIS_fnc_bitflagsUnset; // 6 (which is 2 + 4) [2 + 4 + 8, 2 + 8] call BIS_fnc_bitflagsUnset; // 4 [2 + 4 + 8, 1 + 8] call BIS_fnc_bitflagsUnset; // 6 (which is 2 + 4) [2 + 4 + 8, 1 + 8 + 8 + 2 + 2] call BIS_fnc_bitflagsUnset; // 10 (which is 2 + 8, since 1 + 8 + 8 + 2 + 2 is in fact 1 + 4 + 16)",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_bitwiseAND": {
    "command": "BIS_fnc_bitwiseAND",
    "timestamp": "2021-01-22T23:08:29Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitwiseAND",
    "docSyntax": "[num1, num2] call BIS_fnc_bitwiseAND",
    "tags": "",
    "description": "Performs bitwise AND operation on two decimal or hexadecimal unsigned 24 bit integers br(Hexadecimal number representation is simply auto-converted into decimal by the engine)brbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[2 + 4 + 8 + 32, 1] call BIS_fnc_bitwiseAND; // 0 [2 + 4 + 8 + 32, 2] call BIS_fnc_bitwiseAND; // 2 [1 + 2 + 16 + 32, 4 + 8] call BIS_fnc_bitwiseAND; // 0 [1 + 2 + 16 + 32, 4 + 32] call BIS_fnc_bitwiseAND; // 32 [1 + 2 + 16 + 32, 16 + 32] call BIS_fnc_bitwiseAND; // 48",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_bitwiseNOT": {
    "command": "BIS_fnc_bitwiseNOT",
    "timestamp": "2021-01-22T23:18:55Z",
    "version": "1.66",
    "syntax": "<number> call BIS_fnc_bitwiseNOT",
    "docSyntax": "num call BIS_fnc_bitwiseNOT",
    "tags": "",
    "description": "Performs bitwise NOT operation on decimal or hexadecimal unsigned 24 bit integer br(Hexadecimal number representation is simply auto-converted into decimal by the engine)brbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "873687 call BIS_fnc_bitwiseNOT; // 15903528 [2 + 4 + 8 + 32 + 256 + 1024] call BIS_fnc_bitwiseNOT; // 16775889",
    "params": "<number>",
    "returns": "number"
  },
  "BIS_fnc_bitwiseOR": {
    "command": "BIS_fnc_bitwiseOR",
    "timestamp": "2021-01-22T23:09:21Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitwiseOR",
    "docSyntax": "[num1, num2] call BIS_fnc_bitwiseOR",
    "tags": "",
    "description": "Performs bitwise OR operation on two decimal or hexadecimal unsigned 24 bit integers br(Hexadecimal number representation is simply auto-converted into decimal by the engine)brbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[2 + 4 + 8 + 32, 1] call BIS_fnc_bitwiseOR; // 47 [1 + 2 + 16 + 32, 4 + 8] call BIS_fnc_bitwiseOR; // 63 [1 + 2 + 16 + 32, 4 + 32] call BIS_fnc_bitwiseOR; // 55 [1 + 2 + 16 + 32, 16 + 32] call BIS_fnc_bitwiseOR; // 51",
    "params": "<number> <number>",
    "returns": "number"
  },
  "BIS_fnc_bitwiseXOR": {
    "command": "BIS_fnc_bitwiseXOR",
    "timestamp": "2021-01-23T00:56:59Z",
    "version": "1.66",
    "syntax": "[<number>, <number>] call BIS_fnc_bitwiseXOR",
    "docSyntax": "[num1, num2] call BIS_fnc_bitwiseXOR",
    "tags": "",
    "description": "Performs bitwise XOR operation on two decimal or hexadecimal unsigned 24 bit integers br(Hexadecimal number representation is simply auto-converted into decimal by the engine)brbr 'Limitations':br Due to various limitations of the Real Virtuality engine this function is intended to work with unsigned 24 bit integers only. This means that the supported range is 2^0...2^24 (1...16777216)",
    "example": "[1 + 4 + 16, 1] call BIS_fnc_bitwiseXOR; // 20 [1 + 2 + 32, 4 + 8] call BIS_fnc_bitwiseXOR; // 47 [16 + 32, 4 + 16] call BIS_fnc_bitwiseXOR; // 36 [1 + 16 + 32, 2 + 32] call BIS_fnc_bitwiseXOR; // 19",
    "params": "<number> <number>",
    "returns": "number"
  },
  "inAreaArray": {
    "command": "inAreaArray",
    "timestamp": "2021-01-23T09:22:43Z",
    "version": "1.66",
    "syntax": "<<num<number>er>rray> inAreaArray <obje<number>t>",
    "docSyntax": "positions inAreaArray area",
    "tags": "",
    "description": "Returns given list of Objects and/or Positions that are in the given area, area defined by a trigger, marker, location or array.",
    "example": "vehicles inAreaArray myTrigger;",
    "params": "<array> <object> <array> position3d <number> <number> <number> <boolean> <number>",
    "returns": "array | object | position"
  },
  "isMultiplayerSolo": {
    "command": "isMultiplayerSolo",
    "timestamp": "2021-01-23T09:10:24Z",
    "version": "1.66",
    "syntax": "isMultiplayerSolo",
    "docSyntax": "isMultiplayerSolo",
    "tags": "",
    "description": "Returns true when playing a game in 'solo multiplayer' (for example Apex coop campaign PLAY SOLO option).",
    "example": "_state = isMultiplayerSolo;",
    "params": "",
    "returns": "boolean"
  },
  "isRemoteExecuted": {
    "command": "isRemoteExecuted",
    "timestamp": "2021-01-23T09:19:11Z",
    "version": "1.66",
    "syntax": "'isRemoteExecuted'",
    "docSyntax": "'isRemoteExecuted'",
    "tags": "",
    "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP",
    "example": "_remoteExecuted = isRemoteExecuted;",
    "params": "",
    "returns": "boolean"
  },
  "selectMax": {
    "command": "selectMax",
    "timestamp": "2021-01-23T20:22:34Z",
    "version": "1.66",
    "syntax": "selectMax <array>",
    "docSyntax": "selectMax array",
    "tags": "",
    "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as \nNumbers: true - 1, false - 0. nil value treated as 0. Feature Warning Other non Number elements (not recommended) will be evaluated as 0 and 'Bad \nconversion: scalar' message will be logged into .rpt.",
    "example": "_max = selectMax [1,2,3,4,5]; //5",
    "params": "<array>",
    "returns": "anything | max"
  },
  "selectMin": {
    "command": "selectMin",
    "timestamp": "2021-01-23T20:28:22Z",
    "version": "1.66",
    "syntax": "selectMin <array>",
    "docSyntax": "selectMin array",
    "tags": "",
    "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as \nNumbers: true - 1, false - 0. nil value treated as 0. Feature Warning Other non Number elements (not recommended) will be evaluated as 0 and 'Bad \nconversion: scalar' message will be logged into .rpt.",
    "example": "_min = selectMin [1,2,3,4,5]; //1",
    "params": "<array>",
    "returns": "anything | min"
  },
  "setShotParents": {
    "command": "setShotParents",
    "timestamp": "2021-01-23T20:26:44Z",
    "version": "1.66",
    "syntax": "<object> setShotParents [<object>, <object>]",
    "docSyntax": "projectile setShotParents [vehicle, instigator]",
    "tags": "[SE] [AG] [EG]",
    "description": "Sets vehicle and instigator pair for the given projectile.",
    "example": "myProjectile setShotParents [vehicle bob, bob];",
    "params": "<object> <object> <object>",
    "returns": "nothing"
  },
  "toFixed": {
    "command": "toFixed",
    "timestamp": "2021-01-24T00:03:17Z",
    "version": "1.66",
    "syntax": "<number> toFixed <number>",
    "docSyntax": "number toFixed decimals",
    "tags": "",
    "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed toFixed()]brbr 'NOTE:' Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 WikipediaSignificant_figuressignificant figures, whereas with this command it is possible to preserve some extra precision. codestr (pi/100000); //\"3.14159e-005\" - scientific notation (pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation str pi; //\"3.14159\" - 6 significant figures (default) pi toFixed 6; //\"3.141593\" - forced to 7 significant figures pi toFixed 7; //\"3.1415927\" - forced to 8 significant figures</code> Since Arma 3 v1.72 an alternative syntax is added, which takes no number and returns Nothing. Instead it acts as keyword and switches engine Number to String global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For \nexample: codesystemChat str position player; call { toFixed 6; systemChat str position player; }; systemChat str position player; toFixed -1; systemChat str position player;</code> The result \nis: * hl[11580.3,11797.7,0.00146675] * hl[11580.341797,11797.737305,0.001467] * hl[11580.341797,11797.737305,0.001467] * hl[11580.3,11797.7,0.00146675] Ideal to be used when saving data to a database when more precise positioning is required.",
    "example": "123 toFixed 2; cc\"123.00\"",
    "params": "<number> <number> <number>",
    "returns": "string"
  },
  "allSimpleObjects": {
    "command": "allSimpleObjects",
    "timestamp": "2021-01-22T21:30:27Z",
    "version": "1.68",
    "syntax": "allSimpleObjects <array>",
    "docSyntax": "allSimpleObjects classes",
    "tags": "",
    "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name. Featureinformative * There is no inheritance in simple objects, so only exact class match is allowed. * ''className'' is not case sensitive.",
    "example": "sqfprivate _boxesAndChairs = allSimpleObjects [\"Box_NATO_Equip_F\", \"Land_CampingChair_V2_F\"];</sqf>",
    "params": "<array>",
    "returns": "simple objects"
  },
  "BIS_fnc_aircraftCatapultLaunch": {
    "command": "BIS_fnc_aircraftCatapultLaunch",
    "timestamp": "2021-08-13T08:49:40Z",
    "version": "1.68",
    "syntax": "[<object>, <number>] call BIS_fnc_aircraftCatapultLaunch",
    "docSyntax": "[aircraft, direction] call BIS_fnc_aircraftCatapultLaunch",
    "tags": "[AL]",
    "description": "Accelerates an aircraft off the aircraft carrier. For this to work the aircraft must be properly configured in config. See <Arma \n3: Aircraft Systems> for information about needed config changes.",
    "example": "[_plane] call BIS_fnc_aircraftCatapultLaunch;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_aircraftTailhook": {
    "command": "BIS_fnc_aircraftTailhook",
    "timestamp": "2021-08-13T09:06:25Z",
    "version": "1.68",
    "syntax": "[<object>] call BIS_fnc_aircraftTailhook",
    "docSyntax": "[aircraft] call BIS_fnc_aircraftTailhook",
    "tags": "[AL]",
    "description": "Aircraft carrier arrest/recovery function for USS Freedom aircraft carrier. If the aircraft exceeds the speed defined in config a wire snap will be simulated.",
    "example": "[_aircraft] call BIS_fnc_aircraftTailhook;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_animateFlag": {
    "command": "BIS_fnc_animateFlag",
    "timestamp": "2021-01-23T00:57:00Z",
    "version": "1.68",
    "syntax": "[<object>, <number>, instant] call BIS_fnc_animateFlag",
    "docSyntax": "[flag, phase, instant] call BIS_fnc_animateFlag",
    "tags": "[AG] [EG]",
    "description": "Smoothly animates given flag from current position on the flag pole to the given position. When flag animation is done, the scripted event handler \"FlagAnimationDone\" is called. Feature important 'Never' place this function into an object's init field.",
    "example": "[flag1, 0] call BIS_fnc_animateFlag;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_carrier01AnimateDeflectors": {
    "command": "BIS_fnc_carrier01AnimateDeflectors",
    "timestamp": "2021-08-13T09:29:42Z",
    "version": "1.68",
    "syntax": "[<object>, <array>, <number>] spawn BIS_fnc_carrier01AnimateDeflectors",
    "docSyntax": "[carrierPart, animations, animationState] spawn BIS_fnc_carrier01AnimateDeflectors",
    "tags": "[AL] [EL]",
    "description": "Plays a set of animations to animate the carriers' catapult jet blast deflectors. See <Arma \n3: Aircraft Systems> for information about needed config changes.",
    "example": "[_carrierPart, [\"Deflector_1\", \"Deflector_1_hydraulic_1\", \"Deflector_1_hydraulic_2\", \"Deflector_1_hydraulic_3\"], 10] spawn BIS_fnc_carrier01AnimateDeflectors;",
    "params": "<object> <array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_setHitPointDamage": {
    "command": "BIS_fnc_setHitPointDamage",
    "timestamp": "2021-01-23T20:22:51Z",
    "version": "1.68",
    "syntax": "[<object>, <string>, <number>, useDependency] call BIS_fnc_setHitPointDamage",
    "docSyntax": "[object, hitPoint, damage, useDependency] call BIS_fnc_setHitPointDamage",
    "tags": "",
    "description": "Sets damage to HitPoint with dependency or not.",
    "example": "[player, \"HitFace\", 0.9] call BIS_fnc_setHitPointDamage;",
    "params": "<object> <string> <number> <boolean>",
    "returns": "nothing"
  },
  "canTriggerDynamicSimulation": {
    "command": "canTriggerDynamicSimulation",
    "timestamp": "2021-01-22T21:54:54Z",
    "version": "1.68",
    "syntax": "canTriggerDynamicSimulation <object>",
    "docSyntax": "canTriggerDynamicSimulation unit",
    "tags": "",
    "description": "A getter for triggerDynamicSimulation",
    "example": "hint str canTriggerDynamicSimulation player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "deleteGroupWhenEmpty": {
    "command": "deleteGroupWhenEmpty",
    "timestamp": "2021-01-22T22:55:22Z",
    "version": "1.68",
    "syntax": "<group> <boolean>GroupWhenEmpty delete",
    "docSyntax": "group deleteGroupWhenEmpty delete",
    "tags": "[AG] [EG]",
    "description": "Marks given group for auto-deletion when group is empty. True does not mean that the group will be deleted but that it was suggested to the engine that it should be deleted. It is up to the engine how it manages groups. False does not mean that the group will not be deleted 'at all'. It has no influence on the engine functionality whatsoever.",
    "example": "_group deleteGroupWhenEmpty true;",
    "params": "<group> <boolean>",
    "returns": "nothing"
  },
  "diag_dynamicSimulationEnd": {
    "command": "diag_dynamicSimulationEnd",
    "timestamp": "2021-05-23T12:45:12Z",
    "version": "1.68",
    "syntax": "diag_dynamicSimulationEnd <string>",
    "docSyntax": "diag_dynamicSimulationEnd file",
    "tags": "[EL]",
    "description": "Ends dynamic simulation data gathering and writes collected data into given file. The file is saved in the Arma 3 installation folder. codeccExample output. Enabled time (in % of collection time) Subject name 1.$ O Bravo 1-5 1.$ O Bravo 1-6 1.$ extraction_bike (B_Quadbike_01_F) - [3151,9662,59] ..... .................................. -1.$ O Bravo 1-4 -1.$ target_1 (O_SAM_System_04_F) - [3571,9878,70] -1.$ O Alpha 3-4 Collection took 0.0s</code>",
    "example": "diag_dynamicSimulationEnd \"dynSimDebugData\"; // Creates a file called \"dynSimDebugData_runtimelog.txt\"",
    "params": "<string>",
    "returns": "nothing"
  },
  "diag_dynamicSimulationStart": {
    "command": "diag_dynamicSimulationStart",
    "timestamp": "2021-05-23T12:45:38Z",
    "version": "1.68",
    "syntax": "PAGENAMEE",
    "docSyntax": "PAGENAMEE",
    "tags": "[EL]",
    "description": "Starts gathering of <Arma \n3: Dynamic Simulation> diagnostic data.",
    "example": "diag_dynamicSimulationStart;",
    "params": "",
    "returns": "nothing"
  },
  "dynamicSimulationDistance": {
    "command": "dynamicSimulationDistance",
    "timestamp": "2021-01-22T22:51:30Z",
    "version": "1.68",
    "syntax": "dynamicSimulationDistance <string>",
    "docSyntax": "dynamicSimulationDistance category",
    "tags": "",
    "description": "A getter for setDynamicSimulationDistance.",
    "example": "hint str dynamicSimulationDistance \"Prop\";",
    "params": "<string>",
    "returns": "number"
  },
  "dynamicSimulationDistanceCoef": {
    "command": "dynamicSimulationDistanceCoef",
    "timestamp": "2021-01-22T22:54:05Z",
    "version": "1.68",
    "syntax": "dynamicSimulationDistanceCoef <string>",
    "docSyntax": "dynamicSimulationDistanceCoef class",
    "tags": "",
    "description": "A getter for setDynamicSimulationDistanceCoef",
    "example": "hint str dynamicSimulationDistanceCoef \"IsMoving\";",
    "params": "<string>",
    "returns": "number"
  },
  "dynamicSimulationEnabled": {
    "command": "dynamicSimulationEnabled",
    "timestamp": "2021-01-22T22:58:52Z",
    "version": "1.68",
    "syntax": "dynamicSimulationEnabled <object>",
    "docSyntax": "dynamicSimulationEnabled object",
    "tags": "",
    "description": "A getter for enableDynamicSimulation.",
    "example": "hint str dynamicSimulationEnabled _myObject;",
    "params": "<object>",
    "returns": "boolean"
  },
  "dynamicSimulationSystemEnabled": {
    "command": "dynamicSimulationSystemEnabled",
    "timestamp": "2021-01-22T22:58:05Z",
    "version": "1.68",
    "syntax": "'dynamicSimulationSystemEnabled'",
    "docSyntax": "'dynamicSimulationSystemEnabled'",
    "tags": "",
    "description": "A getter for enableDynamicSimulationSystem",
    "example": "hint str dynamicSimulationSystemEnabled;",
    "params": "",
    "returns": "boolean"
  },
  "enableDynamicSimulation": {
    "command": "enableDynamicSimulation",
    "timestamp": "2021-01-22T22:51:34Z",
    "version": "1.68",
    "syntax": "<object> <boolean>DynamicSimulation enable",
    "docSyntax": "object enableDynamicSimulation enable",
    "tags": "[AG] [EL]",
    "description": "Enables or disables <Arma \n3: Dynamic Simulation> for given non AI object.",
    "example": "_myObject enableDynamicSimulation true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "enableDynamicSimulationSystem": {
    "command": "enableDynamicSimulationSystem",
    "timestamp": "2021-01-22T22:42:53Z",
    "version": "1.68",
    "syntax": "<boolean>DynamicSimulationSystem enable",
    "docSyntax": "enableDynamicSimulationSystem enable",
    "tags": "",
    "description": "Enables or disables the whole <Arma \n3: Dynamic Simulation> system",
    "example": "enableDynamicSimulationSystem true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "enableWeaponDisassembly": {
    "command": "enableWeaponDisassembly",
    "timestamp": "2021-01-22T23:06:56Z",
    "version": "1.68",
    "syntax": "<boolean>WeaponDisassembly <boolean>",
    "docSyntax": "enableWeaponDisassembly enable",
    "tags": "[AG] [EG]",
    "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.",
    "example": "enableWeaponDisassembly false;",
    "params": "<boolean> <object> <boolean>",
    "returns": "nothing"
  },
  "environmentEnabled": {
    "command": "environmentEnabled",
    "timestamp": "2021-01-23T00:58:52Z",
    "version": "1.68",
    "syntax": "environmentEnabled",
    "docSyntax": "environmentEnabled",
    "tags": "",
    "description": "Returns status of enableEnvironment command",
    "example": "_enabled = environmentEnabled;",
    "params": "",
    "returns": "array | boolean | boolean"
  },
  "flagAnimationPhase": {
    "command": "flagAnimationPhase",
    "timestamp": "2021-01-23T00:26:54Z",
    "version": "1.68",
    "syntax": "<object>AnimationPhase flag",
    "docSyntax": "flagAnimationPhase flag",
    "tags": "[AG]",
    "description": "Returns flag position on the flag pole.",
    "example": "flagAnimationPhase _flag1;",
    "params": "<object>",
    "returns": "number"
  },
  "isGroupDeletedWhenEmpty": {
    "command": "isGroupDeletedWhenEmpty",
    "timestamp": "2021-01-23T09:23:29Z",
    "version": "1.68",
    "syntax": "isGroupDeletedWhenEmpty <group>",
    "docSyntax": "isGroupDeletedWhenEmpty group",
    "tags": "",
    "description": "Checks if the given group marked for auto-deletion when empty. See True does not mean the group will be deleted but that it was suggested to the engine that it should be deleted. It is up to the engine how it manages groups. False does not mean that the group will not be deleted 'at all'. It has no influence on the engine functionality whatsoever.",
    "example": "_isMarked = isGroupDeletedWhenEmpty _group;",
    "params": "<group>",
    "returns": "boolean | true"
  },
  "isRemoteExecutedJIP": {
    "command": "isRemoteExecutedJIP",
    "timestamp": "2021-01-23T09:23:35Z",
    "version": "1.68",
    "syntax": "'isRemoteExecutedJIP'",
    "docSyntax": "'isRemoteExecutedJIP'",
    "tags": "",
    "description": "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of \nisRemoteExecuted: * Normal remote \nexecution: ** isRemoteExecuted - true ** isRemoteExecutedJIP - false * Remote execution from JIP \nqueue: ** isRemoteExecuted - true ** isRemoteExecutedJIP - true In SP always returns false.",
    "example": "_remoteExecutedJIP = isRemoteExecutedJIP;",
    "params": "",
    "returns": "boolean"
  },
  "isSimpleObject": {
    "command": "isSimpleObject",
    "timestamp": "2021-01-23T09:26:18Z",
    "version": "1.68",
    "syntax": "isSimpleObject <object>",
    "docSyntax": "isSimpleObject object",
    "tags": "",
    "description": "Returns simple object",
    "example": "_isSimple = isSimpleObject _obj1;",
    "params": "<object>",
    "returns": "boolean"
  },
  "parseSimpleArray": {
    "command": "parseSimpleArray",
    "timestamp": "2021-01-23T10:27:52Z",
    "version": "1.68",
    "syntax": "parseSimpleArray <string>",
    "docSyntax": "parseSimpleArray stringArray",
    "tags": "",
    "description": "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For \nexample: hl[1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be hl\"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly. This command is almost '4x faster' than similar uncached call compile method. And because call compile is not required, it is also 'more secure' and primarily intended for use with callExtension to parse the String output into Array.brbr Since Arma 3 v1.96 the command will tolerate extra spaces and supports single quotes. The only recognised keywords (case 'in'sensitive) \nare: * true - translates into true * false - translates into false * nil - translates into nil * null - translates into nil * hl&lt;null&gt; - translates into nil * any - translates into nil",
    "example": "_arr = parseSimpleArray \"[1,2,3]\";",
    "params": "<string>",
    "returns": "array"
  },
  "setConvoySeparation": {
    "command": "setConvoySeparation",
    "timestamp": "2021-01-23T20:21:52Z",
    "version": "1.68",
    "syntax": "<object> setConvoySeparation <number>",
    "docSyntax": "vehicle setConvoySeparation distance",
    "tags": "",
    "description": "Sets the distance to keep to the vehicle which is 'in front'.br *This command has to be applied to all vehicles in a convoy in order to have a separation of, for example, 50 m. *Vehicles in a convoy can also have different distances. *It's recommended that small values (<10m) should only be used for slowly moving convoys, otherwise AI driven vehicles will leave the road frequently to avoid collisions",
    "example": "vehicle setConvoySeparation 20;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setDriveOnPath": {
    "command": "setDriveOnPath",
    "timestamp": "2021-01-23T20:23:08Z",
    "version": "1.68",
    "syntax": "<object> setDriveOnPath positions",
    "docSyntax": "vehicleName setDriveOnPath points",
    "tags": "",
    "description": "Sets the path to follow for AI driver. Note that agent, or in the case of normal AI, have been stopped using doStop.",
    "example": "myVehicle setDriveOnPath [getMarkerPos \"wp1\", getMarkerPos \"wp2\"];",
    "params": "<object> positions",
    "returns": "nothing"
  },
  "setDynamicSimulationDistance": {
    "command": "setDynamicSimulationDistance",
    "timestamp": "2021-01-23T20:26:48Z",
    "version": "1.68",
    "syntax": "<string> setDynamicSimulationDistance <number>",
    "docSyntax": "category setDynamicSimulationDistance distance",
    "tags": "",
    "description": "Sets activation distance of <Arma \n3: Dynamic Simulation> for given category.",
    "example": "\"Group\" setDynamicSimulationDistance 1000;",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "setDynamicSimulationDistanceCoef": {
    "command": "setDynamicSimulationDistanceCoef",
    "timestamp": "2021-01-23T20:24:13Z",
    "version": "1.68",
    "syntax": "<string> setDynamicSimulationDistanceCoef <number>",
    "docSyntax": "class setDynamicSimulationDistanceCoef multiplier",
    "tags": "",
    "description": "Sets activation distance multiplier of <Arma \n3: Dynamic Simulation> for the given class",
    "example": "\"IsMoving\" setDynamicSimulationDistanceCoef 3;",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "setFeatureType": {
    "command": "setFeatureType",
    "timestamp": "2021-01-23T20:21:57Z",
    "version": "1.68",
    "syntax": "<object> setFeatureType <number>",
    "docSyntax": "object setFeatureType type",
    "tags": "[AG] [EL]",
    "description": "Enable/disable object as a feature/landmark. Possible feature \ntypes: * 0 - Feature disabled * 1 - Object is always visible within object view distance * 2 - Object is always visible within terrain view distance The limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.",
    "example": "building setFeatureType 2;",
    "params": "<object> <number>",
    "returns": "boolean"
  },
  "setFlagAnimationPhase": {
    "command": "setFlagAnimationPhase",
    "timestamp": "2021-01-23T20:20:36Z",
    "version": "1.68",
    "syntax": "<object> setFlagAnimationPhase <number>",
    "docSyntax": "flag setFlagAnimationPhase phase",
    "tags": "[AG] [EL]",
    "description": "Sets flag position on the flag pole. To animate flag use BIS_fnc_animateFlag.",
    "example": "_flag1 setFlagAnimationPhase 0.5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setVelocityModelSpace": {
    "command": "setVelocityModelSpace",
    "timestamp": "2021-01-23T23:59:56Z",
    "version": "1.68",
    "syntax": "<object> setVelocityModelSpace <array>",
    "docSyntax": "vehicle setVelocityModelSpace [x, y, z]",
    "tags": "[AL] [EG]",
    "description": "Sets the velocity (speed vector) of the given vehicle relative to its model. Feature Important Since arma3 v2.06 each velocity component is limited to the range +-5000 m/s.",
    "example": "car setVelocityModelSpace [0, 10, 0]; //pushes car forward",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "terrainIntersectAtASL": {
    "command": "terrainIntersectAtASL",
    "timestamp": "2021-01-24T00:30:22Z",
    "version": "1.68",
    "syntax": "terrainIntersectAtASL [positionasl, positionasl]",
    "docSyntax": "terrainIntersectAtASL [start, end]",
    "tags": "",
    "description": "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL but returns the intersection ASL position.",
    "example": "_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];",
    "params": "positionasl positionasl",
    "returns": "positionasl - intersect position"
  },
  "triggerDynamicSimulation": {
    "command": "triggerDynamicSimulation",
    "timestamp": "2021-01-24T00:02:25Z",
    "version": "1.68",
    "syntax": "<object> <boolean>DynamicSimulation trigger",
    "docSyntax": "unit triggerDynamicSimulation trigger",
    "tags": "",
    "description": "Controls the ability of given unit to activate entities with disabled <Arma \n3: Dynamic Simulation>. If false dynamically disabled entities will not be activated by this unit's presence. This command has the same effect as the <Eden Editor> attribute ''Wake-Up Dynamic Simulation''.",
    "example": "sqfplayer triggerDynamicSimulation false;</sqf>",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "admin": {
    "command": "admin",
    "timestamp": "2021-01-22T21:29:00Z",
    "version": "1.70",
    "syntax": "admin <number>",
    "docSyntax": "admin ownerID",
    "tags": "[SE]",
    "description": "This is dedicated server command, which queries the admin state of any client on the network by their client (voted in * 2 - client is admin that is logged in In all other cases it returns 0. To self check the admin state of a local client, use BIS_fnc_admin.",
    "example": "_isLoggedInAdmin = admin 3 == 2;",
    "params": "<number>",
    "returns": "number"
  },
  "airplaneThrottle": {
    "command": "airplaneThrottle",
    "timestamp": "2021-01-22T21:42:44Z",
    "version": "1.70",
    "syntax": "<object>Throttle airplane",
    "docSyntax": "airplaneThrottle airplane",
    "tags": "",
    "description": "Returns throttle position. Works only on player's vehicle.",
    "example": "private _throttle = airplaneThrottle objectParent player;",
    "params": "<object>",
    "returns": "number"
  },
  "ammoOnPylon": {
    "command": "ammoOnPylon",
    "timestamp": "2021-01-22T21:28:41Z",
    "version": "1.70",
    "syntax": "<object> ammoOnPylon <string>",
    "docSyntax": "vehicle ammoOnPylon pylon",
    "tags": "",
    "description": "Returns ammo count on given pylon. Returns false (Boolean) on failure.",
    "example": "_ammoCount = (vehicle player) ammoOnPylon \"pylon1\";",
    "params": "<object> <string>",
    "returns": "number | boolean"
  },
  "animateBay": {
    "command": "animateBay",
    "timestamp": "2021-01-22T21:27:52Z",
    "version": "1.70",
    "syntax": "<object> animateBay [<number>, <number>, <boolean>]",
    "docSyntax": "vehicle animateBay [bay, animphase, instant]",
    "tags": "[AG] [EL]",
    "description": "Forces animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state nowiki=</nowiki>1. Feature Informative While there is no getter to read the animation phase of the given bay, animationPhase command can be used with the individual bay door name from animationNames as a workaround. For example for UCAV Sentinel ucav animateBay [1, 1] could be checked with ucav animationPhase \"weapons_bay_l_1\" or ucav animationPhase \"weapons_bay_l_2\"",
    "example": "vehicle player animateBay [1, 0.5];",
    "params": "<object> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "animatePylon": {
    "command": "animatePylon",
    "timestamp": "2021-01-22T21:39:09Z",
    "version": "1.70",
    "syntax": "<object> animatePylon [<number>, <number>, instant]",
    "docSyntax": "vehicle animatePylon [pylon, animphase, instant]",
    "tags": "",
    "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when pylon state nowiki=</nowiki>1. Supports pylon name since Arma 3 v1.94",
    "example": "vehicle player animatePylon [1, 0.5];",
    "params": "<object> <array> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_admin": {
    "command": "BIS_fnc_admin",
    "timestamp": "2021-01-23T00:56:49Z",
    "version": "1.70",
    "syntax": "call BIS_fnc_admin",
    "docSyntax": "call BIS_fnc_admin",
    "tags": "",
    "description": "Returns the admin state of a client the function is called on. Complements admin script command and used for self check on a local client.",
    "example": "private _adminState = call BIS_fnc_admin;",
    "params": "",
    "returns": "voted in * 2 - client is admin that is logged in"
  },
  "BIS_fnc_aircraftFoldingWings": {
    "command": "BIS_fnc_aircraftFoldingWings",
    "timestamp": "2021-01-22T22:02:52Z",
    "version": "1.70",
    "syntax": "[<object>, <boolean>] call BIS_fnc_aircraftFoldingWings",
    "docSyntax": "[aircraft, animationState] call BIS_fnc_aircraftFoldingWings",
    "tags": "[AL] [EG]",
    "description": "Handles foldable wings of aircrafts. Is supposed to be used from within class Eventhandlers of the vehicle. See <Arma \n3: Aircraft Systems> for information about needed config changes. class \nEventhandlers: Eventhandlers { engine = \"_this call BIS_fnc_aircraftFoldingWings\"; gear = \"_this call BIS_fnc_aircraftFoldingWings\"; };",
    "example": "[_aircraft, 1] call BIS_fnc_aircraftFoldingWings;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_aircraftTailhookAi": {
    "command": "BIS_fnc_aircraftTailhookAi",
    "timestamp": "2021-01-22T21:59:33Z",
    "version": "1.70",
    "syntax": "[<array>, isLanding] call BIS_fnc_aircraftTailhookAi",
    "docSyntax": "[params, isLanding] call BIS_fnc_aircraftTailhookAi",
    "tags": "",
    "description": "Handles landing on the aircraft carrier for AI and player autopilot.",
    "example": "-",
    "params": "<array>",
    "returns": "nothing"
  },
  "confirmSensorTarget": {
    "command": "confirmSensorTarget",
    "timestamp": "2021-01-22T22:04:50Z",
    "version": "1.70",
    "syntax": "<object> confirmSensorTarget [<side>, <boolean>]",
    "docSyntax": "vehicle confirmSensorTarget [side, isConfirmed]",
    "tags": "",
    "description": "Sets for which Side the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.",
    "example": "(vehicle player) confirmSensorTarget [west, true];",
    "params": "<object> <side> <boolean>",
    "returns": "nothing"
  },
  "ctAddHeader": {
    "command": "ctAddHeader",
    "timestamp": "2021-01-22T22:02:32Z",
    "version": "1.70",
    "syntax": "ctAddHeader <control>",
    "docSyntax": "ctAddHeader control",
    "tags": "[AL] [EL]",
    "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in \n\tformat:br hl[headerIndex, [control0, control1...<control n>]]. br Note that rows and headers are indexed separately.",
    "example": "_array = ctAddHeader _control;",
    "params": "<control>",
    "returns": "array"
  },
  "ctAddRow": {
    "command": "ctAddRow",
    "timestamp": "2021-01-22T21:59:55Z",
    "version": "1.70",
    "syntax": "ctAddRow <control>",
    "docSyntax": "ctAddRow control",
    "tags": "[AL] [EL]",
    "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [rowIndex, [control0, control1...<control n>]]. br Note that rows and headers are indexed separately.",
    "example": "_array = ctAddRow _control;",
    "params": "<control>",
    "returns": "array"
  },
  "ctClear": {
    "command": "ctClear",
    "timestamp": "2021-01-22T22:05:47Z",
    "version": "1.70",
    "syntax": "ctClear <control>",
    "docSyntax": "ctClear ctrl",
    "tags": "[AL] [EL]",
    "description": "Removes all the lines from the RscControlsTable. Returns Nothing.",
    "example": "ctClear _control;",
    "params": "<control>",
    "returns": "nothing"
  },
  "ctCurSel": {
    "command": "ctCurSel",
    "timestamp": "2021-01-22T22:02:16Z",
    "version": "1.70",
    "syntax": "ctCurSel <control>",
    "docSyntax": "ctCurSel ctrl",
    "tags": "[AL] [EL]",
    "description": "Returns index of the selected row. Will take only rows, but not headers into account.",
    "example": "_curSel = ctCurSel _control;",
    "params": "<control>",
    "returns": "number"
  },
  "ctData": {
    "command": "ctData",
    "timestamp": "2021-01-22T22:05:32Z",
    "version": "1.70",
    "syntax": "<control> ctData <number>",
    "docSyntax": "ctrl ctData row",
    "tags": "[AL] [EL]",
    "description": "Returns metadata (string) associated with a particular row of RscControlsTable.",
    "example": "ctData _control;",
    "params": "<control> <number>",
    "returns": "string"
  },
  "ctFindHeaderRows": {
    "command": "ctFindHeaderRows",
    "timestamp": "2021-01-22T21:58:32Z",
    "version": "1.70",
    "syntax": "<control> ctFindHeaderRows <number>",
    "docSyntax": "ctrl ctFindHeaderRows index",
    "tags": "[AL] [EL]",
    "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.",
    "example": "_array = _control ctFindHeaderRows 0;",
    "params": "<control> <number>",
    "returns": "array"
  },
  "ctFindRowHeader": {
    "command": "ctFindRowHeader",
    "timestamp": "2021-01-22T21:59:12Z",
    "version": "1.70",
    "syntax": "<control> ctFindRowHeader <number>",
    "docSyntax": "ctrl ctFindRowHeader row",
    "tags": "[AL] [EL]",
    "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.",
    "example": "_index = _control ctFindRowHeader 0;",
    "params": "<control> <number>",
    "returns": "number"
  },
  "ctHeaderControls": {
    "command": "ctHeaderControls",
    "timestamp": "2021-01-22T22:04:20Z",
    "version": "1.70",
    "syntax": "<control> ctHeaderControls <number>",
    "docSyntax": "ctrl ctHeaderControls index",
    "tags": "[AL] [EL]",
    "description": "Returns array of controls on the header with the given index.",
    "example": "_array = _control ctHeaderControls 0;",
    "params": "<control> <number>",
    "returns": "array"
  },
  "ctHeaderCount": {
    "command": "ctHeaderCount",
    "timestamp": "2021-01-22T22:07:20Z",
    "version": "1.70",
    "syntax": "ctHeaderCount <control>",
    "docSyntax": "ctHeaderCount ctrl",
    "tags": "[AL] [EL]",
    "description": "Returns number of headers (rows not included) in the RscControlsTable.",
    "example": "ctHeaderCount _control;",
    "params": "<control>",
    "returns": "number"
  },
  "ctRemoveHeaders": {
    "command": "ctRemoveHeaders",
    "timestamp": "2021-01-22T22:03:44Z",
    "version": "1.70",
    "syntax": "<control> ctRemoveHeaders <array>",
    "docSyntax": "ctrl ctRemoveHeaders indices",
    "tags": "[AL] [EL]",
    "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.",
    "example": "_control ctRemoveHeaders [0, 1, 2];",
    "params": "<control> <array>",
    "returns": "nothing"
  },
  "ctRemoveRows": {
    "command": "ctRemoveRows",
    "timestamp": "2021-01-22T22:01:02Z",
    "version": "1.70",
    "syntax": "<control> ctRemoveRows [index1, index2, ...]",
    "docSyntax": "ctrl ctRemoveRows [index1, index2, ...]",
    "tags": "[AL] [EL]",
    "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.",
    "example": "_control ctRemoveRows [0, 1, 2];",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctRowControls": {
    "command": "ctRowControls",
    "timestamp": "2021-01-22T22:01:24Z",
    "version": "1.70",
    "syntax": "<control> ctRowControls <number>",
    "docSyntax": "control ctRowControls index",
    "tags": "[AL] [EL]",
    "description": "Returns array of controls on the row with the given index.",
    "example": "_array = _control ctRowControls 0;",
    "params": "<control> <number>",
    "returns": "array"
  },
  "ctRowCount": {
    "command": "ctRowCount",
    "timestamp": "2021-01-22T22:05:15Z",
    "version": "1.70",
    "syntax": "ctRowCount <control>",
    "docSyntax": "ctRowCount control",
    "tags": "[AL] [EL]",
    "description": "Returns number of rows (headers not included) in the RscControlsTable.",
    "example": "ctRowCount _control;",
    "params": "<control>",
    "returns": "number"
  },
  "ctSetCurSel": {
    "command": "ctSetCurSel",
    "timestamp": "2021-01-22T22:04:21Z",
    "version": "1.70",
    "syntax": "<control> ctSetCurSel <number>",
    "docSyntax": "control ctSetCurSel index",
    "tags": "[AL] [EL]",
    "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.",
    "example": "_control ctSetCurSel 0;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctSetData": {
    "command": "ctSetData",
    "timestamp": "2021-01-22T22:00:35Z",
    "version": "1.70",
    "syntax": "<control> ctSetData [<number>, <string>]",
    "docSyntax": "ctrl ctSetData [index, data]",
    "tags": "[AL] [EL]",
    "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.",
    "example": "_control ctSetData [0, \"Test\"];",
    "params": "<control> <number> <string>",
    "returns": "nothing"
  },
  "ctSetHeaderTemplate": {
    "command": "ctSetHeaderTemplate",
    "timestamp": "2021-01-22T22:06:12Z",
    "version": "1.70",
    "syntax": "<control> ctSetHeaderTemplate <config>",
    "docSyntax": "control ctSetHeaderTemplate config",
    "tags": "[AL] [EL]",
    "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.",
    "example": "_control ctSetHeaderTemplate _configPath;",
    "params": "<control> <config>",
    "returns": "nothing"
  },
  "ctSetRowTemplate": {
    "command": "ctSetRowTemplate",
    "timestamp": "2021-01-22T22:05:30Z",
    "version": "1.70",
    "syntax": "<control> ctSetRowTemplate <config>",
    "docSyntax": "control ctSetRowTemplate config",
    "tags": "[AL] [EL]",
    "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).",
    "example": "_control ctSetRowTemplate _configPath;",
    "params": "<control> <config>",
    "returns": "nothing"
  },
  "ctSetValue": {
    "command": "ctSetValue",
    "timestamp": "2021-01-22T22:06:29Z",
    "version": "1.70",
    "syntax": "<control> ctSetValue [<number>, <number>]",
    "docSyntax": "control ctSetValue [index, value]",
    "tags": "",
    "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.",
    "example": "_control ctSetValue [0, 23];",
    "params": "<control> <number> <number>",
    "returns": "nothing"
  },
  "ctValue": {
    "command": "ctValue",
    "timestamp": "2021-01-22T22:06:35Z",
    "version": "1.70",
    "syntax": "<control> ctValue <number>",
    "docSyntax": "control ctValue index",
    "tags": "",
    "description": "Returns metadata (number) associated with a particular row of RscControlsTable.",
    "example": "_number = _control ctValue 0;",
    "params": "<control> <number>",
    "returns": "number"
  },
  "diag_resetShapes": {
    "command": "diag_resetShapes",
    "timestamp": "2021-05-23T12:49:10Z",
    "version": "1.70",
    "syntax": "diag_resetShapes",
    "docSyntax": "diag_resetShapes",
    "tags": "",
    "description": "Reload models on-the-fly without the need of restarting the game. Changes applied by 'diag_resetShapes' are applied to all new entities so restart of mission is not necessarily required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with \"-FilePatching\" in combination with local data. Command will reload 'only' models present in local data. FeatureinformativeLimitation - CfgSkeletons (inside model.cfg) cannot be reloaded.",
    "example": "diag_resetShapes",
    "params": "",
    "returns": "nothing"
  },
  "endl": {
    "command": "endl",
    "timestamp": "2021-01-22T23:24:36Z",
    "version": "1.70",
    "syntax": "'endl'",
    "docSyntax": "'endl'",
    "tags": "",
    "description": "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl ('end' 'l'ine). The command returns \"\\r \", which contains control characters rather than printable \ncharacters: * hint str count \"\\r\\n\"; // 4 * hint str count endl; // 2 The line break works for diag_log and ctrlSetText. It doesn't work with the hint because hint interprets printable \"\\n\" as line break instead. Alternatively one can use toString command to get other characters.",
    "example": "diag_log (\"line1\" + endl + \"line2\");",
    "params": "",
    "returns": "string"
  },
  "forceFlagTexture": {
    "command": "forceFlagTexture",
    "timestamp": "2021-01-23T00:50:14Z",
    "version": "1.70",
    "syntax": "<object> forceFlagTexture <string>",
    "docSyntax": "object forceFlagTexture texture",
    "tags": "[AG] [EG]",
    "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture, but getForcedFlagTexture.",
    "example": "player forceFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "forgetTarget": {
    "command": "forgetTarget",
    "timestamp": "2021-01-23T00:38:27Z",
    "version": "1.70",
    "syntax": "<group> forgetTarget <object>",
    "docSyntax": "group forgetTarget target",
    "tags": "",
    "description": "Resets the info a group has about a target, forcing knowsAbout value to 0.",
    "example": "soldier1 forgetTarget soldier2;",
    "params": "<group> <object>",
    "returns": "nothing"
  },
  "getCursorObjectParams": {
    "command": "getCursorObjectParams",
    "timestamp": "2021-01-22T23:44:14Z",
    "version": "1.70",
    "syntax": "'getCursorObjectParams'",
    "docSyntax": "'getCursorObjectParams'",
    "tags": "",
    "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).",
    "example": "hint str getCursorObjectParams;",
    "params": "",
    "returns": "array"
  },
  "getForcedFlagTexture": {
    "command": "getForcedFlagTexture",
    "timestamp": "2021-01-23T00:58:46Z",
    "version": "1.70",
    "syntax": "getForcedFlagTexture <object>",
    "docSyntax": "getForcedFlagTexture object",
    "tags": "",
    "description": "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture",
    "example": "getForcedFlagTexture player;",
    "params": "<object>",
    "returns": "string"
  },
  "getPylonMagazines": {
    "command": "getPylonMagazines",
    "timestamp": "2021-01-22T23:58:24Z",
    "version": "1.70",
    "syntax": "getPylonMagazines <object>",
    "docSyntax": "getPylonMagazines vehicle",
    "tags": "",
    "description": "Return array of magazines on pylons.",
    "example": "getPylonMagazines vehicle player;",
    "params": "<object>",
    "returns": "array | string"
  },
  "getUserMFDValue": {
    "command": "getUserMFDValue",
    "timestamp": "2021-01-23T09:26:32Z",
    "version": "1.70",
    "syntax": "getUserMFDValue <object>",
    "docSyntax": "getUserMFDValue vehicle",
    "tags": "",
    "description": "Returns array of user text variables used in MFD.",
    "example": "getUserMFDValue vehicle player; // user0 in MFD will return 1",
    "params": "<object>",
    "returns": "array | number"
  },
  "isDamageAllowed": {
    "command": "isDamageAllowed",
    "timestamp": "2021-01-23T09:05:22Z",
    "version": "1.70",
    "syntax": "isDamageAllowed <object>",
    "docSyntax": "isDamageAllowed object",
    "tags": "[AG] [EL]",
    "description": "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. For complete solution for being able to tell whether or not an object can be damaged at current locality see HashLink#Example 1.",
    "example": "private _canBeDamaged = local _obj && isDamageAllowed _obj;",
    "params": "<object>",
    "returns": "boolean"
  },
  "modelToWorldVisualWorld": {
    "command": "modelToWorldVisualWorld",
    "timestamp": "2021-01-23T10:11:59Z",
    "version": "1.70",
    "syntax": "<object> modelToWorldVisualWorld positionrelative",
    "docSyntax": "obj modelToWorldVisualWorld modelPos",
    "tags": "[AG]",
    "description": "Converts position from object model space to world space in render time scope. For the PositionAGL version see scaled objects, the relative position will first be multiplied by the object scale.br For example, if the object scale is 2, ic_obj modelToWorldVisualWorld [0,1,0] will be offset '2 meters' from the model center (ic[0,0,0]).",
    "example": "player modelToWorldVisualWorld [0,1,0];",
    "params": "<object> positionrelative",
    "returns": "getposworld"
  },
  "modelToWorldWorld": {
    "command": "modelToWorldWorld",
    "timestamp": "2021-01-23T10:10:28Z",
    "version": "1.70",
    "syntax": "<object> modelToWorldWorld positionrelative",
    "docSyntax": "obj modelToWorldWorld modelPos",
    "tags": "[AG]",
    "description": "Converts position from object model space to world space in PositionASL format from the object's centre position. FeatureimportantFor scaled objects, the relative position will first be multiplied by the object scale.br For example, if the object scale is 2, ic_obj modelToWorldWorld [0,1,0] will be offset '2 meters' from the model center (ic[0,0,0]).",
    "example": "private _playersFrontWorld = player modelToWorldWorld [0,1,0];",
    "params": "<object> positionrelative",
    "returns": "getposworld"
  },
  "remoteExecutedOwner": {
    "command": "remoteExecutedOwner",
    "timestamp": "2021-01-23T10:31:10Z",
    "version": "1.70",
    "syntax": "remoteExecutedOwner",
    "docSyntax": "remoteExecutedOwner",
    "tags": "",
    "description": "Returns the machine network ID of the client that initiated <Remote Execution>. If used in SP or outside of remote executed context, the command returns 0. Feature Informative To check if the context is remote executed, use isRemoteExecuted or isRemoteExecutedJIP.",
    "example": "_callerRE = remoteExecutedOwner;",
    "params": "",
    "returns": "number"
  },
  "reportRemoteTarget": {
    "command": "reportRemoteTarget",
    "timestamp": "2021-01-23T10:33:00Z",
    "version": "1.70",
    "syntax": "<side> reportRemoteTarget [<object>, <number>]",
    "docSyntax": "side reportRemoteTarget [target, time]",
    "tags": "[AL]",
    "description": "Shares the target vehicle via datalink to the Side center for a given time.",
    "example": "blufor reportRemoteTarget [vehicle player, 60];",
    "params": "<side> <object> <number>",
    "returns": "nothing"
  },
  "set3DENLogicType": {
    "command": "set3DENLogicType",
    "timestamp": "2021-01-23T20:19:01Z",
    "version": "1.70",
    "syntax": "<array> set3DENLogicType <string>",
    "docSyntax": "objects set3DENLogicType classname",
    "tags": "",
    "description": "Sets the new type of Logic object(s). For other objects use set3DENObjectType.",
    "example": "[get3DENSelected \"logic\" select 0] set3DENLogicType \"MiscOR_F\";",
    "params": "<array> <string>",
    "returns": "nothing"
  },
  "setAirplaneThrottle": {
    "command": "setAirplaneThrottle",
    "timestamp": "2021-01-23T20:27:47Z",
    "version": "1.70",
    "syntax": "<object> setAirplaneThrottle <number>",
    "docSyntax": "airplane setAirplaneThrottle value",
    "tags": "",
    "description": "Sets a wanted throttle position, works only on player's vehicle.",
    "example": "_vehicle setAirplaneThrottle 0.5",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setAmmoOnPylon": {
    "command": "setAmmoOnPylon",
    "timestamp": "2021-01-23T20:32:24Z",
    "version": "1.70",
    "syntax": "<object> setAmmoOnPylon <array>",
    "docSyntax": "vehicle setAmmoOnPylon [pylon, ammocount]",
    "tags": "",
    "description": "Set count of ammo in magazine on pylon (supports pylon name since Arma 3 v1.94)",
    "example": "vehicle player setAmmoOnPylon [1, 12];",
    "params": "<object> <array> <number> <number>",
    "returns": "nothing"
  },
  "setPylonLoadout": {
    "command": "setPylonLoadout",
    "timestamp": "2021-01-23T20:25:00Z",
    "version": "1.70",
    "syntax": "<object> setPylonLoadout [<number>, <string>, forced, turret]",
    "docSyntax": "vehicle setPylonLoadout [pylon, magazine, forced, turret]",
    "tags": "[EL]",
    "description": "Adds/overrides loadout to a vehicle pylon. TransportPylonsComponent in vehicle config and pylonWeapon in the magazine config are required to run.",
    "example": "vehicle player setPylonLoadout [\"pylon1\", \"\"];",
    "params": "<object> <array> <number> <string> <boolean> <array>",
    "returns": "boolean | true"
  },
  "setPylonsPriority": {
    "command": "setPylonsPriority",
    "timestamp": "2021-01-23T20:25:17Z",
    "version": "1.70",
    "syntax": "<object> setPylonsPriority [priority pylon1, priority pylon2, ...]",
    "docSyntax": "vehicle setPylonsPriority [priority pylon1, priority pylon2, ...]",
    "tags": "",
    "description": "Overrides default pylons priorities.",
    "example": "(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "setUserMFDValue": {
    "command": "setUserMFDValue",
    "timestamp": "2021-01-24T00:24:07Z",
    "version": "1.70",
    "syntax": "<object> setUserMFDValue [<number>, <number>]",
    "docSyntax": "vehicle setUserMFDValue [index, value]",
    "tags": "",
    "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry ... \nclass Draw { \n alpha = \"user3\"; color[] = {\"user0\",\"user1\",\"user2\"\n};\n ...which could control color of the MFD. See Example 2-3-4 on how to set different colors of the Blackfoot MFD",
    "example": "BIS_Plane setUserMFDValue [0,1]; // user0 in MFD will return 1",
    "params": "<object> <number> <number>",
    "returns": "nothing"
  },
  "setVehicleRadar": {
    "command": "setVehicleRadar",
    "timestamp": "2021-01-24T00:01:07Z",
    "version": "1.70",
    "syntax": "<object> setVehicleRadar <number>",
    "docSyntax": "vehicle setVehicleRadar rule",
    "tags": "",
    "description": "Sets the AI rule of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.",
    "example": "_vehicle setVehicleRadar 1;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setVehicleReceiveRemoteTargets": {
    "command": "setVehicleReceiveRemoteTargets",
    "timestamp": "2021-01-24T00:15:53Z",
    "version": "1.70",
    "syntax": "<object> setVehicleReceiveRemoteTargets <boolean>",
    "docSyntax": "vehicle setVehicleReceiveRemoteTargets bool",
    "tags": "",
    "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.",
    "example": "(vehicle player) setVehicleReceiveRemoteTargets true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setVehicleReportOwnPosition": {
    "command": "setVehicleReportOwnPosition",
    "timestamp": "2021-01-23T23:59:52Z",
    "version": "1.70",
    "syntax": "<object> setVehicleReportOwnPosition <boolean>",
    "docSyntax": "vehicle setVehicleReportOwnPosition report",
    "tags": "",
    "description": "Sets that the vehicle will share its own position via datalink to the Side center.",
    "example": "(vehicle player) setVehicleReportOwnPosition true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setVehicleReportRemoteTargets": {
    "command": "setVehicleReportRemoteTargets",
    "timestamp": "2021-01-24T00:00:39Z",
    "version": "1.70",
    "syntax": "<object> setVehicleReportRemoteTargets <boolean>",
    "docSyntax": "vehicle setVehicleReportRemoteTargets bool",
    "tags": "",
    "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.",
    "example": "(vehicle player) setVehicleReportRemoteTargets true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "targets": {
    "command": "targets",
    "timestamp": "2021-01-24T01:08:17Z",
    "version": "1.70",
    "syntax": "<object> targets <array>",
    "docSyntax": "unit targets [enemyOnly, maxDistance, sides, maxAge, alternateCenter]",
    "tags": "[AG]",
    "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.",
    "example": "_targets = _unit targets [false, 300, nowiki[east,sideEnemy]</nowiki>]; //all targets of east or renegade side in 300m",
    "params": "<object> <array> <boolean> <number> <array> <number> <array>",
    "returns": "array"
  },
  "vehicleReceiveRemoteTargets": {
    "command": "vehicleReceiveRemoteTargets",
    "timestamp": "2021-01-24T10:43:09Z",
    "version": "1.70",
    "syntax": "<object>ReceiveRemoteTargets vehicle",
    "docSyntax": "vehicleReceiveRemoteTargets vehicle",
    "tags": "",
    "description": "Gets whether the vehicle can acquire targets via datalink from the Side center.",
    "example": "vehicleReceiveRemoteTargets (vehicle player);",
    "params": "<object>",
    "returns": "boolean"
  },
  "vehicleReportOwnPosition": {
    "command": "vehicleReportOwnPosition",
    "timestamp": "2021-01-24T10:45:47Z",
    "version": "1.70",
    "syntax": "<object>ReportOwnPosition vehicle",
    "docSyntax": "vehicleReportOwnPosition vehicle",
    "tags": "",
    "description": "Gets whether the vehicle shares its own position via datalink with the Side center.",
    "example": "vehicleReportOwnPosition (vehicle player);",
    "params": "<object>",
    "returns": "boolean"
  },
  "vehicleReportRemoteTargets": {
    "command": "vehicleReportRemoteTargets",
    "timestamp": "2021-01-24T10:45:54Z",
    "version": "1.70",
    "syntax": "<object>ReportRemoteTargets vehicle",
    "docSyntax": "vehicleReportRemoteTargets vehicle",
    "tags": "",
    "description": "Gets whether the vehicle shares acquired targets via datalink with the Side center.",
    "example": "vehicleReportRemoteTargets (vehicle player);",
    "params": "<object>",
    "returns": "boolean"
  },
  "addForce": {
    "command": "addForce",
    "timestamp": "2021-01-22T21:41:55Z",
    "version": "1.72",
    "syntax": "<object> addForce [<array>, relative]",
    "docSyntax": "object addForce [force, position]",
    "tags": "[AG] [EG]",
    "description": "Applies impulse force to given PhysX object at given position. FeatureinformativeSince arma3 v2.04 the command works on units as \nwell: * the unit will be set unconscious and will enter the ragdoll state * the unit has to be local FeatureinformativeFor more information see [http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/apireference/files/classPxRigidBody.html NVIDIA docs].",
    "example": "_object addForce [[0,1000,0], [1,0,0]];",
    "params": "<object> <array> relative",
    "returns": "nothing"
  },
  "addTorque": {
    "command": "addTorque",
    "timestamp": "2021-01-22T21:40:03Z",
    "version": "1.72",
    "syntax": "<object> addTorque <array>",
    "docSyntax": "object addTorque torque",
    "tags": "[AG] [EG]",
    "description": "Applies torque (rotation momentum) to the center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by 400px Feature Informative A single application of torque would produce one impulse, which may not be enough. In this case consider applying a series of continuous impulses, for example to make a quad bike to roll \nforward: codeonEachFrame { quad addTorque (quad vectorModelToWorld [100,0,0]) }</code> Feature important This command doesn't follow convention for torque direction, which obeys right-hand rule. To comply, negate all values in the vector.",
    "example": "_wheel addTorque [1000,0,0];",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_CPDummy": {
    "command": "BIS_fnc_CPDummy",
    "timestamp": "2021-01-22T21:58:53Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPDummy",
    "docSyntax": "[] call BIS_fnc_CPDummy",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPFindEmptyPosition": {
    "command": "BIS_fnc_CPFindEmptyPosition",
    "timestamp": "2021-01-22T21:53:18Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPFindEmptyPosition",
    "docSyntax": "[] call BIS_fnc_CPFindEmptyPosition",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol empty position locator",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPInit": {
    "command": "BIS_fnc_CPInit",
    "timestamp": "2021-01-22T22:00:11Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPInit",
    "docSyntax": "[] call BIS_fnc_CPInit",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol init & general handle",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPLog": {
    "command": "BIS_fnc_CPLog",
    "timestamp": "2021-01-22T21:58:31Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPLog",
    "docSyntax": "[] call BIS_fnc_CPLog",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol dedicated logging fnc",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPPickSafeDir": {
    "command": "BIS_fnc_CPPickSafeDir",
    "timestamp": "2021-01-22T21:59:02Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPPickSafeDir",
    "docSyntax": "[] call BIS_fnc_CPPickSafeDir",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol safe azimuth picker.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPSafeAzimuths": {
    "command": "BIS_fnc_CPSafeAzimuths",
    "timestamp": "2021-01-22T21:54:46Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPSafeAzimuths",
    "docSyntax": "[] call BIS_fnc_CPSafeAzimuths",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol safe azimuth finder. Scans around the AO for usable & convenient approach routes",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPSendReinforcements": {
    "command": "BIS_fnc_CPSendReinforcements",
    "timestamp": "2021-01-22T22:00:07Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPSendReinforcements",
    "docSyntax": "[] call BIS_fnc_CPSendReinforcements",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol reinforcements handle",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPSpawnGarrisonGrp": {
    "command": "BIS_fnc_CPSpawnGarrisonGrp",
    "timestamp": "2021-01-22T21:56:29Z",
    "version": "1.72",
    "syntax": "[] call BIS_fnc_CPSpawnGarrisonGrp",
    "docSyntax": "[] call BIS_fnc_CPSpawnGarrisonGrp",
    "tags": "",
    "description": "\nAuthor: Josef Zemanek \nDescription: Combat Patrol garrison spawning",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_CPWaitUntil": {
    "command": "BIS_fnc_CPWaitUntil",
    "timestamp": "2021-01-22T21:59:33Z",
    "version": "1.72",
    "syntax": "[<code>, <number>] spawn BIS_fnc_CPWaitUntil",
    "docSyntax": "[condition, interval] spawn BIS_fnc_CPWaitUntil",
    "tags": "",
    "description": "Function waits until condition becomes true. Condition is checked with given interval.",
    "example": "[nowiki{ not alive player }, 2] spawn BIS_fnc_CPWaitUntil;",
    "params": "<code> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_laptopInit": {
    "command": "BIS_fnc_laptopInit",
    "timestamp": "2021-01-23T09:58:35Z",
    "version": "1.72",
    "syntax": "<object> call BIS_fnc_laptopInit",
    "docSyntax": "laptop call BIS_fnc_laptopInit",
    "tags": "[AG] [EL]",
    "description": "Adds an Easter egg to the laptop, that is active only if the mission date is set to '2001-06-22'. Feature Informative Best used with the Old Laptop.",
    "example": "private _actionId = _myLaptop call BIS_fnc_laptopInit;",
    "params": "<object>",
    "returns": "nothing | number"
  },
  "BIS_fnc_laptopPlayVideo": {
    "command": "BIS_fnc_laptopPlayVideo",
    "timestamp": "2021-01-23T10:03:21Z",
    "version": "1.72",
    "syntax": "<object> call BIS_fnc_laptopPlayVideo",
    "docSyntax": "laptop call BIS_fnc_laptopPlayVideo",
    "tags": "[AG]",
    "description": "Plays an easter egg video on the screen of an old laptop.",
    "example": "this call BIS_fnc_laptopPlayVideo;",
    "params": "<object>",
    "returns": "nothing"
  },
  "enableInfoPanelComponent": {
    "command": "enableInfoPanelComponent",
    "timestamp": "2021-01-22T22:54:02Z",
    "version": "1.72",
    "syntax": "<object> <boolean>InfoPanelComponent [<string>, <string>, <boolean>]",
    "docSyntax": "unit enableInfoPanelComponent [panelID, componentClassOrType, enable]",
    "tags": "",
    "description": "Controls availability of component to given object info panel.",
    "example": "// enables slingload assistant on player's vehicle right panel at driver position [vehicle player, [-1]] enableInfoPanelComponent [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplay\", true];",
    "params": "<object> <string> <string> <boolean> <object> <array> <string> <string> <boolean>",
    "returns": "boolean | true | false"
  },
  "enableVehicleSensor": {
    "command": "enableVehicleSensor",
    "timestamp": "2021-01-23T00:59:22Z",
    "version": "1.72",
    "syntax": "<object> enableVehicleSensor [componentName, <boolean>]",
    "docSyntax": "vehicle enableVehicleSensor [componentName, enabled]",
    "tags": "[AG] [EL]",
    "description": "Enable/disable given sensor",
    "example": "sqfvehicle player enableVehicleSensor [\"PassiveRadarSensorComponent\", false]; // disables passive radar</sqf>",
    "params": "<object> <string> <boolean>",
    "returns": "nothing"
  },
  "getCompatiblePylonMagazines": {
    "command": "getCompatiblePylonMagazines",
    "timestamp": "2021-01-22T23:12:31Z",
    "version": "1.72",
    "syntax": "<object> getCompatiblePylonMagazines <number>",
    "docSyntax": "vehicle getCompatiblePylonMagazines pylon",
    "tags": "",
    "description": "Get array of compatible pylon magazines",
    "example": "vehicle player getCompatiblePylonMagazines 0; // returns array of arrays containing all compatible magazines",
    "params": "<object> <number>",
    "returns": "array | string | array | array | string"
  },
  "infoPanel": {
    "command": "infoPanel",
    "timestamp": "2021-01-23T09:23:54Z",
    "version": "1.72",
    "syntax": "infoPanel <string>",
    "docSyntax": "infoPanel infoPanelId",
    "tags": "",
    "description": "Returns information about what is currently displayed on given player's info panel.br Returns [\"EmptyDisplay\",\"EmptyDisplayComponent\"] when no panel is open.",
    "example": "infoPanel \"left\";",
    "params": "<string>",
    "returns": "array"
  },
  "infoPanelComponentEnabled": {
    "command": "infoPanelComponentEnabled",
    "timestamp": "2021-01-23T09:06:28Z",
    "version": "1.72",
    "syntax": "<object> infoPanelComponentEnabled [<string>, <string>]",
    "docSyntax": "unit infoPanelComponentEnabled [panelID, componentClassOrType]",
    "tags": "",
    "description": "Controls availability of component to given object info panel.",
    "example": "// returns true if specific component \"SensorDisplay\" is enabled on player vehicle's left panel _state = [vehicle player, [-1]] infoPanelComponentEnabled [\"VehicleSystemsDisplayManagerComponentLeft\", \"SensorDisplay\"];",
    "params": "<object> <string> <string> <object> <array> <string> <string>",
    "returns": "boolean | true | false"
  },
  "infoPanelComponents": {
    "command": "infoPanelComponents",
    "timestamp": "2021-01-23T09:08:28Z",
    "version": "1.72",
    "syntax": "<object> infoPanelComponents <string>",
    "docSyntax": "unit infoPanelComponents panelID",
    "tags": "",
    "description": "Returns array of all components available to given object info panel.",
    "example": "// returns array of all components configured for _helicopter pilot seat _componentsData = [_helicopter, [-1]] infoPanelComponents \"left\";",
    "params": "<object> <string> <object> <array> <string>",
    "returns": "array | string | string | boolean"
  },
  "infoPanels": {
    "command": "infoPanels",
    "timestamp": "2021-01-23T09:09:11Z",
    "version": "1.72",
    "syntax": "infoPanels <object>",
    "docSyntax": "infoPanels unit",
    "tags": "",
    "description": "Returns array all info panels configured for given object or object and turret path.",
    "example": "infoPanels [vehicle player, [0]];",
    "params": "<object> <object> <array>",
    "returns": "array | string | string"
  },
  "isSensorTargetConfirmed": {
    "command": "isSensorTargetConfirmed",
    "timestamp": "2021-01-23T09:14:41Z",
    "version": "1.72",
    "syntax": "<object> isSensorTargetConfirmed <side>",
    "docSyntax": "unit isSensorTargetConfirmed side",
    "tags": "",
    "description": "Returns if given unit is confirmed target for given side.",
    "example": "_enemyConfirmed = _possibleEnemy isSensorTargetConfirmed opfor;",
    "params": "<object> <side>",
    "returns": "boolean | true | false"
  },
  "isVehicleRadarOn": {
    "command": "isVehicleRadarOn",
    "timestamp": "2021-01-23T09:23:05Z",
    "version": "1.72",
    "syntax": "isVehicleRadarOn <object>",
    "docSyntax": "isVehicleRadarOn vehicle",
    "tags": "",
    "description": "Returns true if vehicle has active sensors on.",
    "example": "<isVehicleRadarOn > vehicle player; // returns true if radar is turned on",
    "params": "<object>",
    "returns": "boolean"
  },
  "isVehicleSensorEnabled": {
    "command": "isVehicleSensorEnabled",
    "timestamp": "2021-01-23T09:20:50Z",
    "version": "1.72",
    "syntax": "<object> isVehicleSensorEnabled componentName",
    "docSyntax": "vehicle isVehicleSensorEnabled componentName",
    "tags": "",
    "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled",
    "example": "vehicle player isVehicleSensorEnabled \"PassiveRadarSensorComponent\"; // [ [\"PassiveRadarSensorComponent\",true] ]",
    "params": "<object> <string>",
    "returns": "array"
  },
  "listRemoteTargets": {
    "command": "listRemoteTargets",
    "timestamp": "2021-01-23T09:56:35Z",
    "version": "1.72",
    "syntax": "listRemoteTargets <side>",
    "docSyntax": "listRemoteTargets side",
    "tags": "",
    "description": "Return list of datalink targets and time for which they will be/were known.",
    "example": "'listRemoteTargets' opfor;",
    "params": "<side>",
    "returns": "array | object | number"
  },
  "listVehicleSensors": {
    "command": "listVehicleSensors",
    "timestamp": "2021-01-23T10:00:43Z",
    "version": "1.72",
    "syntax": "listVehicleSensors <object>",
    "docSyntax": "listVehicleSensors vehicle",
    "tags": "",
    "description": "Returns an array of the sensors in the given vehicle's config (configFile >> \"CfgVehicles\" >> ''vehicle'' >> \"Components\" >> \"SensorsManagerComponent\" >> \"Components\").",
    "example": "sqf private _sensors = listVehicleSensors _v44blackfish; hint str _sensors; /* e.g for a V44 Blackfish: [ [\"IRSensorComponent\", \"IRSensorComponent\"], [\"VisualSensorComponent\", \"VisualSensorComponent\"], [\"ActiveRadarSensorComponent\", \"ActiveRadarSensorComponent\"], [\"PassiveRadarSensorComponent\", \"PassiveRadarSensorComponent\"], [\"LaserSensorComponent\", \"LaserSensorComponent\"], [\"NVSensorComponent\", \"NVSensorComponent\"] ] */ </sqf>",
    "params": "<object>",
    "returns": "array | array"
  },
  "setInfoPanel": {
    "command": "setInfoPanel",
    "timestamp": "2021-01-23T20:33:39Z",
    "version": "1.72",
    "syntax": "setInfoPanel [infopanelId, <string>]",
    "docSyntax": "setInfoPanel [infopanelId, componentClassOrType]",
    "tags": "",
    "description": "Opens given component or first component of given component type on specified info panel.",
    "example": "// opens slingload assistant on right panel _result = setInfoPanel [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplayComponent\"];",
    "params": "<string> <string>",
    "returns": "boolean | true | false"
  },
  "vectorModelToWorld": {
    "command": "vectorModelToWorld",
    "timestamp": "2021-01-24T10:46:27Z",
    "version": "1.72",
    "syntax": "<object> vectorModelToWorld <array>",
    "docSyntax": "object vectorModelToWorld modelDir",
    "tags": "",
    "description": "Converts vector direction from model to world space. FeatureimportantFor scaled objects, the resulting vector's magnitude will also be multiplied by the object scale.",
    "example": "_airplane vectorModelToWorld [0,-10,4];",
    "params": "<object> <array>",
    "returns": "array"
  },
  "vectorModelToWorldVisual": {
    "command": "vectorModelToWorldVisual",
    "timestamp": "2021-01-24T10:43:43Z",
    "version": "1.72",
    "syntax": "<object> vectorModelToWorldVisual <array>",
    "docSyntax": "object vectorModelToWorldVisual modelDir",
    "tags": "",
    "description": "Converts vector from model to world space in render time scope. FeatureimportantFor scaled objects, the resulting vector's magnitude will also be multiplied by the object scale.",
    "example": "_airplane vectorModelToWorldVisual [0,-10,4];",
    "params": "<object> <array>",
    "returns": "array"
  },
  "vectorWorldToModel": {
    "command": "vectorWorldToModel",
    "timestamp": "2021-01-24T10:39:59Z",
    "version": "1.72",
    "syntax": "<object> vectorWorldToModel <array>",
    "docSyntax": "object vectorWorldToModel worldDir",
    "tags": "",
    "description": "Converts vector direction from world to model space. FeatureimportantFor scaled objects, the resulting vector's magnitude will be divided by the object scale.",
    "example": "_airplane vectorWorldToModel [0,-10,4];",
    "params": "<object> <array>",
    "returns": "array"
  },
  "vectorWorldToModelVisual": {
    "command": "vectorWorldToModelVisual",
    "timestamp": "2021-01-24T10:44:21Z",
    "version": "1.72",
    "syntax": "<object> vectorWorldToModelVisual <array>",
    "docSyntax": "object vectorWorldToModelVisual worldDir",
    "tags": "",
    "description": "Converts vector direction from world to model space in render time scope. FeatureimportantFor scaled objects, the resulting vector's magnitude will be divided by the object scale.",
    "example": "_airplane vectorWorldToModelVisual [0,-10,4];",
    "params": "<object> <array>",
    "returns": "array"
  },
  "BIS_fnc_drawArrow": {
    "command": "BIS_fnc_drawArrow",
    "timestamp": "2021-01-23T09:12:21Z",
    "version": "1.74",
    "syntax": "[<array>, <array>, color, pars, fill, map] call BIS_fnc_drawArrow",
    "docSyntax": "[from, to, color, pars, fill, map] call BIS_fnc_drawArrow",
    "tags": "",
    "description": "Draws a static arrow (outline or color filled) on map. See Example 4 for arrow removal. FeatureInformativeNote that the order in which arrows are added to map is reversed, the last added arrow will appear under the first added arrow",
    "example": "myArrow1 = [_pos1, _pos2, [0,0,1,0.5]] call BIS_fnc_drawArrow;",
    "params": "<array> <array> <array> <array> <boolean> control",
    "returns": "448px 400px"
  },
  "BIS_fnc_fire": {
    "command": "BIS_fnc_fire",
    "timestamp": "2021-01-23T09:24:35Z",
    "version": "1.74",
    "syntax": "[<object>, <string>, turret] call BIS_fnc_fire",
    "docSyntax": "[entity, muzzle, turret] call BIS_fnc_fire",
    "tags": "[AG] [EG]",
    "description": "Makes a unit or a vehicle fire given muzzle. Make sure that there is some ammo to fire, and, in case of a unit, the weapon with given muzzle is already selected. It can be used to fire pretty much any muzzle on unit or vehicle from anywhere. Available weapons could usually be found with weapons, weaponsTurret and allTurrets commands.",
    "example": "marshall = \"B_APC_Wheeled_01_cannon_F\" createVehicle position player; createVehicleCrew marshall; [marshall, \"HE\"] call BIS_fnc_fire; // fires HE muzzle of the main cannon [marshall, \"AP\"] call BIS_fnc_fire; // fires AP muzzle of the main cannon [marshall, \"autocannon_40mm_CTWS\"] call BIS_fnc_fire; // fires HE muzzle, because it is default [marshall, \"LMG_M200_body\"] call BIS_fnc_fire; // fires machine gun [marshall, \"SmokeLauncher\"] call BIS_fnc_fire; // fires smoke launcher [marshall, \"TruckHorn\"] call BIS_fnc_fire; // beeps the horn",
    "params": "<object> <string> <array>",
    "returns": "boolean | nothing | true | false"
  },
  "allAirports": {
    "command": "allAirports",
    "timestamp": "2021-01-22T21:35:44Z",
    "version": "1.76",
    "syntax": "allAirports",
    "docSyntax": "allAirports",
    "tags": "",
    "description": "Returns all map airports, both static and dynamic",
    "example": "_allAirports = allAirports;",
    "params": "",
    "returns": "array | array | number | array | object"
  },
  "BIS_fnc_3DENAttributeDoorStates": {
    "command": "BIS_fnc_3DENAttributeDoorStates",
    "timestamp": "2021-02-06T13:03:37Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_3DENAttributeDoorStates",
    "docSyntax": "[] call BIS_fnc_3DENAttributeDoorStates",
    "tags": "",
    "description": "Internal function used for the <Eden Editor> Edit Terrain Object module.",
    "example": "-",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_allTurrets": {
    "command": "BIS_fnc_allTurrets",
    "timestamp": "2021-01-22T23:07:31Z",
    "version": "1.76",
    "syntax": "<string> call BIS_fnc_allTurrets",
    "docSyntax": "vehicleClass call BIS_fnc_allTurrets",
    "tags": "",
    "description": "Returns all vehicle turrets from config with options. Does what allTurrets command does, except the param is vehicle's config classname.",
    "example": "_allTurrets = \"C_Offroad_01_F\" call BIS_fnc_allTurrets; cc[]",
    "params": "<string> <string> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_carAlarm": {
    "command": "BIS_fnc_carAlarm",
    "timestamp": "2021-01-23T00:00:23Z",
    "version": "1.76",
    "syntax": "[<string>, <object>] call BIS_fnc_carAlarm",
    "docSyntax": "[mode, car] call BIS_fnc_carAlarm",
    "tags": "",
    "description": "Play car alarm effect.",
    "example": "[\"init\", myCar] call BIS_fnc_carAlarm;",
    "params": "<string> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_createRuin": {
    "command": "BIS_fnc_createRuin",
    "timestamp": "2021-01-22T23:54:54Z",
    "version": "1.76",
    "syntax": "<object> call BIS_fnc_createRuin",
    "docSyntax": "building call BIS_fnc_createRuin",
    "tags": "",
    "description": "Create a building ruin and hide the original object.",
    "example": "aBuilding call BIS_fnc_createRuin;",
    "params": "<object>",
    "returns": "object"
  },
  "BIS_fnc_firedBombDemine": {
    "command": "BIS_fnc_firedBombDemine",
    "timestamp": "2021-01-23T09:16:04Z",
    "version": "1.76",
    "syntax": "<!-- [] call BIS_fnc_firedBombDemine -->",
    "docSyntax": "<!-- [] call BIS_fnc_firedBombDemine -->",
    "tags": "",
    "description": "Function used inside the IDAP showcase.",
    "example": "[] call BIS_fnc_firedBombDemine;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_getCloudletParams": {
    "command": "BIS_fnc_getCloudletParams",
    "timestamp": "2021-01-23T08:56:28Z",
    "version": "1.76",
    "syntax": "[<string>] call BIS_fnc_getCloudletParams",
    "docSyntax": "[cfgCloudletClass] call BIS_fnc_getCloudletParams",
    "tags": "",
    "description": "Return particle params of CfgCloudlets class.",
    "example": "[\"AmmoLightSmokeParticles\"] call BIS_fnc_getCloudletParams;",
    "params": "<string>",
    "returns": "array | setparticleparams | setparticlerandom | setdropinterval | br"
  },
  "BIS_fnc_initInspectable": {
    "command": "BIS_fnc_initInspectable",
    "timestamp": "2021-01-23T09:53:33Z",
    "version": "1.76",
    "syntax": "[<object>, can, <string>, cfgsounds] call BIS_fnc_initInspectable",
    "docSyntax": "[inspectable, textureInfos, fullScreenText, soundName] call BIS_fnc_initInspectable",
    "tags": "",
    "description": "Initialize inspectable \nobject: add \"Inspect\" action to the object. When a player activates it, full-screen detail of the objects is shown.",
    "example": "[myLeaflet, \"#(argb,8,8,3)color(1,0,1,1)\", \"This is some Magic Pink\"] call BIS_fnc_initInspectable; // Initialize",
    "params": "<object> can <string> cfgsounds",
    "returns": "nothing"
  },
  "BIS_fnc_initLeaflet": {
    "command": "BIS_fnc_initLeaflet",
    "timestamp": "2021-01-23T10:04:57Z",
    "version": "1.76",
    "syntax": "[<string>, <array>] call BIS_fnc_initLeaflet",
    "docSyntax": "[mode, parameters] call BIS_fnc_initLeaflet",
    "tags": "",
    "description": "Initialize interactive leaflet.",
    "example": "[\"init\", [myLeaflet, \"#(argb,8,8,3)color(1,1,0,1)\", \"Yellow pages\"]] call BIS__fnc_initLeaflet;",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_moduleCivilianPresence": {
    "command": "BIS_fnc_moduleCivilianPresence",
    "timestamp": "2021-01-23T10:07:19Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_moduleCivilianPresence",
    "docSyntax": "[] call BIS_fnc_moduleCivilianPresence",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- \nExample: [\"getObjects\",[_module,\"ModuleCivilianPresenceSafeSpot_F\"]] call BIS_fnc_moduleCivilianPresence; --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCivilianPresenceSafeSpot": {
    "command": "BIS_fnc_moduleCivilianPresenceSafeSpot",
    "timestamp": "2021-01-23T10:12:33Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_moduleCivilianPresenceSafeSpot",
    "docSyntax": "[] call BIS_fnc_moduleCivilianPresenceSafeSpot",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleCivilianPresenceUnit": {
    "command": "BIS_fnc_moduleCivilianPresenceUnit",
    "timestamp": "2021-01-23T09:52:01Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_moduleCivilianPresenceUnit",
    "docSyntax": "[] call BIS_fnc_moduleCivilianPresenceUnit",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleEditTerrainObject": {
    "command": "BIS_fnc_moduleEditTerrainObject",
    "timestamp": "2021-01-23T09:53:11Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_moduleEditTerrainObject",
    "docSyntax": "[] call BIS_fnc_moduleEditTerrainObject",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- Setups given terrain object. --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_moduleHideTerrainObjects": {
    "command": "BIS_fnc_moduleHideTerrainObjects",
    "timestamp": "2021-01-23T09:52:34Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_moduleHideTerrainObjects",
    "docSyntax": "[] call BIS_fnc_moduleHideTerrainObjects",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- 3DEN \nMOD: Hiddes closest terrain object. --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_setObjectShotParents": {
    "command": "BIS_fnc_setObjectShotParents",
    "timestamp": "2021-01-23T20:25:24Z",
    "version": "1.76",
    "syntax": "<!-- [] call BIS_fnc_setObjectShotParents -->",
    "docSyntax": "<!-- [] call BIS_fnc_setObjectShotParents -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_setObjectShotParents;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showAANArticle": {
    "command": "BIS_fnc_showAANArticle",
    "timestamp": "2021-01-23T20:36:15Z",
    "version": "1.76",
    "syntax": "[array, <display>, <boolean>] call BIS_fnc_showAANArticle",
    "docSyntax": "[arrayOfArrays, display, fade] call BIS_fnc_showAANArticle",
    "tags": "",
    "description": "Show an AAN article.",
    "example": "[ [ [\"title\",\"My Title\"], [\"meta\",[\"Katherine Bishop\",[2035,2,24,11,38],\"CET\"]], [\"textbold\",\"This is a bold text\"], [\"image\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\orange_overview_ca.paa\",\"Some image description\"]], [\"box\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\Faction_IDAP_overview_CA.paa\",\"You won't believe how playing Showcase Laws of War can change your life!\"]], [\"text\",\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tincidunt pretium ultricies. Etiam ac ornare est, quis posuere nisl. Mauris facilisis lectus eu turpis maximus consequat. Donec ut metus nec risus tristique mattis. Ut posuere rutrum tellus, ut molestie orci mattis id. Cras ultrices euismod diam, in venenatis nunc commodo eget. Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi congue dolor rutrum lectus euismod, ac faucibus magna molestie. Aliquam in libero sit amet eros sagittis tristique. Nam pellentesque dignissim aliquam.\"], [\"textlocked\",[\"Sed non est risus. Nulla condimentum at leo sed bibendum. Phasellus laoreet sit amet leo tincidunt consequat. Curabitur nec hendrerit purus. Nam massa nisi, mattis in aliquet consectetur, ornare eget nibh. Nunc dignissim, nibh sit amet ultrices tincidunt, mi nulla fermentum quam, non condimentum dolor eros vulputate massa.\",\"SUBSCRIBE PLZ\"]], [\"author\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\avatar_journalist_ca.paa\",\"Katherine Bishop is a journalist\"]] ] ] call BIS_fnc_showAANArticle; ",
    "params": "array <display> <boolean>",
    "returns": "display"
  },
  "BIS_fnc_smoothStep": {
    "command": "BIS_fnc_smoothStep",
    "timestamp": "2021-01-23T20:21:30Z",
    "version": "1.76",
    "syntax": "floored call BIS_fnc_smoothStep",
    "docSyntax": "number call BIS_fnc_smoothStep",
    "tags": "",
    "description": "Interpolates between 0 and 1 with smoothing at the limits. Formula is icn² × (3 - 2n).",
    "example": "_smoothedStep = 0.75 call BIS_fnc_smoothStep;",
    "params": "floored",
    "returns": "number"
  },
  "BIS_fnc_timeline_cleanup": {
    "command": "BIS_fnc_timeline_cleanup",
    "timestamp": "2021-01-23T20:17:13Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_cleanup",
    "docSyntax": "[timeline] call BIS_fnc_timeline_cleanup",
    "tags": "",
    "description": "Destroys timeline and all related objects.",
    "example": "[timeline] call BIS_fnc_timeline_cleanup;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_deleted": {
    "command": "BIS_fnc_timeline_deleted",
    "timestamp": "2021-01-23T20:18:49Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_deleted",
    "docSyntax": "[timeline] call BIS_fnc_timeline_deleted",
    "tags": "",
    "description": "Deletes given timeline and updates codemissionNamespace getVariable \"Timelines\"];</code>",
    "example": "[timeline] call BIS_fnc_timeline_deleted;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_finish": {
    "command": "BIS_fnc_timeline_finish",
    "timestamp": "2021-01-23T20:32:41Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_finish",
    "docSyntax": "[timeline] call BIS_fnc_timeline_finish",
    "tags": "",
    "description": "Called when timeline finishes playing (reaches it is end).",
    "example": "[timeline] call BIS_fnc_timeline_finish;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_getAlpha": {
    "command": "BIS_fnc_timeline_getAlpha",
    "timestamp": "2021-01-23T20:24:33Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getAlpha",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getAlpha",
    "tags": "",
    "description": "Get's current alpha in given timeline.",
    "example": "_alpha = [timeline] call BIS_fnc_timeline_getAlpha;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getCurrentTime": {
    "command": "BIS_fnc_timeline_getCurrentTime",
    "timestamp": "2021-01-23T20:36:01Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getCurrentTime",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getCurrentTime",
    "tags": "",
    "description": "The current time of this timeline.",
    "example": "_time = [timeline] call BIS_fnc_timeline_getCurrentTime;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getInterpMode": {
    "command": "BIS_fnc_timeline_getInterpMode",
    "timestamp": "2021-01-23T20:23:45Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getInterpMode",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getInterpMode",
    "tags": "",
    "description": "Returns the timeline interp mode index.",
    "example": "_interpMode = [timeline] call BIS_fnc_timeline_getInterpMode;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getLength": {
    "command": "BIS_fnc_timeline_getLength",
    "timestamp": "2021-01-23T20:23:51Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getLength",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getLength",
    "tags": "",
    "description": "The time left of given timeline.",
    "example": "_timeLeft= [timeline] call BIS_fnc_timeline_getLength;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getPlayFromStart": {
    "command": "BIS_fnc_timeline_getPlayFromStart",
    "timestamp": "2021-01-23T20:32:38Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getPlayFromStart",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getPlayFromStart",
    "tags": "",
    "description": "Whether timeline is flagged as play from start on scenario begin.",
    "example": "_playFromStart= [timeline] call BIS_fnc_timeline_getPlayFromStart;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_getPlayRate": {
    "command": "BIS_fnc_timeline_getPlayRate",
    "timestamp": "2021-01-23T20:17:03Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getPlayRate",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getPlayRate",
    "tags": "",
    "description": "Returns the play rate of this timeline.",
    "example": "_playRate= [timeline] call BIS_fnc_timeline_getPlayRate;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getPlayTime": {
    "command": "BIS_fnc_timeline_getPlayTime",
    "timestamp": "2021-01-23T20:33:18Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getPlayTime",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getPlayTime",
    "tags": "",
    "description": "The time at which timeline started playing.",
    "example": "_startTime = [timeline] call BIS_fnc_timeline_getPlayTime;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getPosition": {
    "command": "BIS_fnc_timeline_getPosition",
    "timestamp": "2021-01-23T20:35:27Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getPosition",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getPosition",
    "tags": "",
    "description": "Returns the position of given timeline.",
    "example": "_position= [timeline] call BIS_fnc_timeline_getPosition;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getSimulatedCurves": {
    "command": "BIS_fnc_timeline_getSimulatedCurves",
    "timestamp": "2021-01-23T20:19:42Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getSimulatedCurves",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getSimulatedCurves",
    "tags": "",
    "description": "Returns the simulated curves of a timeline.",
    "example": "_curves= [timeline] call BIS_fnc_timeline_getSimulatedCurves;",
    "params": "<object>",
    "returns": "array"
  },
  "BIS_fnc_timeline_getStopTime": {
    "command": "BIS_fnc_timeline_getStopTime",
    "timestamp": "2021-01-23T20:27:01Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getStopTime",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getStopTime",
    "tags": "",
    "description": "The time at which timeline stopped playing",
    "example": "_timeStopped= [timeline] call BIS_fnc_timeline_getStopTime;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_getTimeLeft": {
    "command": "BIS_fnc_timeline_getTimeLeft",
    "timestamp": "2021-01-23T20:17:27Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_getTimeLeft",
    "docSyntax": "[timeline] call BIS_fnc_timeline_getTimeLeft",
    "tags": "",
    "description": "The time left of given timeline.",
    "example": "_timeLeft= [timeline] call BIS_fnc_timeline_getTimeLeft;",
    "params": "<object>",
    "returns": "number"
  },
  "BIS_fnc_timeline_init": {
    "command": "BIS_fnc_timeline_init",
    "timestamp": "2021-01-23T20:18:48Z",
    "version": "1.76",
    "syntax": "[<object>, <number>, <number>, <number>, <boolean>] call BIS_fnc_timeline_init",
    "docSyntax": "[timeline, initPosition, length, playRate, loop] call BIS_fnc_timeline_init",
    "tags": "",
    "description": "Initialized a timeline.",
    "example": "[timeline] call BIS_fnc_timeline_init;",
    "params": "<object> <number> <number> <number> <boolean> <boolean> <boolean> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_isFinished": {
    "command": "BIS_fnc_timeline_isFinished",
    "timestamp": "2021-01-23T20:32:55Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_isFinished",
    "docSyntax": "[timeline] call BIS_fnc_timeline_isFinished",
    "tags": "",
    "description": "Returns whether given timeline has finished.",
    "example": "_isFinished= [timeline] call BIS_fnc_timeline_isFinished;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_isLooping": {
    "command": "BIS_fnc_timeline_isLooping",
    "timestamp": "2021-01-23T20:32:51Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_isLooping",
    "docSyntax": "[timeline] call BIS_fnc_timeline_isLooping",
    "tags": "",
    "description": "Returns whether given timeline is in loop mode.",
    "example": "_isLooping= [timeline] call BIS_fnc_timeline_isLooping;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_isPaused": {
    "command": "BIS_fnc_timeline_isPaused",
    "timestamp": "2021-01-23T20:23:07Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_isPaused",
    "docSyntax": "[timeline] call BIS_fnc_timeline_isPaused",
    "tags": "",
    "description": "Returns whether given timeline is paused.",
    "example": "_isPaused= [timeline] call BIS_fnc_timeline_isPaused;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_isPlaying": {
    "command": "BIS_fnc_timeline_isPlaying",
    "timestamp": "2021-01-23T20:34:07Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_isPlaying",
    "docSyntax": "[timeline] call BIS_fnc_timeline_isPlaying",
    "tags": "",
    "description": "Whether given timeline is playing (can be paused at same time!)",
    "example": "_isPlaying= [timeline] call BIS_fnc_timeline_isPlaying;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_isReverse": {
    "command": "BIS_fnc_timeline_isReverse",
    "timestamp": "2021-01-23T20:19:16Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_isReverse",
    "docSyntax": "[timeline] call BIS_fnc_timeline_isReverse",
    "tags": "",
    "description": "Whether given timeline is in reverse mode",
    "example": "_isReverse = [timeline] call BIS_fnc_timeline_isReverse;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_timeline_play": {
    "command": "BIS_fnc_timeline_play",
    "timestamp": "2021-01-23T20:22:08Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_play",
    "docSyntax": "[timeline] call BIS_fnc_timeline_play",
    "tags": "",
    "description": "Play given timeline if currently not playing. If we are playing and paused, we unpause.",
    "example": "[timeline] call BIS_fnc_timeline_play;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setInterpMode": {
    "command": "BIS_fnc_timeline_setInterpMode",
    "timestamp": "2021-01-23T20:31:49Z",
    "version": "1.76",
    "syntax": "[<object>, <number>] call BIS_fnc_timeline_setInterpMode",
    "docSyntax": "[timeline, mode] call BIS_fnc_timeline_setInterpMode",
    "tags": "",
    "description": "Set's the interpolation mode of the timeline.",
    "example": "[timeline,15] call BIS_fnc_timeline_setInterpMode;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setLength": {
    "command": "BIS_fnc_timeline_setLength",
    "timestamp": "2021-01-23T20:30:26Z",
    "version": "1.76",
    "syntax": "[<object>, <number>] call BIS_fnc_timeline_setLength",
    "docSyntax": "[timeline, length] call BIS_fnc_timeline_setLength",
    "tags": "",
    "description": "Set's the length of this timeline in seconds.",
    "example": "[timeline,5.5] call BIS_fnc_timeline_setLength;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setLoop": {
    "command": "BIS_fnc_timeline_setLoop",
    "timestamp": "2021-01-24T00:31:36Z",
    "version": "1.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_timeline_setLoop",
    "docSyntax": "[timeline, loop] call BIS_fnc_timeline_setLoop",
    "tags": "",
    "description": "Set's this timeline playback loop mode",
    "example": "[timeline] call BIS_fnc_timeline_setLoop;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setPause": {
    "command": "BIS_fnc_timeline_setPause",
    "timestamp": "2021-01-24T00:10:08Z",
    "version": "1.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_timeline_setPause",
    "docSyntax": "[timeline, pause] call BIS_fnc_timeline_setPause",
    "tags": "",
    "description": "Pauses or unpauses timeline.",
    "example": "[timeline] call BIS_fnc_timeline_setPause;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setPlayRate": {
    "command": "BIS_fnc_timeline_setPlayRate",
    "timestamp": "2021-01-24T00:34:22Z",
    "version": "1.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_timeline_setPlayRate",
    "docSyntax": "[timeline, rate] call BIS_fnc_timeline_setPlayRate",
    "tags": "",
    "description": "Sets playrate of timeline.",
    "example": "[timeline,2] call BIS_fnc_timeline_setPlayRate;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setPosition": {
    "command": "BIS_fnc_timeline_setPosition",
    "timestamp": "2021-01-24T00:16:39Z",
    "version": "1.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_timeline_setPosition",
    "docSyntax": "[timeline, position] call BIS_fnc_timeline_setPosition",
    "tags": "",
    "description": "Sets position of timeline.",
    "example": "[timeline,2] call BIS_fnc_timeline_setPosition;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_setReverse": {
    "command": "BIS_fnc_timeline_setReverse",
    "timestamp": "2021-01-24T00:06:46Z",
    "version": "1.76",
    "syntax": "[<object>, <boolean>] call BIS_fnc_timeline_setReverse",
    "docSyntax": "[timeline, reverse] call BIS_fnc_timeline_setReverse",
    "tags": "",
    "description": "Change direction of timeline.",
    "example": "[timeline,false] call BIS_fnc_timeline_setReverse;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_simulateCurves": {
    "command": "BIS_fnc_timeline_simulateCurves",
    "timestamp": "2021-01-24T00:11:19Z",
    "version": "1.76",
    "syntax": "[] call BIS_fnc_timeline_simulateCurves",
    "docSyntax": "[] call BIS_fnc_timeline_simulateCurves",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Sets this timeline playback as reverse or not. Parameter(s): _this select \n0: Object - The timeline _this select \n1: Alpha - Current timeline alpha _this select \n1: DeltaT - Delta time \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_stop": {
    "command": "BIS_fnc_timeline_stop",
    "timestamp": "2021-01-24T00:34:00Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_stop",
    "docSyntax": "[timeline] call BIS_fnc_timeline_stop",
    "tags": "",
    "description": "Stops a timeline.",
    "example": "[timeline] call BIS_fnc_timeline_stop;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_timeline_tick": {
    "command": "BIS_fnc_timeline_tick",
    "timestamp": "2021-01-24T00:53:45Z",
    "version": "1.76",
    "syntax": "[<object>] call BIS_fnc_timeline_tick",
    "docSyntax": "[timeline] call BIS_fnc_timeline_tick",
    "tags": "",
    "description": "Ticks a timeline.",
    "example": "[timeline] call BIS_fnc_timeline_tick;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_wpDemine": {
    "command": "BIS_fnc_wpDemine",
    "timestamp": "2021-01-24T10:45:53Z",
    "version": "1.76",
    "syntax": "[<group>, <position>, <anything>, its] call BIS_fnc_wpDemine",
    "docSyntax": "[group, position, target, clearUnknownMines] call BIS_fnc_wpDemine",
    "tags": "",
    "description": "Scripted \"CLEAR MINES\" Advanced Waypoint. The script needs a unit with the abiility to demine (engineer or explosive specialist trait 'and' a toolkit).",
    "example": "[group player, getMarkerPos \"mineField\", objNull, false] call BIS_fnc_wpDemine;",
    "params": "<group> <position> <anything> its",
    "returns": "nothing"
  },
  "drawTriangle": {
    "command": "drawTriangle",
    "timestamp": "2021-01-22T22:57:17Z",
    "version": "1.76",
    "syntax": "<control> drawTriangle [position3d, color, <string>]",
    "docSyntax": "map drawTriangle [vertices, color, fill]",
    "tags": "",
    "description": "right|250px Draws one to multiple triangles on the map. Feature informative When fill param is absent or is an empty string \"\", the triangle is drawn with lines of the color set in color param. In order to draw color-filled triangle of the same color as color param, set fill param to opaque white procedural texturehl\"#(rgb,1,1,1)color(1,1,1,1)\".",
    "example": "findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawTriangle [ [ cctriangle 1 start player getRelPos [100, 0], player getRelPos [100, -135], player getRelPos [100, 135] cctriangle 1 end ], [1,0,0,0.5], \"#(rgb,1,1,1)color(1,1,1,1)\" ]; }];",
    "params": "<control> position3d color <string>",
    "returns": "nothing"
  },
  "isUIContext": {
    "command": "isUIContext",
    "timestamp": "2021-01-23T09:24:48Z",
    "version": "1.76",
    "syntax": "'isUIContext'",
    "docSyntax": "'isUIContext'",
    "tags": "",
    "description": "Returns true if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.",
    "example": "if (isUIContext) then {hint \"UI control event\"};",
    "params": "",
    "returns": "boolean"
  },
  "selectRandomWeighted": {
    "command": "selectRandomWeighted",
    "timestamp": "2021-01-23T20:18:46Z",
    "version": "1.76",
    "syntax": "selectRandomWeighted <array>",
    "docSyntax": "selectRandomWeighted valuesAndWeights",
    "tags": "",
    "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few \nnotes: * Negative weights are not supported * If an item's weight is 0, the item is ignored * The weights don't have to total to 1 * If numbers of items and weights do not match, the shortest array is used * A single array Syntax is slightly faster then Alt Syntax",
    "example": "_randomWeightedElement = selectRandomWeighted [1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];",
    "params": "<array> <array> <array>",
    "returns": "anything | nothing"
  },
  "BIS_fnc_animatedBriefing": {
    "command": "BIS_fnc_animatedBriefing",
    "timestamp": "2021-01-22T23:09:27Z",
    "version": "1.78",
    "syntax": "[<array>, <number>, <array>, <array>, <string>] call BIS_fnc_animatedBriefing",
    "docSyntax": "[timeline, indexEvent, markersHide, markersShow, endPosition] call BIS_fnc_animatedBriefing",
    "tags": "[EL]",
    "description": "Plays the Animated Briefings. Basically, it is a wrap function for the eventTimeline function.",
    "example": "// timeline of events _timeline = [ [0.0, { hint \"Start of the Timeline\" } ], [1.0, { hint \"Event 1\" } ], [3.0, { hint \"End of the timeline\" } ] ]; // get markers to be shown at end by using the layer's name private _showMarkers = (getMissionLayerEntities \"showAtEnd\") select 1; // start the Animated Briefing at index 0 cchide all markers and show the markers from the \"showAtEnd\" layer after the briefing is done cczoom on marker_rect_1 at the end of the briefing [_timeline, 0, nil, allMapMarkers, _showMarkers, \"marker_rect_1\"] spawn BIS_fnc_animatedBriefing; // Wait until timeline is over waitUntil { !(missionNamespace getVariable \"BIS_fnc_eventTimeline_playing\"); };",
    "params": "<array> <number> <array> <array> <string> <code>",
    "returns": "nothing"
  },
  "BIS_fnc_animatedOpening": {
    "command": "BIS_fnc_animatedOpening",
    "timestamp": "2021-01-22T23:05:20Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_animatedOpening",
    "docSyntax": "[] call BIS_fnc_animatedOpening",
    "tags": "",
    "description": "\nAuthor: BIS \nDescription: \nParameters: \nReturns: none",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_animatedScreen": {
    "command": "BIS_fnc_animatedScreen",
    "timestamp": "2021-01-22T23:09:56Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_animatedScreen",
    "docSyntax": "[] call BIS_fnc_animatedScreen",
    "tags": "",
    "description": "pre/*-------------------------------------------------------------------------------------------------- \nExample: [_mode] call BIS_fnc_animatedScreen; --------------------------------------------------------------------------------------------------",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_animatePicture": {
    "command": "BIS_fnc_animatePicture",
    "timestamp": "2021-01-22T23:08:12Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_animatePicture",
    "docSyntax": "[] call BIS_fnc_animatePicture",
    "tags": "",
    "description": "\nAuthor: Riccardo Argiolas \nDescription: Translates (relative or absolute), scales (relative or absolute), sets the alpha over time. \nParameters: Select 0 - \nCONTROL: picture that has to be modified Select 1 - \nNUMBER: duration of the animation (or speed of the translation, in case _translateUsingDuration is set to false) Select 2 - \nARRAY: array containing translation parameters Select 0 - \nARRAY: x and y translation coordinates Select 1 - \nBOOL: whether the coordinates are relative (\nie: will be added to the picture's current position) or absolute (move picture to those coordinates, ignoring current position) Select 2 - \nBOOL: whether the _durationOrSpeed variable will be treated as a normal duration (by default) or as the translation speed. Select 3 - \nARRAY: array containing scaling parameters Select 0 - ARRAY or \nNUMBER: x and y scale \"amounts\". If only a number is passed, both the x and y will be equal to that number Select 1 - \nBOOL: whether the amounts are relative or absolute Select 2 - \nSTRING: the pivot/center of the scaling process Select 4 - \nNUMBER: alpha/transparency of the image at the end of the animation (1 = invisible) \nReturns: \nNUMBER: Duration of the animation. (Useful for determining how much sleep time is needed between animations) \nExamples: _t = [ _controlFront, 1, [[0.5, 0.5], true, false], [], 0.5 ] call BIS_fnc_animatePicture;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_berp": {
    "command": "BIS_fnc_berp",
    "timestamp": "2021-01-23T00:51:46Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_berp",
    "docSyntax": "[] call BIS_fnc_berp",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_berpVector": {
    "command": "BIS_fnc_berpVector",
    "timestamp": "2021-01-22T23:07:57Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_berpVector",
    "docSyntax": "[] call BIS_fnc_berpVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bezierInterpolate": {
    "command": "BIS_fnc_bezierInterpolate",
    "timestamp": "2021-01-22T23:09:49Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bezierInterpolate",
    "docSyntax": "[] call BIS_fnc_bezierInterpolate",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bezierInterpolateVector": {
    "command": "BIS_fnc_bezierInterpolateVector",
    "timestamp": "2021-01-23T00:11:43Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bezierInterpolateVector",
    "docSyntax": "[] call BIS_fnc_bezierInterpolateVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_blinkMarker": {
    "command": "BIS_fnc_blinkMarker",
    "timestamp": "2021-01-22T23:10:38Z",
    "version": "1.78",
    "syntax": "[<string>, <number>, <number>] spawn BIS_fnc_blinkMarker",
    "docSyntax": "[marker, blinkDuration, blinkAmount] spawn BIS_fnc_blinkMarker",
    "tags": "",
    "description": "Makes given marker blink.",
    "example": "[\"BIS_marker\", 3, 10] spawn BIS_fnc_blinkMarker; // blinks '10' times using '3' seconds intervals",
    "params": "<string> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_bounceIn": {
    "command": "BIS_fnc_bounceIn",
    "timestamp": "2021-01-22T23:05:39Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceIn",
    "docSyntax": "[] call BIS_fnc_bounceIn",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bounceInOut": {
    "command": "BIS_fnc_bounceInOut",
    "timestamp": "2021-01-22T23:05:15Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceInOut",
    "docSyntax": "[] call BIS_fnc_bounceInOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bounceInOutVector": {
    "command": "BIS_fnc_bounceInOutVector",
    "timestamp": "2021-01-22T23:11:20Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceInOutVector",
    "docSyntax": "[] call BIS_fnc_bounceInOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bounceInVector": {
    "command": "BIS_fnc_bounceInVector",
    "timestamp": "2021-01-22T23:08:53Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceInVector",
    "docSyntax": "[] call BIS_fnc_bounceInVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bounceOut": {
    "command": "BIS_fnc_bounceOut",
    "timestamp": "2021-01-22T23:07:02Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceOut",
    "docSyntax": "[] call BIS_fnc_bounceOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_bounceOutVector": {
    "command": "BIS_fnc_bounceOutVector",
    "timestamp": "2021-01-22T23:11:57Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_bounceOutVector",
    "docSyntax": "[] call BIS_fnc_bounceOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_briefingAnimate": {
    "command": "BIS_fnc_briefingAnimate",
    "timestamp": "2021-01-23T00:12:27Z",
    "version": "1.78",
    "syntax": "[<string>, <number>, <string>] call BIS_fnc_briefingAnimate",
    "docSyntax": "[markerName, stepId, delay] call BIS_fnc_briefingAnimate",
    "tags": "",
    "description": "Animate briefing markers.",
    "example": "codecomment// given you have 6 markers: // - \"myMarker\" // - \"myMarker_0\" // - \"myMarker_1\" // - \"myMarker_2\" // - \"myMarker_3\" // - \"myMarker_4\" for \"_i\" from 0 to 4 do { private _commit = 1; [\"myMarker\", 5, _commit] call BIS_fnc_briefingAnimate; sleep _commit; };",
    "params": "<string> <number> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_briefingInit": {
    "command": "BIS_fnc_briefingInit",
    "timestamp": "2021-01-23T00:32:51Z",
    "version": "1.78",
    "syntax": "<string> call BIS_fnc_briefingInit",
    "docSyntax": "marker call BIS_fnc_briefingInit",
    "tags": "",
    "description": "Initialize animated briefing markers.",
    "example": "\"marker_1\" call BIS_fnc_briefingInit;",
    "params": "<string>",
    "returns": "nothing"
  },
  "BIS_fnc_cancelMarker": {
    "command": "BIS_fnc_cancelMarker",
    "timestamp": "2021-01-22T23:31:24Z",
    "version": "1.78",
    "syntax": "[<string>, <number>, <number>, <number>, <number>] spawn BIS_fnc_cancelMarker",
    "docSyntax": "[marker, duration, fadeTime, sizeMultiplier, angleOffset] spawn BIS_fnc_cancelMarker",
    "tags": "[AG] [EG]",
    "description": "Cancels a marker by a red 'X' marker. Also sets its variable to \"Canceled\" to true.",
    "example": "[\"BIS_marker\",2,1.5,75] spawn BIS_fnc_cancelMarker;",
    "params": "<string> <number> <number> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_changeColorMarker": {
    "command": "BIS_fnc_changeColorMarker",
    "timestamp": "2021-01-22T23:57:30Z",
    "version": "1.78",
    "syntax": "[<string>, <string>, <number>] spawn BIS_fnc_changeColorMarker",
    "docSyntax": "[marker, color, duration] spawn BIS_fnc_changeColorMarker",
    "tags": "[EG]",
    "description": "Makes the marker go from its original color to a specified color over time",
    "example": "[\"BIS_marker\",\"ColorRed\"] spawn BIS_fnc_changeColorMarker;",
    "params": "<string> <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_clerp": {
    "command": "BIS_fnc_clerp",
    "timestamp": "2021-01-22T23:05:03Z",
    "version": "1.78",
    "syntax": "[<number>, <number>, <number>] call BIS_fnc_clerp",
    "docSyntax": "[currentValue, targetValue, alpha] call BIS_fnc_clerp",
    "tags": "",
    "description": "CLerp - Circular Lerp - is like lerp but handles the wraparound from 0 to 360 This is useful when interpolating eulerAngles and the object crosses the 0/360 boundary The standard Lerp function causes the object to rotate in the wrong direction, clerp fixes that",
    "example": "[90,170,0.1] call BIS_fnc_clerp; // Returns 98",
    "params": "<number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_colorMarker": {
    "command": "BIS_fnc_colorMarker",
    "timestamp": "2021-01-22T23:51:45Z",
    "version": "1.78",
    "syntax": "[<string>, <string>, <number>] spawn BIS_fnc_colorMarker",
    "docSyntax": "[marker, color, duration] spawn BIS_fnc_colorMarker",
    "tags": "[AG] [EG]",
    "description": "Changes color of a marker with a little effect",
    "example": "[\"BIS_marker\",\"ColorRed\",2] spawn BIS_fnc_colorMarker;",
    "params": "<string> <string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_controlPoint_compute": {
    "command": "BIS_fnc_controlPoint_compute",
    "timestamp": "2021-01-22T23:11:56Z",
    "version": "1.78",
    "syntax": "[<object>] call BIS_fnc_controlPoint_compute",
    "docSyntax": "[controlPoint] call BIS_fnc_controlPoint_compute",
    "tags": "",
    "description": "Computes data for control point.",
    "example": "[controlPoint] call BIS_fnc_controlPoint_compute;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIS_fnc_controlPoint_computeOwnerKey": {
    "command": "BIS_fnc_controlPoint_computeOwnerKey",
    "timestamp": "2021-01-23T00:14:16Z",
    "version": "1.78",
    "syntax": "[<object>] call BIS_fnc_controlPoint_computeOwnerKey",
    "docSyntax": "[controlPoint] call BIS_fnc_controlPoint_computeOwnerKey",
    "tags": "",
    "description": "Returns the key owner of given control point.",
    "example": "_key = [controlPoint] call BIS_fnc_controlPoint_computeOwnerKey;",
    "params": "<object>",
    "returns": "object"
  },
  "BIS_fnc_controlPoint_edenAttributesChanged": {
    "command": "BIS_fnc_controlPoint_edenAttributesChanged",
    "timestamp": "2021-01-23T00:15:54Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenAttributesChanged",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenAttributesChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a control point Parameter(s): _this select \n0: Object - The control point \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_edenConnectionChanged": {
    "command": "BIS_fnc_controlPoint_edenConnectionChanged",
    "timestamp": "2021-01-22T23:09:50Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenConnectionChanged",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenConnectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN connections of a control point is changed Parameter(s): _this select \n0: Object - The control point \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_edenDragged": {
    "command": "BIS_fnc_controlPoint_edenDragged",
    "timestamp": "2021-01-22T23:07:46Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenDragged",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenDragged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Entity is dragged in 3DEN Parameter(s): _this select \n0: Object - The control point \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_edenIsSelected": {
    "command": "BIS_fnc_controlPoint_edenIsSelected",
    "timestamp": "2021-01-22T23:05:46Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenIsSelected",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenIsSelected",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether given control point is selected in 3den Parameter(s): _this select \n0: Object - The control point object \nReturns: Bool - True if selected, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_edenRegisteredToWorld": {
    "command": "BIS_fnc_controlPoint_edenRegisteredToWorld",
    "timestamp": "2021-01-22T23:12:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenRegisteredToWorld",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenRegisteredToWorld",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a control point Parameter(s): _this select \n0: Object - The control point \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_edenUnregisteredFromWorld": {
    "command": "BIS_fnc_controlPoint_edenUnregisteredFromWorld",
    "timestamp": "2021-01-22T23:05:49Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_controlPoint_edenUnregisteredFromWorld",
    "docSyntax": "[] call BIS_fnc_controlPoint_edenUnregisteredFromWorld",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a control point Parameter(s): _this select \n0: Object - The control point \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_controlPoint_getOwnerKey": {
    "command": "BIS_fnc_controlPoint_getOwnerKey",
    "timestamp": "2021-01-22T23:05:28Z",
    "version": "1.78",
    "syntax": "[<object>] call BIS_fnc_controlPoint_getOwnerKey",
    "docSyntax": "[controlPoint] call BIS_fnc_controlPoint_getOwnerKey",
    "tags": "",
    "description": "Returns the key owner of given control point.",
    "example": "_key = [controlPoint] call BIS_fnc_controlPoint_getOwnerKey;",
    "params": "<object>",
    "returns": "object"
  },
  "BIS_fnc_controlPoint_isArrive": {
    "command": "BIS_fnc_controlPoint_isArrive",
    "timestamp": "2021-01-22T23:06:50Z",
    "version": "1.78",
    "syntax": "[<object>] call BIS_fnc_controlPoint_isArrive",
    "docSyntax": "[controlPoint] call BIS_fnc_controlPoint_isArrive",
    "tags": "",
    "description": "Whether given control point is arrive, not leave.",
    "example": "_isArrive = [controlPoint] call BIS_fnc_controlPoint_isArrive;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_controlPoint_setIsArrive": {
    "command": "BIS_fnc_controlPoint_setIsArrive",
    "timestamp": "2021-01-23T00:56:40Z",
    "version": "1.78",
    "syntax": "[<object>, <object>] call BIS_fnc_controlPoint_setIsArrive",
    "docSyntax": "[controlPoint, isArrive] call BIS_fnc_controlPoint_setIsArrive",
    "tags": "",
    "description": "Set's whether this control point is arrive or leave.",
    "example": "[controlPoint,false] call BIS_fnc_controlPoint_setIsArrive;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "BIS_fnc_createTooltip": {
    "command": "BIS_fnc_createTooltip",
    "timestamp": "2021-01-22T23:11:21Z",
    "version": "1.78",
    "syntax": "[<array>, <control>, <array>] call BIS_fnc_createTooltip",
    "docSyntax": "[input, ctrl, mousePos] call BIS_fnc_createTooltip",
    "tags": "",
    "description": "Shows group tooltip. Adapted for Tac Ops DLC for use in the animated briefings.",
    "example": "",
    "params": "<array> <control> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_easeIn": {
    "command": "BIS_fnc_easeIn",
    "timestamp": "2021-01-23T09:07:52Z",
    "version": "1.78",
    "syntax": "[<num<number>er>, b, <number>, <number>] call BIS_fnc_easeIn",
    "docSyntax": "[a, b, alpha, exp] call BIS_fnc_easeIn",
    "tags": "",
    "description": "Wraps BIS_fnc_lerp.",
    "example": "[] call BIS_fnc_easeIn; // returns 0",
    "params": "<number> <number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_easeInOut": {
    "command": "BIS_fnc_easeInOut",
    "timestamp": "2021-01-23T08:56:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_easeInOut",
    "docSyntax": "[] call BIS_fnc_easeInOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_easeInOutVector": {
    "command": "BIS_fnc_easeInOutVector",
    "timestamp": "2021-01-23T09:10:41Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_easeInOutVector",
    "docSyntax": "[] call BIS_fnc_easeInOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_easeInVector": {
    "command": "BIS_fnc_easeInVector",
    "timestamp": "2021-01-23T09:21:37Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_easeInVector",
    "docSyntax": "[] call BIS_fnc_easeInVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_easeOut": {
    "command": "BIS_fnc_easeOut",
    "timestamp": "2021-01-23T09:20:37Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_easeOut",
    "docSyntax": "[] call BIS_fnc_easeOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_easeOutVector": {
    "command": "BIS_fnc_easeOutVector",
    "timestamp": "2021-01-23T09:22:45Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_easeOutVector",
    "docSyntax": "[] call BIS_fnc_easeOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_eventTimeline": {
    "command": "BIS_fnc_eventTimeline",
    "timestamp": "2021-01-23T09:24:43Z",
    "version": "1.78",
    "syntax": "[<array>, <number>, <string>, <code>, <array>] call BIS_fnc_eventTimeline",
    "docSyntax": "[timeline, index, music, codeInterrupt, codeEnd] call BIS_fnc_eventTimeline",
    "tags": "[EL]",
    "description": "Universal system for playing sequential events defined by time. FeatureInformative''codeInterrupt'' and ''codeEnd'' are called while the code in the timeline is spawned.",
    "example": "private _timeline = [ [0.0, { hint \"Start of the Timeline\" } ], [1.0, { hint \"Event 1\" } ], [3.0, { hint \"End of the timeline\" } ] ]; [_timeline, 0, \"\", {hint \"Interrupted\"}, {hint \"Timeline done\"}] spawn BIS_fnc_eventTimeline;",
    "params": "<array> <number> <string> <code> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_getBorderMarkers": {
    "command": "BIS_fnc_getBorderMarkers",
    "timestamp": "2021-01-23T09:21:03Z",
    "version": "1.78",
    "syntax": "call BIS_fnc_getBorderMarkers",
    "docSyntax": "call BIS_fnc_getBorderMarkers",
    "tags": "",
    "description": "Retrieves marker names used in the border restrictions module.",
    "example": "call BIS_fnc_getBorderMarkers;",
    "params": "",
    "returns": "array | string"
  },
  "BIS_fnc_getMarkers": {
    "command": "BIS_fnc_getMarkers",
    "timestamp": "2021-01-23T09:23:42Z",
    "version": "1.78",
    "syntax": "[<string>] call BIS_fnc_getMarkers",
    "docSyntax": "[markerPrefix] call BIS_fnc_getMarkers",
    "tags": "",
    "description": "Returns markers in format PREFIX_N where PREFIX_ is the provided argument and N is an integer between 1 and 128. If there are 128 markers but marker 123 is missing, then only the first 122 marker will be returned.",
    "example": "[\"BIS_marker_\"] call BIS_fnc_getMarkers; cc[\"BIS_marker_1\",\"BIS_marker_2\",...]",
    "params": "<string>",
    "returns": "array"
  },
  "BIS_fnc_getMarkerState": {
    "command": "BIS_fnc_getMarkerState",
    "timestamp": "2021-01-23T09:00:11Z",
    "version": "1.78",
    "syntax": "[<string>] call BIS_fnc_getMarkerState",
    "docSyntax": "[marker] call BIS_fnc_getMarkerState",
    "tags": "",
    "description": "Returns the state of a marker.",
    "example": "_state = [\"BIS_marker_1\"] call BIS_fnc_getMarkerState;",
    "params": "<string>",
    "returns": "string | nil"
  },
  "BIS_fnc_hermite": {
    "command": "BIS_fnc_hermite",
    "timestamp": "2021-01-23T10:12:57Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_hermite",
    "docSyntax": "[] call BIS_fnc_hermite",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_hermiteVector": {
    "command": "BIS_fnc_hermiteVector",
    "timestamp": "2021-01-23T10:09:53Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_hermiteVector",
    "docSyntax": "[] call BIS_fnc_hermiteVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_hideMarker": {
    "command": "BIS_fnc_hideMarker",
    "timestamp": "2021-01-23T09:56:54Z",
    "version": "1.78",
    "syntax": "[<string>, <number>] spawn BIS_fnc_hideMarker",
    "docSyntax": "[marker, duration] spawn BIS_fnc_hideMarker",
    "tags": "",
    "description": "Gradual hiding of a marker by setting its alpha to 0.",
    "example": "[\"BIS_marker\",2] spawn BIS_fnc_hideMarker;",
    "params": "<string> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_hideMarkerArray": {
    "command": "BIS_fnc_hideMarkerArray",
    "timestamp": "2021-01-23T09:56:47Z",
    "version": "1.78",
    "syntax": "[<array>, <number>] spawn BIS_fnc_hideMarkerArray",
    "docSyntax": "[markerArray, duration] spawn BIS_fnc_hideMarkerArray",
    "tags": "[AG] [EG]",
    "description": "Hides a list of markers one by one.",
    "example": "[noWiki[</noWiki>\"BIS_marker_1\",\"BIS_marker_2\",\"BIS_marker_3\"],5] spawn BIS_fnc_hideMarkerArray;",
    "params": "<array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_holdKey": {
    "command": "BIS_fnc_holdKey",
    "timestamp": "2021-01-23T10:09:55Z",
    "version": "1.78",
    "syntax": "[<display>, <number>, <number>, <code>, <control>] call BIS_fnc_holdKey",
    "docSyntax": "[display, key, time, code, control] call BIS_fnc_holdKey",
    "tags": "",
    "description": "Function that executes a user-defined code when a key has been held down for a long enough time.",
    "example": "nowiki[</nowiki>findDisplay 46,36,5, {hint \"Key 'J' pressed for 5 seconds\"}] call BIS_fnc_holdKey; // Action is added to the mission display",
    "params": "<display> <number> <number> <code> <control>",
    "returns": "nothing"
  },
  "BIS_fnc_interpolate": {
    "command": "BIS_fnc_interpolate",
    "timestamp": "2021-01-23T10:02:09Z",
    "version": "1.78",
    "syntax": "[<number>, <number>, <number>, <number>] call BIS_fnc_interpolate",
    "docSyntax": "[currentValue, targetValue, delta, interpSpeed] call BIS_fnc_interpolate",
    "tags": "",
    "description": "Interpolates scalar to target, starts fast, eases out",
    "example": "_value = [4,8,0.2,0.1] call BIS_fnc_interpolate;",
    "params": "<number> <number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_interpolateConstant": {
    "command": "BIS_fnc_interpolateConstant",
    "timestamp": "2021-01-23T09:59:53Z",
    "version": "1.78",
    "syntax": "[<number>, <number>, <number>, <number>] call BIS_fnc_interpolateConstant",
    "docSyntax": "[currentValue, targetValue, delta, interpSpeed] call BIS_fnc_interpolateConstant",
    "tags": "",
    "description": "Interpolates scalar to target linearly.",
    "example": "_value = [4,8,0.2,0.1] call BIS_fnc_interpolateConstant;",
    "params": "<number> <number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_interpolateVector": {
    "command": "BIS_fnc_interpolateVector",
    "timestamp": "2021-01-23T10:07:19Z",
    "version": "1.78",
    "syntax": "[<array>, <array>, <number>, <number>] call BIS_fnc_interpolateVector",
    "docSyntax": "[currentValue, targetValue, delta, interpSpeed] call BIS_fnc_interpolateVector",
    "tags": "",
    "description": "Interpolates vector to target, scaled by distance. Starts very fast and smooths out.",
    "example": "noWiki[</noWiki>[1,1,1],[20,20,20],0.2,0.1] call BIS_fnc_interpolateVector;",
    "params": "<array> <array> <number> <number>",
    "returns": "array"
  },
  "BIS_fnc_interpolateVectorConstant": {
    "command": "BIS_fnc_interpolateVectorConstant",
    "timestamp": "2021-01-23T10:05:21Z",
    "version": "1.78",
    "syntax": "[<array>, <array>, <number>, <number>] call BIS_fnc_interpolateVectorConstant",
    "docSyntax": "[currentValue, targetValue, delta, interpSpeed] call BIS_fnc_interpolateVectorConstant",
    "tags": "",
    "description": "Interpolates vector to target linearly.",
    "example": "noWiki[</noWiki>[1,1,1],[20,20,20],0.2,0.1] call BIS_fnc_interpolateVectorConstant;",
    "params": "<array> <array> <number> <number>",
    "returns": "array"
  },
  "BIS_fnc_inverseLerp": {
    "command": "BIS_fnc_inverseLerp",
    "timestamp": "2021-01-23T09:55:32Z",
    "version": "1.78",
    "syntax": "[<number>, <number>, <number>] call BIS_fnc_inverseLerp",
    "docSyntax": "[currentValue, targetValue, alpha] call BIS_fnc_inverseLerp",
    "tags": "",
    "description": "Inverse of BIS_fnc_lerp.",
    "example": "[10,20,0.5] call BIS_fnc_inverseLerp;",
    "params": "<number> <number> <number>",
    "returns": "number"
  },
  "BIS_fnc_key_compute": {
    "command": "BIS_fnc_key_compute",
    "timestamp": "2021-01-23T10:12:01Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_compute",
    "docSyntax": "[] call BIS_fnc_key_compute",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes data for a key Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_computeOwnerCurve": {
    "command": "BIS_fnc_key_computeOwnerCurve",
    "timestamp": "2021-01-23T10:05:45Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_computeOwnerCurve",
    "docSyntax": "[] call BIS_fnc_key_computeOwnerCurve",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes the curve that owns key Parameter(s): _this select \n0: Object - The key \nReturns: Curve - The owner curve object",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_computeTime": {
    "command": "BIS_fnc_key_computeTime",
    "timestamp": "2021-01-23T10:04:07Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_computeTime",
    "docSyntax": "[] call BIS_fnc_key_computeTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes the time of given key Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key time",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenAreControlPointsLocked": {
    "command": "BIS_fnc_key_edenAreControlPointsLocked",
    "timestamp": "2021-01-23T09:54:20Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenAreControlPointsLocked",
    "docSyntax": "[] call BIS_fnc_key_edenAreControlPointsLocked",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether control points of given key are set to locked Parameter(s): _this select \n0: Object - The key object \nReturns: Bool - True if control points are locked, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenAttributesChanged": {
    "command": "BIS_fnc_key_edenAttributesChanged",
    "timestamp": "2021-01-23T09:58:30Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenAttributesChanged",
    "docSyntax": "[] call BIS_fnc_key_edenAttributesChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a key Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenConnectionChanged": {
    "command": "BIS_fnc_key_edenConnectionChanged",
    "timestamp": "2021-01-23T09:58:15Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenConnectionChanged",
    "docSyntax": "[] call BIS_fnc_key_edenConnectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a key Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenDragged": {
    "command": "BIS_fnc_key_edenDragged",
    "timestamp": "2021-01-23T09:56:55Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenDragged",
    "docSyntax": "[] call BIS_fnc_key_edenDragged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Entity is dragged in 3DEN Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenIsSelected": {
    "command": "BIS_fnc_key_edenIsSelected",
    "timestamp": "2021-01-23T09:55:56Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenIsSelected",
    "docSyntax": "[] call BIS_fnc_key_edenIsSelected",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether given key is selected in 3den Parameter(s): _this select \n0: Object - The key object \nReturns: Bool - True if selected, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenRegisteredToWorld": {
    "command": "BIS_fnc_key_edenRegisteredToWorld",
    "timestamp": "2021-01-23T09:52:31Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenRegisteredToWorld",
    "docSyntax": "[] call BIS_fnc_key_edenRegisteredToWorld",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a key Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_edenUnregisteredFromWorld": {
    "command": "BIS_fnc_key_edenUnregisteredFromWorld",
    "timestamp": "2021-01-23T09:59:05Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_edenUnregisteredFromWorld",
    "docSyntax": "[] call BIS_fnc_key_edenUnregisteredFromWorld",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a key Parameter(s): _this select \n0: Object - The key \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getArriveControlPoint": {
    "command": "BIS_fnc_key_getArriveControlPoint",
    "timestamp": "2021-01-23T09:59:06Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getArriveControlPoint",
    "docSyntax": "[] call BIS_fnc_key_getArriveControlPoint",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the arrive control point of a key Parameter(s): _this select \n0: Object - The key \nReturns: Object - The control point",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getArriveTangent": {
    "command": "BIS_fnc_key_getArriveTangent",
    "timestamp": "2021-01-23T10:03:33Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getArriveTangent",
    "docSyntax": "[] call BIS_fnc_key_getArriveTangent",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the key arrive tangent Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key arrive tangent",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getArriveTangentWeight": {
    "command": "BIS_fnc_key_getArriveTangentWeight",
    "timestamp": "2021-01-23T09:53:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getArriveTangentWeight",
    "docSyntax": "[] call BIS_fnc_key_getArriveTangentWeight",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the key arrive tangent weight Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key arrive tangent weight",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getConfigTime": {
    "command": "BIS_fnc_key_getConfigTime",
    "timestamp": "2021-01-23T09:52:29Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getConfigTime",
    "docSyntax": "[] call BIS_fnc_key_getConfigTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the time of given key Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key time",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getFOV": {
    "command": "BIS_fnc_key_getFOV",
    "timestamp": "2021-01-23T10:01:24Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getFOV",
    "docSyntax": "[] call BIS_fnc_key_getFOV",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the FOV value of a key Parameter(s): _this select \n0: Object - The key \nReturns: Float - The fov value",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getInterpMode": {
    "command": "BIS_fnc_key_getInterpMode",
    "timestamp": "2021-01-23T10:06:11Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getInterpMode",
    "docSyntax": "[] call BIS_fnc_key_getInterpMode",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the key interp mode index * 0 - Linear * 1 - Cubic * 2 - EaseIn * 3 - EaseOut * 4 - EaseInOut * 5 - Hermite * 6 - Berp * 7 - BounceIn * 8 - BounceOut * 9 - BounceInOut * 10 - QuinticIn * 11 - QuinticOut * 12 - QuinticInOut * 13 - ElasticIn * 14 - ElasticOut * 15 - ElasticInOut Parameter(s): _this select \n0: Object - The key \nReturns: Integer - The mode as integer",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getLeaveControlPoint": {
    "command": "BIS_fnc_key_getLeaveControlPoint",
    "timestamp": "2021-01-23T09:57:00Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getLeaveControlPoint",
    "docSyntax": "[] call BIS_fnc_key_getLeaveControlPoint",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the leave control point of key Parameter(s): _this select \n0: Object - The key \nReturns: Object - The control point",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getLeaveTangent": {
    "command": "BIS_fnc_key_getLeaveTangent",
    "timestamp": "2021-01-23T09:54:34Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getLeaveTangent",
    "docSyntax": "[] call BIS_fnc_key_getLeaveTangent",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the key leave tangent Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key leave tangent",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getLeaveTangentWeight": {
    "command": "BIS_fnc_key_getLeaveTangentWeight",
    "timestamp": "2021-01-23T09:54:28Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getLeaveTangentWeight",
    "docSyntax": "[] call BIS_fnc_key_getLeaveTangentWeight",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the key leave tangent weight Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key leave tangent weight",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getOwnerCurve": {
    "command": "BIS_fnc_key_getOwnerCurve",
    "timestamp": "2021-01-23T10:09:19Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getOwnerCurve",
    "docSyntax": "[] call BIS_fnc_key_getOwnerCurve",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the curve that owns key Parameter(s): _this select \n0: Object - The key \nReturns: Curve - The owner curve object",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getTime": {
    "command": "BIS_fnc_key_getTime",
    "timestamp": "2021-01-23T09:55:40Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getTime",
    "docSyntax": "[] call BIS_fnc_key_getTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the time of given key Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key time",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_getValue": {
    "command": "BIS_fnc_key_getValue",
    "timestamp": "2021-01-23T09:52:15Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_getValue",
    "docSyntax": "[] call BIS_fnc_key_getValue",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the value of given key Parameter(s): _this select \n0: Object - The key \nReturns: Float - The key value",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_isFloat": {
    "command": "BIS_fnc_key_isFloat",
    "timestamp": "2021-01-23T09:58:07Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_isFloat",
    "docSyntax": "[] call BIS_fnc_key_isFloat",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns true if this is a key with float value, false if not Parameter(s): _this select \n0: Object - The key \nReturns: Bool - True if key is of float data type, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_isVector": {
    "command": "BIS_fnc_key_isVector",
    "timestamp": "2021-01-23T10:04:26Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_isVector",
    "docSyntax": "[] call BIS_fnc_key_isVector",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns true if this is a key with vector value, false if not Parameter(s): _this select \n0: Object - The key \nReturns: Bool - True if key is of vector data type, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setArriveTangent": {
    "command": "BIS_fnc_key_setArriveTangent",
    "timestamp": "2021-01-23T09:52:09Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setArriveTangent",
    "docSyntax": "[] call BIS_fnc_key_setArriveTangent",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the key arrive tangent Parameter(s): _this select \n0: Object - The key _this select \n1: float - The new arrive tangent \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setArriveTangentWeight": {
    "command": "BIS_fnc_key_setArriveTangentWeight",
    "timestamp": "2021-01-23T10:00:04Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setArriveTangentWeight",
    "docSyntax": "[] call BIS_fnc_key_setArriveTangentWeight",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the key arrive tangent weight Parameter(s): _this select \n0: Object - The key _this select \n1: Float - The new arrive tangent weight \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setInterpMode": {
    "command": "BIS_fnc_key_setInterpMode",
    "timestamp": "2021-01-23T09:57:35Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setInterpMode",
    "docSyntax": "[] call BIS_fnc_key_setInterpMode",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the interpolation mode of the key Parameter(s): _this select \n0: Object - The key _this select \n1: Integer - The new key interp mode \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setLeaveTangent": {
    "command": "BIS_fnc_key_setLeaveTangent",
    "timestamp": "2021-01-23T10:09:45Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setLeaveTangent",
    "docSyntax": "[] call BIS_fnc_key_setLeaveTangent",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the key leave tangent Parameter(s): _this select \n0: Object - The key _this select \n1: Float - The new leave tangent \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setLeaveTangentWeight": {
    "command": "BIS_fnc_key_setLeaveTangentWeight",
    "timestamp": "2021-01-23T10:02:39Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setLeaveTangentWeight",
    "docSyntax": "[] call BIS_fnc_key_setLeaveTangentWeight",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the key leave tangent weight Parameter(s): _this select \n0: Object - The key _this select \n1: Float - The new leave tangent weight \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setTime": {
    "command": "BIS_fnc_key_setTime",
    "timestamp": "2021-01-23T10:04:09Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setTime",
    "docSyntax": "[] call BIS_fnc_key_setTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the time of given key Parameter(s): _this select \n0: Object - The key _this select \n1: Float - The new time \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_key_setValue": {
    "command": "BIS_fnc_key_setValue",
    "timestamp": "2021-01-23T09:58:28Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_key_setValue",
    "docSyntax": "[] call BIS_fnc_key_setValue",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the value of given key Parameter(s): _this select \n0: Object - The key _this select \n1: Float - The new value \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_keyframeAnimation_deltaTime": {
    "command": "BIS_fnc_keyframeAnimation_deltaTime",
    "timestamp": "2021-01-23T10:03:35Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_keyframeAnimation_deltaTime",
    "docSyntax": "[] call BIS_fnc_keyframeAnimation_deltaTime",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_keyframeAnimation_init": {
    "command": "BIS_fnc_keyframeAnimation_init",
    "timestamp": "2021-01-23T10:12:23Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_keyframeAnimation_init",
    "docSyntax": "[] call BIS_fnc_keyframeAnimation_init",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_lerpVector": {
    "command": "BIS_fnc_lerpVector",
    "timestamp": "2021-01-23T10:04:24Z",
    "version": "1.78",
    "syntax": "[<array>, <array>, <number>] call BIS_fnc_lerpVector",
    "docSyntax": "[currentValue, targetValue, alpha] call BIS_fnc_lerpVector",
    "tags": "",
    "description": "Given two different vectors A and B, think of a straight line drawn between them With _alpha saying how far along that line you are",
    "example": "[noWiki[</noWiki>1592.74,6558.36,0],[2240.43,7459.69,0],0.3] call BIS_fnc_lerpVector; // Returns [1787.05,6828.76,0]",
    "params": "<array> <array> <number>",
    "returns": "array"
  },
  "BIS_fnc_lookAtArray": {
    "command": "BIS_fnc_lookAtArray",
    "timestamp": "2021-01-23T09:53:41Z",
    "version": "1.78",
    "syntax": "[<boolean>, <array>] call BIS_fnc_lookAtArray",
    "docSyntax": "[initialize, lookAtData] call BIS_fnc_lookAtArray",
    "tags": "",
    "description": "Executes a code when one of the specified objects is looked at (player's cursor pointed towards it) for enough time",
    "example": "_lookAtArray = [ [ BIS_apc, //name of object 2, //time we have to look at it false, //do we destroy the entry after we looked at it {[\"What a wonderful APC\"] call BIS_fnc_log;} //code ], [ BIS_otherUnit, 2, false, {[\"apc looked at\"] call BIS_fnc_log;} ] ]; noWiki[</noWiki>true, _lookAtArray] spawn \"BIS_fnc_lookAtArray\"; sleep 15; noWiki[</noWiki>falsenoWiki]</noWiki> spawn \"BIS_fnc_lookAtArray\";",
    "params": "<boolean> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_lookAtArrayEH": {
    "command": "BIS_fnc_lookAtArrayEH",
    "timestamp": "2021-01-23T10:07:42Z",
    "version": "1.78",
    "syntax": "",
    "docSyntax": "",
    "tags": "",
    "description": "Event handler function for the BIS_fnc_lookAtArray function.",
    "example": "-",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_missionSelector": {
    "command": "BIS_fnc_missionSelector",
    "timestamp": "2021-01-23T10:08:17Z",
    "version": "1.78",
    "syntax": "[<array>, position2d, <array>] call BIS_fnc_missionSelector",
    "docSyntax": "[area, mapCenter, missionsArray] call BIS_fnc_missionSelector",
    "tags": "[EL]",
    "description": "Function that draws clickable, hoverable and animated icons on the map that execute a user-defined code when pressed.",
    "example": "private _area = [750, 400]; private _missionsList = [ [ getMarkerPos \"BIS_briefMarkerINFANTRY\", \"Infantry\", \"Your mission is to do stuff\", \"AnimBriefing\\intro_stage1a_CA.paa\", { hint \"infantry mission selected\" } ], [ getMarkerPos \"BIS_briefMarkerSPECIALFORCES\", \"Special Forces\", \"Your mission is to do stuff but in a more special way\", \"AnimBriefing\\intro_stage1a_CA.paa\", { hint \"special forces mission selected\" } ] ]; private _index = [_area, getMarkerPos \"BIS_cameraCenter\", _missionsList] call BIS_fnc_missionSelector; private _missionDetails = _missionsList select _index;",
    "params": "<array> position2d <array>",
    "returns": "number"
  },
  "BIS_fnc_moveMarker": {
    "command": "BIS_fnc_moveMarker",
    "timestamp": "2021-01-23T10:25:25Z",
    "version": "1.78",
    "syntax": "[<string>, <array>, <number>, <number>] call BIS_fnc_moveMarker",
    "docSyntax": "[marker, newPosition, duration, interpolationType] call BIS_fnc_moveMarker",
    "tags": "[AG] [EG]",
    "description": "Moves marker to a new position",
    "example": "[\"BIS_marker\", [1111,2222,0]] call BIS_fnc_moveMarker;",
    "params": "<string> <array> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_quinticIn": {
    "command": "BIS_fnc_quinticIn",
    "timestamp": "2021-01-23T10:26:23Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticIn",
    "docSyntax": "[] call BIS_fnc_quinticIn",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_quinticInOut": {
    "command": "BIS_fnc_quinticInOut",
    "timestamp": "2021-01-23T10:41:51Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticInOut",
    "docSyntax": "[] call BIS_fnc_quinticInOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_quinticInOutVector": {
    "command": "BIS_fnc_quinticInOutVector",
    "timestamp": "2021-01-23T10:37:14Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticInOutVector",
    "docSyntax": "[] call BIS_fnc_quinticInOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_quinticInVector": {
    "command": "BIS_fnc_quinticInVector",
    "timestamp": "2021-01-23T10:24:50Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticInVector",
    "docSyntax": "[] call BIS_fnc_quinticInVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_quinticOut": {
    "command": "BIS_fnc_quinticOut",
    "timestamp": "2021-01-23T10:28:26Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticOut",
    "docSyntax": "[] call BIS_fnc_quinticOut",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_quinticOutVector": {
    "command": "BIS_fnc_quinticOutVector",
    "timestamp": "2021-01-23T10:27:54Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_quinticOutVector",
    "docSyntax": "[] call BIS_fnc_quinticOutVector",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_resizeMarker": {
    "command": "BIS_fnc_resizeMarker",
    "timestamp": "2021-01-23T10:40:19Z",
    "version": "1.78",
    "syntax": "[<string>, <array>, <number>] spawn BIS_fnc_resizeMarker",
    "docSyntax": "[marker, size, duration] spawn BIS_fnc_resizeMarker",
    "tags": "[AG] [EG]",
    "description": "Resize marker. Use either absolute values or proportional values.",
    "example": "[\"BIS_marker\",[2,2],3] spawn BIS_fnc_colorMarker;",
    "params": "<string> <array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_richCurve_compute": {
    "command": "BIS_fnc_richCurve_compute",
    "timestamp": "2021-01-23T20:28:14Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_compute",
    "docSyntax": "[] call BIS_fnc_richCurve_compute",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes curve data Parameter(s): _this select \n0: Object - The curve _this select \n1: Bool - Whether this is a forced computation (from on attributes changed and not from on drag) \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_computeCurveArcLength": {
    "command": "BIS_fnc_richCurve_computeCurveArcLength",
    "timestamp": "2021-01-23T20:17:32Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_computeCurveArcLength",
    "docSyntax": "[] call BIS_fnc_richCurve_computeCurveArcLength",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes curve arc lenght Parameter(s): _this select \n0: Object - The curve \nReturns: Float - The curve arc length",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_computeKeys": {
    "command": "BIS_fnc_richCurve_computeKeys",
    "timestamp": "2021-01-23T20:27:31Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_computeKeys",
    "docSyntax": "[] call BIS_fnc_richCurve_computeKeys",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's keys assigned to given curve Parameter(s): _this select \n0: Object - The curve _this select \n1: Bool - Whether or not to sort the keys by time \nReturns: Array - List of assigned keys",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_computeOwnerTimeline": {
    "command": "BIS_fnc_richCurve_computeOwnerTimeline",
    "timestamp": "2021-01-23T20:18:26Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_computeOwnerTimeline",
    "docSyntax": "[] call BIS_fnc_richCurve_computeOwnerTimeline",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Stores owner timeline Parameter(s): _this select \n0: Object - The curve \nReturns: Object - The owner timeline object",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_computeSimulatedObjects": {
    "command": "BIS_fnc_richCurve_computeSimulatedObjects",
    "timestamp": "2021-01-23T20:31:31Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_computeSimulatedObjects",
    "docSyntax": "[] call BIS_fnc_richCurve_computeSimulatedObjects",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's all simulated objects Parameter(s): _this select \n0: Object - The curve \nReturns: Array - List of objects simulated by given curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenAttributesChanged": {
    "command": "BIS_fnc_richCurve_edenAttributesChanged",
    "timestamp": "2021-01-23T20:20:07Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenAttributesChanged",
    "docSyntax": "[] call BIS_fnc_richCurve_edenAttributesChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN attributes of a curve change Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenBakeCurve3D": {
    "command": "BIS_fnc_richCurve_edenBakeCurve3D",
    "timestamp": "2021-01-23T20:21:34Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenBakeCurve3D",
    "docSyntax": "[] call BIS_fnc_richCurve_edenBakeCurve3D",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Bakes a curve to a set of points Parameter(s): _this select \n0: Object - The curve _this select \n1: Integer - The amount of segments for curve baking (higher numbers mean more detail but also a lot more cpu time) \nReturns: ARRAY - All the baked curve points",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenComputeNearestSegment": {
    "command": "BIS_fnc_richCurve_edenComputeNearestSegment",
    "timestamp": "2021-01-23T20:20:03Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenComputeNearestSegment",
    "docSyntax": "[] call BIS_fnc_richCurve_edenComputeNearestSegment",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Computes the nearest baked segment from given 3D position Parameter(s): _this select \n0: Object - The curve \nReturns: Array - The start and end vectors of segment",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenConnectionChanged": {
    "command": "BIS_fnc_richCurve_edenConnectionChanged",
    "timestamp": "2021-01-23T20:31:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenConnectionChanged",
    "docSyntax": "[] call BIS_fnc_richCurve_edenConnectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN connection of a curve change Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenDragged": {
    "command": "BIS_fnc_richCurve_edenDragged",
    "timestamp": "2021-01-23T20:16:14Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenDragged",
    "docSyntax": "[] call BIS_fnc_richCurve_edenDragged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Entity is dragged in 3DEN Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenDrawControlPoints3D": {
    "command": "BIS_fnc_richCurve_edenDrawControlPoints3D",
    "timestamp": "2021-01-23T20:31:06Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenDrawControlPoints3D",
    "docSyntax": "[] call BIS_fnc_richCurve_edenDrawControlPoints3D",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Draws all control points of a curve Parameter(s): _this select \n0: Curve - The curve _this select \n1: Array - The color of the icons rendering \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenDrawCurve3D": {
    "command": "BIS_fnc_richCurve_edenDrawCurve3D",
    "timestamp": "2021-01-23T20:18:03Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenDrawCurve3D",
    "docSyntax": "[] call BIS_fnc_richCurve_edenDrawCurve3D",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Draws a location curve in 3D Parameter(s): _this select \n0: Array - The baked curve _this select \n1: Array - The color of the curve rendering \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenIsSelected": {
    "command": "BIS_fnc_richCurve_edenIsSelected",
    "timestamp": "2021-01-23T20:18:11Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenIsSelected",
    "docSyntax": "[] call BIS_fnc_richCurve_edenIsSelected",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether given curve is selected in 3den Parameter(s): _this select \n0: Object - The curve object \nReturns: Bool - True if selected, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenMarkStateDirty": {
    "command": "BIS_fnc_richCurve_edenMarkStateDirty",
    "timestamp": "2021-01-23T20:25:45Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenMarkStateDirty",
    "docSyntax": "[] call BIS_fnc_richCurve_edenMarkStateDirty",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Marks a curve state as dirty, so it knows it needs to recalculate For example, moving a key in EDEN Parameter(s): _this select \n0: Object - The Curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_edenTick": {
    "command": "BIS_fnc_richCurve_edenTick",
    "timestamp": "2021-01-23T20:23:42Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_edenTick",
    "docSyntax": "[] call BIS_fnc_richCurve_edenTick",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN 3D drawing Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getCurveLength": {
    "command": "BIS_fnc_richCurve_getCurveLength",
    "timestamp": "2021-01-23T20:35:50Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getCurveLength",
    "docSyntax": "[] call BIS_fnc_richCurve_getCurveLength",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Calculates distance between all keys, returning the total length Parameter(s): _this select \n0: Object - The curve \nReturns: Float - The curve length",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getCurvePoints": {
    "command": "BIS_fnc_richCurve_getCurvePoints",
    "timestamp": "2021-01-23T20:21:55Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getCurvePoints",
    "docSyntax": "[] call BIS_fnc_richCurve_getCurvePoints",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the computed curve points Parameter(s): _this select \n0: Object - The curve \nReturns: Array - The curve points (array of 3D vectors)",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getCurveValueFloat": {
    "command": "BIS_fnc_richCurve_getCurveValueFloat",
    "timestamp": "2021-01-23T20:24:08Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getCurveValueFloat",
    "docSyntax": "[] call BIS_fnc_richCurve_getCurveValueFloat",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's curve value at given time Parameter(s): _this select \n0: Object - The curve _this select \n1: Float - The time _this select \n2: Integer - Value type \nReturns: float - The value at given time",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getCurveValueVector": {
    "command": "BIS_fnc_richCurve_getCurveValueVector",
    "timestamp": "2021-01-23T20:21:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getCurveValueVector",
    "docSyntax": "[] call BIS_fnc_richCurve_getCurveValueVector",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's curve value at given time Parameter(s): _this select \n0: Object - The curve _this select \n1: Float - The time _this select \n2: Integer - Value type \nReturns: Array - The vector value at given time",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getFirstKey": {
    "command": "BIS_fnc_richCurve_getFirstKey",
    "timestamp": "2021-01-23T20:31:19Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getFirstKey",
    "docSyntax": "[] call BIS_fnc_richCurve_getFirstKey",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the first key on given curve Parameter(s): _this select \n0: Object - The curve \nReturns: Object - The first key of given curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getKeyFromIndex": {
    "command": "BIS_fnc_richCurve_getKeyFromIndex",
    "timestamp": "2021-01-23T20:18:47Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getKeyFromIndex",
    "docSyntax": "[] call BIS_fnc_richCurve_getKeyFromIndex",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the key in given index of given curve Parameter(s): _this select \n0: Object - The curve _this select \n1: Integer - The key index \nReturns: Object - The key at given index",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getKeyIndex": {
    "command": "BIS_fnc_richCurve_getKeyIndex",
    "timestamp": "2021-01-23T20:21:09Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getKeyIndex",
    "docSyntax": "[] call BIS_fnc_richCurve_getKeyIndex",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the index of given key in given curve Parameter(s): _this select \n0: Object - The curve _this select \n1: Object - The key \nReturns: Integer - The index of the given key in given curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getKeys": {
    "command": "BIS_fnc_richCurve_getKeys",
    "timestamp": "2021-01-23T20:26:04Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getKeys",
    "docSyntax": "[] call BIS_fnc_richCurve_getKeys",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's keys assigned to given curve Parameter(s): _this select \n0: Object - The curve \nReturns: Array - List of assigned keys",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getKeysAtTime": {
    "command": "BIS_fnc_richCurve_getKeysAtTime",
    "timestamp": "2021-01-23T20:34:58Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getKeysAtTime",
    "docSyntax": "[] call BIS_fnc_richCurve_getKeysAtTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's keys (prev / next) at given time Parameter(s): _this select \n0: Object - The curve _this select \n1: Float - The time \nReturns: Array - Previous and next keys",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getKeyTime": {
    "command": "BIS_fnc_richCurve_getKeyTime",
    "timestamp": "2021-01-23T20:18:11Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getKeyTime",
    "docSyntax": "[] call BIS_fnc_richCurve_getKeyTime",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns given key time in alpha Parameter(s): _this select \n0: Object - The curve \nReturns: Float - The time in alpha of given key (from 0 to 1)",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getLastKey": {
    "command": "BIS_fnc_richCurve_getLastKey",
    "timestamp": "2021-01-23T20:36:10Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getLastKey",
    "docSyntax": "[] call BIS_fnc_richCurve_getLastKey",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the last key on given curve Parameter(s): _this select \n0: Object - The curve \nReturns: Object - The last key of given curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getLookAtPosition": {
    "command": "BIS_fnc_richCurve_getLookAtPosition",
    "timestamp": "2021-01-23T20:35:16Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getLookAtPosition",
    "docSyntax": "[] call BIS_fnc_richCurve_getLookAtPosition",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns the look at position of this curve, [0.0, 0.0, 0.0] if not set Parameter(s): _this select \n0: Object - The curve \nReturns: Array - Target position, [0.0, 0.0, 0.0] if not set",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getNextKey": {
    "command": "BIS_fnc_richCurve_getNextKey",
    "timestamp": "2021-01-23T20:20:27Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getNextKey",
    "docSyntax": "[] call BIS_fnc_richCurve_getNextKey",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the next key from given key, null if none exists Parameter(s): _this select \n0: Object - The curve _this select \n1: Object - The key \nReturns: Object - The next key",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getOrientationMode": {
    "command": "BIS_fnc_richCurve_getOrientationMode",
    "timestamp": "2021-01-23T20:24:55Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getOrientationMode",
    "docSyntax": "[] call BIS_fnc_richCurve_getOrientationMode",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns orientation mode for objects animated by this curve Parameter(s): _this select \n0: Object - The curve \nReturns: Integer - The mode (0 = None, 1 = Look At, 2 = Movement Direction)",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getOwnerTimeline": {
    "command": "BIS_fnc_richCurve_getOwnerTimeline",
    "timestamp": "2021-01-23T20:20:53Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getOwnerTimeline",
    "docSyntax": "[] call BIS_fnc_richCurve_getOwnerTimeline",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns a curve's simulated objects Parameter(s): _this select \n0: Object - The curve \nReturns: Object - The owner timeline object",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getPreviousKey": {
    "command": "BIS_fnc_richCurve_getPreviousKey",
    "timestamp": "2021-01-23T20:24:05Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getPreviousKey",
    "docSyntax": "[] call BIS_fnc_richCurve_getPreviousKey",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Get's the previous key from given key, null if none exists Parameter(s): _this select \n0: Object - The curve _this select \n1: Object - The key \nReturns: Object - The previous key",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getSimulatedObjects": {
    "command": "BIS_fnc_richCurve_getSimulatedObjects",
    "timestamp": "2021-01-23T20:25:17Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getSimulatedObjects",
    "docSyntax": "[] call BIS_fnc_richCurve_getSimulatedObjects",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns a curve's simulated objects Parameter(s): _this select \n0: Object - The curve \nReturns: Array - List of objects simulated by given curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_getTimeRange": {
    "command": "BIS_fnc_richCurve_getTimeRange",
    "timestamp": "2021-01-23T20:35:19Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_getTimeRange",
    "docSyntax": "[] call BIS_fnc_richCurve_getTimeRange",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns min / max time range of given curve Parameter(s): _this select \n0: Object - The curve \nReturns: Array - Min / Max time range",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_isTimeInSeconds": {
    "command": "BIS_fnc_richCurve_isTimeInSeconds",
    "timestamp": "2021-01-23T20:32:09Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_isTimeInSeconds",
    "docSyntax": "[] call BIS_fnc_richCurve_isTimeInSeconds",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether the time of the keys belonging to this curve are in seconds Parameter(s): _this select \n0: Object - The curve \nReturns: Bool - True if in seconds, false if in alpha",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_numKeys": {
    "command": "BIS_fnc_richCurve_numKeys",
    "timestamp": "2021-01-23T20:26:33Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_numKeys",
    "docSyntax": "[] call BIS_fnc_richCurve_numKeys",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Returns number of keys registered with given curve Parameter(s): _this select \n0: Object - The curve \nReturns: Integer - Number of keys assigned to this curve",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_reset": {
    "command": "BIS_fnc_richCurve_reset",
    "timestamp": "2021-01-23T20:29:26Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_reset",
    "docSyntax": "[] call BIS_fnc_richCurve_reset",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Clears all curves (and deletes them) Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_resetKeysEventState": {
    "command": "BIS_fnc_richCurve_resetKeysEventState",
    "timestamp": "2021-01-23T20:32:00Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_resetKeysEventState",
    "docSyntax": "[] call BIS_fnc_richCurve_resetKeysEventState",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Reset's flag on all keys about handled events Parameter(s): _this select \n0: Object - The curve \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_setKeys": {
    "command": "BIS_fnc_richCurve_setKeys",
    "timestamp": "2021-01-23T20:33:46Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_setKeys",
    "docSyntax": "[] call BIS_fnc_richCurve_setKeys",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's keys assigned to given curve Parameter(s): _this select \n0: Object - The curve _this select \n1: Array - The keys \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_richCurve_setOrientationMode": {
    "command": "BIS_fnc_richCurve_setOrientationMode",
    "timestamp": "2021-01-23T20:33:46Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_richCurve_setOrientationMode",
    "docSyntax": "[] call BIS_fnc_richCurve_setOrientationMode",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Set's the curve's orientation mode Parameter(s): _this select \n0: Object - The curve _this select \n1: Integer - The orientation mode (0 = None / 1 = Animation / 2 = Look At / 3 = Movement Direction) \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_rotateMarker": {
    "command": "BIS_fnc_rotateMarker",
    "timestamp": "2021-01-23T20:32:42Z",
    "version": "1.78",
    "syntax": "[<string>, <number>, <boolean>, <number>, <number>] spawn BIS_fnc_rotateMarker",
    "docSyntax": "[marker, newAzimuth, absoluteOrRelativ, shortestTurn, duraton] spawn BIS_fnc_rotateMarker",
    "tags": "[AG] [EG]",
    "description": "Rotating a marker to new azimuth, using shortest turn, clockwise or anticlockwise movement.",
    "example": "[\"BIS_marker\",90] spawn BIS_fnc_rotateMarker;",
    "params": "<string> <number> <boolean> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_scaleAndTranslate": {
    "command": "BIS_fnc_scaleAndTranslate",
    "timestamp": "2021-01-23T20:19:13Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_scaleAndTranslate",
    "docSyntax": "[] call BIS_fnc_scaleAndTranslate",
    "tags": "",
    "description": "\nAuthor: Riccardo Argiolas \nDescription: Translates and scales (with pivot) and fades a picture over time. \nParameters: Select 0 - \nCONTROL: picture that has to be modified Select 1 - \nNUMBER: how much the picture has to be scaled (>1 makes it bigger, 1 keeps it the same, <1 makes it smaller) Select 2 - \nSTRING: select the pivot's position (i.e. center of the scaling process) Select 3 - \nARRAY: how much the picture has to be translated/moved in [X,Y] format Select 4 - \nNUMBER: either the duration of the animation(default) or the speed of the translation, depending on what the next parameter is set to. Select 5 - \nBOOL: true = duration will be used, false = speed will be used. Select 6 - \nNUMBER: transparency of the image at the end of the animation (1 = invisible) \nReturns: \nNUMBER: Duration of the animation. (Useful for determining how much sleep time is needed between animations) \nExamples: [_controlFront, 0.8, \"topLeft\"] call BIS_fnc_scaleAndTranslate; _t = [_controlFront, 1, \"bottomRight\", [0.1, 0.1], 0.5, false] call BIS_fnc_scaleAndTranslate; sleep (_t * 2); [_controlFront, 0.8, \"topRight\", [0.5, 0.3]] call BIS_fnc_scaleAndTranslate;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_shakeMap": {
    "command": "BIS_fnc_shakeMap",
    "timestamp": "2021-01-23T20:32:23Z",
    "version": "1.78",
    "syntax": "[<number>, <number>, position] call BIS_fnc_shakeMap",
    "docSyntax": "[duration, magnitude, center] call BIS_fnc_shakeMap",
    "tags": "",
    "description": "\"Camera shake\" function for the map. Shakes the map for a given amount of time with a given amount of force around the given camera center. Exits if map is not open.",
    "example": "[2,20,getMarkerPos \"BIS_markerExtraction0\"] call BIS_fnc_shakeMap;",
    "params": "<number> <number> position",
    "returns": "nothing"
  },
  "BIS_fnc_shakeMapEH": {
    "command": "BIS_fnc_shakeMapEH",
    "timestamp": "2021-01-23T20:22:14Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_shakeMapEH",
    "docSyntax": "[] call BIS_fnc_shakeMapEH",
    "tags": "",
    "description": "\nAuthor: Riccardo Argiolas \nDescription: Event handler function for the shakeMap.sqf function \nParameters: Select 0 - \nNUMBER: duration of shake effect. Select 1 - \nNUMBER: magnitude of the shaking force. Select 2 - \nARRAY: position of the camera center around which the shake effect occurs. Select 3 - \nNUMBER: starting shake time (i.e. time elapsed since mission started till the start of the shake animation). \nReturns: None \nExamples: private _shakeEventCode = format [\"[%1, %2, %3, %4] call BIS_fnc_drawMapShake\", _shakeDuration, _shakeMagnitude, _shakeCenter, time]; BIS_shakeEventHandler = _map ctrladdeventhandler [\"draw\",_shakeEventCode];",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_showMarker": {
    "command": "BIS_fnc_showMarker",
    "timestamp": "2021-01-23T20:33:11Z",
    "version": "1.78",
    "syntax": "[<string>, <number>, <number>] spawn BIS_fnc_showMarker",
    "docSyntax": "[marker, duration, finalAlpha] spawn BIS_fnc_showMarker",
    "tags": "[EG]",
    "description": "Gradual revealing of a marker by setting its alpha to its original alpha or to a user-specified alpha.",
    "example": "[\"BIS_marker\",2] spawn BIS_fnc_showMarker;",
    "params": "<string> <number> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_showMarkerArray": {
    "command": "BIS_fnc_showMarkerArray",
    "timestamp": "2021-01-23T20:32:34Z",
    "version": "1.78",
    "syntax": "[strings, <number>, <boolean>] spawn BIS_fnc_showMarkerArray",
    "docSyntax": "[marker, duration, hideAfter] spawn BIS_fnc_showMarkerArray",
    "tags": "[AG] [EG]",
    "description": "Unhide the markers sequentially.",
    "example": "[nowiki[</nowiki>\"marker_1\",\"marker_2\",\"marker_n\"], 3, false] spawn BIS_fnc_showMarkers;",
    "params": "strings <number> <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_simpleMoveMarker": {
    "command": "BIS_fnc_simpleMoveMarker",
    "timestamp": "2021-01-23T20:34:52Z",
    "version": "1.78",
    "syntax": "[<string>, <array>, <number>] call BIS_fnc_simpleMoveMarker",
    "docSyntax": "[marker, newPosition, duration] call BIS_fnc_simpleMoveMarker",
    "tags": "[AG] [EG]",
    "description": "Moves marker to a new position. Simple version of BIS_fnc_moveMarker.",
    "example": "[\"BIS_marker\",[1111,2222,0]] call BIS_fnc_moveMarker;",
    "params": "<string> <array> <number>",
    "returns": "nothing"
  },
  "BIS_fnc_slerp": {
    "command": "BIS_fnc_slerp",
    "timestamp": "2021-01-23T20:16:28Z",
    "version": "1.78",
    "syntax": "[<array>, <array>, <number>] call BIS_fnc_slerp",
    "docSyntax": "[currentValue, targetValue, alpha] call BIS_fnc_slerp",
    "tags": "",
    "description": "Spherical lerp, for correct lerping of normalized direction vectors",
    "example": "",
    "params": "<array> <array> <number>",
    "returns": "array"
  },
  "BIS_fnc_timeline_edenAttributesChanged": {
    "command": "BIS_fnc_timeline_edenAttributesChanged",
    "timestamp": "2021-01-23T20:34:35Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenAttributesChanged",
    "docSyntax": "[] call BIS_fnc_timeline_edenAttributesChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Attributes change in EDEN for a timeline Parameter(s): _this select \n0: Object - The timeline \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_edenConnectionChanged": {
    "command": "BIS_fnc_timeline_edenConnectionChanged",
    "timestamp": "2021-01-23T20:17:44Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenConnectionChanged",
    "docSyntax": "[] call BIS_fnc_timeline_edenConnectionChanged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: 3DEN connections of a timeline is changed Parameter(s): _this select \n0: Object - The timeline \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_edenDeleted": {
    "command": "BIS_fnc_timeline_edenDeleted",
    "timestamp": "2021-01-23T20:29:55Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenDeleted",
    "docSyntax": "[] call BIS_fnc_timeline_edenDeleted",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Timeline is deleted Parameter(s): _this select \n0: Object - The destroyed timeline \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_edenDragged": {
    "command": "BIS_fnc_timeline_edenDragged",
    "timestamp": "2021-01-23T20:18:43Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenDragged",
    "docSyntax": "[] call BIS_fnc_timeline_edenDragged",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Entity is dragged in 3DEN Parameter(s): _this select \n0: Object - The timeline \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_edenInit": {
    "command": "BIS_fnc_timeline_edenInit",
    "timestamp": "2021-01-23T20:18:35Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenInit",
    "docSyntax": "[] call BIS_fnc_timeline_edenInit",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Time line is initialized in 3den Parameter(s): _this select \n0: Object - The timeline \nReturns: Nothing",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_timeline_edenIsSelected": {
    "command": "BIS_fnc_timeline_edenIsSelected",
    "timestamp": "2021-01-23T20:20:18Z",
    "version": "1.78",
    "syntax": "[] call BIS_fnc_timeline_edenIsSelected",
    "docSyntax": "[] call BIS_fnc_timeline_edenIsSelected",
    "tags": "",
    "description": "\nAuthor: Nelson Duarte <@Nelson_G_Duarte> \nDescription: Whether this timeline is selected in 3den Parameter(s): _this select \n0: Object - The timeline \nReturns: Bool - True if selected, false if not",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_zoomLock": {
    "command": "BIS_fnc_zoomLock",
    "timestamp": "2021-01-24T00:53:11Z",
    "version": "1.78",
    "syntax": "position2d call BIS_fnc_zoomLock",
    "docSyntax": "cameraCenter call BIS_fnc_zoomLock",
    "tags": "[EL]",
    "description": "Locks the camera in place when the map is open.",
    "example": "nowiki[</nowiki>[0, 0]] call BIS_fnc_zoomLock;",
    "params": "position2d",
    "returns": "nothing"
  },
  "BIS_fnc_zoomLockEH": {
    "command": "BIS_fnc_zoomLockEH",
    "timestamp": "2021-01-22T20:03:50Z",
    "version": "1.78",
    "syntax": "<position> call BIS_fnc_zoomLockEH",
    "docSyntax": "position call BIS_fnc_zoomLockEH",
    "tags": "[EL]",
    "description": "Event handler function for locking the camera.",
    "example": "[position player] call BIS_fnc_zoomLockEH;",
    "params": "<position>",
    "returns": ""
  },
  "BIS_fnc_zoomOnArea": {
    "command": "BIS_fnc_zoomOnArea",
    "timestamp": "2021-01-24T00:02:54Z",
    "version": "1.78",
    "syntax": "[<array>, <array>, <number>, <control>, <boolean>] call BIS_fnc_zoomOnArea",
    "docSyntax": "[area, center, time, handler, forceCam] call BIS_fnc_zoomOnArea",
    "tags": "",
    "description": "Map will zoom on the given area. Function always takes the longer side of the area to zoom on.",
    "example": "openMap true; [markerSize \"BIS_areaMarker\", markerPos \"BIS_areaMarker\", 5] call BIS_fnc_zoomOnArea;",
    "params": "<array> <array> <number> <control> <boolean>",
    "returns": "number"
  },
  "BIS_fnc_zoomUnlock": {
    "command": "BIS_fnc_zoomUnlock",
    "timestamp": "2021-01-24T00:29:49Z",
    "version": "1.78",
    "syntax": "call BIS_fnc_zoomUnlock",
    "docSyntax": "call BIS_fnc_zoomUnlock",
    "tags": "",
    "description": "Function that unlocks the camera in which has been previously locked with BIS_fnc_zoomLock.",
    "example": "[] call BIS_fnc_zoomUnlock;",
    "params": "",
    "returns": "nothing"
  },
  "ctrlTextWidth": {
    "command": "ctrlTextWidth",
    "timestamp": "2021-01-22T22:55:11Z",
    "version": "1.78",
    "syntax": "ctrlTextWidth <control>",
    "docSyntax": "ctrlTextWidth control",
    "tags": "",
    "description": "Returns the width of the control text including left and right margins (0.008 each). Supported control types \nare: * CT_STATIC 0 * CT_STRUCTURED_TEXT 13 Since Arma 3 v2.05.147765 control types \nadded: * CT_XKEYDESC * CT_XBUTTON * CT_SHORTCUTBUTTON * CT_BUTTON * CT_ACTIVETEXT Feature Informative For control-independent text width estimate see getTextWidth",
    "example": "_w = ctrlTextWidth _ctrl;",
    "params": "<control>",
    "returns": "number"
  },
  "getMusicPlayedTime": {
    "command": "getMusicPlayedTime",
    "timestamp": "2021-01-23T00:59:27Z",
    "version": "1.78",
    "syntax": "getMusicPlayedTime",
    "docSyntax": "getMusicPlayedTime",
    "tags": "",
    "description": "Returns elapsed time in seconds for currently playing music track.",
    "example": "playMusic [\"LeadTrack06_F_Tank\", 0]; onEachFrame {hintSilent str getMusicPlayedTime};",
    "params": "",
    "returns": "number"
  },
  "getUserMFDText": {
    "command": "getUserMFDText",
    "timestamp": "2021-01-23T09:18:45Z",
    "version": "1.78",
    "syntax": "getUserMFDText <object>",
    "docSyntax": "getUserMFDText vehicle",
    "tags": "",
    "description": "Returns array of user text variables used in MFD.",
    "example": "getUserMFDText _vehicle;",
    "params": "<object>",
    "returns": "array | string"
  },
  "isLaserOn": {
    "command": "isLaserOn",
    "timestamp": "2021-01-23T09:09:29Z",
    "version": "1.78",
    "syntax": "isLaserOn <object>",
    "docSyntax": "isLaserOn vehicle",
    "tags": "[AL] [EG]",
    "description": "Returns true if the vehicle has its laser turned on. Not to be confused with isIRLaserOn which is for units.",
    "example": "_on = isLaserOn _vehicle;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "openSteamApp": {
    "command": "openSteamApp",
    "timestamp": "2021-01-23T10:42:19Z",
    "version": "1.78",
    "syntax": "openSteamApp <number>",
    "docSyntax": "openSteamApp appID",
    "tags": "",
    "description": "Opens a Steam application, returns false if it was not possible to run the application.",
    "example": "openSteamApp 553228",
    "params": "<number>",
    "returns": "boolean"
  },
  "setUserMFDText": {
    "command": "setUserMFDText",
    "timestamp": "2021-01-24T00:26:56Z",
    "version": "1.78",
    "syntax": "<object> setUserMFDText [<number>, <string>]",
    "docSyntax": "vehicle setUserMFDText [index, value]",
    "tags": "",
    "description": "Stored user text value in MFD, limit is 50, user0...user49",
    "example": "_vehicle setUserMFDText [0, \"some text\"];",
    "params": "<object> <number> <string>",
    "returns": "nothing"
  },
  "a_hash_b": {
    "command": "a_hash_b",
    "timestamp": "2021-02-07T16:02:51Z",
    "version": "1.82",
    "syntax": "<array> # <number>",
    "docSyntax": "array # index",
    "tags": "",
    "description": "Selects an element from an array, same as higher precedence Feature Informative '#' has higher precedence than all binary operators, but it has lower precedence than unary operators (see Example 3)",
    "example": "[1,2,3,4] # 2; // result is 3",
    "params": "<array> <number>",
    "returns": "anything"
  },
  "BIS_fnc_randomPosIntersection": {
    "command": "BIS_fnc_randomPosIntersection",
    "timestamp": "2021-01-23T10:29:55Z",
    "version": "1.82",
    "syntax": "[<object>, <object>, <number>, <number>] call BIS_fnc_randomPosIntersection",
    "docSyntax": "[firstCircle, secondCircle, positioning1, positioning2] call BIS_fnc_randomPosIntersection",
    "tags": "",
    "description": "Returns random 2D position inside the intersection of two circles. [-1,-1] is returned if the circles do not intersect.",
    "example": "[trigger1,trigger2,0.75,0.75] call BIS_fnc_randomPosIntersection;",
    "params": "<object> <object> <number> <number>",
    "returns": "array"
  },
  "ctrlSetPixelPrecision": {
    "command": "ctrlSetPixelPrecision",
    "timestamp": "2021-01-22T22:41:50Z",
    "version": "1.82",
    "syntax": "<control> ctrlSetPixelPrecision <number>",
    "docSyntax": "control ctrlSetPixelPrecision mode",
    "tags": "",
    "description": "Switches mode of pixel precision (rounding) in a given control interface.",
    "example": "_control ctrlSetPixelPrecision 2; // Enables pixel precision of the given control",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "diag_lightNewLoad": {
    "command": "diag_lightNewLoad",
    "timestamp": "2021-03-28T22:57:33Z",
    "version": "1.82",
    "syntax": "diag_lightNewLoad <string>",
    "docSyntax": "diag_lightNewLoad path",
    "tags": "",
    "description": "Allows loading of lighting config during the gameplay (effectively changing the current scene lighting). Filename path can be either absolute or relative. The file must contain only the class LightingNew, which should contain lighting configuration.",
    "example": "diag_lightNewLoad \"o:\\lighting.txt\"",
    "params": "<string>",
    "returns": "nothing"
  },
  "diag_setLightNew": {
    "command": "diag_setLightNew",
    "timestamp": "2021-03-28T22:56:34Z",
    "version": "1.82",
    "syntax": "diag_setLightNew <string>",
    "docSyntax": "diag_setLightNew config",
    "tags": "",
    "description": "Overrides currently used scene lighting. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of simulWeatherSync.",
    "example": "diag_setLightNew \"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... \"",
    "params": "<string>",
    "returns": "nothing"
  },
  "disableMapIndicators": {
    "command": "disableMapIndicators",
    "timestamp": "2021-01-22T22:39:22Z",
    "version": "1.82",
    "syntax": "disableMapIndicators [<boolean>, <boolean>, <boolean>, <boolean>]",
    "docSyntax": "disableMapIndicators [disableFriendly, disableEnemy, disableMines, disablePing]",
    "tags": "[EL]",
    "description": "Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.",
    "example": "disableMapIndicators [true, true, false, false];",
    "params": "<boolean> <boolean> <boolean> <boolean>",
    "returns": "nothing"
  },
  "findIf": {
    "command": "findIf",
    "timestamp": "2021-01-22T23:12:18Z",
    "version": "1.82",
    "syntax": "<array> findIf _x",
    "docSyntax": "array findIf code",
    "tags": "",
    "description": "Searches for an element within array for which the code evaluates to true. Returns the zero-based index on success or -1 if not found.br Code on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as _x. FeatureInformativefindIf terminates as soon as it finds an element that fulfills the condition, thus it is more efficient than count in scenarios where a check for presence / absence of at least one element should be done (See HashLink#Example 2).",
    "example": "[unit1, unit2, unit3] _x}; // return index of the first dead unit)",
    "params": "<array> _x",
    "returns": "number"
  },
  "getPlateNumber": {
    "command": "getPlateNumber",
    "timestamp": "2021-01-23T00:46:13Z",
    "version": "1.82",
    "syntax": "getPlateNumber <object>",
    "docSyntax": "getPlateNumber vehicle",
    "tags": "",
    "description": "Get the license plates from any vehicle which has plates configured.",
    "example": "getPlateNumber vehicle player",
    "params": "<object>",
    "returns": "string"
  },
  "setPlateNumber": {
    "command": "setPlateNumber",
    "timestamp": "2021-01-23T20:34:51Z",
    "version": "1.82",
    "syntax": "<object> setPlateNumber <string>",
    "docSyntax": "vehicle setPlateNumber string",
    "tags": "[AL] [EG]",
    "description": "Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!",
    "example": "vehicle player 'setPlateNumber' \"Custom Plate 99\"",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_boatRack01ActionAdd": {
    "command": "BIS_fnc_boatRack01ActionAdd",
    "timestamp": "2021-01-22T21:58:20Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01ActionAdd",
    "docSyntax": "[] call BIS_fnc_boatRack01ActionAdd",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from trigger that is added to object (boat rack). \nExample: \"[thisTrigger,thisList] call BIS_fnc_boatRack01ActionAdd;\" \nRequired: Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Object (boat rack) must have triggers set up with continuous actions. Parameter(s): _this select \n0: mode (Scalar) \n0: trigger object and other parameters from trigger's & players vehicle's names-pace's. \nReturns: nothing \nResult: Continuous action added for players vehicle.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_BoatRack01ActionCondition": {
    "command": "BIS_fnc_BoatRack01ActionCondition",
    "timestamp": "2021-02-02T15:01:00Z",
    "version": "1.84",
    "syntax": "BIS_fnc_BoatRack01ActionCondition",
    "docSyntax": "BIS_fnc_BoatRack01ActionCondition",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01ActionRemove": {
    "command": "BIS_fnc_boatRack01ActionRemove",
    "timestamp": "2021-01-22T22:02:04Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01ActionRemove",
    "docSyntax": "[] call BIS_fnc_boatRack01ActionRemove",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from trigger that is added to object (boat rack). \nExample: \"[thisTrigger] call BIS_fnc_boatRack01ActionRemove;\" \nRequired: Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Object (boat rack) must have triggers set up with continuous actions. Parameter(s): _this select \n0: mode (Scalar) \n0: trigger object and other parameters from trigger's & players vehicle's names-pace's. \nReturns: nothing \nResult: Continuous action removed from player.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01AdjustZOffset": {
    "command": "BIS_fnc_boatRack01AdjustZOffset",
    "timestamp": "2021-01-22T22:05:00Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01AdjustZOffset",
    "docSyntax": "[] call BIS_fnc_boatRack01AdjustZOffset",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from Init EH script that is added to object (boat rack) or from action code. \nExample: [_boatRack, _boat] call BIS_fnc_boatRack01AdjustZOffset; \nRequired: Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Object (boat rack) must have triggers set up with continuous actions. Object (boat rack) must have set of Z offset's predefined in cfgVehicles for know/supported boat types. Parameters used from cfgVehicles \nconfiguration: cargoBayAnimationSelection = \"CargoBay_Move_Z\"; supportedVehicleOffsetsZ[] = {{\"C_Boat_Civil_01_F\",0.55}}; Parameter(s): _this select \n0: mode (Scalar) \n0: boat rack object \n1: boat in cargo and other parameters from boat rack's cfgVehicles configuration. \nReturns: nothing \nResult: Adjusts the hight (Z offset) of boat rack suspension to prevent different boats clipping with visual mesh.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01CanExetuteAction": {
    "command": "BIS_fnc_boatRack01CanExetuteAction",
    "timestamp": "2021-01-22T22:00:30Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01CanExetuteAction",
    "docSyntax": "[] call BIS_fnc_boatRack01CanExetuteAction",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from script that invokes the \"Hold Action\" for boat recovery. \nExample: [_target,_boatRack] call BIS_fnc_boatRack01CanExetuteAction; \nRequired: Object (boat) Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Parameter(s): _this select \n0: mode (Scalar) \n0: Object (boat) \n1: Object (boat rack) \nReturns: true if all conditions are met to display the \"Hold Action\" \nResult: Check to show \"Hold Action\" to player.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01CanProgressAction": {
    "command": "BIS_fnc_boatRack01CanProgressAction",
    "timestamp": "2021-01-22T21:52:58Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01CanProgressAction",
    "docSyntax": "[] call BIS_fnc_boatRack01CanProgressAction",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from script that invokes the \"Hold Action\" for boat recovery. \nExample: [_target,_boatRack] call BIS_fnc_boatRack01CanProgressAction; \nRequired: Object (boat) Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Parameter(s): _this select \n0: mode (Scalar) \n0: Object (boat) \n1: Object (boat rack) \nReturns: true if all conditions are met during the process of \"Hold Action\", can continue with action \nResult: Check to allow continue with \"Hold Action\".",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01Init": {
    "command": "BIS_fnc_boatRack01Init",
    "timestamp": "2021-01-22T21:57:35Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01Init",
    "docSyntax": "[] call BIS_fnc_boatRack01Init",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is main function for 'boat recovery' functionality. \nExecution: - Call from assets init EH. \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_BoatRack01Init;\"; \n};\n \nRequired: Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Parameter(s): _this select \n0: mode (Scalar) \n0: boat rack object and other parameters from configuration \nReturns: nothing \nResult: Two triggers are added near object to allow user to interact with feature.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_boatRack01InitAdjustZOffsets": {
    "command": "BIS_fnc_boatRack01InitAdjustZOffsets",
    "timestamp": "2021-01-22T21:58:38Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_boatRack01InitAdjustZOffsets",
    "docSyntax": "[] call BIS_fnc_boatRack01InitAdjustZOffsets",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is sub function for 'boat recovery' functionality. \nExecution: - Call from Init EH script that is added to object (boat rack). \nExample: [_boatRack] spawn BIS_fnc_boatRack01InitAdjustZOffsets; \nRequired: Object (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport). Object (boat rack) must have triggers set up with continuous actions. Object (boat rack) must have set of Z offset's predefined in cfgVehicles for know/supported boat types. Parameters used from cfgVehicles \nconfiguration: cargoBayAnimationSelection = \"CargoBay_Move_Z\"; supportedVehicleOffsetsZ[] = {{\"C_Boat_Civil_01_F\",0.55}}; Parameter(s): _this select \n0: mode (Scalar) \n0: boat rack object and other parameters from boat rack's cfgVehicles configuration. \nReturns: nothing \nResult: On mission startup adjusts the hight (Z offset) of boat rack suspension to prevent different boats clipping with visual mesh.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01AnimateHangarDoors": {
    "command": "BIS_fnc_destroyer01AnimateHangarDoors",
    "timestamp": "2021-01-22T21:58:41Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01AnimateHangarDoors",
    "docSyntax": "[] call BIS_fnc_destroyer01AnimateHangarDoors",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to handle animations of ship hangar doors. Used in Eden attributes and objects user actions. \nExecution: - Call from script. \nExample: [_shipPart, _value, false] spawn BIS_fnc_destroyer01AnimateHangarDoors; \nRequired: Object (ship) must have all animations correctly defined and user actions configured. Parameter(s): _this select \n0: mode (Scalar) \n0: ship-part object and \n1: animation state of doors \n2: animation speed (instant = true/smooth=false); \nReturns: nothing \nResult: Ship's hangar door animation is played with sounds added.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01EdenDelete": {
    "command": "BIS_fnc_destroyer01EdenDelete",
    "timestamp": "2021-01-22T21:58:39Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01EdenDelete",
    "docSyntax": "[] call BIS_fnc_destroyer01EdenDelete",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to delete dynamic ships (multi-part structure) in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space. Function will delete ship parts in EDEN editor after main object is deleted. \nExecution: - Call from EH on the main ship base model (blank model with memory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Destroyer01Init\"; //main init fnc, will assemble ship in game AttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\"; //function to delete all ship objects in EDEN editor \n};\n \nRequirements: - An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: ship Base/object and \n1: array of objects in variable in base objects name-space [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Ship's parts are deleted in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01EdenInit": {
    "command": "BIS_fnc_destroyer01EdenInit",
    "timestamp": "2021-01-22T22:05:46Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01EdenInit",
    "docSyntax": "[] call BIS_fnc_destroyer01EdenInit",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to assemble dynamic ship (multi-part structure) in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space. Function will update initial init setup on EDEN editor invoked. \nExecution: - Call from EH on the main ship's base model (blank model with memory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Destroyer01Init\"; //main init fnc, will assemble ship in game AttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\"; //function to delete all ship objects in EDEN editor \n};\n \nRequirements: - An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: ship Base/object and \n1: array of objects in variable in base objects names-pace [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Ship's position is updated in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01GetShipPart": {
    "command": "BIS_fnc_destroyer01GetShipPart",
    "timestamp": "2021-01-22T21:58:22Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01GetShipPart",
    "docSyntax": "[] call BIS_fnc_destroyer01GetShipPart",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a helper function to get ship components (objects) by class name from stored array in ships master component's name-space (\"BIS_CarrierParts\" array). \nExecution: - Call from script or config. \nExample: [_this, 'Land_Destroyer_01_hull_05_F'] call BIS_fnc_destroyer01GetShipPart; \nRequirements: - Ships master object must be present. Ships master object must have initialized the array of sub components. Parameter(s): _this select \n0: mode (Scalar) \n0: ship Base/object \n1: ship part class name to find \nReturns: object (ship part that matches selected class name) \nResult: n/a",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01HandleDamage": {
    "command": "BIS_fnc_destroyer01HandleDamage",
    "timestamp": "2021-01-22T21:53:43Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01HandleDamage",
    "docSyntax": "[] call BIS_fnc_destroyer01HandleDamage",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a damage visual FX simulation function designed to animate ships bridge windows when shot. Due to engine limitation (damage simulation is disabled for indestructible objects e.g. ships components) this workaround is applied. \nExecution: - Call from EH on the ship's model part with windows. \nExample: \nclass Eventhandlers { \n HitPart = \"_this call BIS_fnc_Destroyer01HandleDamage;\"; \n};\n \nRequirements: - Compatible object (e.g. ship component) must have a set of selections that are setup and named by convention. Selections must be defined as hidden selections in order for setObjectTexture to work. Parameter(s): _this select \n0: mode (Scalar) \n0: event Handler Array as documented here - https://community.bistudio.com/wiki/\n\tArma_3:_Event_Handlers#HitPart \nReturns: nothing \nResult: Destroyer (ship) window textures are swapped for damaged ones. Simple swap.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01Init": {
    "command": "BIS_fnc_destroyer01Init",
    "timestamp": "2021-01-22T22:01:57Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01Init",
    "docSyntax": "[] call BIS_fnc_destroyer01Init",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a main function designed to assemble dynamic ship (multi-part structure). Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space. \nExecution: - Call from EH on the main ship's base model (blank model with memory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Destroyer01Init\"; //main init fnc, will assemble ship in game AttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\"; //function to delete all ship objects in EDEN editor \n};\n \nRequirements: - Compatible object (carrier/ship) must have a base model with reference memory points and set of parts defined as separate objects in cfgVehicles config with their own models. Main ship base must have a definition of all listed sub parts and memory point position to reference it is placement in 3D space. Example in cfgVehicles class for ship base multiStructureParts[] = { {\"Land_Destroyer_01_hull_01_F\",\"pos_hull_1\"}, {\"Land_Destroyer_01_hull_02_F\",\"pos_hull_2\"}, {\"Land_Destroyer_01_hull_03_F\",\"pos_hull_3\"}, {\"Land_Destroyer_01_hull_04_F\",\"pos_hull_4\"}, {\"Land_Destroyer_01_hull_05_F\",\"pos_hull_5\"}, {\"Land_Destroyer_01_interior_02_F\",\"pos_hull_2\"}, {\"Land_Destroyer_01_interior_03_F\",\"pos_hull_3\"}, {\"Land_Destroyer_01_interior_04_F\",\"pos_hull_4\"}, {\"Land_HelipadEmpty_F\",\"pos_heliPad\"}, {\"ShipFlag_US_F\",\"pos_Flag\"} }; Parameter(s): _this select \n0: mode (Scalar) \n0: ship Base/object and parameters from config \nReturns: exposes and array of objects (ship parts) to other scripts for easy access as variable in it is own object name-space. \nResult: Destroyer (ship) is assembled",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01InitHullNumbers": {
    "command": "BIS_fnc_destroyer01InitHullNumbers",
    "timestamp": "2021-01-22T21:55:02Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01InitHullNumbers",
    "docSyntax": "[] call BIS_fnc_destroyer01InitHullNumbers",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to customize ships hull numbers. \nExecution: - Call from vehicles config of eden attributes. \nExample: \nclass CustomShipNumber1 { \n displayName=\"$STR_3den_object_attribute_CustomShipNumber1_displayname\"; tooltip=\"$STR_3den_object_attribute_CustomShipNumber1_tooltip\"; property=\"CustomShipNumber1\"; control=\"EditShort\"; expression=\"[([_this, 'Land_Destroyer_01_hull_01_F'] call BIS_fnc_destroyer01GetShipPart), _value, 0] spawn BIS_fnc_destroyer01InitHullNumbers;\"; defaultValue=\"0\"; validate = \"number\"; condition = \"object\"; typeName = \"NUMBER\"; \n};\n \nRequired: Object (ship) must have predefined hidden selections for hull number. Pass object of ship part component which contains numbered selections. Parameter(s): _this select \n0: mode (Scalar) \n0: ship-part object and \n1: number that should be displayed on the selection \n2: selection number \nReturns: nothing \nResult: Ship's hull number is set to specified number.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01OperateHangarDoors": {
    "command": "BIS_fnc_destroyer01OperateHangarDoors",
    "timestamp": "2021-01-22T22:05:04Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01OperateHangarDoors",
    "docSyntax": "[] call BIS_fnc_destroyer01OperateHangarDoors",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to handle animations of ship hangar doors. \nExecution: - Call from vehicle user actions. \nExample:\tclass OpenHangarDoor_1 { \n\t\tdisplayNameDefault =\"<img image='\\A3\\Ui_f\\data\\IGUI\\Cfg\\Actions\\open_door_ca.paa' size='2.5' />\"; displayName = $STR_DN_OUT_O_DOOR; position = \"pos_Door_Hangar_1_Trigger\"; priority = 0.4; radius = 1.5; onlyForPlayer = 0; condition = \"(((nearestObjects [this,[\"\"Land_Destroyer_01_hull_04_F\"\"],50, false]) select 0) animationPhase \"\"Door_Hangar_1_1_open\"\") < 0.1;\"; statement = \"[this,1] call BIS_fnc_destroyer01OperateHangarDoors;\"; \n\t};\n class \nCloseHangarDoor_1: OpenHangarDoor_1 { displayName = $STR_DN_OUT_C_DOOR; position = \"pos_Door_Hangar_1_Trigger\"; condition = \"(((nearestObjects [this,[\"\"Land_Destroyer_01_hull_04_F\"\"],50, false]) select 0) animationPhase \"\"Door_Hangar_1_1_open\"\") >= 0.1;\"; statement = \"[this,0] call BIS_fnc_destroyer01OperateHangarDoors;\"; }; \nRequired: Object (ship) must have all animations correctly defined and user actions configured. Parameter(s): _this select \n0: mode (Scalar) \n0: ship-part object and \n1: animation state of doors \nReturns: nothing \nResult: Ship's hangar door animation is played with sounds added. Calls BIS_fnc_destroyer01AnimateHangarDoors to execute action.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01PlayHangarDoorSound": {
    "command": "BIS_fnc_destroyer01PlayHangarDoorSound",
    "timestamp": "2021-01-22T22:00:28Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01PlayHangarDoorSound",
    "docSyntax": "[] call BIS_fnc_destroyer01PlayHangarDoorSound",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to add sounds required for ship hangar door animation. \nExecution: - Call from main script that handles the hangar door animation. \nExample: [_shipPart, _soundPos, _animationState] spawn BIS_fnc_destroyer01PlayHangarDoorSound; Parameter(s): _this select \n0: mode (Scalar) \n0: ship-part object and \n1: position in word coordinates where the sound should be played (modelToWorldWorld) \n2: animation state of hangar doors \nReturns: nothing \nResult: Ship's hangar door animation gets a sound source added.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_destroyer01PosUpdate": {
    "command": "BIS_fnc_destroyer01PosUpdate",
    "timestamp": "2021-01-22T22:01:40Z",
    "version": "1.84",
    "syntax": "[] call BIS_fnc_destroyer01PosUpdate",
    "docSyntax": "[] call BIS_fnc_destroyer01PosUpdate",
    "tags": "",
    "description": "\nAuthor: Bravo Zero One development - John_Spartan \nDescription: - This is a sub function designed to update dynamic ships (multi-part structure) position in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space. Function will update initial object positions when player drags the object in EDEN editor. \nExecution: - Call from EH on the main ship base model (blank model with memory points and reference config). \nExample: \nclass Eventhandlers { \n init = \"_this call BIS_fnc_Destroyer01Init\"; //main init fnc, will assemble ship in game AttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\"; //function to delete all ship objects in EDEN editor \n};\n \nRequirements: - An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init. Parameter(s): _this select \n0: mode (Scalar) \n0: ship Base/object and \n1: array of objects in variable in base objects name-space [\"bis_carrierParts\", []]; \nReturns: nothing \nResult: Ship's position is updated in EDEN editor.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "calculatePlayerVisibilityByFriendly": {
    "command": "calculatePlayerVisibilityByFriendly",
    "timestamp": "2021-01-22T21:37:21Z",
    "version": "1.84",
    "syntax": "<boolean>PlayerVisibilityByFriendly calculate",
    "docSyntax": "calculatePlayerVisibilityByFriendly calculate",
    "tags": "",
    "description": "Friendly units will / will not calculate visibility of player. Default false.",
    "example": "calculatePlayerVisibilityByFriendly true;",
    "params": "<boolean>",
    "returns": "nothing"
  },
  "ctrlAnimateModel": {
    "command": "ctrlAnimateModel",
    "timestamp": "2021-01-22T22:00:34Z",
    "version": "1.84",
    "syntax": "<control>ctrlAnimateModel <array>",
    "docSyntax": "control ctrlAnimateModel [source, phase]",
    "tags": "",
    "description": "Process an animation of 3D <\nArma: GUI Configuration>. Command uses name defined by source property and works similar like animateSource command.",
    "example": "_control3D ctrlAnimateModel [\"Close\",1];",
    "params": "<control> <array> <string> <number>",
    "returns": "nothing"
  },
  "ctrlAnimationPhaseModel": {
    "command": "ctrlAnimationPhaseModel",
    "timestamp": "2021-01-22T22:00:12Z",
    "version": "1.84",
    "syntax": "<control>ctrlAnimationPhaseModel <string>",
    "docSyntax": "control ctrlAnimationPhaseModel source",
    "tags": "",
    "description": "Returns current animation phase of given source. Similar to animationSourcePhase.",
    "example": "_phase = _control3D ctrlAnimationPhaseModel \"Close\";",
    "params": "<control> <string>",
    "returns": "number"
  },
  "getCalculatePlayerVisibilityByFriendly": {
    "command": "getCalculatePlayerVisibilityByFriendly",
    "timestamp": "2021-01-23T00:47:00Z",
    "version": "1.84",
    "syntax": "'getCalculatePlayerVisibilityByFriendly'",
    "docSyntax": "'getCalculatePlayerVisibilityByFriendly'",
    "tags": "",
    "description": "Returns true if visibility of player by friendly units is calculated.",
    "example": "_isCalculated = getCalculatePlayerVisibilityByFriendly;",
    "params": "",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_3DENExportSQF": {
    "command": "BIS_fnc_3DENExportSQF",
    "timestamp": "2021-01-22T22:00:31Z",
    "version": "1.86",
    "syntax": "[showWindow,exportLayers,center,checkBlacklist] call BIS_fnc_3DENExportSQF",
    "docSyntax": "[showWindow,exportLayers,center,checkBlacklist] call BIS_fnc_3DENExportSQF",
    "tags": "",
    "description": "Export 3DEN mission to SQF script. When called, the script will dynamically recreate the mission.",
    "example": "[ true, false, [1337,1337,0], true ] call BIS_fnc_3DENExportSQF;",
    "params": "<boolean> <boolean> <position> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_calculateDateTime": {
    "command": "BIS_fnc_calculateDateTime",
    "timestamp": "2021-01-22T23:09:44Z",
    "version": "1.86",
    "syntax": "[<array>, <array>, <string>] call BIS_fnc_calculateDateTime",
    "docSyntax": "[startDate, endDateOrOffset, timeUnit] call BIS_fnc_calculateDateTime",
    "tags": "",
    "description": "Returns the end datetime if an offset is passed, or the offset between start and end dates.",
    "example": "[date, 3600] call BIS_fnc_calculateDateTime; // returns date in 3600 seconds (60min, 1h)\n[date, 60, \"m\"] call BIS_fnc_calculateDateTime; // returns date in 60 minutes (1h)\n[nowiki[2035,8,28,11,55], [2035,8,29,11,55], \"h\"] call BIS_fnc_calculateDateTime; // returns 24",
    "params": "<array> <array> <string>",
    "returns": "date | number | date | number | number | date"
  },
  "BIS_fnc_compareDateTimes": {
    "command": "BIS_fnc_compareDateTimes",
    "timestamp": "2021-01-22T23:06:38Z",
    "version": "1.86",
    "syntax": "[date_1,date_2] call BIS_fnc_compareDateTimes",
    "docSyntax": "[date_1,date_2] call BIS_fnc_compareDateTimes",
    "tags": "",
    "description": "Returns the newer date or returns true if they are identical.",
    "example": "[ [2035,5,28,13,37],[2032,5,28,13,37] ] call BIS_fnc_compareDateTimes;",
    "params": "<array> <array>",
    "returns": "boolean | array"
  },
  "BIS_fnc_isDateTimeNewer": {
    "command": "BIS_fnc_isDateTimeNewer",
    "timestamp": "2021-01-23T10:04:49Z",
    "version": "1.86",
    "syntax": "[<array>, <array>] call BIS_fnc_isDateTimeNewer",
    "docSyntax": "[date_1, date_2] call BIS_fnc_isDateTimeNewer",
    "tags": "",
    "description": "Returns true if the first passed datetime is newer than the second one.",
    "example": "private _isNewer = [nowiki[2035,5,28,13,37], [2032,5,28,13,37]] call BIS_fnc_isDateTimeNewer;",
    "params": "<array> <array>",
    "returns": "boolean"
  },
  "BIS_fnc_priorityQueue_GetHighestPriority": {
    "command": "BIS_fnc_priorityQueue_GetHighestPriority",
    "timestamp": "2021-01-23T10:24:20Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_GetHighestPriority",
    "docSyntax": "[] call BIS_fnc_priorityQueue_GetHighestPriority",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Get the highest priority in the queue \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \nReturns: \n\t_priority:SCALAR - the priority \nSyntax: \n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_GetHighestPriority; \nExample: _myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_GetLowestPriority": {
    "command": "BIS_fnc_priorityQueue_GetLowestPriority",
    "timestamp": "2021-01-23T10:25:42Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_GetLowestPriority",
    "docSyntax": "[] call BIS_fnc_priorityQueue_GetLowestPriority",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Get the highest priority in the queue \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \nReturns: \n\t_priority:SCALAR - the priority \nSyntax: \n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_GetHighestPriority; \nExample: _myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_Init": {
    "command": "BIS_fnc_priorityQueue_Init",
    "timestamp": "2021-01-23T10:24:10Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_Init",
    "docSyntax": "[] call BIS_fnc_priorityQueue_Init",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Initialize the Priority Queue data structure. The Priority Queue is sorted on inserting. Bigger numbers are set on higher indexes. \nParameters: \n\t_maxSize:INT - OPTIONAL, sets the Queue MAX SIZE (otherwise it is set to the constant defined in the .inc file) \nReturns: \n_handle: Handle to the Queue (essential for manipulation with the Queue) \nSyntax: \n\t_handle:INT = [_maxSize] call BIS_fnc_PriorityQueue_Init; \nExample: _priorityQueue_1 = [10] call BIS_fnc_PriorityQueue_Init;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_IsEmpty": {
    "command": "BIS_fnc_priorityQueue_IsEmpty",
    "timestamp": "2021-01-23T10:25:50Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_IsEmpty",
    "docSyntax": "[] call BIS_fnc_priorityQueue_IsEmpty",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Checks if the Queue is empty \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \nReturns: \n\t_empty:BOOL - true if the Queue is empty \nSyntax: \n\t_empty:BOOL = [_handle] call BIS_fnc_PriorityQueue_IsEmpty; \nExample: _isTheQueueEmpty = [_priorityQueue_1] call BIS_fnc_PriorityQueue_IsEmpty;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_IsFull": {
    "command": "BIS_fnc_priorityQueue_IsFull",
    "timestamp": "2021-01-23T10:26:00Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_IsFull",
    "docSyntax": "[] call BIS_fnc_priorityQueue_IsFull",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Checks if the Queue is full \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \nReturns: \n\t_full:BOOL - true if the Queue is full \nSyntax: \n\t_full:BOOL = [_handle] call BIS_fnc_PriorityQueue_IsFull; \nExample: _isTheQueueFull = [_priorityQueue_1] call BIS_fnc_PriorityQueue_IsFull;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_PopItem": {
    "command": "BIS_fnc_priorityQueue_PopItem",
    "timestamp": "2021-01-23T10:27:08Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_PopItem",
    "docSyntax": "[] call BIS_fnc_priorityQueue_PopItem",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Pops the item with the highest priority from the Queue (item with highest index). The item is removed from the Queue. \nComplexity: O(1) \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \n\t_keep:BOOL - if true, the item is not removed from the Queue \nReturns: \n\t_item:ANY - the item stored in the Queue \nSyntax: \n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_PopItem; \nExample: _myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_priorityQueue_PushItem": {
    "command": "BIS_fnc_priorityQueue_PushItem",
    "timestamp": "2021-01-23T10:27:30Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_priorityQueue_PushItem",
    "docSyntax": "[] call BIS_fnc_priorityQueue_PushItem",
    "tags": "",
    "description": "\nAuthor: Zozo \nDescription: Inserts item with a defined priority to the Queue The Priority Queue is sorted on inserting. Bigger numbers are set on higher indexes. \nComplexity: O(n) \nParameters: \n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init) \n\t_item:ANY - item, can be whatever \n\t_priority:INT - the priority the item is inserted with \nReturns: \n\t_success:BOOL - true if item was inserted into the Queue, otherwise false \nSyntax: \n\t_success:BOOL = [_handle, _item, _priority] call BIS_fnc_PriorityQueue_InsertItem; \nExample: _s = [_priorityQueue_1, \"myItem\", 5] call BIS_fnc_PriorityQueue_InsertItem;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAICore": {
    "command": "BIS_fnc_WLAICore",
    "timestamp": "2021-01-22T22:42:27Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAICore",
    "docSyntax": "[] call BIS_fnc_WLAICore",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAIPathSegmentation": {
    "command": "BIS_fnc_WLAIPathSegmentation",
    "timestamp": "2021-01-22T22:42:18Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAIPathSegmentation",
    "docSyntax": "[] call BIS_fnc_WLAIPathSegmentation",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sets up a path and behavior for AI to a specific sector.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAIPurchases": {
    "command": "BIS_fnc_WLAIPurchases",
    "timestamp": "2021-01-22T22:47:53Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAIPurchases",
    "docSyntax": "[] call BIS_fnc_WLAIPurchases",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAircraftArrival": {
    "command": "BIS_fnc_WLAircraftArrival",
    "timestamp": "2021-01-22T22:56:37Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAircraftArrival",
    "docSyntax": "[] call BIS_fnc_WLAircraftArrival",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns a requested aircraft and makes it land properly.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAirdrop": {
    "command": "BIS_fnc_WLAirdrop",
    "timestamp": "2021-01-22T22:44:10Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAirdrop",
    "docSyntax": "[] call BIS_fnc_WLAirdrop",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns a requested asset and drops it on a specific location.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLAISectorScan": {
    "command": "BIS_fnc_WLAISectorScan",
    "timestamp": "2021-01-22T22:41:54Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLAISectorScan",
    "docSyntax": "[] call BIS_fnc_WLAISectorScan",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sector scan routine for AI.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLCalculateIncome": {
    "command": "BIS_fnc_WLCalculateIncome",
    "timestamp": "2021-01-22T22:58:33Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLCalculateIncome",
    "docSyntax": "[] call BIS_fnc_WLCalculateIncome",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Recalculate CP income for a specific side.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLCalculateSectorConnections": {
    "command": "BIS_fnc_WLCalculateSectorConnections",
    "timestamp": "2021-01-22T22:53:37Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLCalculateSectorConnections",
    "docSyntax": "[] call BIS_fnc_WLCalculateSectorConnections",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Evaluates sector grid so it can be drawn on map.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLClientInit": {
    "command": "BIS_fnc_WLClientInit",
    "timestamp": "2021-01-22T22:51:01Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLClientInit",
    "docSyntax": "[] call BIS_fnc_WLClientInit",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: System init (client-side).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLDebug": {
    "command": "BIS_fnc_WLDebug",
    "timestamp": "2021-01-22T22:54:34Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLDebug",
    "docSyntax": "[] call BIS_fnc_WLDebug",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Debug logging.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLDefenceSetup": {
    "command": "BIS_fnc_WLDefenceSetup",
    "timestamp": "2021-01-22T22:40:07Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLDefenceSetup",
    "docSyntax": "[] call BIS_fnc_WLDefenceSetup",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Requested static weapon positionining routine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLDropPurchase": {
    "command": "BIS_fnc_WLDropPurchase",
    "timestamp": "2021-01-22T22:52:34Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLDropPurchase",
    "docSyntax": "[] call BIS_fnc_WLDropPurchase",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Airdrop location selection routine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLFundsInfo": {
    "command": "BIS_fnc_WLFundsInfo",
    "timestamp": "2021-01-22T22:45:49Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLFundsInfo",
    "docSyntax": "[] call BIS_fnc_WLFundsInfo",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Funds & sector status UI handle",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLGarrisonRetreat": {
    "command": "BIS_fnc_WLGarrisonRetreat",
    "timestamp": "2021-01-22T22:41:45Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLGarrisonRetreat",
    "docSyntax": "[] call BIS_fnc_WLGarrisonRetreat",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLInit": {
    "command": "BIS_fnc_WLInit",
    "timestamp": "2021-01-22T22:48:01Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLInit",
    "docSyntax": "[] call BIS_fnc_WLInit",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: System init.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLInSectorArea": {
    "command": "BIS_fnc_WLInSectorArea",
    "timestamp": "2021-01-22T22:45:14Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLInSectorArea",
    "docSyntax": "[] call BIS_fnc_WLInSectorArea",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Checks if the given unit is inside a specific sector.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLLoadoutApply": {
    "command": "BIS_fnc_WLLoadoutApply",
    "timestamp": "2021-01-22T22:52:51Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLLoadoutApply",
    "docSyntax": "[] call BIS_fnc_WLLoadoutApply",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Reapply a saved loadout.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLLoadoutGrab": {
    "command": "BIS_fnc_WLLoadoutGrab",
    "timestamp": "2021-01-22T22:42:00Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLLoadoutGrab",
    "docSyntax": "[] call BIS_fnc_WLLoadoutGrab",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Save a loadout for later.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLMostVotedSector": {
    "command": "BIS_fnc_WLMostVotedSector",
    "timestamp": "2021-01-22T22:50:59Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLMostVotedSector",
    "docSyntax": "[] call BIS_fnc_WLMostVotedSector",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Evaluates which sector was most voted for.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLNavalArrival": {
    "command": "BIS_fnc_WLNavalArrival",
    "timestamp": "2021-01-22T22:52:52Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLNavalArrival",
    "docSyntax": "[] call BIS_fnc_WLNavalArrival",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns a requested naval asset.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLOpenArsenal": {
    "command": "BIS_fnc_WLOpenArsenal",
    "timestamp": "2021-01-22T22:49:29Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLOpenArsenal",
    "docSyntax": "[] call BIS_fnc_WLOpenArsenal",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Opens Arsenal interface.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLOSD": {
    "command": "BIS_fnc_WLOSD",
    "timestamp": "2021-01-22T22:41:18Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLOSD",
    "docSyntax": "[] call BIS_fnc_WLOSD",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Manages temporary info in hints.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLOutlineIcons": {
    "command": "BIS_fnc_WLOutlineIcons",
    "timestamp": "2021-01-22T22:58:27Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLOutlineIcons",
    "docSyntax": "[] call BIS_fnc_WLOutlineIcons",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Handles icons selection visualization in map.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLPlayersTracking": {
    "command": "BIS_fnc_WLPlayersTracking",
    "timestamp": "2021-01-22T22:57:45Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLPlayersTracking",
    "docSyntax": "[] call BIS_fnc_WLPlayersTracking",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Keeps track of player unit & its marker.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLPlayersTrackingServer": {
    "command": "BIS_fnc_WLPlayersTrackingServer",
    "timestamp": "2021-01-22T22:40:07Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLPlayersTrackingServer",
    "docSyntax": "[] call BIS_fnc_WLPlayersTrackingServer",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Manage connecting and disconnecting players.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLPurchaseMenu": {
    "command": "BIS_fnc_WLPurchaseMenu",
    "timestamp": "2021-01-22T22:45:19Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLPurchaseMenu",
    "docSyntax": "[] call BIS_fnc_WLPurchaseMenu",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Purchase interface handle.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRandomPosRect": {
    "command": "BIS_fnc_WLRandomPosRect",
    "timestamp": "2021-01-22T22:56:03Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRandomPosRect",
    "docSyntax": "[] call BIS_fnc_WLRandomPosRect",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Returns a random position in rectangle area.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRecalculateServices": {
    "command": "BIS_fnc_WLRecalculateServices",
    "timestamp": "2021-01-22T22:42:08Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRecalculateServices",
    "docSyntax": "[] call BIS_fnc_WLRecalculateServices",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Refreshes a side's available services.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRemovalHandle": {
    "command": "BIS_fnc_WLRemovalHandle",
    "timestamp": "2021-01-22T22:54:55Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRemovalHandle",
    "docSyntax": "[] call BIS_fnc_WLRemovalHandle",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Units & vehicles garbage collector.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLReputation": {
    "command": "BIS_fnc_WLReputation",
    "timestamp": "2021-01-22T22:46:53Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLReputation",
    "docSyntax": "[] call BIS_fnc_WLReputation",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Calculate player's reputiation (how rapidly they lose subordinates).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRequestFastTravel": {
    "command": "BIS_fnc_WLRequestFastTravel",
    "timestamp": "2021-01-22T22:45:04Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRequestFastTravel",
    "docSyntax": "[] call BIS_fnc_WLRequestFastTravel",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Fast travel routine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRequestFundsTransfer": {
    "command": "BIS_fnc_WLRequestFundsTransfer",
    "timestamp": "2021-01-22T22:57:24Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRequestFundsTransfer",
    "docSyntax": "[] call BIS_fnc_WLRequestFundsTransfer",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Funds transfer routine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRequestPurchase": {
    "command": "BIS_fnc_WLRequestPurchase",
    "timestamp": "2021-01-22T22:55:33Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRequestPurchase",
    "docSyntax": "[] call BIS_fnc_WLRequestPurchase",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Handles proper purchase subroutine based on asset type.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRequestSectorScan": {
    "command": "BIS_fnc_WLRequestSectorScan",
    "timestamp": "2021-01-22T22:48:20Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRequestSectorScan",
    "docSyntax": "[] call BIS_fnc_WLRequestSectorScan",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sector scan routine (selection part).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLRequestVotingReset": {
    "command": "BIS_fnc_WLRequestVotingReset",
    "timestamp": "2021-01-22T22:50:38Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLRequestVotingReset",
    "docSyntax": "[] call BIS_fnc_WLRequestVotingReset",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Voting reset routine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorFundsPayoff": {
    "command": "BIS_fnc_WLSectorFundsPayoff",
    "timestamp": "2021-01-22T22:55:42Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorFundsPayoff",
    "docSyntax": "[] call BIS_fnc_WLSectorFundsPayoff",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorHandle": {
    "command": "BIS_fnc_WLSectorHandle",
    "timestamp": "2021-01-22T23:09:07Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorHandle",
    "docSyntax": "[] call BIS_fnc_WLSectorHandle",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorHandleServer": {
    "command": "BIS_fnc_WLSectorHandleServer",
    "timestamp": "2021-01-23T00:06:13Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorHandleServer",
    "docSyntax": "[] call BIS_fnc_WLSectorHandleServer",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorIconUpdate": {
    "command": "BIS_fnc_WLSectorIconUpdate",
    "timestamp": "2021-01-23T00:18:46Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorIconUpdate",
    "docSyntax": "[] call BIS_fnc_WLSectorIconUpdate",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Handles sector icons.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorInit": {
    "command": "BIS_fnc_WLSectorInit",
    "timestamp": "2021-01-22T23:07:16Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorInit",
    "docSyntax": "[] call BIS_fnc_WLSectorInit",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns sector garrison based on its size, sends a patrolling vehicle if feasible.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorListing": {
    "command": "BIS_fnc_WLSectorListing",
    "timestamp": "2021-01-22T23:08:58Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorListing",
    "docSyntax": "[] call BIS_fnc_WLSectorListing",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Keeps track of sectors status for a given side.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorPopulate": {
    "command": "BIS_fnc_WLSectorPopulate",
    "timestamp": "2021-01-23T00:57:37Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorPopulate",
    "docSyntax": "[] call BIS_fnc_WLSectorPopulate",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns sector garrison.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorScanHandle": {
    "command": "BIS_fnc_WLSectorScanHandle",
    "timestamp": "2021-01-22T23:06:01Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorScanHandle",
    "docSyntax": "[] call BIS_fnc_WLSectorScanHandle",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorsCommonInit": {
    "command": "BIS_fnc_WLSectorsCommonInit",
    "timestamp": "2021-01-23T00:54:53Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorsCommonInit",
    "docSyntax": "[] call BIS_fnc_WLSectorsCommonInit",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sectors init (client-side).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorSelectionEnd": {
    "command": "BIS_fnc_WLSectorSelectionEnd",
    "timestamp": "2021-01-22T23:10:51Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorSelectionEnd",
    "docSyntax": "[] call BIS_fnc_WLSectorSelectionEnd",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sector voting termination subroutine.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorSelectionHandle": {
    "command": "BIS_fnc_WLSectorSelectionHandle",
    "timestamp": "2021-01-22T23:06:19Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorSelectionHandle",
    "docSyntax": "[] call BIS_fnc_WLSectorSelectionHandle",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorSelectionHandleServer": {
    "command": "BIS_fnc_WLSectorSelectionHandleServer",
    "timestamp": "2021-01-22T23:09:31Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorSelectionHandleServer",
    "docSyntax": "[] call BIS_fnc_WLSectorSelectionHandleServer",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorSelectionStart": {
    "command": "BIS_fnc_WLSectorSelectionStart",
    "timestamp": "2021-01-22T23:25:38Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorSelectionStart",
    "docSyntax": "[] call BIS_fnc_WLSectorSelectionStart",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Initializes sector voting.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorsSetup": {
    "command": "BIS_fnc_WLSectorsSetup",
    "timestamp": "2021-01-22T23:06:12Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorsSetup",
    "docSyntax": "[] call BIS_fnc_WLSectorsSetup",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sectors init (server-side).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorTaskHandle": {
    "command": "BIS_fnc_WLSectorTaskHandle",
    "timestamp": "2021-01-23T00:30:01Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorTaskHandle",
    "docSyntax": "[] call BIS_fnc_WLSectorTaskHandle",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSectorUpdate": {
    "command": "BIS_fnc_WLSectorUpdate",
    "timestamp": "2021-01-22T23:06:22Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSectorUpdate",
    "docSyntax": "[] call BIS_fnc_WLSectorUpdate",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Sector update after its owner changed.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSeizingBarHandle": {
    "command": "BIS_fnc_WLSeizingBarHandle",
    "timestamp": "2021-01-23T00:44:27Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSeizingBarHandle",
    "docSyntax": "[] call BIS_fnc_WLSeizingBarHandle",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Handles the seizing bar element in UI.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSendResponseTeam": {
    "command": "BIS_fnc_WLSendResponseTeam",
    "timestamp": "2021-01-22T23:10:46Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSendResponseTeam",
    "docSyntax": "[] call BIS_fnc_WLSendResponseTeam",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Spawns and manages response teams.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLShowInfo": {
    "command": "BIS_fnc_WLShowInfo",
    "timestamp": "2021-01-22T23:05:00Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLShowInfo",
    "docSyntax": "[] call BIS_fnc_WLShowInfo",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Hints buffer.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSideToFaction": {
    "command": "BIS_fnc_WLSideToFaction",
    "timestamp": "2021-01-22T23:08:42Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSideToFaction",
    "docSyntax": "[] call BIS_fnc_WLSideToFaction",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Returns the primary faction for a given side.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSmoothText": {
    "command": "BIS_fnc_WLSmoothText",
    "timestamp": "2021-01-23T00:42:25Z",
    "version": "1.86",
    "syntax": "[<string>, <number>, <number>, color, <boolean>] call BIS_fnc_WLSmoothText",
    "docSyntax": "[text, nbOfLines, duration, color, outline] call BIS_fnc_WLSmoothText",
    "tags": "[EL]",
    "description": "Display given text smoothly.",
    "example": "[\"Hello, hidden FX\", 2, 3, [1,0,0,1], true] spawn BIS_fnc_WLSmoothText; // no sounds, letters appear in a smooth transition",
    "params": "<string> <number> <number> color <boolean>",
    "returns": "nothing"
  },
  "BIS_fnc_WLSoundMsg": {
    "command": "BIS_fnc_WLSoundMsg",
    "timestamp": "2021-01-22T23:12:10Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSoundMsg",
    "docSyntax": "[] call BIS_fnc_WLSoundMsg",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Play a given announcer message.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability",
    "timestamp": "2021-01-22T23:32:07Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuGetUIScale": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuGetUIScale",
    "timestamp": "2021-01-22T23:11:50Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuGetUIScale",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuGetUIScale",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuHandleDLC": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuHandleDLC",
    "timestamp": "2021-01-22T23:26:10Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuHandleDLC",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuHandleDLC",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuRefresh": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuRefresh",
    "timestamp": "2021-01-22T23:06:12Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuRefresh",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuRefresh",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails",
    "timestamp": "2021-01-23T00:39:43Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSubroutine_purchaseMenuSetItemsList": {
    "command": "BIS_fnc_WLSubroutine_purchaseMenuSetItemsList",
    "timestamp": "2021-01-22T23:07:43Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuSetItemsList",
    "docSyntax": "[] call BIS_fnc_WLSubroutine_purchaseMenuSetItemsList",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSyncTime": {
    "command": "BIS_fnc_WLSyncTime",
    "timestamp": "2021-01-22T23:07:29Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLSyncTime",
    "docSyntax": "[] call BIS_fnc_WLSyncTime",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Introduces a synchronized time value for server and clients. OBSOLETE NOW AFTER SERVERTIME FIX",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLUpdateAO": {
    "command": "BIS_fnc_WLUpdateAO",
    "timestamp": "2021-01-22T23:05:50Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLUpdateAO",
    "docSyntax": "[] call BIS_fnc_WLUpdateAO",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Recalculates AO info (sector distribution).",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLVarsInit": {
    "command": "BIS_fnc_WLVarsInit",
    "timestamp": "2021-01-22T23:49:00Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLVarsInit",
    "docSyntax": "[] call BIS_fnc_WLVarsInit",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Init variables.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLVehicleHandle": {
    "command": "BIS_fnc_WLVehicleHandle",
    "timestamp": "2021-01-22T23:49:40Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLVehicleHandle",
    "docSyntax": "[] call BIS_fnc_WLVehicleHandle",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Keeps track of spawned vehicles.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLVotingBarHandle": {
    "command": "BIS_fnc_WLVotingBarHandle",
    "timestamp": "2021-01-23T00:46:38Z",
    "version": "1.86",
    "syntax": "[] call BIS_fnc_WLVotingBarHandle",
    "docSyntax": "[] call BIS_fnc_WLVotingBarHandle",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Handles the voting bar element in UI.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "diag_drawMode": {
    "command": "diag_drawMode",
    "timestamp": "2021-05-23T12:50:31Z",
    "version": "1.86",
    "syntax": "diag_drawMode <string>",
    "docSyntax": "diag_drawMode type",
    "tags": "",
    "description": "Activates specific debug visualization.",
    "example": "diag_drawMode \"normal\"",
    "params": "<string>",
    "returns": "nothing"
  },
  "getCustomSoundController": {
    "command": "getCustomSoundController",
    "timestamp": "2021-04-20T16:37:14Z",
    "version": "1.86",
    "syntax": "getCustomSoundController [<object>, <string>]",
    "docSyntax": "getCustomSoundController [vehicle, controller]",
    "tags": "",
    "description": "Returns current value set to the controller (see setCustomSoundController)",
    "example": "getCustomSoundController [vehicle player, \"CustomSoundController1\"];",
    "params": "<object> <string>",
    "returns": "number"
  },
  "getCustomSoundControllerCount": {
    "command": "getCustomSoundControllerCount",
    "timestamp": "2021-04-20T16:37:54Z",
    "version": "1.86",
    "syntax": "getCustomSoundControllerCount <object>",
    "docSyntax": "getCustomSoundControllerCount vehicle",
    "tags": "",
    "description": "Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)",
    "example": "getCustomSoundControllerCount vehicle player;",
    "params": "<object>",
    "returns": "number"
  },
  "setCustomSoundController": {
    "command": "setCustomSoundController",
    "timestamp": "2021-04-20T16:39:16Z",
    "version": "1.86",
    "syntax": "setCustomSoundController [<object>, <string>, <number>]",
    "docSyntax": "setCustomSoundController [vehicle, controller, value]",
    "tags": "",
    "description": "Sets value of the specified custom sound controller to be used in <simple expression>s in config. Returns true if value was set to the controller, false if command fails, for example if vehicle is not a transport or controller name is not recognised. Feature important Custom sound controller name is ucase sensitive</u> and of the following \nformat: codeformat [\"CustomSoundController%1\", _number]</code> Where _number is a number from 1 to getCustomSoundControllerCount (currently 32)",
    "example": "setCustomSoundController [vehicle player, \"CustomSoundController1\", 12];",
    "params": "<object> <string> <number>",
    "returns": "boolean | true"
  },
  "bezierInterpolation": {
    "command": "bezierInterpolation",
    "timestamp": "2021-01-22T21:34:48Z",
    "version": "1.92",
    "syntax": "<number> bezierInterpolation nowiki<array></nowiki>",
    "docSyntax": "progress bezierInterpolation nowiki[pos0, pos1,... posN]</nowiki>",
    "tags": "",
    "description": "Gets interpolated value based on WikipediaBézier_curveBézier curve with given control points (progress value is 0...1 for a curve that starts at pos0 and finishes at posN) br 400px",
    "example": "for \"_i\" from 0 to 1 step 0.05 do { createVehicle [\"Sign_Sphere10cm_F\",(_i bezierInterpolation [ player modelToWorld [0,0,0], player modelToWorld [0,2,2], player modelToWorld [2,0,2], player modelToWorld [0,0,4] ]),[],0,\"CAN_COLLIDE\"]; };",
    "params": "<number> <array> position3d",
    "returns": "position3d based on progress value"
  },
  "BIS_fnc_mapGridSize": {
    "command": "BIS_fnc_mapGridSize",
    "timestamp": "2021-01-23T09:55:01Z",
    "version": "1.92",
    "syntax": "<array> call BIS_fnc_mapGridSize",
    "docSyntax": "[map] call BIS_fnc_mapGridSize",
    "tags": "",
    "description": "Returns the size of map grid square at current zoom level.Feature Informative This function caches config lookup result on the first use and for the duration of the mission, making subsequent access 2-3 times faster.",
    "example": "_gridSize = [] call BIS_fnc_mapGridSize;",
    "params": "<array> <control>",
    "returns": "number"
  },
  "BIS_fnc_markerToString": {
    "command": "BIS_fnc_markerToString",
    "timestamp": "2021-01-23T09:55:12Z",
    "version": "1.92",
    "syntax": "<string> call BIS_fnc_markerToString",
    "docSyntax": "markerName call BIS_fnc_markerToString",
    "tags": "",
    "description": "Converts existing marker to String, for \nexample: nowiki\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\"</nowiki>",
    "example": "\"marker1\" call BIS_fnc_markerToString",
    "params": "<string> <string> <string>",
    "returns": "string | bis_fnc_stringtomarker | bis_fnc_stringtomarkerlocal"
  },
  "BIS_fnc_stringToMarker": {
    "command": "BIS_fnc_stringToMarker",
    "timestamp": "2021-01-23T20:16:24Z",
    "version": "1.92",
    "syntax": "<string> call BIS_fnc_stringToMarker",
    "docSyntax": "data call BIS_fnc_stringToMarker",
    "tags": "[EG]",
    "description": "Converts serialized data from BIS_fnc_markerToString into a global map marker",
    "example": "nowiki\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\"</nowiki> call BIS_fnc_stringToMarker",
    "params": "<string>",
    "returns": "string"
  },
  "BIS_fnc_stringToMarkerLocal": {
    "command": "BIS_fnc_stringToMarkerLocal",
    "timestamp": "2021-01-23T20:26:44Z",
    "version": "1.92",
    "syntax": "<string> call BIS_fnc_stringToMarkerLocal",
    "docSyntax": "data call BIS_fnc_stringToMarkerLocal",
    "tags": "[EL]",
    "description": "Converts serialized data from local map marker",
    "example": "nowiki\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\"</nowiki> call BIS_fnc_stringToMarkerLocal",
    "params": "<string>",
    "returns": "local marker"
  },
  "ctrlSetPositionH": {
    "command": "ctrlSetPositionH",
    "timestamp": "2021-01-22T22:39:52Z",
    "version": "1.92",
    "syntax": "<control> ctrlSetPositionH <number>",
    "docSyntax": "control ctrlSetPositionH h",
    "tags": "",
    "description": "Sets the height of a 2D control. ctrlCommit is required to complete the operation.",
    "example": "_ctrl ctrlSetPositionH 0.5; _ctrl ctrlCommit 1;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctrlSetPositionW": {
    "command": "ctrlSetPositionW",
    "timestamp": "2021-01-22T22:52:42Z",
    "version": "1.92",
    "syntax": "<control> ctrlSetPositionW <number>",
    "docSyntax": "control ctrlSetPositionW w",
    "tags": "",
    "description": "Sets the width of a 2D control. ctrlCommit is required to complete the operation.",
    "example": "_ctrl ctrlSetPositionW 0.5; _ctrl ctrlCommit 1;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctrlSetPositionX": {
    "command": "ctrlSetPositionX",
    "timestamp": "2021-01-22T22:55:19Z",
    "version": "1.92",
    "syntax": "<control> ctrlSetPositionX <number>",
    "docSyntax": "control ctrlSetPositionX x",
    "tags": "",
    "description": "Sets horizontal position (x) of the 2D control. ctrlCommit is required to complete the operation.",
    "example": "_ctrl ctrlSetPositionX 0.5; _ctrl ctrlCommit 1;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "ctrlSetPositionY": {
    "command": "ctrlSetPositionY",
    "timestamp": "2021-01-22T22:46:15Z",
    "version": "1.92",
    "syntax": "<control> ctrlSetPositionY <number>",
    "docSyntax": "control ctrlSetPositionY y",
    "tags": "",
    "description": "Sets vertical position (y) of a 2D control. ctrlCommit is required to complete the operation.",
    "example": "_ctrl ctrlSetPositionY 0.5; _ctrl ctrlCommit 1;",
    "params": "<control> <number>",
    "returns": "nothing"
  },
  "customWaypointPosition": {
    "command": "customWaypointPosition",
    "timestamp": "2021-01-22T22:45:53Z",
    "version": "1.92",
    "syntax": "customWaypointPosition",
    "docSyntax": "customWaypointPosition",
    "tags": "",
    "description": "Returns player's custom waypoint (LShift + LMB) Position or an empty array hl[] if no custom waypoint exists.",
    "example": "customWaypointPosition",
    "params": "",
    "returns": "position"
  },
  "decayGraphValues": {
    "command": "decayGraphValues",
    "timestamp": "2021-01-22T22:50:35Z",
    "version": "1.92",
    "syntax": "decayGraphValues [<array>, <array>, <number>]",
    "docSyntax": "decayGraphValues [lowerBoundValues, graphValues, coef]",
    "tags": "",
    "description": "Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound.",
    "example": "decayGraphValues [nowiki[1,2,3,4,5], [1,4,9,16,25], 0.3]; // returns [1,2,3,4.8,7.5]",
    "params": "<array> <array> <number>",
    "returns": "array | number"
  },
  "getGraphValues": {
    "command": "getGraphValues",
    "timestamp": "2021-01-23T00:40:11Z",
    "version": "1.92",
    "syntax": "getGraphValues nowiki[[<number>, <number>, <number>, <number>, <number>, <number>], x1, y1, x2, y2, ... xn, yn]</nowiki>",
    "docSyntax": "getGraphValues nowiki[[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2, ... xn, yn]</nowiki>",
    "tags": "",
    "description": "Generate graph y - coordinates of all input values within specific x and y range.",
    "example": "private _minX = 0; private _maxX = 10; private _minY = 0; private _maxY = 100; private _count = 11; private _random = 0; getGraphValues [ [_minX, _maxX, _minY, _maxY, _count, _random], 0, 5, 1, 10, 2, 100, 3, 50, 4, 30, 5, 100, 6, 10, 7, 50, 8, 75, 9, 100, 10, 100 ]; codecomment/* returns [[0.05, 0.1, 1, 0.5, 0.3, 1, 0.1, 0.5, 0.75, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]] supposedly [array of 1-based Y values, array of X values] nowiki*</nowiki>/",
    "params": "<number> <number> <number> <number> <number> <number> <number> <number>",
    "returns": "array | array | number"
  },
  "matrixMultiply": {
    "command": "matrixMultiply",
    "timestamp": "2021-01-23T09:59:25Z",
    "version": "1.92",
    "syntax": "<array> matrixMultiply <array>",
    "docSyntax": "matrix1 matrixMultiply matrix2",
    "tags": "",
    "description": "Returns resulting matrix from the WikipediaMatrix_multiplicationmultiplication of two matrices. First matrix must be of the size n ✕ 'k', while the second must be of the size 'k' ✕ m, i.e columns matrix1 nowiki==</nowiki> rows matrix2. The resulting matrix will be of the size n ✕ m. If the shapes do not match, empty array [] will be returned.brbr 600px",
    "example": "[ [2], [2] ] matrixMultiply [ [3] ] /* returns [ [6], [6] ] */",
    "params": "<array> <array>",
    "returns": "array"
  },
  "matrixTranspose": {
    "command": "matrixTranspose",
    "timestamp": "2021-01-23T10:00:50Z",
    "version": "1.92",
    "syntax": "<array>Transpose matrix",
    "docSyntax": "matrixTranspose matrix",
    "tags": "",
    "description": "thumb|Matrix transposition Returns WikipediaTransposetransposed version of the given matrix. The matrix is an Array of rows. Each row is an Array of corresponding column values for the row. The minimum number of rows is 1.",
    "example": "matrixTranspose [ [1,2,3], [3,1,2], [2,3,1] ]; codecomment/* returns [ [1,3,2], [2,1,3], [3,2,1] ] */",
    "params": "<array>",
    "returns": "array"
  },
  "missileTarget": {
    "command": "missileTarget",
    "timestamp": "2021-01-23T10:10:31Z",
    "version": "1.92",
    "syntax": "missileTarget <object>",
    "docSyntax": "missileTarget munition",
    "tags": "",
    "description": "Returns a guided missile's target.",
    "example": "missileTarget missile1;",
    "params": "<object>",
    "returns": "object"
  },
  "missileTargetPos": {
    "command": "missileTargetPos",
    "timestamp": "2021-01-23T10:08:27Z",
    "version": "1.92",
    "syntax": "missileTargetPos <object>",
    "docSyntax": "missileTargetPos munition",
    "tags": "",
    "description": "Returns a guided missile's target position.",
    "example": "_pos = missileTargetPos missile1;",
    "params": "<object>",
    "returns": "positionasl"
  },
  "setBehaviourStrong": {
    "command": "setBehaviourStrong",
    "timestamp": "2021-01-23T20:19:27Z",
    "version": "1.92",
    "syntax": "<group> setBehaviourStrong <string>",
    "docSyntax": "groupName setBehaviourStrong behaviour",
    "tags": "[AL] [EG]",
    "description": "Sets individual unit behaviour on every unit in a group and additionally tries to force this behaviour to the unit's group. Alternatively see setCombatBehaviour. Feature Informative See <AI Behaviour> for details of the effect of this command on AI units.",
    "example": "_group1 setBehaviourStrong \"SAFE\";",
    "params": "<group> <string>",
    "returns": "nothing"
  },
  "setMissileTarget": {
    "command": "setMissileTarget",
    "timestamp": "2021-01-23T20:35:03Z",
    "version": "1.92",
    "syntax": "<object> setMissileTarget <object>",
    "docSyntax": "munition setMissileTarget target",
    "tags": "",
    "description": "Sets a guided missile target. Doesn't work for all types of missiles. If target is dead, target is ignored. The target has to be inside configured missile targeting cone for command to work.",
    "example": "missile1 setMissileTarget tank1;",
    "params": "<object> <object>",
    "returns": "boolean | true"
  },
  "setMissileTargetPos": {
    "command": "setMissileTargetPos",
    "timestamp": "2021-01-23T20:23:13Z",
    "version": "1.92",
    "syntax": "<object> setMissileTargetPos positionagl",
    "docSyntax": "munition setMissileTargetPos position",
    "tags": "",
    "description": "Sets a guided munition target position. The munition must have icmanualControl config to use this command. The target position has to be inside configured missile targeting cone for command to work.",
    "example": "missile1 setMissileTargetPos unitAimPosition tank1;",
    "params": "<object> positionagl",
    "returns": "nothing"
  },
  "triggerAmmo": {
    "command": "triggerAmmo",
    "timestamp": "2021-01-24T00:02:45Z",
    "version": "1.92",
    "syntax": "triggerAmmo <object>",
    "docSyntax": "triggerAmmo munition",
    "tags": "[AL]",
    "description": "Triggers a munition such as shells, bullets, missiles, rockets and bombs (''shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket'') as if it did hit. If ammo uses submunition, then creation of submunition will be triggered.",
    "example": "triggerAmmo bomb1",
    "params": "<object>",
    "returns": "nothing"
  },
  "vectorLinearConversion": {
    "command": "vectorLinearConversion",
    "timestamp": "2021-01-24T10:45:25Z",
    "version": "1.92",
    "syntax": "vectorLinearConversion [<number>, <number>, <number>, <array>, <array>, <boolean>]",
    "docSyntax": "vectorLinearConversion [rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]",
    "tags": "",
    "description": "Interpolates vector between the given ''vectorFrom'' and ''vectorTo'' value according to the given range value.",
    "example": "vectorLinearConversion [0, 1, 0.5, [0,0,0], [25,50,100], false]; cc[12.5,25,50]",
    "params": "<number> <number> <number> <array> <array> <boolean>",
    "returns": "array"
  },
  "addWeaponWithAttachmentsCargo": {
    "command": "addWeaponWithAttachmentsCargo",
    "timestamp": "2021-01-22T21:43:18Z",
    "version": "1.94",
    "syntax": "<object> addWeaponWithAttachmentsCargo [cfgweapons, <number>]",
    "docSyntax": "container addWeaponWithAttachmentsCargo [weaponConfiguration, weaponsCount]",
    "tags": "[AG] [EL]",
    "description": "Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.",
    "example": "cursorObject addWeaponWithAttachmentsCargo [nowiki[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2]; ",
    "params": "<object> cfgweapons <number>",
    "returns": "nothing"
  },
  "addWeaponWithAttachmentsCargoGlobal": {
    "command": "addWeaponWithAttachmentsCargoGlobal",
    "timestamp": "2021-01-22T21:44:47Z",
    "version": "1.94",
    "syntax": "<object> addWeaponWithAttachmentsCargoGlobal [cfgweapons, <number>]",
    "docSyntax": "container addWeaponWithAttachmentsCargoGlobal [weaponConfiguration, weaponsCount]",
    "tags": "[AG] [EG]",
    "description": "Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.",
    "example": "cursorObject addWeaponWithAttachmentsCargoGlobal [nowiki[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2]; ",
    "params": "<object> cfgweapons <number>",
    "returns": "nothing"
  },
  "BIN_fnc_addButtonEvents": {
    "command": "BIN_fnc_addButtonEvents",
    "timestamp": "2021-02-01T16:38:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addButtonEvents -->",
    "docSyntax": "<!-- [] call BIN_fnc_addButtonEvents -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIN_fnc_addButtonEvents;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addDangerZone": {
    "command": "BIN_fnc_addDangerZone",
    "timestamp": "2021-02-01T16:37:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addDangerZone -->",
    "docSyntax": "<!-- [] call BIN_fnc_addDangerZone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addDangerZone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addEntitiesToArea": {
    "command": "BIN_fnc_addEntitiesToArea",
    "timestamp": "2021-02-01T16:35:33Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addEntitiesToArea -->",
    "docSyntax": "<!-- [] call BIN_fnc_addEntitiesToArea -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addEntitiesToArea;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addFaradayCage": {
    "command": "BIN_fnc_addFaradayCage",
    "timestamp": "2021-02-01T16:42:10Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addFaradayCage -->",
    "docSyntax": "<!-- [] call BIN_fnc_addFaradayCage -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addFaradayCage;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addIDWMapMeasurementPoint": {
    "command": "BIN_fnc_addIDWMapMeasurementPoint",
    "timestamp": "2021-02-01T16:44:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addIDWMapMeasurementPoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_addIDWMapMeasurementPoint -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Adds measurement point to IDWMap Parameter(s): ARRAY (Optional) - position in format [x,y] or [x,y,z] in which case z is ignored. \nDefault: position player \nReturns: NUMBER 0 ... 1 - strength at given coordinates -1 - point is out of bounds -999 - error \nExample: call BIN_fnc_addIDWMapMeasurementPoint [x,y] call BIN_fnc_addIDWMapMeasurementPoint [x,y,z] call BIN_fnc_addIDWMapMeasurementPoint",
    "example": "[] call BIN_fnc_addIDWMapMeasurementPoint;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addObjectsToArea": {
    "command": "BIN_fnc_addObjectsToArea",
    "timestamp": "2021-02-01T16:46:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addObjectsToArea -->",
    "docSyntax": "<!-- [] call BIN_fnc_addObjectsToArea -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Adds given array of objects to area, ovewriting previous objects data stored for the area in extension Parameter(s): \n0: STRING - area name \n1: ARRAY - array of objects to add \nReturns: NUMBER - number of objects added \nExample: [\"myArea\", [obj1,ob2,...]] call BIN_fnc_addObjectsToArea",
    "example": "[] call BIN_fnc_addObjectsToArea;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addRecordedSignal": {
    "command": "BIN_fnc_addRecordedSignal",
    "timestamp": "2021-01-22T21:27:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addRecordedSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_addRecordedSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addRecordedSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addRotation": {
    "command": "BIN_fnc_addRotation",
    "timestamp": "2021-02-01T16:37:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addRotation -->",
    "docSyntax": "<!-- [] call BIN_fnc_addRotation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addRotation;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addSignal": {
    "command": "BIN_fnc_addSignal",
    "timestamp": "2021-02-01T16:44:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_addSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addSiteEntities": {
    "command": "BIN_fnc_addSiteEntities",
    "timestamp": "2021-01-22T21:28:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addSiteEntities -->",
    "docSyntax": "<!-- [] call BIN_fnc_addSiteEntities -->",
    "tags": "",
    "description": "\nDescription: Register entities to a site, so they can be despawned with the rest when player leaves the area. Parameter(s): \n0: OBJECT - site logic. The site must be spawned for the function to work. \n1: ARRAY - entities to be added. Types can be mixed, the system will sort them out itself. \nReturns: BOOL - true if added */ #define ADD(ID)\\ (_entities select ID) pushback _x;\\ (_entityIDs select ID) pushback -1;",
    "example": "[] call BIN_fnc_addSiteEntities;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addTranslation": {
    "command": "BIN_fnc_addTranslation",
    "timestamp": "2021-02-01T16:46:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addTranslation -->",
    "docSyntax": "<!-- [] call BIN_fnc_addTranslation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addTranslation;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_addTravelPoint": {
    "command": "BIN_fnc_addTravelPoint",
    "timestamp": "2021-02-01T16:46:56Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_addTravelPoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_addTravelPoint -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_addTravelPoint;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_allIDWMapMeasurementPoints": {
    "command": "BIN_fnc_allIDWMapMeasurementPoints",
    "timestamp": "2021-01-22T21:31:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_allIDWMapMeasurementPoints -->",
    "docSyntax": "<!-- [] call BIN_fnc_allIDWMapMeasurementPoints -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Retrieves user measurements data with strengths Parameter(s): NONE \nReturns: ARRAY - user measurements in format [x,y,strength] or empty array [] on error \nExample: call BIN_fnc_getAllMeasurementPoints",
    "example": "[] call BIN_fnc_allIDWMapMeasurementPoints;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_allowAntennaReveal": {
    "command": "BIN_fnc_allowAntennaReveal",
    "timestamp": "2021-02-01T16:47:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_allowAntennaReveal -->",
    "docSyntax": "<!-- [] call BIN_fnc_allowAntennaReveal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_allowAntennaReveal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_allowedAntennaReveal": {
    "command": "BIN_fnc_allowedAntennaReveal",
    "timestamp": "2021-01-22T21:26:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_allowedAntennaReveal -->",
    "docSyntax": "<!-- [] call BIN_fnc_allowedAntennaReveal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_allowedAntennaReveal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_animateSmooth": {
    "command": "BIN_fnc_animateSmooth",
    "timestamp": "2021-02-01T16:45:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_animateSmooth -->",
    "docSyntax": "<!-- [] call BIN_fnc_animateSmooth -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_animateSmooth;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_assignAntenna": {
    "command": "BIN_fnc_assignAntenna",
    "timestamp": "2021-01-22T21:26:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_assignAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_assignAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_assignAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_assignedAntenna": {
    "command": "BIN_fnc_assignedAntenna",
    "timestamp": "2021-01-22T21:34:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_assignedAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_assignedAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_assignedAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_attachChemlight": {
    "command": "BIN_fnc_attachChemlight",
    "timestamp": "2021-01-22T21:34:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_attachChemlight -->",
    "docSyntax": "<!-- [] call BIN_fnc_attachChemlight -->",
    "tags": "",
    "description": "pre#define VAR_LIGHT \"BIN_fnc_attachChemlight_light\" #define VAR_KILLED \"BIN_fnc_attachChemlight_killed\"",
    "example": "[] call BIN_fnc_attachChemlight;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bakeAntenna": {
    "command": "BIN_fnc_bakeAntenna",
    "timestamp": "2021-02-01T16:35:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bakeAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_bakeAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_bakeAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_behaviorInit": {
    "command": "BIN_fnc_behaviorInit",
    "timestamp": "2021-02-01T16:37:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_behaviorInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_behaviorInit -->",
    "tags": "",
    "description": "pre#define HISTORY_CAPACITY 5 #define HIT_DELAY 5 #define SIZE_COEF 3",
    "example": "[] call BIN_fnc_behaviorInit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezier": {
    "command": "BIN_fnc_bezier",
    "timestamp": "2021-02-01T16:40:21Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezier -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezier -->",
    "tags": "",
    "description": "\nDescription: Calculate bezier curve Parameter(s): \n0: ARRAY - list of control points in format [x,y,z], can be any number of them \n1: NUMBER - progress in range 0 to 1 \nReturns: ARRAY - position curve in format [x,y,z] */ #define NEW #ifdef NEW",
    "example": "[] call BIN_fnc_bezier;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezierAverage": {
    "command": "BIN_fnc_bezierAverage",
    "timestamp": "2021-01-22T21:36:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezierAverage -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezierAverage -->",
    "tags": "",
    "description": "pre#define STEPS 101",
    "example": "[] call BIN_fnc_bezierAverage;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezierBoundingBox": {
    "command": "BIN_fnc_bezierBoundingBox",
    "timestamp": "2021-02-01T16:45:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezierBoundingBox -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezierBoundingBox -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_bezierBoundingBox;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezierEditor": {
    "command": "BIN_fnc_bezierEditor",
    "timestamp": "2021-02-01T16:39:28Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezierEditor -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezierEditor -->",
    "tags": "",
    "description": "pre#define POINT_W (0.03) #define POINT_H (POINT_W / 0.75) #define RESOLUTION 50 #define MAX_POINTS 16 #define GRIDS 10 #define REFRESH ([_ctrlParent] call (_ctrlArea getvariable \"fnc_draw\")) #define POINTS (_ctrlArea getvariable \"points\") #define LINES (_ctrlArea getvariable \"lines\") #define CURVE (_ctrlArea getvariable \"curve\") #define BUTTONS (_ctrlArea getvariable \"buttons\") #define HOVER (_ctrlArea getvariable \"hover\") #define SELECTED (_ctrlArea getvariable \"selected\") #define SET_HOVER(CTRL) _ctrlArea setvariable [\"hover\",CTRL]; CTRL ctrlsettextcolor COLOR_SELECTED #define SET_SELECTED(CTRL) _ctrlArea setvariable [\"selected\",CTRL] #define COLOR_BACKGROUND [0.4,0.4,0.4,1] #define COLOR [0,0,0,1] #define COLOR_SELECTED [1,1,1,1] #define COLOR_CURVE [1,0,0,1] #define COLOR_LINE [0,0,0,0.2] #define COLOR_TIMELINE [1,1,1,1] #define COLOR_GRID [1,1,1,0.3] #define POINT_POS [\\ (_posX - POINT_W / 2) max 0 min ((ctrlposition _ctrlArea select 2) - POINT_W),\\ (_posY - POINT_H / 2) max 0 min ((ctrlposition _ctrlArea select 3) - POINT_H),\\ POINT_W,\\ POINT_H\\ ]",
    "example": "[] call BIN_fnc_bezierEditor;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezierNormalize": {
    "command": "BIN_fnc_bezierNormalize",
    "timestamp": "2021-02-01T16:35:22Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezierNormalize -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezierNormalize -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_bezierNormalize;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_bezierVelocity": {
    "command": "BIN_fnc_bezierVelocity",
    "timestamp": "2021-01-22T21:31:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_bezierVelocity -->",
    "docSyntax": "<!-- [] call BIN_fnc_bezierVelocity -->",
    "tags": "",
    "description": "\nDescription: Calculate bezier curve velocity Parameter(s): \n0: ARRAY - list of control points in format [x,y,z], can be any number of them \n1: NUMBER - progress in range 0 to 1 \nReturns: ARRAY - velocity vector in format [x,y,z]",
    "example": "[] call BIN_fnc_bezierVelocity;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_breatheInit": {
    "command": "BIN_fnc_breatheInit",
    "timestamp": "2021-02-01T16:37:01Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_breatheInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_breatheInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_breatheInit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_calculateLinkBudget": {
    "command": "BIN_fnc_calculateLinkBudget",
    "timestamp": "2021-02-01T16:43:49Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_calculateLinkBudget -->",
    "docSyntax": "<!-- [] call BIN_fnc_calculateLinkBudget -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_calculateLinkBudget;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_calculateSpectrumAnalyzerValues": {
    "command": "BIN_fnc_calculateSpectrumAnalyzerValues",
    "timestamp": "2021-02-01T16:42:22Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_calculateSpectrumAnalyzerValues -->",
    "docSyntax": "<!-- [] call BIN_fnc_calculateSpectrumAnalyzerValues -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_calculateSpectrumAnalyzerValues;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_callButtonEvent": {
    "command": "BIN_fnc_callButtonEvent",
    "timestamp": "2021-02-01T16:46:02Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_callButtonEvent -->",
    "docSyntax": "<!-- [] call BIN_fnc_callButtonEvent -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_callButtonEvent;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_cargoPlatform_01_adjust": {
    "command": "BIN_fnc_cargoPlatform_01_adjust",
    "timestamp": "2021-02-01T16:38:06Z",
    "version": "1.94",
    "syntax": "[<object>] call BIN_fnc_cargoPlatform_01_adjust",
    "docSyntax": "[object] call BIN_fnc_cargoPlatform_01_adjust",
    "tags": "",
    "description": "Adjust Military Cargo Platform legs length in <Eden Editor>.",
    "example": "platform call BIN_fnc_cargoPlatform_01_adjust;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIN_fnc_cargoPlatform_01_destruction": {
    "command": "BIN_fnc_cargoPlatform_01_destruction",
    "timestamp": "2021-01-22T21:45:36Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_cargoPlatform_01_destruction; -->",
    "docSyntax": "<!-- [] call BIN_fnc_cargoPlatform_01_destruction; -->",
    "tags": "",
    "description": "BIN_fnc_CargoPlatform_01_destruction Apply texture & materials of parent object to ruins. Function is attached to killed event handler.",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_cargoPlatform_01_update": {
    "command": "BIN_fnc_cargoPlatform_01_update",
    "timestamp": "2021-02-01T16:42:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_cargoPlatform_01_update; -->",
    "docSyntax": "<!-- [] call BIN_fnc_cargoPlatform_01_update; -->",
    "tags": "",
    "description": "BIN_fnc_cargoPlatform_01_update Update cargo platform position",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNCharacterAdd": {
    "command": "BIN_fnc_CBRNCharacterAdd",
    "timestamp": "2021-01-22T21:41:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNCharacterAdd -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNCharacterAdd -->",
    "tags": "",
    "description": "\nDescription: Enables CBRN systems on a specific character entity. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - character entity to enable CBRN systems on \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNCharacterAdd;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNContaminantAdd": {
    "command": "BIN_fnc_CBRNContaminantAdd",
    "timestamp": "2021-01-22T21:44:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNContaminantAdd -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNContaminantAdd -->",
    "tags": "",
    "description": "\nDescription: Registers a CBRN contaminant. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - trigger representing a CBRN contaminated area OBJECT - entity representing an active CBRN contaminant \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNContaminantAdd;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNContaminantRemove": {
    "command": "BIN_fnc_CBRNContaminantRemove",
    "timestamp": "2021-02-01T16:35:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNContaminantRemove -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNContaminantRemove -->",
    "tags": "",
    "description": "\nDescription: Unregisters a CBRN contaminant. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - trigger representing a CBRN contaminated area \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNContaminantRemove;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNGearActivate": {
    "command": "BIN_fnc_CBRNGearActivate",
    "timestamp": "2021-02-01T16:48:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNGearActivate -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNGearActivate -->",
    "tags": "",
    "description": "\nDescription: Activates a specific piece of CBRN gear for a character entity. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - character entity to activate CBRN gear for \n1: STRING - CBRN gear class name to activate \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNGearActivate;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNGearDeactivate": {
    "command": "BIN_fnc_CBRNGearDeactivate",
    "timestamp": "2021-01-22T21:29:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNGearDeactivate -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNGearDeactivate -->",
    "tags": "",
    "description": "\nDescription: Deactivates a specific piece of CBRN gear for a character entity. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - character entity to deactivate CBRN gear for \n1: STRING - CBRN gear class name to deactivate \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNGearDeactivate;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNGearUpdate": {
    "command": "BIN_fnc_CBRNGearUpdate",
    "timestamp": "2021-02-01T16:42:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNGearUpdate -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNGearUpdate -->",
    "tags": "",
    "description": "\nDescription: Processes CBRN gear updates on a specific character entity. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - character entity to process CBRN gear for \n1: STRING - CBRN gear class name to process \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNGearUpdate;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_CBRNHoseInit": {
    "command": "BIN_fnc_CBRNHoseInit",
    "timestamp": "2021-02-01T16:42:37Z",
    "version": "1.94",
    "syntax": "[<object>] call BIN_fnc_CBRNHoseInit;",
    "docSyntax": "[unit] call BIN_fnc_CBRNHoseInit;",
    "tags": "[AL] [EL]",
    "description": "Initializes CBRN Hose for given unit.",
    "example": "player call BIN_fnc_CBRNHoseInit;",
    "params": "<object>",
    "returns": "nothing"
  },
  "BIN_fnc_CBRNInContaminant": {
    "command": "BIN_fnc_CBRNInContaminant",
    "timestamp": "2021-02-01T16:41:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_CBRNInContaminant -->",
    "docSyntax": "<!-- [] call BIN_fnc_CBRNInContaminant -->",
    "tags": "",
    "description": "\nDescription: Returns whether or not a character entity is within a CBRN contaminated area. \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \n0: OBJECT - character entity to test for \nReturns: BOOL",
    "example": "[] call BIN_fnc_CBRNInContaminant;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_circleSmokeMissile": {
    "command": "BIN_fnc_circleSmokeMissile",
    "timestamp": "2021-02-01T16:36:13Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_circleSmokeMissile -->",
    "docSyntax": "<!-- [] call BIN_fnc_circleSmokeMissile -->",
    "tags": "",
    "description": "BIN_fnc_circleSmokeMissile",
    "example": "[] call BIN_fnc_circleSmokeMissile;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_clearIDWMap": {
    "command": "BIN_fnc_clearIDWMap",
    "timestamp": "2021-02-01T16:38:25Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_clearIDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_clearIDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Clears IDWMap on the main map Parameter(s): NONE \nReturns: BOOL - true if EH existed and was removed \nExample: call BIN_fnc_clearIDWMap",
    "example": "[] call BIN_fnc_clearIDWMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_clearTXScan": {
    "command": "BIN_fnc_clearTXScan",
    "timestamp": "2021-02-01T16:37:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_clearTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_clearTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Clears TXScan drawing Parameter(s): \n0: STRING - scan name, \"\" - all scans \nReturns: BOOL - false if error occured \nExample: \"MyScan\" call BIN_fnc_clearTXScan \"\" call BIN_fnc_clearTXScan - all scans",
    "example": "[] call BIN_fnc_clearTXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_colorHSLtoRGB": {
    "command": "BIN_fnc_colorHSLtoRGB",
    "timestamp": "2021-01-22T21:31:58Z",
    "version": "1.94",
    "syntax": "[<number>, <number>, <number>] call BIN_fnc_colorHSLtoRGB",
    "docSyntax": "[hue, saturation, lightness] call BIN_fnc_colorHSLtoRGB",
    "tags": "",
    "description": "Converts WikipediaHSL and HSVHSL colour format to RGB. Featurearma3contact",
    "example": "private _rgb = [0, 100, 50] call BIN_fnc_colorHSLtoRGB;",
    "params": "<number> <number> <number>",
    "returns": "array | number"
  },
  "BIN_fnc_crearAllData": {
    "command": "BIN_fnc_crearAllData",
    "timestamp": "2021-02-01T16:39:12Z",
    "version": "1.94",
    "syntax": "[] call BIN_fnc_crearAllData",
    "docSyntax": "[] call BIN_fnc_crearAllData",
    "tags": "",
    "description": "This function contains no code. Featurearma3contact",
    "example": "[] call BIN_fnc_crearAllData;",
    "params": "",
    "returns": "-"
  },
  "BIN_fnc_createScriptedSoundSource": {
    "command": "BIN_fnc_createScriptedSoundSource",
    "timestamp": "2021-02-01T16:46:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_createScriptedSoundSource -->",
    "docSyntax": "<!-- [] call BIN_fnc_createScriptedSoundSource -->",
    "tags": "",
    "description": "",
    "example": "[] call BIN_fnc_createScriptedSoundSource;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_createScriptedSoundSourceVehicle": {
    "command": "BIN_fnc_createScriptedSoundSourceVehicle",
    "timestamp": "2021-01-22T21:40:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_createScriptedSoundSourceVehicle -->",
    "docSyntax": "<!-- [] call BIN_fnc_createScriptedSoundSourceVehicle -->",
    "tags": "",
    "description": "",
    "example": "[] call BIN_fnc_createScriptedSoundSourceVehicle;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_createTXScan": {
    "command": "BIN_fnc_createTXScan",
    "timestamp": "2021-02-01T16:38:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_createTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_createTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Creates a scan with the name defined as class in CfgTXScans or from given params. If name doesn't exists in config and params are not provided, default scan is created which could be tweaked later Parameter(s): \n0: STRING - \"\" create every scan from config or \n0: STRING - scan name \n1: ARRAY (Optional) - TX position \n2: NUMBER (Optional) - scan angle \n3: NUMBER (Optional) - scan precision \n4: ARRAY (Optional) - scan polygon \nReturns: BOOL - false on error \nExamples: \"MyScan\" call BIN_fnc_createTXScan \"\" call BIN_fnc_createTXScan - creates every scan from config [\"MyScan\", [1,2,3], 20, 0.1] call BIN_fnc_createTXScan - creates every scan from config",
    "example": "[] call BIN_fnc_createTXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_cropTXScan": {
    "command": "BIN_fnc_cropTXScan",
    "timestamp": "2021-02-01T16:35:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_cropTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_cropTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Crops given scan Parameter(s): \n0: STRING - scan name \n1: NUMBER - crop rectangle center X \n2: NUMBER - crop rectangle center Y \n3: NUMBER - crop rectangle center W \n4: NUMBER - crop rectangle center H \nReturns: ARRAY - crop rectangle corners \nExample: [\"MyScan\", 100, 100, 1000, 500] call BIN_fnc_cropTXScan",
    "example": "[] call BIN_fnc_cropTXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_curatorInit": {
    "command": "BIN_fnc_curatorInit",
    "timestamp": "2021-01-22T21:34:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_curatorInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_curatorInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_curatorInit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_debugDraw": {
    "command": "BIN_fnc_debugDraw",
    "timestamp": "2021-02-01T16:38:02Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_debugDraw -->",
    "docSyntax": "<!-- [] call BIN_fnc_debugDraw -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_debugDraw;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_debugDrawMapInit": {
    "command": "BIN_fnc_debugDrawMapInit",
    "timestamp": "2021-02-01T16:37:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_debugDrawMapInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_debugDrawMapInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_debugDrawMapInit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_debugQuests": {
    "command": "BIN_fnc_debugQuests",
    "timestamp": "2021-01-22T21:41:49Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_debugQuests -->",
    "docSyntax": "<!-- [] call BIN_fnc_debugQuests -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_debugQuests;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_debugText": {
    "command": "BIN_fnc_debugText",
    "timestamp": "2021-02-01T16:43:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_debugText -->",
    "docSyntax": "<!-- [] call BIN_fnc_debugText -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_debugText;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerAnim": {
    "command": "BIN_fnc_deconShowerAnim",
    "timestamp": "2021-02-01T16:35:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerAnim -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerAnim -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerAnim",
    "example": "[] call BIN_fnc_deconShowerAnim;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerAnimLarge": {
    "command": "BIN_fnc_deconShowerAnimLarge",
    "timestamp": "2021-02-01T16:44:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerAnimLarge -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerAnimLarge -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerAnimLarge",
    "example": "[] call BIN_fnc_deconShowerAnimLarge;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerAnimStop": {
    "command": "BIN_fnc_deconShowerAnimStop",
    "timestamp": "2021-02-01T16:38:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerAnimStop -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerAnimStop -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerAnimStop Delete all sound sources attachted to decon shower in case it is destroyed or deleted",
    "example": "[] call BIN_fnc_deconShowerAnimStop;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerCollision": {
    "command": "BIN_fnc_deconShowerCollision",
    "timestamp": "2021-02-01T16:40:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerCollision -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerCollision -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerCollision",
    "example": "[] call BIN_fnc_deconShowerCollision;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerDelete": {
    "command": "BIN_fnc_deconShowerDelete",
    "timestamp": "2021-02-01T16:36:25Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerDelete -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerDelete -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerDelete Delete all sound sources attachted to decon shower in case it is destroyed or deleted",
    "example": "[] call BIN_fnc_deconShowerDelete;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deconShowerMove": {
    "command": "BIN_fnc_deconShowerMove",
    "timestamp": "2021-01-22T21:42:24Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deconShowerMove -->",
    "docSyntax": "<!-- [] call BIN_fnc_deconShowerMove -->",
    "tags": "",
    "description": "BIN_fnc_deconShowerMove",
    "example": "[] call BIN_fnc_deconShowerMove;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteAntenna": {
    "command": "BIN_fnc_deleteAntenna",
    "timestamp": "2021-02-01T16:43:56Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteDangerZone": {
    "command": "BIN_fnc_deleteDangerZone",
    "timestamp": "2021-01-22T21:40:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteDangerZone -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteDangerZone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteDangerZone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteDiaryRecord": {
    "command": "BIN_fnc_deleteDiaryRecord",
    "timestamp": "2021-02-01T16:45:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteDiaryRecord -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteDiaryRecord -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteDiaryRecord;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteFaradayCage": {
    "command": "BIN_fnc_deleteFaradayCage",
    "timestamp": "2021-01-22T21:43:25Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteFaradayCage -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteFaradayCage -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteFaradayCage;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteLoopedRadioSignal": {
    "command": "BIN_fnc_deleteLoopedRadioSignal",
    "timestamp": "2021-02-01T16:35:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteLoopedRadioSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteLoopedRadioSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteLoopedRadioSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteSignal": {
    "command": "BIN_fnc_deleteSignal",
    "timestamp": "2021-01-22T21:24:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteSpectrumAnalyzer": {
    "command": "BIN_fnc_deleteSpectrumAnalyzer",
    "timestamp": "2021-01-22T21:30:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteSpectrumAnalyzer -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteSpectrumAnalyzer -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteSpectrumAnalyzer;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteTravelPoint": {
    "command": "BIN_fnc_deleteTravelPoint",
    "timestamp": "2021-02-01T16:51:11Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteTravelPoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteTravelPoint -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_deleteTravelPoint;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_deleteTXScan": {
    "command": "BIN_fnc_deleteTXScan",
    "timestamp": "2021-02-01T16:37:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_deleteTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_deleteTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Deletes scan with given name from extension and the map Parameter(s): \n0: STRING - TXScan name \nReturns: BOOL - false on error \nExample: \"MyScan\" call BIN_fnc_deleteTXScan",
    "example": "[] call BIN_fnc_deleteTXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_addAllSpectrumAnalyzers": {
    "command": "BIN_fnc_diag_addAllSpectrumAnalyzers",
    "timestamp": "2021-02-01T16:41:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_addAllSpectrumAnalyzers -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_addAllSpectrumAnalyzers -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_diag_addAllSpectrumAnalyzers;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_drawAllAreaObjectsBounds": {
    "command": "BIN_fnc_diag_drawAllAreaObjectsBounds",
    "timestamp": "2021-01-22T21:27:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_drawAllAreaObjectsBounds -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_drawAllAreaObjectsBounds -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Draws all area objects bounds Parameter(s): \n0: STRING - area name \nReturns: NUMBER - event handler id \nExample: \"MyArea\" call BIN_fnc_diag_drawAllAreaObjectsBounds",
    "example": "[] call BIN_fnc_diag_drawAllAreaObjectsBounds;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_getAllAreaEntities": {
    "command": "BIN_fnc_diag_getAllAreaEntities",
    "timestamp": "2021-02-01T16:48:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_getAllAreaEntities -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_getAllAreaEntities -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_diag_getAllAreaEntities;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_getAllAreaObjects": {
    "command": "BIN_fnc_diag_getAllAreaObjects",
    "timestamp": "2021-02-01T18:23:35Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_getAllAreaObjects -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_getAllAreaObjects -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns stored area objects for diagnostics Parameter(s): \n0: STRING - area name \n1: NUMBER - multipart number \nReturns: ARRAY of arays in format [[posX,posY,posMinZ,posMaxZ,radius],...] \nExample: \"MyArea\" call BIN_fnc_diag_getAllAreaObjects",
    "example": "[] call BIN_fnc_diag_getAllAreaObjects;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_IDWMap": {
    "command": "BIN_fnc_diag_IDWMap",
    "timestamp": "2021-01-22T21:41:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_IDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_IDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Adds user action menu to the player with different IDWMap diag options Parameter(s): \n0: STRING - command \n1: BOOL (Optional) - extended option \nReturns: NOTHING \nExample: call BIN_fnc_diag_IDWMap",
    "example": "[] call BIN_fnc_diag_IDWMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_logAntenna": {
    "command": "BIN_fnc_diag_logAntenna",
    "timestamp": "2021-02-01T16:43:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_logAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_logAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_diag_logAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_revealAllAntennas": {
    "command": "BIN_fnc_diag_revealAllAntennas",
    "timestamp": "2021-02-01T16:51:46Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_revealAllAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_revealAllAntennas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_diag_revealAllAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_showLinkBudgetMap": {
    "command": "BIN_fnc_diag_showLinkBudgetMap",
    "timestamp": "2021-02-01T16:38:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_showLinkBudgetMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_showLinkBudgetMap -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_diag_showLinkBudgetMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_diag_TXScan": {
    "command": "BIN_fnc_diag_TXScan",
    "timestamp": "2021-02-01T16:35:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_diag_TXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_diag_TXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Adds user action menu to the player with different TXScan diag options Parameter(s): \n0: STRING - command \nReturns: NOTHING \nExample: call BIN_fnc_diag_TXScan",
    "example": "[] call BIN_fnc_diag_TXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_distanceToAreaBorder": {
    "command": "BIN_fnc_distanceToAreaBorder",
    "timestamp": "2021-01-22T21:32:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_distanceToAreaBorder -->",
    "docSyntax": "<!-- [] call BIN_fnc_distanceToAreaBorder -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_distanceToAreaBorder;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_dockModule": {
    "command": "BIN_fnc_dockModule",
    "timestamp": "2021-02-01T16:38:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_dockModule -->",
    "docSyntax": "<!-- [] call BIN_fnc_dockModule -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_dockModule;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawAntennas": {
    "command": "BIN_fnc_drawAntennas",
    "timestamp": "2021-01-22T21:27:36Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawAntennas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_drawAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawIconFixed": {
    "command": "BIN_fnc_drawIconFixed",
    "timestamp": "2021-02-01T16:51:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawIconFixed -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawIconFixed -->",
    "tags": "",
    "description": "\nDescription: Set fixed size marker to be drawn in main map Parameter(s): \n0: STRING - unique marker ID \n1: ARRAY - marker parameters in format used by drawIcon command BOOL - delete the marker \nReturns: BOOL - true if successful",
    "example": "[] call BIN_fnc_drawIconFixed;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawIDWMap": {
    "command": "BIN_fnc_drawIDWMap",
    "timestamp": "2021-01-22T21:29:36Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawIDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawIDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Draws IDWMap on the main map Parameter(s): NONE \nReturns: BOOL - true on success \nExample: call BIN_fnc_drawIDWMap",
    "example": "[] call BIN_fnc_drawIDWMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawMap": {
    "command": "BIN_fnc_drawMap",
    "timestamp": "2021-02-01T16:44:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawMap -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_drawMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawProbeMap": {
    "command": "BIN_fnc_drawProbeMap",
    "timestamp": "2021-02-01T16:40:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawProbeMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawProbeMap -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_drawProbeMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawSpectrum": {
    "command": "BIN_fnc_drawSpectrum",
    "timestamp": "2021-01-22T21:44:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawSpectrum -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawSpectrum -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_drawSpectrum;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawTooltip": {
    "command": "BIN_fnc_drawTooltip",
    "timestamp": "2021-02-01T16:41:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawTooltip -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawTooltip -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_drawTooltip;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_drawTXScan": {
    "command": "BIN_fnc_drawTXScan",
    "timestamp": "2021-01-22T21:38:36Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_drawTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_drawTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Draws TXScan with given name Parameter(s): STRING - scan name or \"\" to draw all scans \nReturns: BOOL - true on success \nExample: \"MyScan\" call BIN_fnc_drawTXScan \"\" call BIN_fnc_drawTXScan - draw all scans",
    "example": "[] call BIN_fnc_drawTXScan;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_droneDestructionFX": {
    "command": "BIN_fnc_droneDestructionFX",
    "timestamp": "2021-02-01T16:37:33Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_droneDestructionFX -->",
    "docSyntax": "<!-- [] call BIN_fnc_droneDestructionFX -->",
    "tags": "",
    "description": "BIN_fnc_droneDestructionFX",
    "example": "[] call BIN_fnc_droneDestructionFX;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_droneModuleDestruction": {
    "command": "BIN_fnc_droneModuleDestruction",
    "timestamp": "2021-02-01T16:45:28Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_droneModuleDestruction -->",
    "docSyntax": "<!-- [] call BIN_fnc_droneModuleDestruction -->",
    "tags": "",
    "description": "BIN_fnc_droneModuleDestruction Alien Module destruction",
    "example": "[] call BIN_fnc_droneModuleDestruction;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_editMoveProperties": {
    "command": "BIN_fnc_editMoveProperties",
    "timestamp": "2021-02-01T16:50:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_editMoveProperties -->",
    "docSyntax": "<!-- [] call BIN_fnc_editMoveProperties -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_editMoveProperties;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_empVehicle": {
    "command": "BIN_fnc_empVehicle",
    "timestamp": "2021-02-01T16:35:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_empVehicle -->",
    "docSyntax": "<!-- [] call BIN_fnc_empVehicle -->",
    "tags": "",
    "description": "\nDescription: Sets EMP parameters to a vehicle. Destroys lights and optionally prevents vehicle from starting Parameter(s): \n0: OBJECT - Vehicle that will get destroyed electronics \n1: (Optional): BOOL - Sets engine destroyed - true = engine destroyed, false = engine operating (\ndefault: true) \n2: (Optional): BOOL - Handle AI in EMP vehicle - true = AI will exit vehicle and not enter new vehicles, false = AI will remain in vehicle (\ndefault: true) Note that the player has to be defined as bin_player for the voice lines to be spoken \nExamples: [bin_vehicle,true,true] call BIN_fnc_empVehicle; //Destroys lights and prevents vehicle from starting, AI will exit vehicle after it has stopped [bin_vehicle,false,false] call BIN_fnc_empVehicle; //Destroys lights, but engine can still start and vehicle can be driven, AI will remain in vehicle",
    "example": "[] call BIN_fnc_empVehicle;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_enableSaving": {
    "command": "BIN_fnc_enableSaving",
    "timestamp": "2021-01-22T21:43:43Z",
    "version": "1.94",
    "syntax": "[<boolean>, <boolean>] call BIN_fnc_enableSaving",
    "docSyntax": "[enableSaving, saveGame] call BIN_fnc_enableSaving",
    "tags": "",
    "description": "Sets a variable used in <Arma 3 Contact> which handels saving. Featurearma3contact",
    "example": "nowiki[</nowiki>true,true] call BIN_fnc_enableSaving;",
    "params": "<boolean> <boolean>",
    "returns": "nothing"
  },
  "BIN_fnc_eulerToVector": {
    "command": "BIN_fnc_eulerToVector",
    "timestamp": "2021-02-01T16:36:58Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_eulerToVector -->",
    "docSyntax": "<!-- [] call BIN_fnc_eulerToVector -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_eulerToVector;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exit": {
    "command": "BIN_fnc_exit",
    "timestamp": "2021-02-01T16:42:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exit -->",
    "docSyntax": "<!-- [] call BIN_fnc_exit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitAntennas": {
    "command": "BIN_fnc_exitAntennas",
    "timestamp": "2021-01-22T21:33:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitAntennas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitDiary": {
    "command": "BIN_fnc_exitDiary",
    "timestamp": "2021-01-22T21:39:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitDiary -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitDiary -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitDiary;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitGroup": {
    "command": "BIN_fnc_exitGroup",
    "timestamp": "2021-02-01T16:36:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitGroup -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitGroup -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitGroup;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitPersistentObjects": {
    "command": "BIN_fnc_exitPersistentObjects",
    "timestamp": "2021-02-01T16:42:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitPersistentObjects -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitPersistentObjects -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitPersistentObjects;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitQuests": {
    "command": "BIN_fnc_exitQuests",
    "timestamp": "2021-01-22T21:27:45Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitQuests -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitQuests -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitQuests;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitSites": {
    "command": "BIN_fnc_exitSites",
    "timestamp": "2021-01-22T21:42:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitSites -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitSites -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitSites;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_exitTasks": {
    "command": "BIN_fnc_exitTasks",
    "timestamp": "2021-02-01T16:42:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_exitTasks -->",
    "docSyntax": "<!-- [] call BIN_fnc_exitTasks -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_exitTasks;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_findNearestGrid": {
    "command": "BIN_fnc_findNearestGrid",
    "timestamp": "2021-01-22T21:39:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_findNearestGrid -->",
    "docSyntax": "<!-- [] call BIN_fnc_findNearestGrid -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_findNearestGrid;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_findPath": {
    "command": "BIN_fnc_findPath",
    "timestamp": "2021-02-01T16:50:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_findPath -->",
    "docSyntax": "<!-- [] call BIN_fnc_findPath -->",
    "tags": "",
    "description": "\nDescription: A* search algorithm. Uses hard-coded Manhattan distance to measure distance. Parameter(s): \n0: ARRAY of ARRAYs in \nformat: \n0: NUMBER - node cost \n1: ARRAY - array of neighbor indexes \n2: ARRAY - XYZ position of the node, used to measure distance from end pos \n1: NUMBER - index of starting point \n2: NUMBER - index of ending point \nReturns: ARRAY of NUMBERs - indexes of nodes which are traversed on the way to the ending point",
    "example": "[] call BIN_fnc_findPath;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_findSafePositions": {
    "command": "BIN_fnc_findSafePositions",
    "timestamp": "2021-02-01T16:36:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_findSafePositions -->",
    "docSyntax": "<!-- [] call BIN_fnc_findSafePositions -->",
    "tags": "",
    "description": "BIN_fnc_findSafePositions",
    "example": "[] call BIN_fnc_findSafePositions;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_findTargetWeight": {
    "command": "BIN_fnc_findTargetWeight",
    "timestamp": "2021-02-01T16:41:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_findTargetWeight -->",
    "docSyntax": "<!-- [] call BIN_fnc_findTargetWeight -->",
    "tags": "",
    "description": "BIN_fnc_findTargetWeight",
    "example": "[] call BIN_fnc_findTargetWeight;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_frequencyToString": {
    "command": "BIN_fnc_frequencyToString",
    "timestamp": "2021-02-01T16:38:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_frequencyToString -->",
    "docSyntax": "<!-- [] call BIN_fnc_frequencyToString -->",
    "tags": "",
    "description": "\nDescription: Returns frequency as a string Parameter(s): \n0: NUMBER - frequency in MHz, returned value is in format \"value unit\" ARRAY in format [NUMBER,NUMBER] - frequency range in MHz, returned value is in format \"value1 unit1 - value2 unit2\" \n1: NUMBER - order offset. When 0, frequency 1000 will return \"1 GHz\". When -1, returned value will be \"1000 MHz\" \n2: BOOL - true if input values are in Hz, false if in MHz (standard across the game) \nReturns: STRING */ #define UNITS [\\ localize \"STR_A3_C_fnc_frequencyToString_Hz0\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz1\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz2\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz3\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz4\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz5\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz6\"\\ ] // ^0 ^3 ^6 ^9 ^12 ^15 ^18 //#define UNITS [\"Hz\",\"kHz\",\"MHz\",\"GHz\",\"THz\",\"PHz\",\"EHz\"]",
    "example": "[] call BIN_fnc_frequencyToString;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAISquadID": {
    "command": "BIN_fnc_getAISquadID",
    "timestamp": "2021-01-22T21:30:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAISquadID -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAISquadID -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAISquadID;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAISquadPosition": {
    "command": "BIN_fnc_getAISquadPosition",
    "timestamp": "2021-02-01T16:50:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAISquadPosition -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAISquadPosition -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAISquadPosition;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAllAISquads": {
    "command": "BIN_fnc_getAllAISquads",
    "timestamp": "2021-01-22T21:40:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAllAISquads -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAllAISquads -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAllAISquads;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAllAreas": {
    "command": "BIN_fnc_getAllAreas",
    "timestamp": "2021-01-22T21:38:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAllAreas -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAllAreas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAllAreas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAllTXScans": {
    "command": "BIN_fnc_getAllTXScans",
    "timestamp": "2021-02-01T16:35:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAllTXScans -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAllTXScans -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns array of names of all TXScans stored in extension Parameter(s): NONE \nReturns: ARRAY - scan names \nExample: call BIN_fnc_getAllTXScans",
    "example": "[] call BIN_fnc_getAllTXScans;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaAngle": {
    "command": "BIN_fnc_getAntennaAngle",
    "timestamp": "2021-02-01T16:53:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaAngle -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaAngle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaAngle;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaCanReveal": {
    "command": "BIN_fnc_getAntennaCanReveal",
    "timestamp": "2021-01-22T21:38:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaCanReveal -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaCanReveal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaCanReveal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaFrequency": {
    "command": "BIN_fnc_getAntennaFrequency",
    "timestamp": "2021-02-01T16:38:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaFrequency -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaFrequency -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaFrequency;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaFrequencyClass": {
    "command": "BIN_fnc_getAntennaFrequencyClass",
    "timestamp": "2021-02-01T16:50:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaFrequencyClass -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaFrequencyClass -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaFrequencyClass;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaGain": {
    "command": "BIN_fnc_getAntennaGain",
    "timestamp": "2021-02-01T16:39:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaGain -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaGain -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaGain;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaName": {
    "command": "BIN_fnc_getAntennaName",
    "timestamp": "2021-02-01T16:49:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaName -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaName -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaName;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaObject": {
    "command": "BIN_fnc_getAntennaObject",
    "timestamp": "2021-01-22T21:30:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaObject -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaObject -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaObject;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaPower": {
    "command": "BIN_fnc_getAntennaPower",
    "timestamp": "2021-01-22T21:37:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaPower -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaPower -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaPower;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaRevealValue": {
    "command": "BIN_fnc_getAntennaRevealValue",
    "timestamp": "2021-01-22T21:30:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaRevealValue -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaRevealValue -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaRevealValue;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennas": {
    "command": "BIN_fnc_getAntennas",
    "timestamp": "2021-01-22T21:38:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennas -->",
    "tags": "",
    "description": "\nDescription: Get all antennas, transmitters and receivers alike Parameter(s): \n0: BOOL - true to ignore player's antennas (\ndefault: false) \nReturns: ARRAY of STRINGs - antenna IDs",
    "example": "[] call BIN_fnc_getAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaScanPolygon": {
    "command": "BIN_fnc_getAntennaScanPolygon",
    "timestamp": "2021-02-01T16:36:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaScanPolygon -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaScanPolygon -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaScanPolygon;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaScans": {
    "command": "BIN_fnc_getAntennaScans",
    "timestamp": "2021-02-01T16:44:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaScans -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaScans -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaScans;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaScanSignals": {
    "command": "BIN_fnc_getAntennaScanSignals",
    "timestamp": "2021-02-01T16:50:10Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaScanSignals -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaScanSignals -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaScanSignals;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaSensitivity": {
    "command": "BIN_fnc_getAntennaSensitivity",
    "timestamp": "2021-02-01T16:37:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaSensitivity -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaSensitivity -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaSensitivity;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaSignal": {
    "command": "BIN_fnc_getAntennaSignal",
    "timestamp": "2021-02-01T16:48:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaSignalHistory": {
    "command": "BIN_fnc_getAntennaSignalHistory",
    "timestamp": "2021-02-01T16:36:48Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaSignalHistory -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaSignalHistory -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaSignalHistory;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getAntennaType": {
    "command": "BIN_fnc_getAntennaType",
    "timestamp": "2021-02-01T16:36:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getAntennaType -->",
    "docSyntax": "<!-- [] call BIN_fnc_getAntennaType -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getAntennaType;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getBehaviorCoef": {
    "command": "BIN_fnc_getBehaviorCoef",
    "timestamp": "2021-02-01T16:37:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getBehaviorCoef -->",
    "docSyntax": "<!-- [] call BIN_fnc_getBehaviorCoef -->",
    "tags": "",
    "description": "BIN_fnc_getBehaviorCoef Get behavior coefficients \nExamples: [bin_drone,\"gravityCannon\"] call BIN_fnc_getBehaviorCoef - returns coefficients for gravity cannon behavior",
    "example": "[] call BIN_fnc_getBehaviorCoef;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getCharacterSounds": {
    "command": "BIN_fnc_getCharacterSounds",
    "timestamp": "2021-02-01T16:42:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getCharacterSounds -->",
    "docSyntax": "<!-- [] call BIN_fnc_getCharacterSounds -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getCharacterSounds;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getCurrentSignal": {
    "command": "BIN_fnc_getCurrentSignal",
    "timestamp": "2021-02-01T16:47:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getCurrentSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_getCurrentSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getCurrentSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getEntityBoundingBarrel": {
    "command": "BIN_fnc_getEntityBoundingBarrel",
    "timestamp": "2021-01-22T21:34:14Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getEntityBoundingBarrel -->",
    "docSyntax": "<!-- [] call BIN_fnc_getEntityBoundingBarrel -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getEntityBoundingBarrel;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getFollowingSignals": {
    "command": "BIN_fnc_getFollowingSignals",
    "timestamp": "2021-02-01T16:41:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getFollowingSignals -->",
    "docSyntax": "<!-- [] call BIN_fnc_getFollowingSignals -->",
    "tags": "",
    "description": "\nDescription: Get signals which follow after given one. Parameter(s): \n0: STRING - signal class \nReturns: ARRAY of STRINGs (including input signal when it is not a link)",
    "example": "[] call BIN_fnc_getFollowingSignals;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getFormattedControl": {
    "command": "BIN_fnc_getFormattedControl",
    "timestamp": "2021-02-01T16:50:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getFormattedControl -->",
    "docSyntax": "<!-- [] call BIN_fnc_getFormattedControl -->",
    "tags": "",
    "description": "\nDescription: Return a formatted string of a mapped control (same style as the Field Manual and Hints) Parameter(s): \n0: STRING - name of the control action 1 (Optional): SCALAR - 0-based index of the mapped control \nReturns: STRING - formatted control",
    "example": "[] call BIN_fnc_getFormattedControl;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getGridCollisions": {
    "command": "BIN_fnc_getGridCollisions",
    "timestamp": "2021-01-22T21:44:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getGridCollisions -->",
    "docSyntax": "<!-- [] call BIN_fnc_getGridCollisions -->",
    "tags": "",
    "description": "pre#define BUSH_WIDTH 2 #define BUSH_HEIGHT 2 #define TREE_TRUNK_WIDTH 0.5 #define TREE_TRUNK_HEIGHT 4 #define GET_POS\\ private _pos = _x modelToWorld (boundingcenter _x vectormultiply -1); #define GET_BBOX\\ private _bbox = boundingboxreal _x;\\ private _bboxX = abs ((_bbox select 0 select 0) - (_bbox select 1 select 0)) / 2 + _cellSizeXHalf*0;\\ private _bboxY = abs ((_bbox select 0 select 1) - (_bbox select 1 select 1)) / 2 + _cellSizeYHalf*0;\\ private _bboxZ = abs ((_bbox select 0 select 2) - (_bbox select 1 select 2)) / 2 + _cellSizeZHalf*0; //_bboxZ = (abs (_bbox select 0 select 2) + abs (_bbox select 1 select 2)) + _cellSizeZHalf*0; #define GET_BBOX_FIXED(SIZE)\\ private _bboxX = SIZE + _cellSizeXHalf;\\ private _bboxY = SIZE + _cellSizeYHalf;\\ private _bboxZ = SIZE + _cellSizeZHalf;",
    "example": "[] call BIN_fnc_getGridCollisions;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getGridMap": {
    "command": "BIN_fnc_getGridMap",
    "timestamp": "2021-02-01T16:48:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getGridMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_getGridMap -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getGridMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getGridPath": {
    "command": "BIN_fnc_getGridPath",
    "timestamp": "2021-01-22T21:30:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getGridPath -->",
    "docSyntax": "<!-- [] call BIN_fnc_getGridPath -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getGridPath;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getGroupSeed": {
    "command": "BIN_fnc_getGroupSeed",
    "timestamp": "2021-01-22T21:36:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getGroupSeed -->",
    "docSyntax": "<!-- [] call BIN_fnc_getGroupSeed -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getGroupSeed;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getIDWMapDrawColorSet": {
    "command": "BIN_fnc_getIDWMapDrawColorSet",
    "timestamp": "2021-01-22T21:35:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getIDWMapDrawColorSet -->",
    "docSyntax": "<!-- [] call BIN_fnc_getIDWMapDrawColorSet -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Gets stored draw colors Parameter(s): NONE \nReturns: ARRAY - draw colors or [] on error \nExample: call BIN_fnc_getIDWMapDrawColorSet",
    "example": "[] call BIN_fnc_getIDWMapDrawColorSet;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getIDWMapDrawPatternIndex": {
    "command": "BIN_fnc_getIDWMapDrawPatternIndex",
    "timestamp": "2021-02-01T16:46:49Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getIDWMapDrawPatternIndex -->",
    "docSyntax": "<!-- [] call BIN_fnc_getIDWMapDrawPatternIndex -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Gets stored draw pattern index Parameter(s): NONE \nReturns: NUMBER - draw pattern index (0..3) or -1 on error \nExample: call BIN_fnc_getIDWMapDrawPatternIndex",
    "example": "[] call BIN_fnc_getIDWMapDrawPatternIndex;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getIDWMapParams": {
    "command": "BIN_fnc_getIDWMapParams",
    "timestamp": "2021-02-01T17:31:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getIDWMapParams -->",
    "docSyntax": "<!-- [] call BIN_fnc_getIDWMapParams -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns currently set IDWMap params Parameter(s): NONE \nReturns: ARRAY in \nformat: [[mapMinX, mapMinY, mapMaxX, mapMaxY], idwCellSize, idwSpreadRadius, idwSpreadPower, curvePointsInterval, curvePointSpreadRadius] or [] on error \nExample: call BIN_fnc_getIDWMapParams",
    "example": "[] call BIN_fnc_getIDWMapParams;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getIDWMapSaveData": {
    "command": "BIN_fnc_getIDWMapSaveData",
    "timestamp": "2021-02-01T16:45:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getIDWMapSaveData -->",
    "docSyntax": "<!-- [] call BIN_fnc_getIDWMapSaveData -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns array with IDWMap data which is used for saving/loading Parameter(s): NONE \nReturns: ARRAY - save data \nExample: call BIN_fnc_getIDWMapSaveData */ #define MAPDRAWPATTERNINDEX_DEFAULT 0 #define MAPDRAWCOLORSET_DEFAULT [[0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7]] #define MAPDRAWIDC_DEFAULT 51 // if the data was not yet set",
    "example": "[] call BIN_fnc_getIDWMapSaveData;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getIDWMapStaticDataLayers": {
    "command": "BIN_fnc_getIDWMapStaticDataLayers",
    "timestamp": "2021-02-01T18:25:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getIDWMapStaticDataLayers -->",
    "docSyntax": "<!-- [] call BIN_fnc_getIDWMapStaticDataLayers -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Gets static data from extension Parameter(s): NONE \nReturns: ARRAY in \nformat: [ [[x,y,strengh],[x,y,strengh],...], // data layer 0 [[x,y,strengh],[x,y,strengh],...], // data layer 1 ... [[x,y,strengh],[x,y,strengh],...] // data layer N ] or [] - on error \nExample: call BIN_fnc_getIDWMapStaticDataLayers",
    "example": "[] call BIN_fnc_getIDWMapStaticDataLayers;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getLinkBudget": {
    "command": "BIN_fnc_getLinkBudget",
    "timestamp": "2021-01-22T21:28:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getLinkBudget -->",
    "docSyntax": "<!-- [] call BIN_fnc_getLinkBudget -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getLinkBudget;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getLinkDir": {
    "command": "BIN_fnc_getLinkDir",
    "timestamp": "2021-01-22T21:44:43Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getLinkDir -->",
    "docSyntax": "<!-- [] call BIN_fnc_getLinkDir -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getLinkDir;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getLinkedAntennas": {
    "command": "BIN_fnc_getLinkedAntennas",
    "timestamp": "2021-02-01T16:42:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getLinkedAntennas; -->",
    "docSyntax": "<!-- [] call BIN_fnc_getLinkedAntennas; -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getLinkStrength": {
    "command": "BIN_fnc_getLinkStrength",
    "timestamp": "2021-02-01T16:38:45Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getLinkStrength -->",
    "docSyntax": "<!-- [] call BIN_fnc_getLinkStrength -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getLinkStrength;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getObjectAntennas": {
    "command": "BIN_fnc_getObjectAntennas",
    "timestamp": "2021-02-01T16:45:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getObjectAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_getObjectAntennas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getObjectAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getObjectBoundingBarrel": {
    "command": "BIN_fnc_getObjectBoundingBarrel",
    "timestamp": "2021-02-01T16:42:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getObjectBoundingBarrel -->",
    "docSyntax": "<!-- [] call BIN_fnc_getObjectBoundingBarrel -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns bounding barrel of the given object Parameter(s): \n0: OBJECT - object to measure \nReturns: ARRAY in format [radius, height, offset]. Offset is negative if object Z position is higher than the lower bound \nExample: myObj call BIN_fnc_getObjectBoundingBarrel",
    "example": "[] call BIN_fnc_getObjectBoundingBarrel;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getPatrolRoutes": {
    "command": "BIN_fnc_getPatrolRoutes",
    "timestamp": "2021-02-01T16:40:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getPatrolRoutes -->",
    "docSyntax": "<!-- [] call BIN_fnc_getPatrolRoutes -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getPatrolRoutes;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getRadioConversation": {
    "command": "BIN_fnc_getRadioConversation",
    "timestamp": "2021-02-01T16:38:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getRadioConversation -->",
    "docSyntax": "<!-- [] call BIN_fnc_getRadioConversation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getRadioConversation;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getRecordedSignals": {
    "command": "BIN_fnc_getRecordedSignals",
    "timestamp": "2021-02-01T16:41:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getRecordedSignals -->",
    "docSyntax": "<!-- [] call BIN_fnc_getRecordedSignals -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getRecordedSignals;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getRoleIcon": {
    "command": "BIN_fnc_getRoleIcon",
    "timestamp": "2021-02-01T16:43:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getRoleIcon -->",
    "docSyntax": "<!-- [] call BIN_fnc_getRoleIcon -->",
    "tags": "",
    "description": "\nDescription: Get soldier's role icon (e.g., sniper, machine-gunner, etc.) Parameter(s): \n0: OBJECT \nReturns: STRING - image path",
    "example": "[] call BIN_fnc_getRoleIcon;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getRotation": {
    "command": "BIN_fnc_getRotation",
    "timestamp": "2021-02-01T16:36:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getRotation -->",
    "docSyntax": "<!-- [] call BIN_fnc_getRotation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getRotation;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getSignalAge": {
    "command": "BIN_fnc_getSignalAge",
    "timestamp": "2021-01-22T21:30:24Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getSignalAge -->",
    "docSyntax": "<!-- [] call BIN_fnc_getSignalAge -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getSignalAge;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getSignalTypeClass": {
    "command": "BIN_fnc_getSignalTypeClass",
    "timestamp": "2021-02-01T16:40:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getSignalTypeClass -->",
    "docSyntax": "<!-- [] call BIN_fnc_getSignalTypeClass -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getSignalTypeClass;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getSignalTypes": {
    "command": "BIN_fnc_getSignalTypes",
    "timestamp": "2021-02-01T16:45:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getSignalTypes -->",
    "docSyntax": "<!-- [] call BIN_fnc_getSignalTypes -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getSignalTypes;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getSiteLayerEntities": {
    "command": "BIN_fnc_getSiteLayerEntities",
    "timestamp": "2021-01-22T21:36:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getSiteLayerEntities -->",
    "docSyntax": "<!-- [] call BIN_fnc_getSiteLayerEntities -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_getSiteLayerEntities;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTerrainObjects": {
    "command": "BIN_fnc_getTerrainObjects",
    "timestamp": "2021-01-22T21:40:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTerrainObjects -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTerrainObjects -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns terrain objects of the given type for the given area dimensions Parameter(s): \n0: ARRAY - area details in Area format (see BIS_fnc_getArea) \n1: ARRAY - types of terrain objects, for example [\"HOUSE\", \"TREE\"] \nReturns: ARRAY of objects \nExample: [\"myArea\", [player, 100], [\"HOUSE\", \"TREE\"]] call BIN_fnc_getTerrainObjects",
    "example": "[] call BIN_fnc_getTerrainObjects;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanAngle": {
    "command": "BIN_fnc_getTXScanAngle",
    "timestamp": "2021-01-22T21:41:33Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanAngle -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanAngle -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns TXScan angle Parameter(s): \n0: STRING - scan name \nReturns: NUMBER - set cone angle or -1 on error \nExample: \"MyScan\" call BIN_fnc_getTXScanAngle",
    "example": "[] call BIN_fnc_getTXScanAngle;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanDrawData": {
    "command": "BIN_fnc_getTXScanDrawData",
    "timestamp": "2021-01-22T21:35:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanDrawData -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanDrawData -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns draw data for given TXScan Parameter(s): \n0: STRING - scan name \nReturns: ARRAY in format [iconData, polygonData, triangleData, rectangleData, isDefaultPolygon] \nwhere: \niconData: ARRAY - position in format [x,y,0] \npolygonData: ARRAY - array of polygon vertices, where each vertex is in format [x,y,0] \ntriangleData: ARRAY - array of triangle vrtices, where each vertex is in format [x,y,0] \nrectangleData: ARRAY - bounding rectangle in format [center, a, b, angle] \nisDefaultPolygon: BOOL - if a scan polygon has not yet been calculated, this will be true \nExample: \"myScan\" call BIN_fnc_getTXScanDrawData",
    "example": "[] call BIN_fnc_getTXScanDrawData;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanPolygon": {
    "command": "BIN_fnc_getTXScanPolygon",
    "timestamp": "2021-02-01T16:50:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanPolygon -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanPolygon -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns current intersection polygon for given scan Parameter(s): \n0: STRING - TXScan name \nReturns: ARRAY - polygon points or [] on error \nExample: \"MyScan\" call BIN_fnc_getTXScanPolygon",
    "example": "[] call BIN_fnc_getTXScanPolygon;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanPolygonDetails": {
    "command": "BIN_fnc_getTXScanPolygonDetails",
    "timestamp": "2021-02-01T16:36:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanPolygonDetails -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanPolygonDetails -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns estimated area and perimeter of the given scan polygon Parameter(s): \n0: STRING - TXScan name \nReturns: ARRAY in format [area, perimeter] \nExample: \"MyScan\" call BIN_fnc_getTXScanPolygonDetails",
    "example": "[] call BIN_fnc_getTXScanPolygonDetails;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanPosition": {
    "command": "BIN_fnc_getTXScanPosition",
    "timestamp": "2021-02-01T16:35:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanPosition -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanPosition -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Gets stored TXScan transmitter position Parameter(s): \n0: STRING - scan name \nReturns: ARRAY - set transmitter position or [] on error \nExample: \"MyScan\" call BIN_fnc_setTXScanPosition",
    "example": "[] call BIN_fnc_getTXScanPosition;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanPrecision": {
    "command": "BIN_fnc_getTXScanPrecision",
    "timestamp": "2021-01-22T21:42:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanPrecision -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanPrecision -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns stored TXScan precision Parameter(s): \n0: STRING - scan name \nReturns: NUMBER - set cone precision or -1 on error \nExample: \"MyScan\" call BIN_fnc_getTXScanPrecision",
    "example": "[] call BIN_fnc_getTXScanPrecision;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanSaveData": {
    "command": "BIN_fnc_getTXScanSaveData",
    "timestamp": "2021-02-01T16:40:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanSaveData -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanSaveData -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns array with given TXScan data which is used for saving/loading Parameter(s): \n0: STRING - TXScan name or \"\" to return all saved scan names \nReturns: ARRAY - save data for given scan name or if argument was \"\" ARRAY in format [allscannames, activeareaboundaries] \nExample: \"MyScan\" call BIN_fnc_getTXScanSaveData \"\" call BIN_fnc_getTXScanSaveData */ #define SAVEVAR_NAME \"BIN_fnc_TXScan_saveData\" #define IDD_DEFAULT 12 #define IDC_DEFAULT 51",
    "example": "[] call BIN_fnc_getTXScanSaveData;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_getTXScanWorldBounds": {
    "command": "BIN_fnc_getTXScanWorldBounds",
    "timestamp": "2021-01-22T21:39:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_getTXScanWorldBounds -->",
    "docSyntax": "<!-- [] call BIN_fnc_getTXScanWorldBounds -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns currently set boundaries of active area Parameter(s): NONE \nReturns: ARRAY in \nformat: [minX, minY, maxX, maxY] or [] on error \nExample: call BIN_fnc_getTXScanWorldBounds",
    "example": "[] call BIN_fnc_getTXScanWorldBounds;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_gravityBurst": {
    "command": "BIN_fnc_gravityBurst",
    "timestamp": "2021-02-01T16:37:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_gravityBurst -->",
    "docSyntax": "<!-- [] call BIN_fnc_gravityBurst -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_gravityBurst;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_gravityCannon_01_ai": {
    "command": "BIN_fnc_gravityCannon_01_ai",
    "timestamp": "2021-02-01T16:49:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_gravityCannon_01_ai; -->",
    "docSyntax": "<!-- [] call BIN_fnc_gravityCannon_01_ai; -->",
    "tags": "",
    "description": "BIN_fnc_gravityCannon_01_AI",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_grenadeThrowback": {
    "command": "BIN_fnc_grenadeThrowback",
    "timestamp": "2021-02-01T16:38:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_grenadeThrowback -->",
    "docSyntax": "<!-- [] call BIN_fnc_grenadeThrowback -->",
    "tags": "",
    "description": "BIN_fnc_grenadeThrowback",
    "example": "[] call BIN_fnc_grenadeThrowback;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_hackAIDrone": {
    "command": "BIN_fnc_hackAIDrone",
    "timestamp": "2021-02-01T16:42:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_hackAIDrone -->",
    "docSyntax": "<!-- [] call BIN_fnc_hackAIDrone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_hackAIDrone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_handDrawBezier": {
    "command": "BIN_fnc_handDrawBezier",
    "timestamp": "2021-01-22T21:32:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_handDrawBezier -->",
    "docSyntax": "<!-- [] call BIN_fnc_handDrawBezier -->",
    "tags": "",
    "description": "\nDescription: Show hand-drawn bezier curve in the map Parameter(s): \n0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it. \n1: ARRAY - control points of bezier curve \n2: ARRAY - color in [r,g,b,a] format \n3: STRING - fill texture BOOL - true for default pen-blue color, false for the same, but faded \nOptional: \n4: NUMBER or \nARRAY: thickness \n5: ARRAY - random thickness offset in format [min,mid,max] \n6: NUMBER - number od drawing steps \nReturns: NOTHING",
    "example": "[] call BIN_fnc_handDrawBezier;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_handDrawEllipse": {
    "command": "BIN_fnc_handDrawEllipse",
    "timestamp": "2021-02-01T16:50:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_handDrawEllipse -->",
    "docSyntax": "<!-- [] call BIN_fnc_handDrawEllipse -->",
    "tags": "",
    "description": "\nDescription: Show hand-drawn ellipse in the map Parameter(s): \n0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it. \n1: ARRAY - center position \n2: NUMBER - semi-major axis \n3: NUMBER - semi-minor axis \n4: NUMBER - angle \n5: ARRAY - color in [r,g,b,a] format \n6: STRING - fill texture BOOL - true for default pen-blue color, false for the same, but faded \nOptional: \n7: NUMBER - radius coef \n8: NUMBER - length coef \n9: NUMBER or \nARRAY: thickness \n10: ARRAY - radius curve \n11: BOOL - true if clockwise \n12: NUMBER - starting angle \n13: ARRAY - random thickness offset in format [min,mid,max] \n14: NUMBER - number od drawing steps \nReturns: NOTHING \nExamples: //--- Show an ellipse on player's position [\"test1\",position player,300,400,15] call BIN_fnc_handDrawEllipse; //--- Show the same ellipse, but faded [\"test1\",position player,300,400,15,nil,false] call BIN_fnc_handDrawEllipse;",
    "example": "[] call BIN_fnc_handDrawEllipse;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_hasAntennaSignal": {
    "command": "BIN_fnc_hasAntennaSignal",
    "timestamp": "2021-02-01T16:43:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_hasAntennaSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_hasAntennaSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_hasAntennaSignal;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_inDangerZone": {
    "command": "BIN_fnc_inDangerZone",
    "timestamp": "2021-01-22T21:40:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_inDangerZone -->",
    "docSyntax": "<!-- [] call BIN_fnc_inDangerZone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_inDangerZone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAcctime": {
    "command": "BIN_fnc_initAcctime",
    "timestamp": "2021-02-01T16:42:50Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAcctime -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAcctime -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAcctime;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initActors": {
    "command": "BIN_fnc_initActors",
    "timestamp": "2021-02-01T16:36:14Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initActors -->",
    "docSyntax": "<!-- [] call BIN_fnc_initActors -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initActors;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAI": {
    "command": "BIN_fnc_initAI",
    "timestamp": "2021-02-01T16:57:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAI -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAI -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAI;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAIBase": {
    "command": "BIN_fnc_initAIBase",
    "timestamp": "2021-02-01T16:49:07Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAIBase -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAIBase -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAIBase;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAIDrone": {
    "command": "BIN_fnc_initAIDrone",
    "timestamp": "2021-02-01T16:43:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAIDrone -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAIDrone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAIDrone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAISquad": {
    "command": "BIN_fnc_initAISquad",
    "timestamp": "2021-01-22T21:37:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAISquad -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAISquad -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAISquad;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initAntennas": {
    "command": "BIN_fnc_initAntennas",
    "timestamp": "2021-02-01T16:40:19Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initAntennas -->",
    "docSyntax": "<!-- [] call BIN_fnc_initAntennas -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initAntennas;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initConstants": {
    "command": "BIN_fnc_initConstants",
    "timestamp": "2021-01-22T21:34:13Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initConstants -->",
    "docSyntax": "<!-- [] call BIN_fnc_initConstants -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initConstants;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initCutLayers": {
    "command": "BIN_fnc_initCutLayers",
    "timestamp": "2021-01-22T21:45:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initCutLayers -->",
    "docSyntax": "<!-- [] call BIN_fnc_initCutLayers -->",
    "tags": "",
    "description": "pre//--- Register RSC layers in the correct order (they are not serialized)",
    "example": "[] call BIN_fnc_initCutLayers;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initDiary": {
    "command": "BIN_fnc_initDiary",
    "timestamp": "2021-02-01T16:43:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initDiary -->",
    "docSyntax": "<!-- [] call BIN_fnc_initDiary -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initDiary;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initDroneModule": {
    "command": "BIN_fnc_initDroneModule",
    "timestamp": "2021-01-22T21:42:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initDroneModule -->",
    "docSyntax": "<!-- [] call BIN_fnc_initDroneModule -->",
    "tags": "",
    "description": "BIN_fnc_initDroneModule",
    "example": "[] call BIN_fnc_initDroneModule;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initGroup": {
    "command": "BIN_fnc_initGroup",
    "timestamp": "2021-02-01T16:42:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initGroup -->",
    "docSyntax": "<!-- [] call BIN_fnc_initGroup -->",
    "tags": "",
    "description": "pre#define DEBUG #define GROUP (units player - [player]) #define DAMAGE_COEF 0.25 #define DIS_LIMIT_SOFT 400 #define DIS_LIMIT_HARD 600",
    "example": "[] call BIN_fnc_initGroup;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initHub": {
    "command": "BIN_fnc_initHub",
    "timestamp": "2021-02-01T16:40:01Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initHub -->",
    "docSyntax": "<!-- [] call BIN_fnc_initHub -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initHub;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initInspectableDiaryRecord": {
    "command": "BIN_fnc_initInspectableDiaryRecord",
    "timestamp": "2021-02-01T16:37:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initInspectableDiaryRecord -->",
    "docSyntax": "<!-- [] call BIN_fnc_initInspectableDiaryRecord -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initInspectableDiaryRecord;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initInventory": {
    "command": "BIN_fnc_initInventory",
    "timestamp": "2021-01-22T21:39:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initInventory -->",
    "docSyntax": "<!-- [] call BIN_fnc_initInventory -->",
    "tags": "",
    "description": "pre//--- Ignored in missions without special description.ext property",
    "example": "[] call BIN_fnc_initInventory;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initLocations": {
    "command": "BIN_fnc_initLocations",
    "timestamp": "2021-02-01T16:36:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initLocations -->",
    "docSyntax": "<!-- [] call BIN_fnc_initLocations -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initLocations;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initMiniUGV": {
    "command": "BIN_fnc_initMiniUGV",
    "timestamp": "2021-02-01T16:50:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initMiniUGV -->",
    "docSyntax": "<!-- [] call BIN_fnc_initMiniUGV -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initMiniUGV;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initMothershipLights": {
    "command": "BIN_fnc_initMothershipLights",
    "timestamp": "2021-02-01T16:41:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initMothershipLights -->",
    "docSyntax": "<!-- [] call BIN_fnc_initMothershipLights -->",
    "tags": "",
    "description": "\nDescription: Enable scripted ET Mothership lights on baked memory points Created lights can be retrieved via getVariable \"BIN_lights\" on the Mothership Parameter(s): \n0: OBJECT - Mothership \nReturns: NOTHING",
    "example": "[] call BIN_fnc_initMothershipLights;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initPersistentObjects": {
    "command": "BIN_fnc_initPersistentObjects",
    "timestamp": "2021-01-22T21:40:10Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initPersistentObjects -->",
    "docSyntax": "<!-- [] call BIN_fnc_initPersistentObjects -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initPersistentObjects;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initProbeMap": {
    "command": "BIN_fnc_initProbeMap",
    "timestamp": "2021-02-01T16:46:11Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initProbeMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_initProbeMap -->",
    "tags": "",
    "description": "pre//--- Debug",
    "example": "[] call BIN_fnc_initProbeMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initPuzzle": {
    "command": "BIN_fnc_initPuzzle",
    "timestamp": "2021-01-22T21:45:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initPuzzle -->",
    "docSyntax": "<!-- [] call BIN_fnc_initPuzzle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initPuzzle;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initQuests": {
    "command": "BIN_fnc_initQuests",
    "timestamp": "2021-01-22T21:38:36Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initQuests -->",
    "docSyntax": "<!-- [] call BIN_fnc_initQuests -->",
    "tags": "",
    "description": "",
    "example": "[] call BIN_fnc_initQuests;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initRevive": {
    "command": "BIN_fnc_initRevive",
    "timestamp": "2021-02-01T16:45:10Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initRevive -->",
    "docSyntax": "<!-- [] call BIN_fnc_initRevive -->",
    "tags": "",
    "description": "pre#define BLEED_TIME 160 #define BLINK_DELAY_MAX 20 #define BLINK_TIME 0.75",
    "example": "[] call BIN_fnc_initRevive;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initSideColors": {
    "command": "BIN_fnc_initSideColors",
    "timestamp": "2021-02-01T16:38:13Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initSideColors -->",
    "docSyntax": "<!-- [] call BIN_fnc_initSideColors -->",
    "tags": "",
    "description": "pre#define FORMAT \"Map_%1_%2\"",
    "example": "[] call BIN_fnc_initSideColors;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initSites": {
    "command": "BIN_fnc_initSites",
    "timestamp": "2021-02-01T16:47:35Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initSites -->",
    "docSyntax": "<!-- [] call BIN_fnc_initSites -->",
    "tags": "",
    "description": "pre#define DEBUG #define AREA_BUFFER +200 #define DEF_RADIUS 500 #define DEF_RADIUS_OUT 550 #define AREA_DEF [position _logic,DEF_RADIUS_OUT,DEF_RADIUS_OUT,0,false]",
    "example": "[] call BIN_fnc_initSites;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initTasks": {
    "command": "BIN_fnc_initTasks",
    "timestamp": "2021-01-22T21:33:33Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initTasks -->",
    "docSyntax": "<!-- [] call BIN_fnc_initTasks -->",
    "tags": "",
    "description": "pre//--- Obsolete, replace dby BIN_fnc_initQuests",
    "example": "[] call BIN_fnc_initTasks;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initTurret": {
    "command": "BIN_fnc_initTurret",
    "timestamp": "2021-02-01T16:48:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initTurret -->",
    "docSyntax": "<!-- [] call BIN_fnc_initTurret -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initTurret;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initUAV": {
    "command": "BIN_fnc_initUAV",
    "timestamp": "2021-02-01T16:41:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initUAV -->",
    "docSyntax": "<!-- [] call BIN_fnc_initUAV -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initUAV;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_initUGV": {
    "command": "BIN_fnc_initUGV",
    "timestamp": "2021-01-22T21:33:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_initUGV -->",
    "docSyntax": "<!-- [] call BIN_fnc_initUGV -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_initUGV;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_inList": {
    "command": "BIN_fnc_inList",
    "timestamp": "2021-01-22T21:39:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_inList -->",
    "docSyntax": "<!-- [] call BIN_fnc_inList -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_inList;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_inRadioConversation": {
    "command": "BIN_fnc_inRadioConversation",
    "timestamp": "2021-01-22T21:37:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_inRadioConversation -->",
    "docSyntax": "<!-- [] call BIN_fnc_inRadioConversation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_inRadioConversation;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_inRadioConversationWith": {
    "command": "BIN_fnc_inRadioConversationWith",
    "timestamp": "2021-02-01T16:41:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_inRadioConversationWith -->",
    "docSyntax": "<!-- [] call BIN_fnc_inRadioConversationWith -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_inRadioConversationWith;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAIBase": {
    "command": "BIN_fnc_isAIBase",
    "timestamp": "2021-01-22T21:36:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAIBase -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAIBase -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAIBase;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntenna": {
    "command": "BIN_fnc_isAntenna",
    "timestamp": "2021-01-22T21:45:07Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntenna;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntennaBaked": {
    "command": "BIN_fnc_isAntennaBaked",
    "timestamp": "2021-02-01T16:38:35Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntennaBaked -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntennaBaked -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntennaBaked;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntennaBroadcasting": {
    "command": "BIN_fnc_isAntennaBroadcasting",
    "timestamp": "2021-01-22T21:36:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntennaBroadcasting -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntennaBroadcasting -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntennaBroadcasting;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntennaJammed": {
    "command": "BIN_fnc_isAntennaJammed",
    "timestamp": "2021-01-22T21:35:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntennaJammed -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntennaJammed -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntennaJammed;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntennaRevealed": {
    "command": "BIN_fnc_isAntennaRevealed",
    "timestamp": "2021-01-22T21:45:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntennaRevealed -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntennaRevealed -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntennaRevealed;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isAntennaSelected": {
    "command": "BIN_fnc_isAntennaSelected",
    "timestamp": "2021-01-22T21:39:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isAntennaSelected -->",
    "docSyntax": "<!-- [] call BIN_fnc_isAntennaSelected -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isAntennaSelected;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isExtensionError": {
    "command": "BIN_fnc_isExtensionError",
    "timestamp": "2021-02-01T16:45:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isExtensionError -->",
    "docSyntax": "<!-- [] call BIN_fnc_isExtensionError -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns true and displays description of the error from extension if there was an error. When extension returns negative number (usually -1), it is considered an indication of some sort of error, in which case string output should contain the description of the error. Parameter(s): Extension (arg version) output in format [string, number, number] \nReturns: BOOL - true if error",
    "example": "[] call BIN_fnc_isExtensionError;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isNull": {
    "command": "BIN_fnc_isNull",
    "timestamp": "2021-02-01T16:47:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isNull -->",
    "docSyntax": "<!-- [] call BIN_fnc_isNull -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isNull;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isPaused": {
    "command": "BIN_fnc_isPaused",
    "timestamp": "2021-01-22T21:43:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isPaused -->",
    "docSyntax": "<!-- [] call BIN_fnc_isPaused -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isPaused;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isPausedInit": {
    "command": "BIN_fnc_isPausedInit",
    "timestamp": "2021-01-22T21:42:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isPausedInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_isPausedInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isPausedInit;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isPuzzleReset": {
    "command": "BIN_fnc_isPuzzleReset",
    "timestamp": "2021-01-22T21:40:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isPuzzleReset -->",
    "docSyntax": "<!-- [] call BIN_fnc_isPuzzleReset -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isPuzzleReset;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isPuzzleTerminated": {
    "command": "BIN_fnc_isPuzzleTerminated",
    "timestamp": "2021-02-01T16:38:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isPuzzleTerminated -->",
    "docSyntax": "<!-- [] call BIN_fnc_isPuzzleTerminated -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isPuzzleTerminated;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isRadioHandshake": {
    "command": "BIN_fnc_isRadioHandshake",
    "timestamp": "2021-02-01T16:38:48Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isRadioHandshake -->",
    "docSyntax": "<!-- [] call BIN_fnc_isRadioHandshake -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isRadioHandshake;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_isRadioSilence": {
    "command": "BIN_fnc_isRadioSilence",
    "timestamp": "2021-02-01T16:42:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_isRadioSilence -->",
    "docSyntax": "<!-- [] call BIN_fnc_isRadioSilence -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_isRadioSilence;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_joinAISquad": {
    "command": "BIN_fnc_joinAISquad",
    "timestamp": "2021-01-22T21:40:50Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_joinAISquad -->",
    "docSyntax": "<!-- [] call BIN_fnc_joinAISquad -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_joinAISquad;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_lightBurst": {
    "command": "BIN_fnc_lightBurst",
    "timestamp": "2021-02-01T16:42:46Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_lightBurst -->",
    "docSyntax": "<!-- [] call BIN_fnc_lightBurst -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_lightBurst;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_list": {
    "command": "BIN_fnc_list",
    "timestamp": "2021-02-01T16:51:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_list -->",
    "docSyntax": "<!-- [] call BIN_fnc_list -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_list;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_loadIDWMap": {
    "command": "BIN_fnc_loadIDWMap",
    "timestamp": "2021-02-01T16:46:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_loadIDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_loadIDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Loads IDWMap data from global variable 'BIN_fnc_IDWMap_saveData' into extension Parameter(s): NONE \nReturns: BOOL - true on success \nExample: call BIN_fnc_loadIDWMap",
    "example": "[] call BIN_fnc_loadIDWMap;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_loadTXScanState": {
    "command": "BIN_fnc_loadTXScanState",
    "timestamp": "2021-02-01T16:38:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_loadTXScanState -->",
    "docSyntax": "<!-- [] call BIN_fnc_loadTXScanState -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Loads TXScan data from global saved variables into extension Parameter(s): NONE \nReturns: BOOL - true on success \nExample: call BIN_fnc_loadTXScanState",
    "example": "[] call BIN_fnc_loadTXScanState;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_markDangerZone": {
    "command": "BIN_fnc_markDangerZone",
    "timestamp": "2021-02-01T16:48:01Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_markDangerZone -->",
    "docSyntax": "<!-- [] call BIN_fnc_markDangerZone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_markDangerZone;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_markFreeAreaPositions": {
    "command": "BIN_fnc_markFreeAreaPositions",
    "timestamp": "2021-01-22T21:34:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_markFreeAreaPositions -->",
    "docSyntax": "<!-- [] call BIN_fnc_markFreeAreaPositions -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Returns array of booleans in place of passed positions, where true is free and false is possible collision Parameter(s): \n0: STRING - area name \n1: ARRAY - bounding barrel in format [radius, height, offset] \n2: ARRAY - arrays of positions \nReturns: ARRAY of booleans \nExample: [\"myArea\", [10,5,0], [[123,123,123],[456,456,456],...]] call BIN_fnc_markFreeAreaPositions",
    "example": "[] call BIN_fnc_markFreeAreaPositions;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_matrixMultiply": {
    "command": "BIN_fnc_matrixMultiply",
    "timestamp": "2021-01-22T21:45:14Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_matrixMultiply -->",
    "docSyntax": "<!-- [] call BIN_fnc_matrixMultiply -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_matrixMultiply;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_matrixTranspose": {
    "command": "BIN_fnc_matrixTranspose",
    "timestamp": "2021-01-22T21:41:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_matrixTranspose -->",
    "docSyntax": "<!-- [] call BIN_fnc_matrixTranspose -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "[] call BIN_fnc_matrixTranspose;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_matterballDestruction": {
    "command": "BIN_fnc_matterballDestruction",
    "timestamp": "2021-02-01T16:48:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_matterballDestruction; -->",
    "docSyntax": "<!-- [] call BIN_fnc_matterballDestruction; -->",
    "tags": "",
    "description": "BIN_fnc_matterBallDestruction Alien Module destruction",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_matterballEffects": {
    "command": "BIN_fnc_matterballEffects",
    "timestamp": "2021-02-01T16:44:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_matterballEffects; -->",
    "docSyntax": "<!-- [] call BIN_fnc_matterballEffects; -->",
    "tags": "",
    "description": "BIN_fnc_matterBallEffects Alien Matter Ball decaying effects \na: reyhard",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_matterCollectionFX": {
    "command": "BIN_fnc_matterCollectionFX",
    "timestamp": "2021-01-22T21:35:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_matterCollectionFX; -->",
    "docSyntax": "<!-- [] call BIN_fnc_matterCollectionFX; -->",
    "tags": "",
    "description": "BIN_fnc_matterCollectionFX",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_missileDeflection": {
    "command": "BIN_fnc_missileDeflection",
    "timestamp": "2021-02-01T16:50:14Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_missileDeflection; -->",
    "docSyntax": "<!-- [] call BIN_fnc_missileDeflection; -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_missileSwarm": {
    "command": "BIN_fnc_missileSwarm",
    "timestamp": "2021-01-22T21:42:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_missileSwarm; -->",
    "docSyntax": "<!-- [] call BIN_fnc_missileSwarm; -->",
    "tags": "",
    "description": "BIN_fnc_missileSwarm",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleAntenna": {
    "command": "BIN_fnc_moduleAntenna",
    "timestamp": "2021-01-22T21:38:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleCBRN": {
    "command": "BIN_fnc_moduleCBRN",
    "timestamp": "2021-01-22T21:45:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleCBRN -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleCBRN -->",
    "tags": "",
    "description": "\nDescription: Enables CBRN systems in a scenario (not MP-compatible!). \nNOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): \nReturns: BOOL",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleChargeSequence": {
    "command": "BIN_fnc_moduleChargeSequence",
    "timestamp": "2021-01-22T21:43:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleChargeSequence -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleChargeSequence -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleDangerZone": {
    "command": "BIN_fnc_moduleDangerZone",
    "timestamp": "2021-01-22T21:39:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleDangerZone -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleDangerZone -->",
    "tags": "",
    "description": "pre#define AREA_BUFFER +50",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleFaradayCage": {
    "command": "BIN_fnc_moduleFaradayCage",
    "timestamp": "2021-01-22T21:41:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleFaradayCage -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleFaradayCage -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleGravityAnomaly": {
    "command": "BIN_fnc_moduleGravityAnomaly",
    "timestamp": "2021-01-22T21:34:07Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleGravityAnomaly -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleGravityAnomaly -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleMovementGrid": {
    "command": "BIN_fnc_moduleMovementGrid",
    "timestamp": "2021-01-22T21:40:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleMovementGrid -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleMovementGrid -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_modulePointOfInterest": {
    "command": "BIN_fnc_modulePointOfInterest",
    "timestamp": "2021-01-22T21:43:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_modulePointOfInterest -->",
    "docSyntax": "<!-- [] call BIN_fnc_modulePointOfInterest -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleSimpleObject": {
    "command": "BIN_fnc_moduleSimpleObject",
    "timestamp": "2021-01-22T22:03:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleSimpleObject -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleSimpleObject -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moduleTravel": {
    "command": "BIN_fnc_moduleTravel",
    "timestamp": "2021-01-22T22:03:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moduleTravel -->",
    "docSyntax": "<!-- [] call BIN_fnc_moduleTravel -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveAI": {
    "command": "BIN_fnc_moveAI",
    "timestamp": "2021-02-01T18:10:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveAI -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveAI -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveAIReinforcements": {
    "command": "BIN_fnc_moveAIReinforcements",
    "timestamp": "2021-02-01T18:09:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveAIReinforcements -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveAIReinforcements -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveInit": {
    "command": "BIN_fnc_moveInit",
    "timestamp": "2021-02-01T18:09:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveModule": {
    "command": "BIN_fnc_moveModule",
    "timestamp": "2021-02-01T18:10:11Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveModule -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveModule -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveObject": {
    "command": "BIN_fnc_moveObject",
    "timestamp": "2021-02-01T18:09:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveObject -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveObject -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveTo": {
    "command": "BIN_fnc_moveTo",
    "timestamp": "2021-02-01T18:09:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveTo -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveTo -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveToModelSpace": {
    "command": "BIN_fnc_moveToModelSpace",
    "timestamp": "2021-02-01T18:09:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveToModelSpace -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveToModelSpace -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_moveToOnArc": {
    "command": "BIN_fnc_moveToOnArc",
    "timestamp": "2021-02-01T18:09:56Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_moveToOnArc -->",
    "docSyntax": "<!-- [] call BIN_fnc_moveToOnArc -->",
    "tags": "",
    "description": "BIN_fnc_moveToOnArc",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_onPuzzleCompleted": {
    "command": "BIN_fnc_onPuzzleCompleted",
    "timestamp": "2021-02-01T18:10:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_onPuzzleCompleted -->",
    "docSyntax": "<!-- [] call BIN_fnc_onPuzzleCompleted -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_onPuzzleProgress": {
    "command": "BIN_fnc_onPuzzleProgress",
    "timestamp": "2021-02-01T18:09:35Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_onPuzzleProgress -->",
    "docSyntax": "<!-- [] call BIN_fnc_onPuzzleProgress -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_onPuzzleReset": {
    "command": "BIN_fnc_onPuzzleReset",
    "timestamp": "2021-02-01T18:09:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_onPuzzleReset -->",
    "docSyntax": "<!-- [] call BIN_fnc_onPuzzleReset -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_onPuzzleStepCompleted": {
    "command": "BIN_fnc_onPuzzleStepCompleted",
    "timestamp": "2021-02-01T18:10:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_onPuzzleStepCompleted -->",
    "docSyntax": "<!-- [] call BIN_fnc_onPuzzleStepCompleted -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_onPuzzleTerminated": {
    "command": "BIN_fnc_onPuzzleTerminated",
    "timestamp": "2021-02-01T18:10:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_onPuzzleTerminated -->",
    "docSyntax": "<!-- [] call BIN_fnc_onPuzzleTerminated -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_persistentVariables": {
    "command": "BIN_fnc_persistentVariables",
    "timestamp": "2021-02-01T18:10:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_persistentVariables -->",
    "docSyntax": "<!-- [] call BIN_fnc_persistentVariables -->",
    "tags": "",
    "description": "pre//#define SAVE_IN_PROFILE #define SAVE_IN_CAMPAIGN #define PREFIX \"BIN_\"",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_playAlternatingSound": {
    "command": "BIN_fnc_playAlternatingSound",
    "timestamp": "2021-02-01T18:10:02Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_playAlternatingSound -->",
    "docSyntax": "<!-- [] call BIN_fnc_playAlternatingSound -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_playMission": {
    "command": "BIN_fnc_playMission",
    "timestamp": "2021-02-01T18:11:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_playMission -->",
    "docSyntax": "<!-- [] call BIN_fnc_playMission -->",
    "tags": "",
    "description": "pre//--- Disabled, campaign is now configured as traditional campaign",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_playPatrolAnim": {
    "command": "BIN_fnc_playPatrolAnim",
    "timestamp": "2021-02-01T18:09:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_playPatrolAnim -->",
    "docSyntax": "<!-- [] call BIN_fnc_playPatrolAnim -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_playPatrolAnimDone": {
    "command": "BIN_fnc_playPatrolAnimDone",
    "timestamp": "2021-02-01T18:10:48Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_playPatrolAnimDone -->",
    "docSyntax": "<!-- [] call BIN_fnc_playPatrolAnimDone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_postInit": {
    "command": "BIN_fnc_postInit",
    "timestamp": "2021-02-01T18:10:22Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_postInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_postInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_preInit": {
    "command": "BIN_fnc_preInit",
    "timestamp": "2021-02-01T18:09:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_preInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_preInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_preInitEM": {
    "command": "BIN_fnc_preInitEM",
    "timestamp": "2021-02-01T18:09:58Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_preInitEM -->",
    "docSyntax": "<!-- [] call BIN_fnc_preInitEM -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_preInitIDWMap": {
    "command": "BIN_fnc_preInitIDWMap",
    "timestamp": "2021-02-01T18:10:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_preInitIDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_preInitIDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Should be called from preInit, contains saving/loading functions as well as default initisalization Parameter(s): \n0: STRING - preInit pass through \nReturns: NOTHING \nExample: // from preinit script call BIN_fnc_preInitIDWMap",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_preInitTXScan": {
    "command": "BIN_fnc_preInitTXScan",
    "timestamp": "2021-02-01T18:10:16Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_preInitTXScan -->",
    "docSyntax": "<!-- [] call BIN_fnc_preInitTXScan -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Should be called from preInit, contains saving/loading functions as well as default initisalization Parameter(s): \n0: STRING - \"preInit\" \nReturns: NOTHING \nExample: // from preinit script call BIN_fnc_preInitTXScan",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeAnim": {
    "command": "BIN_fnc_probeAnim",
    "timestamp": "2021-02-01T18:10:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeAnim -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeAnim -->",
    "tags": "",
    "description": "BIN_fnc_probeAnim Example \nusage: [probe,1] call BIN_fnc_probeAnim - expand probe core [probe,0] call BIN_fnc_probeAnim - retract probe core",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeCoreDelete": {
    "command": "BIN_fnc_probeCoreDelete",
    "timestamp": "2021-02-01T18:09:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeCoreDelete -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeCoreDelete -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeCoreEffects": {
    "command": "BIN_fnc_probeCoreEffects",
    "timestamp": "2021-02-01T18:10:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeCoreEffects -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeCoreEffects -->",
    "tags": "",
    "description": "BIN_fnc_probeCoreEffects [probeCore] call BIN_fnc_probeCoreEffects",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeCoreInit": {
    "command": "BIN_fnc_probeCoreInit",
    "timestamp": "2021-02-01T18:10:23Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeCoreInit -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeCoreInit -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeCoreLegsDestroyed": {
    "command": "BIN_fnc_probeCoreLegsDestroyed",
    "timestamp": "2021-02-01T18:11:03Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeCoreLegsDestroyed -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeCoreLegsDestroyed -->",
    "tags": "",
    "description": "BIN_fnc_probeCoreLegsDestroyed",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeCoreUpdate": {
    "command": "BIN_fnc_probeCoreUpdate",
    "timestamp": "2021-02-01T18:10:01Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeCoreUpdate -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeCoreUpdate -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeDelete": {
    "command": "BIN_fnc_probeDelete",
    "timestamp": "2021-02-01T18:11:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeDelete -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeDelete -->",
    "tags": "",
    "description": "BIN_fnc_probeDelete",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeHitpoint": {
    "command": "BIN_fnc_probeHitpoint",
    "timestamp": "2021-02-01T18:10:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeHitpoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeHitpoint -->",
    "tags": "",
    "description": "BIN_fnc_probeHitpoint Spawns particle effects & sound Function is connected to probe hitpoint and can be also manually triggered via calling following \ncode: * [cursorObject,1,true] call BIN_fnc_probeHitpoint - destroy hitpoint with index 1",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_probeVeinHitpoint": {
    "command": "BIN_fnc_probeVeinHitpoint",
    "timestamp": "2021-02-01T18:09:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_probeVeinHitpoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_probeVeinHitpoint -->",
    "tags": "",
    "description": "BIN_fnc_probeVeinHitpoint Animate vein & spawn sound \nInput: Dammaged EH",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_ProbingArm_fired": {
    "command": "BIN_fnc_ProbingArm_fired",
    "timestamp": "2021-02-01T16:49:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_ProbingArm_fired -->",
    "docSyntax": "<!-- [] call BIN_fnc_ProbingArm_fired -->",
    "tags": "",
    "description": "BIN_fnc_probingArm_fired",
    "example": "[] call BIN_fnc_ProbingArm_fired;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_ProbingBeam_fired": {
    "command": "BIN_fnc_ProbingBeam_fired",
    "timestamp": "2021-01-22T21:43:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_ProbingBeam_fired -->",
    "docSyntax": "<!-- [] call BIN_fnc_ProbingBeam_fired -->",
    "tags": "",
    "description": "BIN_fnc_probingBeam_fired",
    "example": "[] call BIN_fnc_ProbingBeam_fired;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_ProbingBeam_sendData": {
    "command": "BIN_fnc_ProbingBeam_sendData",
    "timestamp": "2021-02-01T16:45:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_ProbingBeam_sendData -->",
    "docSyntax": "<!-- [] call BIN_fnc_ProbingBeam_sendData -->",
    "tags": "",
    "description": "BIS_fnc_ProbingBeam_sendData",
    "example": "[] call BIN_fnc_ProbingBeam_sendData;",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_prototypeCannon_01_ai": {
    "command": "BIN_fnc_prototypeCannon_01_ai",
    "timestamp": "2021-02-01T18:10:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_prototypeCannon_01_ai -->",
    "docSyntax": "<!-- [] call BIN_fnc_prototypeCannon_01_ai -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_prototypeCannon_01_player": {
    "command": "BIN_fnc_prototypeCannon_01_player",
    "timestamp": "2021-02-01T18:09:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_prototypeCannon_01_player -->",
    "docSyntax": "<!-- [] call BIN_fnc_prototypeCannon_01_player -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_prototypeCannon_01_slaved": {
    "command": "BIN_fnc_prototypeCannon_01_slaved",
    "timestamp": "2021-02-01T18:09:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_prototypeCannon_01_slaved -->",
    "docSyntax": "<!-- [] call BIN_fnc_prototypeCannon_01_slaved -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_puzzle_mole": {
    "command": "BIN_fnc_puzzle_mole",
    "timestamp": "2021-02-01T18:10:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_puzzle_mole -->",
    "docSyntax": "<!-- [] call BIN_fnc_puzzle_mole -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_puzzle_outlier": {
    "command": "BIN_fnc_puzzle_outlier",
    "timestamp": "2021-02-01T18:10:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_puzzle_outlier -->",
    "docSyntax": "<!-- [] call BIN_fnc_puzzle_outlier -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_reactRadio": {
    "command": "BIN_fnc_reactRadio",
    "timestamp": "2021-02-01T18:10:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_reactRadio -->",
    "docSyntax": "<!-- [] call BIN_fnc_reactRadio -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_reactRadio_Base": {
    "command": "BIN_fnc_reactRadio_Base",
    "timestamp": "2021-02-01T18:10:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_reactRadio_Base -->",
    "docSyntax": "<!-- [] call BIN_fnc_reactRadio_Base -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_reactRadio_Player": {
    "command": "BIN_fnc_reactRadio_Player",
    "timestamp": "2021-02-01T18:10:46Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_reactRadio_Player -->",
    "docSyntax": "<!-- [] call BIN_fnc_reactRadio_Player -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_reactRadio_Squad": {
    "command": "BIN_fnc_reactRadio_Squad",
    "timestamp": "2021-02-01T18:09:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_reactRadio_Squad -->",
    "docSyntax": "<!-- [] call BIN_fnc_reactRadio_Squad -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_recordSignal": {
    "command": "BIN_fnc_recordSignal",
    "timestamp": "2021-02-01T18:10:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_recordSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_recordSignal -->",
    "tags": "",
    "description": "\nDescription: Add signal to the library. Parameter(s): \n0: STRING - antenna ID (its currently transmitted signal will be used) or signal class from CfgContact >> Signals \nReturns: BOOL - true if added",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_resetPuzzle": {
    "command": "BIN_fnc_resetPuzzle",
    "timestamp": "2021-02-01T18:10:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_resetPuzzle -->",
    "docSyntax": "<!-- [] call BIN_fnc_resetPuzzle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_revealAntenna": {
    "command": "BIN_fnc_revealAntenna",
    "timestamp": "2021-02-01T18:10:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_revealAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_revealAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_revealFrequency": {
    "command": "BIN_fnc_revealFrequency",
    "timestamp": "2021-02-01T18:10:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_revealFrequency -->",
    "docSyntax": "<!-- [] call BIN_fnc_revealFrequency -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_saveIDWMap": {
    "command": "BIN_fnc_saveIDWMap",
    "timestamp": "2021-02-01T18:10:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_saveIDWMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_saveIDWMap -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Saves IDWMap data into global variable 'BIN_fnc_IDWMap_saveData' so that it can be serialised and then loaded from game save when needed Parameter(s): NONE \nReturns: BOOL - true on success \nExample: call BIN_fnc_saveIDWMap",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_saveTXScanState": {
    "command": "BIN_fnc_saveTXScanState",
    "timestamp": "2021-02-01T18:10:21Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_saveTXScanState -->",
    "docSyntax": "<!-- [] call BIN_fnc_saveTXScanState -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Saves TXScan data into global variables so that it can be serialised and then loaded from game save when needed Parameter(s): NONE \nReturns: BOOL - true on success \nExample: call BIN_fnc_saveTXScanState",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_savingEnabled": {
    "command": "BIN_fnc_savingEnabled",
    "timestamp": "2021-02-01T18:10:25Z",
    "version": "1.94",
    "syntax": "call BIN_fnc_savingEnabled",
    "docSyntax": "call BIN_fnc_savingEnabled",
    "tags": "",
    "description": "Returns the value of icmissionNamespace getVariable [\"bin_enableSaving\", true] Featurearma3contact",
    "example": "== (missionNamespace getVariable [\"bin_enableSaving\", true]); true",
    "params": "",
    "returns": "boolean"
  },
  "BIN_fnc_scan": {
    "command": "BIN_fnc_scan",
    "timestamp": "2021-02-01T18:09:51Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_scan -->",
    "docSyntax": "<!-- [] call BIN_fnc_scan -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_scanObject": {
    "command": "BIN_fnc_scanObject",
    "timestamp": "2021-02-01T18:10:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_scanObject -->",
    "docSyntax": "<!-- [] call BIN_fnc_scanObject -->",
    "tags": "",
    "description": "pre#define VAR_END \"BIN_fnc_scanObject_end\" #define END_NONE 0 #define END_RETURN 1 #define END_DROP 2 #define CURVE_POS [[0,0,0],[0.5,0,0],[0.5,1,0],[1,1,0]] #define CURVE_ROT [[0,0,0],[0,1,0],[0.75,1,0]]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_scanTX": {
    "command": "BIN_fnc_scanTX",
    "timestamp": "2021-02-01T18:11:05Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_scanTX -->",
    "docSyntax": "<!-- [] call BIN_fnc_scanTX -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Intersects current scan polygon (or map square if no scan exists) with triangle originated from RX position and returns the triangle Parameter(s): \n0: STRING - scan name \n1: ARRAY (Optional) - RX position. \nDefault: position player \nReturns: ARRAY - triangle used for intersection \nExample: [\"MyScan\", position player] call BIN_fnc_scanTX",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_selectDiaryCategory": {
    "command": "BIN_fnc_selectDiaryCategory",
    "timestamp": "2021-02-01T18:10:16Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_selectDiaryCategory -->",
    "docSyntax": "<!-- [] call BIN_fnc_selectDiaryCategory -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_selectDiaryRecord": {
    "command": "BIN_fnc_selectDiaryRecord",
    "timestamp": "2021-02-01T18:09:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_selectDiaryRecord -->",
    "docSyntax": "<!-- [] call BIN_fnc_selectDiaryRecord -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_selectDiaryTask": {
    "command": "BIN_fnc_selectDiaryTask",
    "timestamp": "2021-02-01T18:10:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_selectDiaryTask -->",
    "docSyntax": "<!-- [] call BIN_fnc_selectDiaryTask -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_sendPing": {
    "command": "BIN_fnc_sendPing",
    "timestamp": "2021-02-01T18:09:50Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_sendPing -->",
    "docSyntax": "<!-- [] call BIN_fnc_sendPing -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_sendRadioSignal": {
    "command": "BIN_fnc_sendRadioSignal",
    "timestamp": "2021-02-01T18:09:59Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_sendRadioSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_sendRadioSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAISquadID": {
    "command": "BIN_fnc_setAISquadID",
    "timestamp": "2021-02-01T18:10:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAISquadID -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAISquadID -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntenna": {
    "command": "BIN_fnc_setAntenna",
    "timestamp": "2021-02-01T18:11:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaAngle": {
    "command": "BIN_fnc_setAntennaAngle",
    "timestamp": "2021-02-01T18:09:24Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaAngle -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaAngle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaCanReveal": {
    "command": "BIN_fnc_setAntennaCanReveal",
    "timestamp": "2021-02-01T18:11:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaCanReveal -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaCanReveal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaClass": {
    "command": "BIN_fnc_setAntennaClass",
    "timestamp": "2021-02-01T18:10:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaClass -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaClass -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaFrequency": {
    "command": "BIN_fnc_setAntennaFrequency",
    "timestamp": "2021-02-01T18:11:08Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaFrequency -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaFrequency -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaFrequencyFromList": {
    "command": "BIN_fnc_setAntennaFrequencyFromList",
    "timestamp": "2021-02-01T18:09:44Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaFrequencyFromList -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaFrequencyFromList -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaGain": {
    "command": "BIN_fnc_setAntennaGain",
    "timestamp": "2021-02-01T18:10:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaGain -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaGain -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaName": {
    "command": "BIN_fnc_setAntennaName",
    "timestamp": "2021-02-01T18:10:20Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaName -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaName -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaObject": {
    "command": "BIN_fnc_setAntennaObject",
    "timestamp": "2021-02-01T18:10:33Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaObject -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaObject -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaPower": {
    "command": "BIN_fnc_setAntennaPower",
    "timestamp": "2021-02-01T18:10:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaPower -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaPower -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaRevealValue": {
    "command": "BIN_fnc_setAntennaRevealValue",
    "timestamp": "2021-02-01T18:10:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaRevealValue -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaRevealValue -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaScans": {
    "command": "BIN_fnc_setAntennaScans",
    "timestamp": "2021-02-01T18:11:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaScans -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaScans -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaSensitivity": {
    "command": "BIN_fnc_setAntennaSensitivity",
    "timestamp": "2021-02-01T18:11:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaSensitivity -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaSensitivity -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setAntennaType": {
    "command": "BIN_fnc_setAntennaType",
    "timestamp": "2021-02-01T18:09:25Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setAntennaType -->",
    "docSyntax": "<!-- [] call BIN_fnc_setAntennaType -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setBehavior": {
    "command": "BIN_fnc_setBehavior",
    "timestamp": "2021-02-01T18:10:17Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setBehavior -->",
    "docSyntax": "<!-- [] call BIN_fnc_setBehavior -->",
    "tags": "",
    "description": "pre#define DEBUG #define HISTORY_CAPACITY 5 #define TERMINATE_DEFAULT 1 #define TERMINATE_INTERRUPT 2 #define BEHAVIOR_PATH \"a3\\Functions_F_Contact\\Behavior\\Drone\\\"",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setBehaviorCoef": {
    "command": "BIN_fnc_setBehaviorCoef",
    "timestamp": "2021-02-01T18:10:56Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setBehaviorCoef -->",
    "docSyntax": "<!-- [] call BIN_fnc_setBehaviorCoef -->",
    "tags": "",
    "description": "BIN_fnc_setBehaviorCoef Set behavior coefficients \nExamples: [bin_drone,\"gravityCannon\",0] call BIN_fnc_setBehaviorCoef",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setBreathe": {
    "command": "BIN_fnc_setBreathe",
    "timestamp": "2021-02-01T18:10:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setBreathe -->",
    "docSyntax": "<!-- [] call BIN_fnc_setBreathe -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setCurrentSignal": {
    "command": "BIN_fnc_setCurrentSignal",
    "timestamp": "2021-02-01T18:09:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setCurrentSignal -->",
    "docSyntax": "<!-- [] call BIN_fnc_setCurrentSignal -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setCustomSoundController": {
    "command": "BIN_fnc_setCustomSoundController",
    "timestamp": "2021-02-01T18:10:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setCustomSoundController -->",
    "docSyntax": "<!-- [] call BIN_fnc_setCustomSoundController -->",
    "tags": "",
    "description": "BIN_fnc_setCustomSoundController \na: reyhard",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setDiaryRecord": {
    "command": "BIN_fnc_setDiaryRecord",
    "timestamp": "2021-02-01T18:10:13Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setDiaryRecord -->",
    "docSyntax": "<!-- [] call BIN_fnc_setDiaryRecord -->",
    "tags": "",
    "description": "pre#define DEFAULT_TEXT \"~\"",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setDroneModuleParams": {
    "command": "BIN_fnc_setDroneModuleParams",
    "timestamp": "2021-02-01T18:10:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setDroneModuleParams -->",
    "docSyntax": "<!-- [] call BIN_fnc_setDroneModuleParams -->",
    "tags": "",
    "description": "BIN_fnc_setDroneModuleParams",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setDroneModuleTarget": {
    "command": "BIN_fnc_setDroneModuleTarget",
    "timestamp": "2021-02-01T18:10:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setDroneModuleTarget -->",
    "docSyntax": "<!-- [] call BIN_fnc_setDroneModuleTarget -->",
    "tags": "",
    "description": "BIN_fnc_setDroneModuleTarget",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setGravityPulse": {
    "command": "BIN_fnc_setGravityPulse",
    "timestamp": "2021-02-01T18:11:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setGravityPulse -->",
    "docSyntax": "<!-- [] call BIN_fnc_setGravityPulse -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setIDWMapDrawColorSet": {
    "command": "BIN_fnc_setIDWMapDrawColorSet",
    "timestamp": "2021-02-01T18:11:02Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setIDWMapDrawColorSet -->",
    "docSyntax": "<!-- [] call BIN_fnc_setIDWMapDrawColorSet -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets map draw color set Parameter(s): ARRAY - array of colors from 1 to 11 \nReturns: BOOL - true on success \nExample: // set 3 color drawing on the fly [[0,0,0.514,0.7],[0.843,1,0.153,0.7],[0.522,0,0,0.7]] call BIN_fnc_setIDWMapDrawColorSet; // set from config [] call BIN_fnc_setIDWMapDrawColorSet; */ #define MAPDRAWCOLORSET_DEFAULT [[0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7]]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setIDWMapDrawPatternIndex": {
    "command": "BIN_fnc_setIDWMapDrawPatternIndex",
    "timestamp": "2021-02-01T18:09:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setIDWMapDrawPatternIndex -->",
    "docSyntax": "<!-- [] call BIN_fnc_setIDWMapDrawPatternIndex -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets map draw pattern Parameter(s): NUMBER - \npattern: 0 - triangles, 1 - diamonds, 2 - squares, 3 - diamonds overlapped \nReturns: BOOL - true on success \nExample: // set on the fly 3 call BIN_fnc_setIDWMapDrawPatternIndex; OR [3] call BIN_fnc_setIDWMapDrawPatternIndex; // set from config call BIN_fnc_setIDWMapDrawPatternIndex; OR [] call BIN_fnc_setIDWMapDrawPatternIndex; */ #define MAPDRAWPATTERNINDEX_DEFAULT 0",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setIDWMapParams": {
    "command": "BIN_fnc_setIDWMapParams",
    "timestamp": "2021-02-01T18:10:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setIDWMapParams -->",
    "docSyntax": "<!-- [] call BIN_fnc_setIDWMapParams -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Resets extension data, sets IDWMap params from argument, from config or default *** This function must be called before any data is added to the IDWMap *** Parameter(s): \n0: ARRAY - (Optional) areaParams in \nformat: \n0: NUMBER - minMapX \n1: NUMBER - minMapY \n2: NUMBER - maxMapX \n3: NUMBER - maxMapY \nDefault: [0, 0, worldSize, worldSize] \n1: NUMBER (Optional) - idwCellSize. \nDefault: 20 \n2: NUMBER (Optional) - idwSpreadRadius. \nDefault: 200 \n3: NUMBER (Optional) - idwSpreadPower. \nDefault: 2.0 \n4: NUMBER (Optional) - curvePointsInterval. \nDefault: 20 \n5: NUMBER (Optional) - curvePointSpreadRadius. \nDefault: idwSpreadRadius \nReturns: BOOL - true on success \nExample: call BIN_fnc_setIDWMapParams",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setIDWMapStaticDataLayers": {
    "command": "BIN_fnc_setIDWMapStaticDataLayers",
    "timestamp": "2021-02-01T18:23:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setIDWMapStaticDataLayers -->",
    "docSyntax": "<!-- [] call BIN_fnc_setIDWMapStaticDataLayers -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets static data for extension use from argument or config \"CfgIDWMap\" Parameter(s): ARRAY (optional) - static data in \nformat: [ [[x,y,strengh],[x,y,strengh],...], // data layer 0 [[x,y,strengh],[x,y,strengh],...], // data layer 1 ... [[x,y,strengh],[x,y,strengh],...] // data layer N ] \nReturns: BOOL - true on success \nExample: call BIN_fnc_setIDWMapStaticDataLayers",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setModuleSpeed": {
    "command": "BIN_fnc_setModuleSpeed",
    "timestamp": "2021-02-01T18:09:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setModuleSpeed -->",
    "docSyntax": "<!-- [] call BIN_fnc_setModuleSpeed -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setMoveProperties": {
    "command": "BIN_fnc_setMoveProperties",
    "timestamp": "2021-02-01T18:10:19Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setMoveProperties -->",
    "docSyntax": "<!-- [] call BIN_fnc_setMoveProperties -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setObjectGrid": {
    "command": "BIN_fnc_setObjectGrid",
    "timestamp": "2021-02-01T18:10:24Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setObjectGrid -->",
    "docSyntax": "<!-- [] call BIN_fnc_setObjectGrid -->",
    "tags": "",
    "description": "pre#define DEBUG #define COST_DISABLED 1000",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setPlayerSelectedBand": {
    "command": "BIN_fnc_setPlayerSelectedBand",
    "timestamp": "2021-02-01T18:10:06Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setPlayerSelectedBand -->",
    "docSyntax": "<!-- [] call BIN_fnc_setPlayerSelectedBand -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setPointOfInterest": {
    "command": "BIN_fnc_setPointOfInterest",
    "timestamp": "2021-02-01T18:11:10Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setPointOfInterest -->",
    "docSyntax": "<!-- [] call BIN_fnc_setPointOfInterest -->",
    "tags": "",
    "description": "\nDescription: Add point of interest shown in the map Parameter(s): \n0: STRING - unique ID of the point \n1: BOOL - true if the point is completed (shown faded in the map) NUMBER - status, can \nbe: -\n1: dormant, will be activated when player gets close \n0: shown, but not completed +\n1: completed \n2: ARRAY - position \n3: ARRAY - area in format [width,height,angle,isRectangle] \n4: STRING - type, can be \"Unknown\" or \"Warning\" (\ndefault: \"Unknown\") \n5: STRING - color, can be \"Black\", \"Blue\" or \"Red\" (\ndefault: \"Black\") or \n0: OBJECT - \"Point of interest\" module \nReturns: STRING - ID of the point \nExamples: //--- Activate existing module _myID = myModule call BIN_fnc_setPointOfInterest; //--- Mark POI as completed [_myID,true] call BIN_fnc_setPointOfInterest; //--- Set custom POI [\"myID\",false,position myObject,[50,50,0,false],\"Warning\",\"Red\"] call BIN_fnc_setPointOfInterest; //--- Set custom POI using default type and color [\"myID\",false,position myObject,[50,50,0,false]] call BIN_fnc_setPointOfInterest; */ #define VAR \"bin_POIs\" #define TASK_PRIORITY 2 #define REVEAL_DISTANCE 100 #define POS_DEFAULT [] #define AREA_DEFAULT [] #define TYPE_DEFAULT \"\" #define COLOR_DEFAULT \"\" #define STATUS_DEFAULT 0",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setRadioConversation": {
    "command": "BIN_fnc_setRadioConversation",
    "timestamp": "2021-02-01T18:10:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setRadioConversation -->",
    "docSyntax": "<!-- [] call BIN_fnc_setRadioConversation -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setRadioHandshake": {
    "command": "BIN_fnc_setRadioHandshake",
    "timestamp": "2021-02-01T18:10:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setRadioHandshake -->",
    "docSyntax": "<!-- [] call BIN_fnc_setRadioHandshake -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setRadioSilence": {
    "command": "BIN_fnc_setRadioSilence",
    "timestamp": "2021-02-01T18:10:43Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setRadioSilence -->",
    "docSyntax": "<!-- [] call BIN_fnc_setRadioSilence -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setRagdoll": {
    "command": "BIN_fnc_setRagdoll",
    "timestamp": "2021-02-01T18:09:32Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setRagdoll -->",
    "docSyntax": "<!-- [] call BIN_fnc_setRagdoll -->",
    "tags": "",
    "description": "\nInput: \n0: _unit [object] - Name of unit (works only with man type units) \n1: _force [vector] - Amount of force that will be applied to colliding object \n2: _position [string] (optional) - Name of selection from which it will try to calculate center point (\ndefault: spine1) \nUsage: [player,[0,100,0]] call BIN_fnc_setRagdoll -",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setSite": {
    "command": "BIN_fnc_setSite",
    "timestamp": "2021-02-01T18:10:02Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setSite -->",
    "docSyntax": "<!-- [] call BIN_fnc_setSite -->",
    "tags": "",
    "description": "pre#define DEBUG #define ALPHA_ON 1.0 #define ALPHA_OFF 0.4 #define DRAW(SHOW)\\ _color = [[1,0,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,1],[1,0,1,1],[0,1,1,1],[1,0.5,0,1]] select ((_logic getvariable [\"#index\",0]) % 7);\\ if !(SHOW) then {_color set [3,0.4];};\\ _drawIcon = [\"\\a3\\Ui_f\\data\\Map\\LocationTypes\\borderCrossing_CA.paa\",_color,position _logic,0.75,0.75,0,_class,2,0.04,\"RobotoCondensed\",\"right\"];\\ [\"bin_diagSites\",_class,\"icon\",[_drawIcon]] call BIN_fnc_debugDraw;\\ _isRectangle = false;\\ _drawArea = if (SHOW) then {\\ _areaOut = _logic getvariable [\"areaOut\",[position _logic,0,0,0,false]];\\ _isRectangle = _areaOut select 4;\\ [_areaOut select 0,_areaOut select 1,_areaOut select 2,_areaOut select 3,_color,\"\"]\\ } else {\\ _areaIn = _logic getvariable [\"areaIn\",[position _logic,0,0,0,false]];\\ _isRectangle = _areaIn select 4;\\ [_areaIn select 0,_areaIn select 1,_areaIn select 2,_areaIn select 3,_color,\"\"]\\ };\\ [\"bin_diagSites\",_class,if (_isRectangle) then {\"rectangle\"} else {\"ellipse\"},[_drawArea]] call BIN_fnc_debugDraw; #define VAR_IGNORE \"$i\" #define VAR_KILL \"$k\" #define VAR_VISITED \"$v\" #define VAR_SPAWNED \"#spawned\"",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setSpectrumAnalyzer": {
    "command": "BIN_fnc_setSpectrumAnalyzer",
    "timestamp": "2021-02-01T18:10:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setSpectrumAnalyzer -->",
    "docSyntax": "<!-- [] call BIN_fnc_setSpectrumAnalyzer -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTargetWeight": {
    "command": "BIN_fnc_setTargetWeight",
    "timestamp": "2021-02-01T18:09:49Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTargetWeight -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTargetWeight -->",
    "tags": "",
    "description": "BIN_fnc_setTargetWeight Set target priroty which is used later by BIN_fnc_findTargetWeight function to find target. \nInput: \n0: _input - Unit, vehicle, group or side. \n1: _value - scalar above 0 - weight which is later used by selectRandomWeighted script command. Values equal or less than 0 are excluded from target selection \nExamples: [west,0] call BIN_fnc_setTargetWeight - all units from side \"west\" will be ignored by targeting system [player,10] call BIN_fnc_setTargetWeight - Increase player chance of being targeted by drone weapons [bis_car,0] call BIN_fnc_setTargetWeight - Vehicle & it is crew will be ignored by targeting system",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTXScanAngle": {
    "command": "BIN_fnc_setTXScanAngle",
    "timestamp": "2021-02-01T18:10:01Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTXScanAngle -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTXScanAngle -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets TXScan angle Parameter(s): \n0: STRING - scan name \n1: NUMBER - cone angle \nReturns: BOOL - true on success \nExample: [\"MyScan\", 45] call BIN_fnc_setTXScanAngle",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTXScanPolygon": {
    "command": "BIN_fnc_setTXScanPolygon",
    "timestamp": "2021-02-01T18:11:07Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTXScanPolygon -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTXScanPolygon -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Pre-sets intersection polygon for given scan. Can only be done with newly created scans since once the first scan is made, the polygon cannot be overwritten Parameter(s): \n0: STRING - TXScan name \n1: ARRAY - polygon points \nReturns: BOOL - false on error \nExample: [\"MyScan\",[p1,p2,p3...]] call BIN_fnc_setTXScanPolygon",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTXScanPosition": {
    "command": "BIN_fnc_setTXScanPosition",
    "timestamp": "2021-02-01T18:10:00Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTXScanPosition -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTXScanPosition -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets TXScan transmitter position Parameter(s): \n0: STRING - scan name \n1: ARRAY - transmitter position \nReturns: BOOL - true on success \nExample: [\"MyScan\", position player] call BIN_fnc_setTXScanPosition",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTXScanPrecision": {
    "command": "BIN_fnc_setTXScanPrecision",
    "timestamp": "2021-02-01T18:09:41Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTXScanPrecision -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTXScanPrecision -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets TXScan precision Parameter(s): \n0: STRING - scan name \n1: NUMBER - cone precision \nReturns: BOOL - true on success \nExample: [\"MyScan\", 0.1] call BIN_fnc_setTXScanPrecision",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_setTXScanWorldBounds": {
    "command": "BIN_fnc_setTXScanWorldBounds",
    "timestamp": "2021-02-01T18:10:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_setTXScanWorldBounds -->",
    "docSyntax": "<!-- [] call BIN_fnc_setTXScanWorldBounds -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Sets map bounds in which scans could be carried out. Default [0,0,worldSize,worldSize] Parameter(s): \n0: NUMBER - minX \n1: NUMBER - minY \n2: NUMBER - maxX \n3: NUMBER - maxY or [] to use config values or default \nReturns: BOOL - true on success \nExample: [0,0,worldSize,worldSize] call BIN_fnc_setTXScanWorldBounds [] call BIN_fnc_setTXScanWorldBounds */ // get user params",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showAntennaIcon": {
    "command": "BIN_fnc_showAntennaIcon",
    "timestamp": "2021-02-01T18:11:11Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showAntennaIcon -->",
    "docSyntax": "<!-- [] call BIN_fnc_showAntennaIcon -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showAntennaIcons": {
    "command": "BIN_fnc_showAntennaIcons",
    "timestamp": "2021-02-01T18:10:22Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showAntennaIcons -->",
    "docSyntax": "<!-- [] call BIN_fnc_showAntennaIcons -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showCurrentTask": {
    "command": "BIN_fnc_showCurrentTask",
    "timestamp": "2021-02-01T18:10:18Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showCurrentTask -->",
    "docSyntax": "<!-- [] call BIN_fnc_showCurrentTask -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showHorizontalCompass": {
    "command": "BIN_fnc_showHorizontalCompass",
    "timestamp": "2021-02-01T18:09:57Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showHorizontalCompass -->",
    "docSyntax": "<!-- [] call BIN_fnc_showHorizontalCompass -->",
    "tags": "",
    "description": "\nDescription: Show or hide horizontal compass Parameter(s): \n0: BOOL - true to show, false to hide \nReturns: NOTHING",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showMapOptions": {
    "command": "BIN_fnc_showMapOptions",
    "timestamp": "2021-02-01T18:10:34Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showMapOptions -->",
    "docSyntax": "<!-- [] call BIN_fnc_showMapOptions -->",
    "tags": "",
    "description": "\nDescription: Select which maps will be available Parameter(s): \n0: NUMBER - mode, can \nbe: 0 - all options available (default) 1 - probe map not available 2 - no options available (i.e., only main map is shown) \nReturns: NOTHING */ #define VAR \"BIN_fnc_showMapOptions_mode\" //--- Spawn to prevent disableSerialization affecting the script from which the function is called",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showPlayerSpectrumAnalyzer": {
    "command": "BIN_fnc_showPlayerSpectrumAnalyzer",
    "timestamp": "2021-02-01T18:11:04Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showPlayerSpectrumAnalyzer -->",
    "docSyntax": "<!-- [] call BIN_fnc_showPlayerSpectrumAnalyzer -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showSimpleNotification": {
    "command": "BIN_fnc_showSimpleNotification",
    "timestamp": "2021-02-01T18:10:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showSimpleNotification -->",
    "docSyntax": "<!-- [] call BIN_fnc_showSimpleNotification -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showSpectrumAnalyzer": {
    "command": "BIN_fnc_showSpectrumAnalyzer",
    "timestamp": "2021-02-01T18:10:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzer -->",
    "docSyntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzer -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showSpectrumAnalyzerGUI": {
    "command": "BIN_fnc_showSpectrumAnalyzerGUI",
    "timestamp": "2021-02-01T18:10:37Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerGUI -->",
    "docSyntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerGUI -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showSpectrumAnalyzerMuzzle": {
    "command": "BIN_fnc_showSpectrumAnalyzerMuzzle",
    "timestamp": "2021-02-01T18:10:53Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerMuzzle -->",
    "docSyntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerMuzzle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showSpectrumAnalyzerPiP": {
    "command": "BIN_fnc_showSpectrumAnalyzerPiP",
    "timestamp": "2021-02-01T18:10:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerPiP -->",
    "docSyntax": "<!-- [] call BIN_fnc_showSpectrumAnalyzerPiP -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_showVision": {
    "command": "BIN_fnc_showVision",
    "timestamp": "2021-02-01T18:10:40Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_showVision -->",
    "docSyntax": "<!-- [] call BIN_fnc_showVision -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_skip": {
    "command": "BIN_fnc_skip",
    "timestamp": "2021-02-01T18:10:46Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_skip -->",
    "docSyntax": "<!-- [] call BIN_fnc_skip -->",
    "tags": "",
    "description": "pre//#define TIME_SKIP 1.4 // Apex #define TIME_SKIP 0.5",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_soundDrone": {
    "command": "BIN_fnc_soundDrone",
    "timestamp": "2021-02-01T18:09:42Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_soundDrone -->",
    "docSyntax": "<!-- [] call BIN_fnc_soundDrone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_switchMap": {
    "command": "BIN_fnc_switchMap",
    "timestamp": "2021-02-01T18:10:15Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_switchMap -->",
    "docSyntax": "<!-- [] call BIN_fnc_switchMap -->",
    "tags": "",
    "description": "pre//disableserialization;",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_taskActive": {
    "command": "BIN_fnc_taskActive",
    "timestamp": "2021-02-01T18:09:29Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_taskActive -->",
    "docSyntax": "<!-- [] call BIN_fnc_taskActive -->",
    "tags": "",
    "description": "\nDescription: Return if task is active, i.e., added to player, but not yet completed. Only in this state can player assign it. Parameter(s): \n0: STRING - task ID \nReturns: BOOL \nExample: if (\"q_schnobble\" call BIN_fnc_taskActive) then {hint \"ACTIVE!\";};",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_taskAdded": {
    "command": "BIN_fnc_taskAdded",
    "timestamp": "2021-02-01T18:10:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_taskAdded -->",
    "docSyntax": "<!-- [] call BIN_fnc_taskAdded -->",
    "tags": "",
    "description": "\nDescription: Return if task was added to player. Includes both finished and unfinished tasks. Parameter(s): \n0: STRING - task ID \nReturns: BOOL \nExample: if (\"q_schnobble\" call BIN_fnc_taskAdded) then {hint \"ADDED!\";};",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_terminatePuzzle": {
    "command": "BIN_fnc_terminatePuzzle",
    "timestamp": "2021-02-01T18:09:52Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_terminatePuzzle -->",
    "docSyntax": "<!-- [] call BIN_fnc_terminatePuzzle -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_translationDone": {
    "command": "BIN_fnc_translationDone",
    "timestamp": "2021-02-01T18:10:43Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_translationDone -->",
    "docSyntax": "<!-- [] call BIN_fnc_translationDone -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_travelToPoint": {
    "command": "BIN_fnc_travelToPoint",
    "timestamp": "2021-02-01T18:09:30Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_travelToPoint -->",
    "docSyntax": "<!-- [] call BIN_fnc_travelToPoint -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_tvSaveExpanded": {
    "command": "BIN_fnc_tvSaveExpanded",
    "timestamp": "2021-02-01T18:10:31Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_tvSaveExpanded -->",
    "docSyntax": "<!-- [] call BIN_fnc_tvSaveExpanded -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateEM": {
    "command": "BIN_fnc_updateEM",
    "timestamp": "2021-02-01T18:10:09Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateEM -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateEM -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateGravityPulse": {
    "command": "BIN_fnc_updateGravityPulse",
    "timestamp": "2021-02-01T18:09:26Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateGravityPulse -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateGravityPulse -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateIDWMapDrawData": {
    "command": "BIN_fnc_updateIDWMapDrawData",
    "timestamp": "2021-02-01T18:09:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateIDWMapDrawData -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateIDWMapDrawData -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Retrieves draw data for IDWMap and stores it in 'IDWMapDrawData' variable on map control for use in 'Draw' event handler. Should be called in scheduled environment to spread the load. Parameter(s): NONE \nReturns: BOOL - true on success if called from scheduled NOTHING - if called from unscheduled \nExample: call BIN_fnc_updateIDWMapDrawData",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updatePlayerAntenna": {
    "command": "BIN_fnc_updatePlayerAntenna",
    "timestamp": "2021-02-01T18:10:54Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updatePlayerAntenna -->",
    "docSyntax": "<!-- [] call BIN_fnc_updatePlayerAntenna -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updatePlayerInput": {
    "command": "BIN_fnc_updatePlayerInput",
    "timestamp": "2021-02-01T18:10:48Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updatePlayerInput -->",
    "docSyntax": "<!-- [] call BIN_fnc_updatePlayerInput -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updatePlayerSpectrumAnalyzer": {
    "command": "BIN_fnc_updatePlayerSpectrumAnalyzer",
    "timestamp": "2021-02-01T18:11:12Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updatePlayerSpectrumAnalyzer -->",
    "docSyntax": "<!-- [] call BIN_fnc_updatePlayerSpectrumAnalyzer -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updatePlayerSpectrumAnalyzerSounds": {
    "command": "BIN_fnc_updatePlayerSpectrumAnalyzerSounds",
    "timestamp": "2021-02-01T18:09:46Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updatePlayerSpectrumAnalyzerSounds -->",
    "docSyntax": "<!-- [] call BIN_fnc_updatePlayerSpectrumAnalyzerSounds -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateSignalDurations": {
    "command": "BIN_fnc_updateSignalDurations",
    "timestamp": "2021-02-01T18:09:45Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateSignalDurations -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateSignalDurations -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateSpectrumAnalyzerInput": {
    "command": "BIN_fnc_updateSpectrumAnalyzerInput",
    "timestamp": "2021-02-01T18:10:27Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateSpectrumAnalyzerInput -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateSpectrumAnalyzerInput -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_updateTXScanDrawData": {
    "command": "BIN_fnc_updateTXScanDrawData",
    "timestamp": "2021-02-01T18:09:39Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_updateTXScanDrawData -->",
    "docSyntax": "<!-- [] call BIN_fnc_updateTXScanDrawData -->",
    "tags": "",
    "description": "Killzone_Kid \nDescription: Retrieves draw data for TXScan and updates drawing Parameter(s): \n0: STRING - scan name, \"\" - all scans \nReturns: BOOL - true on success \nExample: \"myScan\" call BIN_fnc_updateTXScanDrawData \"\" call BIN_fnc_updateTXScanDrawData - all scans */ #define COLOR_DEFAULT [0,0,0,0.5], #define TEXTURE_DEFAULT \"\\A3\\ui_f\\data\\map\\markerbrushes\\fdiagonal_ca.paa\" #define ICON_DEFAULT [\"#(rgb,1,1,1)color(1,1,1,1)\",[0,0,0,0],[0,0,0],0,0,0]",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_vectorToEuler": {
    "command": "BIN_fnc_vectorToEuler",
    "timestamp": "2021-02-01T18:10:56Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_vectorToEuler -->",
    "docSyntax": "<!-- [] call BIN_fnc_vectorToEuler -->",
    "tags": "",
    "description": "pre//#define NEW",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_wpAddScript": {
    "command": "BIN_fnc_wpAddScript",
    "timestamp": "2021-02-01T18:10:38Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_wpAddScript -->",
    "docSyntax": "<!-- [] call BIN_fnc_wpAddScript -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_wpDroneMove": {
    "command": "BIN_fnc_wpDroneMove",
    "timestamp": "2021-02-01T18:10:47Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_wpDroneMove -->",
    "docSyntax": "<!-- [] call BIN_fnc_wpDroneMove -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_wpMoveFast": {
    "command": "BIN_fnc_wpMoveFast",
    "timestamp": "2021-02-01T18:10:55Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_wpMoveFast -->",
    "docSyntax": "<!-- [] call BIN_fnc_wpMoveFast -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIN_fnc_wpPatrol": {
    "command": "BIN_fnc_wpPatrol",
    "timestamp": "2021-02-01T18:10:58Z",
    "version": "1.94",
    "syntax": "<!-- [] call BIN_fnc_wpPatrol -->",
    "docSyntax": "<!-- [] call BIN_fnc_wpPatrol -->",
    "tags": "",
    "description": "Featurearma3contact",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_hasItem": {
    "command": "BIS_fnc_hasItem",
    "timestamp": "2021-01-23T09:26:38Z",
    "version": "1.94",
    "syntax": "[<object>, <string>, <boolean>] call BIS_fnc_hasItem",
    "docSyntax": "[object, item, searchCrew] call BIS_fnc_hasItem",
    "tags": "",
    "description": "Returns true if object contains given item in inventory / cargo storage. Feature important This function performs a deep search of inventory / cargo storage, thus is not suitable for per-frame execution.",
    "example": "[player, \"ItemMap\"] call BIS_fnc_hasItem;",
    "params": "<object> <string> <boolean>",
    "returns": "boolean | true"
  },
  "BIS_fnc_turretConfig": {
    "command": "BIS_fnc_turretConfig",
    "timestamp": "2021-04-20T16:42:46Z",
    "version": "1.94",
    "syntax": "[<object>, <array>] call BIS_fnc_turretConfig",
    "docSyntax": "[vehicle, turret] call BIS_fnc_turretConfig",
    "tags": "",
    "description": "Returns vehicle turret config for the turret given by the turret path.",
    "example": "getNumber ([\"B_APC_Wheeled_01_cannon_F\", [0,0]] call BIS_fnc_turretConfig >> \"hasGunner\") > 0;",
    "params": "<object> <array>",
    "returns": "config | confignull"
  },
  "BIS_fnc_vehicleCrewTurrets": {
    "command": "BIS_fnc_vehicleCrewTurrets",
    "timestamp": "2021-04-20T16:43:41Z",
    "version": "1.94",
    "syntax": "<object> call BIS_fnc_vehicleCrewTurrets",
    "docSyntax": "vehicle call BIS_fnc_vehicleCrewTurrets",
    "tags": "",
    "description": "Returns vehicle crew turrets, which will be filled with crew if createVehicleCrew command is executed on the vehicle. If vehicle class is passed as param, all vehicle crew turrets are returned.",
    "example": "\"B_APC_Wheeled_01_cannon_F\" call BIS_fnc_vehicleCrewTurrets;",
    "params": "<object>",
    "returns": "array"
  },
  "calculatePath": {
    "command": "calculatePath",
    "timestamp": "2021-01-22T21:36:33Z",
    "version": "1.94",
    "syntax": "calculatePath [<string>, <string>, <array>, <array>]",
    "docSyntax": "calculatePath [type, behaviour, from, to]",
    "tags": "",
    "description": "Spawns an agent that will execute an AI path calculation and fire the hl\"PathCalculated\" event handler. The vehicle type to simulate could be one of the following \npresets: * hl\"man\" (will use \"C_man_1\") * hl\"car\" (will use \"C_Offroad_01_F\") * hl\"tank\" (will use \"B_MBT_01_cannon_F\") * hl\"wheeled_APC\" (will use \"B_APC_Tracked_01_rcws_F\") * hl\"boat\" (will use \"C_Rubberboat\") * hl\"plane\" (will use \"B_Plane_CAS_01_dynamicLoadout_F\") * hl\"helicopter\" (will use \"B_Heli_Light_01_F\") If the given vehicle type is not one of the above presets, the exact given type is used. Feature important In order to guarantee that the event handler is added to the result of this command before the path is calculated, use Unscheduled \nEnvironment: code_this }] };</code>",
    "example": "calculatePath [\"car\", \"safe\", [2150.67,5778.19,0], [2184.11,5802.28,0]]",
    "params": "<string> <string> <array> <array>",
    "returns": "add the hl\"pathcalculated\" event handler to."
  },
  "getAudioOptionVolumes": {
    "command": "getAudioOptionVolumes",
    "timestamp": "2021-01-22T23:17:18Z",
    "version": "1.94",
    "syntax": "getAudioOptionVolumes",
    "docSyntax": "getAudioOptionVolumes",
    "tags": "",
    "description": "Returns profile audio volumes in format [effects, music, radio, von].",
    "example": "_volumeSettings = getAudioOptionVolumes;",
    "params": "",
    "returns": "array"
  },
  "getSubtitleOptions": {
    "command": "getSubtitleOptions",
    "timestamp": "2021-01-23T09:14:04Z",
    "version": "1.94",
    "syntax": "getSubtitleOptions",
    "docSyntax": "getSubtitleOptions",
    "tags": "",
    "description": "Returns subtitles settings.",
    "example": "_subtitleSettings = getSubtitleOptions;",
    "params": "",
    "returns": "array"
  },
  "lnbSetTooltip": {
    "command": "lnbSetTooltip",
    "timestamp": "2021-03-11T09:07:44Z",
    "version": "1.94",
    "syntax": "lnbSetTooltip [<number>, [<number>, <number>], <string>]",
    "docSyntax": "lnbSetTooltip [idc, [row, column], text]",
    "tags": "",
    "description": "Sets tooltip on the item with the given row and column of CT_LISTNBOX documentation.",
    "example": "lnbSetTooltip [1234, [1,0], \"tip\"];",
    "params": "<number> <number> <number> <string> <control> <number> <number> <string>",
    "returns": "nothing"
  },
  "BIS_fnc_3DENMissionStats": {
    "command": "BIS_fnc_3DENMissionStats",
    "timestamp": "2021-04-20T16:45:35Z",
    "version": "1.96",
    "syntax": "call BIS_fnc_3DENMissionStats",
    "docSyntax": "call BIS_fnc_3DENMissionStats",
    "tags": "",
    "description": "This functions does nothing.",
    "example": "-",
    "params": "",
    "returns": "-"
  },
  "BIS_fnc_compatibleMagazines": {
    "command": "BIS_fnc_compatibleMagazines",
    "timestamp": "2021-04-20T16:47:04Z",
    "version": "1.96",
    "syntax": "[<string>, <boolean>] call BIS_fnc_compatibleMagazines",
    "docSyntax": "[weapon, returnHidden] call BIS_fnc_compatibleMagazines",
    "tags": "",
    "description": "Gets all compatible magazines for selected weapons. Function looks both for magazines listed in magazines array and compatible magazineWells.",
    "example": "[\"arifle_mx_f\"] call BIS_fnc_compatibleMagazines;",
    "params": "<string> <boolean>",
    "returns": "array"
  },
  "BIS_fnc_parseNumberSafe": {
    "command": "BIS_fnc_parseNumberSafe",
    "timestamp": "2021-04-20T16:51:55Z",
    "version": "1.96",
    "syntax": "[<number>] call BIS_fnc_parseNumberSafe",
    "docSyntax": "[input] call BIS_fnc_parseNumberSafe",
    "tags": "",
    "description": "Converts expression into a number. Can also convert array of expressions into an array of numbers. If expression does not return a number, 0 is returned.",
    "example": "nowiki[</nowiki>safeZoneX,safeZoneWAbs,configFilenowiki]</nowiki> call BIS_fnc_parseNumberSafe; // Returns [-0.452381,1.90476,0]",
    "params": "<number>",
    "returns": "array of numbers if array is passed as an argument"
  },
  "BIS_fnc_respawnBackpack": {
    "command": "BIS_fnc_respawnBackpack",
    "timestamp": "2021-04-20T16:49:50Z",
    "version": "1.96",
    "syntax": "[] call BIS_fnc_respawnBackpack",
    "docSyntax": "[] call BIS_fnc_respawnBackpack",
    "tags": "",
    "description": "Handles respawn camps functionality. Whoever \"assembles\" a camp from backpack it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby players will receive the respawn position as well. FeatureImportantOnly for use with respawn camp event handlers!",
    "example": "-",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "BIS_fnc_setCustomSoundController": {
    "command": "BIS_fnc_setCustomSoundController",
    "timestamp": "2021-04-20T16:52:34Z",
    "version": "1.96",
    "syntax": "call BIS_fnc_setCustomSoundController",
    "docSyntax": "call BIS_fnc_setCustomSoundController",
    "tags": "",
    "description": "BIS_fnc_setCustomSoundController \na: reyhard",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_spawnOrdered": {
    "command": "BIS_fnc_spawnOrdered",
    "timestamp": "2021-01-23T20:24:56Z",
    "version": "1.96",
    "syntax": "[<anything>, <string>, <string>] call BIS_fnc_spawnOrdered",
    "docSyntax": "[params, functionName, mutexName] call BIS_fnc_spawnOrdered",
    "tags": "",
    "description": "Spawns given function and executes it in the order it was called in case multiple calls are made. If mutex name is not specified, function name is used.",
    "example": "myFnc = { diag_log [_this, canSuspend] }; for \"_i\" from 0 to 1000 do { [_i, \"myFnc\"] call BIS_fnc_spawnOrdered };",
    "params": "<anything> <string> <string>",
    "returns": "boolean | false | true"
  },
  "BIS_fnc_WLArsenalFilter": {
    "command": "BIS_fnc_WLArsenalFilter",
    "timestamp": "2021-04-20T16:53:02Z",
    "version": "1.96",
    "syntax": "[] call BIS_fnc_WLArsenalFilter",
    "docSyntax": "[] call BIS_fnc_WLArsenalFilter",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLParseAssetList": {
    "command": "BIS_fnc_WLParseAssetList",
    "timestamp": "2021-04-20T16:53:18Z",
    "version": "1.96",
    "syntax": "[] call BIS_fnc_WLParseAssetList",
    "docSyntax": "[] call BIS_fnc_WLParseAssetList",
    "tags": "",
    "description": "''N/A''",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_WLSyncedTime": {
    "command": "BIS_fnc_WLSyncedTime",
    "timestamp": "2021-03-26T12:25:02Z",
    "version": "1.96",
    "syntax": "[] call BIS_fnc_WLSyncedTime",
    "docSyntax": "[] call BIS_fnc_WLSyncedTime",
    "tags": "",
    "description": "WARLORDS-SPECIFIC FUNCTION \nAuthor: Josef Zemánek \nDescription: Returns time synced between server and clients",
    "example": "",
    "params": "",
    "returns": ""
  },
  "currentPilot": {
    "command": "currentPilot",
    "timestamp": "2021-01-22T22:57:58Z",
    "version": "1.96",
    "syntax": "currentPilot <object>",
    "docSyntax": "currentPilot vehicle",
    "tags": "",
    "description": "Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned. If you need current pilot of a UAV or UGV, see UAVControl command.",
    "example": "_pilot = currentPilot vehicle player;",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "diag_deltaTime": {
    "command": "diag_deltaTime",
    "timestamp": "2021-01-22T22:52:24Z",
    "version": "1.96",
    "syntax": "diag_deltaTime",
    "docSyntax": "diag_deltaTime",
    "tags": "",
    "description": "Returns the duration of the previous frame in seconds",
    "example": "_frameTime = diag_deltaTime;",
    "params": "",
    "returns": "number"
  },
  "getDiverState": {
    "command": "getDiverState",
    "timestamp": "2021-01-23T00:23:59Z",
    "version": "1.96",
    "syntax": "getDiverState <object>",
    "docSyntax": "getDiverState unit",
    "tags": "",
    "description": "Returns true when object is in diver state i.e. when unit would put diving goggles on. FeatureInformative Diving goggles remove blurriness underwater, however when assigned, they do not appear on the face of the unit until the unit steps into the water. This command allows to detect the moment when the goggles are visible. If the unit doesn't have diving goggles assigned, this command would still return true at appropriate time if the unit steps into the water.",
    "example": "private _gogglesOn = getDiverState player;",
    "params": "<object>",
    "returns": "boolean | true | goggles"
  },
  "getMissionPath": {
    "command": "getMissionPath",
    "timestamp": "2021-01-23T00:59:07Z",
    "version": "1.96",
    "syntax": "getMissionPath <string>",
    "docSyntax": "getMissionPath filename",
    "tags": "",
    "description": "Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as playSound3D, drawIcon3D, createSimpleObject, etc. Any leading \"\\\" in the filename will be stripped as the mission root includes one already.",
    "example": "// would return e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\icons\\myIcon.paa\" private _path = getMissionPath \"icons\\myIcon.paa\"; private _path = getMissionPath \"\\icons\\myIcon.paa\"; // leading \\ is also fine ",
    "params": "<string>",
    "returns": "string"
  },
  "getObjectFOV": {
    "command": "getObjectFOV",
    "timestamp": "2021-01-23T00:00:42Z",
    "version": "1.96",
    "syntax": "getObjectFOV <object>",
    "docSyntax": "getObjectFOV object",
    "tags": "",
    "description": "Returns Field of View of the given object in radians. Static objects return default value, which is 1. FOV of objNull is 0. Object FOV is indirectly connected with optics magnification or player view zoom, the narrower the angle the greater the zoom.Feature Informative The FOV returned by this command doesn't change if user has custom FOV set in profile. Use it in combination with getResolution to adjust for the difference if required.",
    "example": "_objFOV = getObjectFOV player;",
    "params": "<object>",
    "returns": "number | rad"
  },
  "getPosWorldVisual": {
    "command": "getPosWorldVisual",
    "timestamp": "2021-01-23T00:56:09Z",
    "version": "1.96",
    "syntax": "getPosWorldVisual <object>",
    "docSyntax": "getPosWorldVisual object",
    "tags": "[AG]",
    "description": "Returns the provided object's, model centre position in render version in format PositionASL, rather than transformed LandContact vertices.",
    "example": "_obj setPosWorld getPosWorldVisual _obj;",
    "params": "<object>",
    "returns": "getposworld"
  },
  "isActionMenuVisible": {
    "command": "isActionMenuVisible",
    "timestamp": "2021-01-23T09:23:07Z",
    "version": "1.96",
    "syntax": "isActionMenuVisible",
    "docSyntax": "isActionMenuVisible",
    "tags": "",
    "description": "Returns true if scroll menu is visible.",
    "example": "if (isActionMenuVisible) then { hint \"Scroll menu is opened\" };",
    "params": "",
    "returns": "boolean"
  },
  "isGameFocused": {
    "command": "isGameFocused",
    "timestamp": "2021-01-23T09:10:50Z",
    "version": "1.96",
    "syntax": "isGameFocused",
    "docSyntax": "isGameFocused",
    "tags": "",
    "description": "Returns the state of game focus changed by pressing ControlsALTTAB or similar action.",
    "example": "if (!isGameFocused) then { endMission \"End\" };",
    "params": "",
    "returns": "boolean | true | false"
  },
  "isGamePaused": {
    "command": "isGamePaused",
    "timestamp": "2021-01-23T09:29:03Z",
    "version": "1.96",
    "syntax": "isGamePaused",
    "docSyntax": "isGamePaused",
    "tags": "",
    "description": "Returns the state of game simulation. Simulation can get paused by pressing ControlsALTTAB or a system dialog opening (e.g. ControlsESC menu). Simulation will not get paused if hl-noPause startup parameter is used. FeatureInformativeonEachFrame event and hl\"EachFrame\" event handler continue to execute when the simulation is paused, which could result in undesired backlog. Use isGamePaused to skip loop if needed.",
    "example": "onEachFrame { if (isGamePaused) exitWith {}; cc...do stuff };",
    "params": "",
    "returns": "boolean | true | false"
  },
  "removeDiaryRecord": {
    "command": "removeDiaryRecord",
    "timestamp": "2021-01-23T10:30:05Z",
    "version": "1.96",
    "syntax": "<object> removeDiaryRecord [<string>, <diary]",
    "docSyntax": "unit removeDiaryRecord [subject, diaryRecord]",
    "tags": "[EL]",
    "description": "Remove a log record.",
    "example": "private _diaryRecord = player createDiaryRecord [\"diary\", [\"Subject\", \"Text\"]]; cc... player removeDiaryRecord [\"Diary\", _diaryRecord];",
    "params": "<object> <string> <diary",
    "returns": "nothing"
  },
  "removeDiarySubject": {
    "command": "removeDiarySubject",
    "timestamp": "2021-01-23T10:32:25Z",
    "version": "1.96",
    "syntax": "<object> removeDiarySubject <string>",
    "docSyntax": "player removeDiarySubject diaryPage",
    "tags": "[EL]",
    "description": "Removes a page and all its subjects from the Diary.",
    "example": "player removeDiarySubject \"myPage\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "setDiaryRecordText": {
    "command": "setDiaryRecordText",
    "timestamp": "2021-01-23T20:20:11Z",
    "version": "1.96",
    "syntax": "<object> setDiaryRecordText <array>",
    "docSyntax": "unit setDiaryRecordText [[subject, diaryRecord], [title, text]]",
    "tags": "",
    "description": "Set text of a log record.",
    "example": "player setDiaryRecordText [nowiki[\"diary\", _diaryRec], [\"Kill all enemies.\"]]",
    "params": "<object> <array>",
    "returns": "nothing"
  },
  "setEffectiveCommander": {
    "command": "setEffectiveCommander",
    "timestamp": "2021-01-23T20:32:18Z",
    "version": "1.96",
    "syntax": "<object> setEffectiveCommander <object>",
    "docSyntax": "vehicle setEffectiveCommander person",
    "tags": "[AG] [EL]",
    "description": "Sets effectiveCommander of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver. Every time a person gets in or out of a vehicle, effective commander eligibility is recalculated by the engine based on the current crew. Use this command to force desired effective commander. In multiplayer, execute globally.",
    "example": "vehicle player setEffectiveCommander player;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "toLowerANSI": {
    "command": "toLowerANSI",
    "timestamp": "2021-01-24T00:02:04Z",
    "version": "1.96",
    "syntax": "toLowerANSI <string>",
    "docSyntax": "toLowerANSI string",
    "tags": "",
    "description": "thumb|right|ISO-8859-1Converts the supplied string to all lower case characters fast (could be 3x faster than codes 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see toLower.",
    "example": "hint toLowerANSI \"AaBb1\"; // returns \"aabb1\"",
    "params": "<string>",
    "returns": "string"
  },
  "toUpperANSI": {
    "command": "toUpperANSI",
    "timestamp": "2021-01-24T00:25:46Z",
    "version": "1.96",
    "syntax": "toUpperANSI <string>",
    "docSyntax": "toUpperANSI string",
    "tags": "",
    "description": "thumb|right|ISO-8859-1Converts the supplied string to all upper case characters fast (could be 3x faster than codes 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see toUpper.",
    "example": "hint toUpperANSI \"AaBb1\"; // returns \"AABB1\"",
    "params": "<string>",
    "returns": "string"
  },
  "allActiveTitleEffects": {
    "command": "allActiveTitleEffects",
    "timestamp": "2021-01-22T21:27:35Z",
    "version": "1.98",
    "syntax": "allActiveTitleEffects",
    "docSyntax": "allActiveTitleEffects",
    "tags": "",
    "description": "Returns a list of all layers that have currently active title effect. Numbers equal to or greater than 0 represent cut layers, where as -1 represents title layer (see <Title Effect Type>). Named layers are represented by their respective index.Feature Informative Effects created with titleText, titleRsc and titleObj commands do not have a numbered layer, so they are represented as -1 layer in the result. Effects created with cutText, cutRsc and cutObj are created either on layer 0, if no layer is specified, or on the given layer, if the layer index is specified, so they are represented by the layer index.",
    "example": "cutText [\"Hello World!\" ,\"PLAIN\", 2]; hint str allActiveTitleEffects; // [0]",
    "params": "",
    "returns": "array | number"
  },
  "BIS_fnc_drawBoundingBox": {
    "command": "BIS_fnc_drawBoundingBox",
    "timestamp": "2021-01-23T09:07:04Z",
    "version": "1.98",
    "syntax": "[objects, <array>, <boolean>] call BIS_fnc_drawBoundingBox",
    "docSyntax": "[objects, color, draw] call BIS_fnc_drawBoundingBox",
    "tags": "",
    "description": "Draws bounding box around given objects.",
    "example": "[nowiki[</nowiki>BIS_building], [1,0,1,1], truenowiki]</nowiki> call BIS_fnc_drawBoundingBox;",
    "params": "objects <array> <boolean>",
    "returns": "boolean | true | false"
  },
  "BIS_fnc_escortAI": {
    "command": "BIS_fnc_escortAI",
    "timestamp": "2021-01-23T09:03:35Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_escortAI -->",
    "docSyntax": "<!-- [] call BIS_fnc_escortAI -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_escortAI;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_escortAIHoldAction": {
    "command": "BIS_fnc_escortAIHoldAction",
    "timestamp": "2021-01-23T09:23:30Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_escortAIHoldAction -->",
    "docSyntax": "<!-- [] call BIS_fnc_escortAIHoldAction -->",
    "tags": "",
    "description": "''N/A''",
    "example": "[] call BIS_fnc_escortAIHoldAction;",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_addLoadedEH": {
    "command": "BIS_fnc_OM_addLoadedEH",
    "timestamp": "2021-01-22T22:40:20Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_addLoadedEH -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_addLoadedEH -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_allInfectedDeadCode": {
    "command": "BIS_fnc_OM_allInfectedDeadCode",
    "timestamp": "2021-01-22T22:49:51Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_allInfectedDeadCode -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_allInfectedDeadCode -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_AS_ShowStaticText": {
    "command": "BIS_fnc_OM_AS_ShowStaticText",
    "timestamp": "2021-01-22T22:41:12Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_AS_ShowStaticText -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_AS_ShowStaticText -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_BuildSectorsData": {
    "command": "BIS_fnc_OM_BuildSectorsData",
    "timestamp": "2021-01-22T22:42:34Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_BuildSectorsData -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_BuildSectorsData -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_camera": {
    "command": "BIS_fnc_OM_camera",
    "timestamp": "2021-01-22T22:52:47Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_camera -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_camera -->",
    "tags": "",
    "description": "",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_conversation": {
    "command": "BIS_fnc_OM_conversation",
    "timestamp": "2021-01-22T22:49:17Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_conversation -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_conversation -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_createConversation": {
    "command": "BIS_fnc_OM_createConversation",
    "timestamp": "2021-01-22T22:57:32Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_createConversation -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_createConversation -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_credits": {
    "command": "BIS_fnc_OM_credits",
    "timestamp": "2021-01-22T22:53:30Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_credits -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_credits -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_Epicentrum": {
    "command": "BIS_fnc_OM_Epicentrum",
    "timestamp": "2021-01-22T22:52:03Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_Epicentrum -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_Epicentrum -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_EXEC": {
    "command": "BIS_fnc_OM_EXEC",
    "timestamp": "2021-01-22T22:52:43Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_EXEC -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_EXEC -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_HandleMapControls": {
    "command": "BIS_fnc_OM_HandleMapControls",
    "timestamp": "2021-01-22T22:56:06Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_HandleMapControls -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_HandleMapControls -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_infectedGroupHandle": {
    "command": "BIS_fnc_OM_infectedGroupHandle",
    "timestamp": "2021-01-22T22:55:37Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_infectedGroupHandle -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_infectedGroupHandle -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_init": {
    "command": "BIS_fnc_OM_init",
    "timestamp": "2021-01-22T22:56:51Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_init -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_init -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_medicineDeliveredCode": {
    "command": "BIS_fnc_OM_medicineDeliveredCode",
    "timestamp": "2021-01-22T22:48:56Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_medicineDeliveredCode -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_medicineDeliveredCode -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_medicineRanOutCode": {
    "command": "BIS_fnc_OM_medicineRanOutCode",
    "timestamp": "2021-01-22T22:42:57Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_medicineRanOutCode -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_medicineRanOutCode -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_Module_initSmallValueSilder": {
    "command": "BIS_fnc_OM_Module_initSmallValueSilder",
    "timestamp": "2021-01-22T22:40:27Z",
    "version": "1.98",
    "syntax": "[<control>, <control>, <string>, <number>] call BIS_fnc_OM_Module_initSmallValueSilder",
    "docSyntax": "[ctrlSlider, ctrlEdit, unit, defaultValue] call BIS_fnc_OM_Module_initSmallValueSilder",
    "tags": "",
    "description": "Initialize slider with edit box showing its value supporting small decimal numbers.",
    "example": "[_ctrlSlider,_ctrlEdit,\"m\",500] call BIS_fnc_OM_Module_initSmallValueSilder;//Set default value only.",
    "params": "<control> <control> <string> <number>",
    "returns": "boolean"
  },
  "BIS_fnc_OM_moduleActionQueue": {
    "command": "BIS_fnc_OM_moduleActionQueue",
    "timestamp": "2021-01-22T22:58:41Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleActionQueue -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleActionQueue -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleAwareness": {
    "command": "BIS_fnc_OM_moduleAwareness",
    "timestamp": "2021-01-22T22:57:45Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleAwareness -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleAwareness -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_checkAngleToObject": {
    "command": "BIS_fnc_OM_moduleCheckpoint_checkAngleToObject",
    "timestamp": "2021-01-22T22:51:02Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_checkAngleToObject -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_checkAngleToObject -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject": {
    "command": "BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject",
    "timestamp": "2021-01-22T22:45:41Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_handleStates": {
    "command": "BIS_fnc_OM_moduleCheckpoint_handleStates",
    "timestamp": "2021-01-22T22:58:13Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_handleStates -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_handleStates -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_intersect": {
    "command": "BIS_fnc_OM_moduleCheckpoint_intersect",
    "timestamp": "2021-01-22T22:42:38Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_intersect -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_intersect -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck": {
    "command": "BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck",
    "timestamp": "2021-01-22T22:47:43Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleCheckpoint_playAnim": {
    "command": "BIS_fnc_OM_moduleCheckpoint_playAnim",
    "timestamp": "2021-01-22T22:44:53Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_playAnim -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleCheckpoint_playAnim -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleDepot": {
    "command": "BIS_fnc_OM_moduleDepot",
    "timestamp": "2021-01-22T22:55:55Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleDepot -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleDepot -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleEconomy": {
    "command": "BIS_fnc_OM_moduleEconomy",
    "timestamp": "2021-01-22T22:54:26Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleEconomy -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleEconomy -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleFastTravel": {
    "command": "BIS_fnc_OM_moduleFastTravel",
    "timestamp": "2021-01-22T22:41:23Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleFastTravel -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleFastTravel -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleMarket": {
    "command": "BIS_fnc_OM_moduleMarket",
    "timestamp": "2021-01-22T22:46:07Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleMarket -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleMarket -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_ModuleQuest_defend": {
    "command": "BIS_fnc_OM_ModuleQuest_defend",
    "timestamp": "2021-01-22T22:45:47Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_ModuleQuest_defend -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_ModuleQuest_defend -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_ModuleQuest_destroyObject": {
    "command": "BIS_fnc_OM_ModuleQuest_destroyObject",
    "timestamp": "2021-01-22T22:56:12Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_ModuleQuest_destroyObject -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_ModuleQuest_destroyObject -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleRadio": {
    "command": "BIS_fnc_OM_moduleRadio",
    "timestamp": "2021-01-22T22:56:06Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleRadio -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleRadio -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleRandomConversation": {
    "command": "BIS_fnc_OM_moduleRandomConversation",
    "timestamp": "2021-01-22T22:52:43Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleRandomConversation -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleRandomConversation -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleReputation": {
    "command": "BIS_fnc_OM_moduleReputation",
    "timestamp": "2021-01-22T22:58:33Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleReputation -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleReputation -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleRestPoint": {
    "command": "BIS_fnc_OM_moduleRestPoint",
    "timestamp": "2021-01-22T22:53:51Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleRestPoint -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleRestPoint -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_moduleSmartMarkers": {
    "command": "BIS_fnc_OM_moduleSmartMarkers",
    "timestamp": "2021-01-22T22:55:11Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_moduleSmartMarkers -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_moduleSmartMarkers -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_ModuleSyndikatAgent": {
    "command": "BIS_fnc_OM_ModuleSyndikatAgent",
    "timestamp": "2021-01-22T22:43:39Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_ModuleSyndikatAgent -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_ModuleSyndikatAgent -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_ModuleSyndikatTeam": {
    "command": "BIS_fnc_OM_ModuleSyndikatTeam",
    "timestamp": "2021-01-22T22:45:56Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_ModuleSyndikatTeam -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_ModuleSyndikatTeam -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_pause": {
    "command": "BIS_fnc_OM_pause",
    "timestamp": "2021-01-22T22:43:12Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_pause -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_pause -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_addCall": {
    "command": "BIS_fnc_OM_phone_addCall",
    "timestamp": "2021-01-22T22:40:48Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_addCall -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_addCall -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_addContact": {
    "command": "BIS_fnc_OM_phone_addContact",
    "timestamp": "2021-01-22T22:51:31Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_addContact -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_addContact -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_core": {
    "command": "BIS_fnc_OM_phone_core",
    "timestamp": "2021-01-22T22:44:29Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_core -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_core -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_customSectionInit": {
    "command": "BIS_fnc_OM_phone_customSectionInit",
    "timestamp": "2021-01-22T22:53:10Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_customSectionInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_customSectionInit -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_customSectionShow": {
    "command": "BIS_fnc_OM_phone_customSectionShow",
    "timestamp": "2021-01-22T22:48:12Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_customSectionShow -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_customSectionShow -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_customSectionWeatherShow": {
    "command": "BIS_fnc_OM_phone_customSectionWeatherShow",
    "timestamp": "2021-01-22T22:47:15Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_customSectionWeatherShow -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_customSectionWeatherShow -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_getDiaryListIndexByName": {
    "command": "BIS_fnc_OM_phone_getDiaryListIndexByName",
    "timestamp": "2021-01-22T22:44:34Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_getDiaryListIndexByName -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_getDiaryListIndexByName -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_incomingCall": {
    "command": "BIS_fnc_OM_phone_incomingCall",
    "timestamp": "2021-01-22T22:42:55Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_incomingCall -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_incomingCall -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_menuHandler": {
    "command": "BIS_fnc_OM_phone_menuHandler",
    "timestamp": "2021-01-22T22:56:23Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_menuHandler -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_menuHandler -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_menuInit": {
    "command": "BIS_fnc_OM_phone_menuInit",
    "timestamp": "2021-01-22T22:54:46Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_menuInit -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_menuInit -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_removeCall": {
    "command": "BIS_fnc_OM_phone_removeCall",
    "timestamp": "2021-01-22T22:41:19Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_removeCall -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_removeCall -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_SMS": {
    "command": "BIS_fnc_OM_phone_SMS",
    "timestamp": "2021-01-22T22:43:08Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_SMS -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_SMS -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_phone_SMSSend": {
    "command": "BIS_fnc_OM_phone_SMSSend",
    "timestamp": "2021-01-22T22:42:53Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_phone_SMSSend -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_phone_SMSSend -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_saveGame": {
    "command": "BIS_fnc_OM_saveGame",
    "timestamp": "2021-01-22T22:58:21Z",
    "version": "1.98",
    "syntax": "call BIS_fnc_OM_saveGame",
    "docSyntax": "call BIS_fnc_OM_saveGame",
    "tags": "",
    "description": "Saves the game - simply calls saveGame.",
    "example": "call BIS_fnc_OM_saveGame;",
    "params": "",
    "returns": "nothing"
  },
  "BIS_fnc_OM_savingEnabled": {
    "command": "BIS_fnc_OM_savingEnabled",
    "timestamp": "2021-01-22T22:56:51Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_savingEnabled -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_savingEnabled -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_SectorGetSectors": {
    "command": "BIS_fnc_OM_SectorGetSectors",
    "timestamp": "2021-01-22T22:42:07Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_SectorGetSectors -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_SectorGetSectors -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_sellEquipment": {
    "command": "BIS_fnc_OM_sellEquipment",
    "timestamp": "2021-01-22T22:41:37Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_sellEquipment -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_sellEquipment -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_SentryDrone": {
    "command": "BIS_fnc_OM_SentryDrone",
    "timestamp": "2021-01-22T22:57:01Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_SentryDrone -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_SentryDrone -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_skip": {
    "command": "BIS_fnc_OM_skip",
    "timestamp": "2021-01-22T22:55:14Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_skip -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_skip -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_warnCriticalCode": {
    "command": "BIS_fnc_OM_warnCriticalCode",
    "timestamp": "2021-01-22T22:57:09Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_warnCriticalCode -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_warnCriticalCode -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OM_warnMildCode": {
    "command": "BIS_fnc_OM_warnMildCode",
    "timestamp": "2021-01-22T22:50:19Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OM_warnMildCode -->",
    "docSyntax": "<!-- [] call BIS_fnc_OM_warnMildCode -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMSetForecastLimit": {
    "command": "BIS_fnc_OMSetForecastLimit",
    "timestamp": "2021-01-22T22:49:42Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMSetForecastLimit -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMSetForecastLimit -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMWeatherManagerCore": {
    "command": "BIS_fnc_OMWeatherManagerCore",
    "timestamp": "2021-01-22T22:49:08Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMWeatherManagerCore -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMWeatherManagerCore -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMWeatherManagerMain": {
    "command": "BIS_fnc_OMWeatherManagerMain",
    "timestamp": "2021-01-22T22:40:57Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMWeatherManagerMain -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMWeatherManagerMain -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMWeatherManagerRain": {
    "command": "BIS_fnc_OMWeatherManagerRain",
    "timestamp": "2021-01-22T22:56:53Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMWeatherManagerRain -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMWeatherManagerRain -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMWeatherReport": {
    "command": "BIS_fnc_OMWeatherReport",
    "timestamp": "2021-01-22T22:53:27Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMWeatherReport -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMWeatherReport -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_OMWeatherUICalc": {
    "command": "BIS_fnc_OMWeatherUICalc",
    "timestamp": "2021-01-22T22:55:19Z",
    "version": "1.98",
    "syntax": "<!-- [] call BIS_fnc_OMWeatherUICalc -->",
    "docSyntax": "<!-- [] call BIS_fnc_OMWeatherUICalc -->",
    "tags": "",
    "description": "Featurearma3oldman",
    "example": "",
    "params": "",
    "returns": ""
  },
  "BIS_fnc_transformVectorDirAndUp": {
    "command": "BIS_fnc_transformVectorDirAndUp",
    "timestamp": "2021-01-24T00:54:05Z",
    "version": "1.98",
    "syntax": "<array> call BIS_fnc_transformVectorDirAndUp",
    "docSyntax": "[vectorDirAndUp, yaw, pitch, roll] call BIS_fnc_transformVectorDirAndUp",
    "tags": "",
    "description": "Rotates both 300px",
    "example": "_vDirUp = nowiki<</nowiki>[[vectorDirVisual> uav, vectorUpVisual uav], 0, 0, 90] call BIS_fnc_transformVectorDirAndUp;",
    "params": "<array> <array> <number> <number> <number>",
    "returns": "array"
  },
  "getTextWidth": {
    "command": "getTextWidth",
    "timestamp": "2021-01-23T09:04:14Z",
    "version": "1.98",
    "syntax": "<string> getTextWidth [font, <number>]",
    "docSyntax": "text getTextWidth [font, size]",
    "tags": "",
    "description": "Returns estimated width of the text based on font type and size. Similar to ctrlTextWidth but does not require a control and can be used to estimate text width for any control including buttons. Result does not include left and right margins (hardcoded at 0.008 each). FeatureinformativeThis command always uses unicode (see also forceUnicode).",
    "example": "_textWidth = \"Hello World\" getTextWidth [\"PuristaMedium\", 0.03];",
    "params": "<string> font <number>",
    "returns": "number"
  },
  "setTriggerInterval": {
    "command": "setTriggerInterval",
    "timestamp": "2021-01-24T00:45:43Z",
    "version": "1.98",
    "syntax": "<object> setTriggerInterval <number>",
    "docSyntax": "trigger setTriggerInterval interval",
    "tags": "[AG] [EL]",
    "description": "Sets the interval in seconds for trigger condition check.brbr Feature Informative Triggers are configured to check condition approx. every 0.5 second by default. This command allows either to slow down or to speed up default check interval per trigger. Setting interval to 0 will make the trigger check its condition every frame. However, when trigger is attached to some object, the trigger will inherit the simulation frequency of the object it is attached to. This command cannot change the interval of the attached trigger. The trigger can also be \"frozen\" with enableSimulation command.",
    "example": "_trigger setTriggerInterval 5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "triggerInterval": {
    "command": "triggerInterval",
    "timestamp": "2021-01-24T00:51:38Z",
    "version": "1.98",
    "syntax": "<object>Interval trigger",
    "docSyntax": "triggerInterval trigger",
    "tags": "[AG]",
    "description": "Returns trigger condition check frequency in seconds. brbr Feature important The trigger could be local or remote but the result returned by this command will be for the trigger interval set up locally on the client that executed the command. See createTrigger for more info.",
    "example": "_interval = triggerInterval someTrigger;",
    "params": "<object>",
    "returns": "number"
  },
  "vehicleMoveInfo": {
    "command": "vehicleMoveInfo",
    "timestamp": "2021-01-24T10:39:10Z",
    "version": "1.98",
    "syntax": "<object>MoveInfo vehicle",
    "docSyntax": "vehicleMoveInfo vehicle",
    "tags": "",
    "description": "Returns current vehicle move/turn info (a getter for \"STOPTURNING\" to cancel) * hl\"RIGHT\" - vehicle is turning right (use \"STOPTURNING\" to cancel) * hl\"NONE\" - vehicle is not turning (when script command is used) * hl\"ABS\" - vehicle is not turning (when keyboard pilot is used) !}",
    "example": "onEachFrame { hintSilent str vehicleMoveInfo vehicle player };",
    "params": "<object>",
    "returns": "array | string | string"
  },
  "addonFiles": {
    "command": "addonFiles",
    "timestamp": "2021-01-22T21:36:53Z",
    "version": "2.00",
    "syntax": "addonFiles [<string>, <string>]",
    "docSyntax": "addonFiles [pboPrefix, fileExtension]",
    "tags": "",
    "description": "Returns a list of files present in the addon.br FeatureinformativeQuerying protected hl.ebo addons returns empty array hl[].",
    "example": "addonFiles [\"a3\\3den\\\", \".paa\"]; codecomment/* [ \"a3\\3den\\data\\attributes\\formation\\ech_left_ca.paa\", \"a3\\3den\\data\\attributes\\formation\\stag_column_ca.paa\", \"a3\\3den\\data\\attributes\\stance\\down_ca.paa\", \"a3\\3den\\data\\cfg3den\\layer\\icondisabled_ca.paa\", \"a3\\3den\\data\\controlsgroups\\diagmousecontrol\\mouse_ca.paa\", ... ] nowiki*/",
    "params": "<string> <string>",
    "returns": "array | string"
  },
  "allAddonsInfo": {
    "command": "allAddonsInfo",
    "timestamp": "2021-01-22T21:23:29Z",
    "version": "2.00",
    "syntax": "allAddonsInfo",
    "docSyntax": "allAddonsInfo",
    "tags": "",
    "description": "Returns the list of all loaded addons.",
    "example": "allAddonsInfo codecomment/* [ [\"bin\\\",\"146398\",false], [\"core\\\",\"129618\",false], [\"Languagecore_F\\\",\"148726\",false], [\"a3\\air_f_enoch\\\",\"145904\",false], [\"a3\\anims_f_enoch\\\",\"146917\",false], [\"a3\\armor_f_enoch\\\",\"145904\",false], ... ] nowiki*</nowiki>/",
    "params": "",
    "returns": "array | array | string | string | boolean | true"
  },
  "configOf": {
    "command": "configOf",
    "timestamp": "2021-01-25T22:55:34Z",
    "version": "2.00",
    "syntax": "configOf <object>",
    "docSyntax": "configOf object",
    "tags": "[AG]",
    "description": "Returns config path of the provided object.",
    "example": "configOf player; // returns bin\\config.bin/CfgVehicles/B_W_Soldier_TL_F",
    "params": "<object>",
    "returns": "config"
  },
  "connectToServer": {
    "command": "connectToServer",
    "timestamp": "2021-01-22T21:58:13Z",
    "version": "2.00",
    "syntax": "connectToServer [<string>, <number>, <string>]",
    "docSyntax": "connectToServer [ip, port, password]",
    "tags": "",
    "description": "Connects the client to the provided server. Feature Informative * only works on the Main Menu. * must be executed from UI context, such as ''onButtonDown'' or similar events (see <User Interface Event Handlers>).",
    "example": "connectToServer [\"192.168.0.2\", 2302, \"test\"];",
    "params": "<string> <number> <string>",
    "returns": "nothing"
  },
  "ctrlMousePosition": {
    "command": "ctrlMousePosition",
    "timestamp": "2021-01-25T22:54:53Z",
    "version": "2.00",
    "syntax": "ctrlMousePosition <control>",
    "docSyntax": "ctrlMousePosition control",
    "tags": "",
    "description": "Returns position of the mouse on the screen relative to UI Control in UI coordinates. Also works within CT_CONTROLS_GROUPs. In that case, returned position is relative to the position of the group.",
    "example": "_mousePos = ctrlMousePosition _ctrl;",
    "params": "<control>",
    "returns": "array"
  },
  "ctrlScrollValues": {
    "command": "ctrlScrollValues",
    "timestamp": "2021-01-22T22:04:56Z",
    "version": "2.00",
    "syntax": "ctrlScrollValues <control>",
    "docSyntax": "ctrlScrollValues control",
    "tags": "",
    "description": "Returns scroll values for current scrollbars in range 0...1 (-1 if not applicable) for the following \ncontrols: * CT_CONTROLS_TABLE * CT_CONTROLS_GROUP * CT_TREE * CT_LISTBOX * CT_COMBO * CT_XCOMBO * CT_LISTNBOX * CT_LISTNBOX_CHECKABLE",
    "example": "_scrollvalues = ctrlScrollValues _ctrl;",
    "params": "<control>",
    "returns": "array"
  },
  "ctrlSetScrollValues": {
    "command": "ctrlSetScrollValues",
    "timestamp": "2021-01-22T22:57:23Z",
    "version": "2.00",
    "syntax": "<control> ctrlSetScrollValues <array>",
    "docSyntax": "control ctrlSetScrollValues [vScrollValue, hScrollValue]",
    "tags": "",
    "description": "Sets scroll values for current scrollbars in range 0...1 for the following \ncontrols: * CT_CONTROLS_TABLE * CT_CONTROLS_GROUP * CT_TREE * CT_LISTBOX * CT_COMBO * CT_XCOMBO * CT_LISTNBOX * CT_LISTNBOX_CHECKABLE",
    "example": "_ctrlGrp ctrlSetScrollValues [-1, 0.5];",
    "params": "<control> <array> <number> <number>",
    "returns": "nothing"
  },
  "ctrlSetTextSelection": {
    "command": "ctrlSetTextSelection",
    "timestamp": "2021-01-22T22:57:05Z",
    "version": "2.00",
    "syntax": "<control> ctrlSetTextSelection <array>",
    "docSyntax": "control ctrlSetTextSelection [start, length]",
    "tags": "",
    "description": "Selects length characters of edit control from the start position and places cursor at the end of selection. Feature Informative To move cursor only, set length to 0. To select text from right to left, use negative length (See ctrlTextSelection for more info)",
    "example": "_control ctrlSetTextSelection [5, 10]",
    "params": "<control> <array> <number> <number>",
    "returns": "nothing"
  },
  "ctrlTextSelection": {
    "command": "ctrlTextSelection",
    "timestamp": "2021-01-22T22:48:36Z",
    "version": "2.00",
    "syntax": "ctrlTextSelection <control>",
    "docSyntax": "ctrlTextSelection control",
    "tags": "",
    "description": "Returns edit control text selection in format [start, length, selectedText]. FeatureInformativehllength could be negative if text selection is made from right to left. Use abs with length or count with selectedText if string length is required. start always indicates at what position in text selection is started. The cursor position will always be at the end of the selection. So if selection is made from right to left the cursor position will be at the left end of the selection. In order to find cursor position add start and length together (see example 3)",
    "example": "ctrlTextSelection _control; //[0, 11, \"Hello World\"]",
    "params": "<control>",
    "returns": "array | number | number | string"
  },
  "diag_allMissionEventHandlers": {
    "command": "diag_allMissionEventHandlers",
    "timestamp": "2021-01-22T22:46:33Z",
    "version": "2.00",
    "syntax": "diag_allMissionEventHandlers",
    "docSyntax": "diag_allMissionEventHandlers",
    "tags": "[EL]",
    "description": "Returns an array with all mission event handlers.",
    "example": "diag_allMissionEventHandlers; codecomment/* returns: [ \"Ended\",0, \"SelectedActionPerformed\",0, \"SelectedRotorLibActionPerformed\",0, \"SelectedActionChanged\",0, \"SelectedRotorLibActionChanged\",0, \"ControlsShifted\",0, \"Draw3D\",1, \"Loaded\",0, \"HandleDisconnect\",0, \"EntityRespawned\",0, \"EntityKilled\",0, \"MapSingleClick\",0, \"HCGroupSelectionChanged\",0, \"CommandModeChanged\",0, \"PlayerConnected\",0, \"PlayerDisconnected\",0, \"TeamSwitch\",0, \"GroupIconClick\",0, \"GroupIconOverEnter\",0, \"GroupIconOverLeave\",0, \"EachFrame\",0, \"PreloadStarted\",0, \"PreloadFinished\",0, \"Map\",0, \"PlayerViewChanged\",0, \"BuildingChanged\",0, \"MPEnded\",0, \"HandleAccTime\",0, \"ExtensionCallback\",0 ] nowiki*/",
    "params": "",
    "returns": "array"
  },
  "diag_dumpCalltraceToLog": {
    "command": "diag_dumpCalltraceToLog",
    "timestamp": "2021-05-23T12:52:42Z",
    "version": "2.00",
    "syntax": "diag_dumpCalltraceToLog",
    "docSyntax": "diag_dumpCalltraceToLog",
    "tags": "",
    "description": "Dumps current callstack/calltrace to RPT.",
    "example": "diag_dumpCalltraceToLog; codecomment/* outputs: Callstack:\" 14:17:06 \" [] L1 ()\" 14:17:06 \" [] L25 (A3\\functions_f\\Debug\\fn_debugConsoleExec.sqf)\" 14:17:06 \" _this:[{st = 15 / 0;}]\" 14:17:06 \" [] L0 ()\" 14:17:06 \" [] L25 (A3\\functions_f\\Debug\\fn_debugConsoleExec.sqf)\" 14:17:06 \" _x:any\" 14:17:06 \" [] L1 ()\" 14:17:06 \" _this:[]\" 14:17:06 \"CALLSTACK END;;; nowiki*/",
    "params": "",
    "returns": "nothing"
  },
  "diaryRecordNull": {
    "command": "diaryRecordNull",
    "timestamp": "2021-01-22T22:48:34Z",
    "version": "2.00",
    "syntax": "diaryRecordNull",
    "docSyntax": "diaryRecordNull",
    "tags": "",
    "description": "A non-existent <Diary Record>. To compare non-existent objects use isNull or \nisEqualTo: * c= diaryRecordNull == diaryRecordNull; ccfalse * isNull diaryRecordNull; cctrue * diaryRecordNull isEqualTo diaryRecordNull; cctrue",
    "example": "isNull diaryRecordNull; // true",
    "params": "",
    "returns": "<diary record>"
  },
  "elevatePeriscope": {
    "command": "elevatePeriscope",
    "timestamp": "2021-01-25T22:55:17Z",
    "version": "2.00",
    "syntax": "<object> elevatePeriscope <array>",
    "docSyntax": "vehicle elevatePeriscope [turret, elevation, speed, blockuser]",
    "tags": "",
    "description": "Elevates periscope of a vehicle. Vehicles in Arma 3 which are compatible with this tech are Strider, remote laser designators, the robot arm on Eddie, etc. Please note that SDV submarine has a different periscope, which is just an animated selection and could be raised and lowered with PeriscopeElevationChanged entity event handler is also provided.",
    "example": "_eddie elevatePeriscope [nowiki[0], 0.75, 0.1];",
    "params": "<object> <array> <array> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "getAllUnitTraits": {
    "command": "getAllUnitTraits",
    "timestamp": "2021-01-25T22:55:22Z",
    "version": "2.00",
    "syntax": "getAllUnitTraits <object>",
    "docSyntax": "getAllUnitTraits unit",
    "tags": "",
    "description": "Returns unit traits, native or set by setUnitTrait.",
    "example": "codecomment/* can return: [ [\"Medic\", false], [\"Engineer\", false], [\"ExplosiveSpecialist\", false], [\"UavHacker\", false], [\"CamouflageCoef\", 1], [\"AudibleCoef\", 1], [\"LoadCoef\", 1], [\"test\", \"custom\"] ] nowiki*/ private _playerTraits = getAllUnitTraits player;",
    "params": "<object>",
    "returns": "array | array | string | string | boolean"
  },
  "getAssetDLCInfo": {
    "command": "getAssetDLCInfo",
    "timestamp": "2021-01-23T00:44:38Z",
    "version": "2.00",
    "syntax": "getAssetDLCInfo <object>",
    "docSyntax": "getAssetDLCInfo asset",
    "tags": "",
    "description": "Returns DLC information about given object or model.",
    "example": "getAssetDLCInfo player;",
    "params": "<object> <array> <string> <config>",
    "returns": "array | boolean | boolean | boolean | boolean | string | string"
  },
  "getAttackTarget": {
    "command": "getAttackTarget",
    "timestamp": "2021-01-23T00:51:57Z",
    "version": "2.00",
    "syntax": "getAttackTarget <object>",
    "docSyntax": "getAttackTarget unit",
    "tags": "",
    "description": "Returns the target given unit is engaging.",
    "example": "_theEnemyWhoHesEngaging = getAttackTarget unit;",
    "params": "<object>",
    "returns": "object"
  },
  "getLighting": {
    "command": "getLighting",
    "timestamp": "2021-01-25T22:55:33Z",
    "version": "2.00",
    "syntax": "getLighting",
    "docSyntax": "getLighting",
    "tags": "",
    "description": "Gets general environment's light settings.",
    "example": "getLighting; // Returns [nowiki[0.646753,0.781818,1],28526.2,[-0.0167152,0.211598,-0.977214],0] ",
    "params": "",
    "returns": "number | vector3d | number"
  },
  "getLightingAt": {
    "command": "getLightingAt",
    "timestamp": "2021-01-25T22:54:42Z",
    "version": "2.00",
    "syntax": "getLightingAt <object>",
    "docSyntax": "getLightingAt obj",
    "tags": "",
    "description": "Gets provided object's lighting information. FeatureinformativeThe command will use is null or without interface)-->, the night vision state will always be off.",
    "example": "getLightingAt player; // returns [nowiki[1,1,1], 0.5, [0,0,0], 0]",
    "params": "<object>",
    "returns": "number"
  },
  "getLoadedModsInfo": {
    "command": "getLoadedModsInfo",
    "timestamp": "2021-01-23T00:52:35Z",
    "version": "2.00",
    "syntax": "getLoadedModsInfo",
    "docSyntax": "getLoadedModsInfo",
    "tags": "",
    "description": "Returns information about all loaded modifications. FeatureInformativeThe first 7 are equal to whats printed to RPT at game startup in the c= nowiki======== mods =======</nowiki> category.",
    "example": "_loadedMods = getLoadedModsInfo; codecomment/nowiki* [ [\"dummy\",\"dummy\",false,false,\"NOT FOUND\",\"\",\"\",\"0\"], [\"CUP Units DEV Version r710 (r710-r710 UNITSSVN) (12|Jun|2020)\",\"@[DEV] CUP Units\",false,false,\"GAME DIR\",\"f3fb8a4c62443ac799c7c0e00f645b1f32cf1376\",\"c96577b4\",0], [\"CUP Weapons DEV Version r1486 (r1481-r1486 WEAPONSSVN) (12|Jun|2020)\",\"@[DEV] CUP Weapons\",false,false,\"GAME DIR\",\"6dbd7c052ce2ae68803e10f6a3653d0b046881d8\",\"bb1c4965\",0], [\"Community Base Addons v3.15.1\",\"@CBA_A3\",false,false,\"GAME DIR\",\"33eef5c0ed583d1222319460b184090513193287\",\"131bbb64\",0], [\"Arma 3 Contact (Platform)\",\"enoch\",true,true,\"GAME DIR\",\"4298e892077aec33be6b68730a974400a3c3a636\",\"43e900ae\",\"1021790\"], [\"Arma 3 Tanks\",\"tank\",true,true,\"GAME DIR\",\"c47d45d7ce1261e0a0d1c4ed9517611eae6ebf9f\",\"1aec74ec\",\"798390\"], [\"Arma 3 Tac-Ops\",\"tacops\",true,true,\"GAME DIR\",\"808cc67221feadc288c856395cac28b908966eee\",\"441362c6\",\"744950\"], [\"Arma 3 Laws of War\",\"orange\",true,true,\"GAME DIR\",\"aa86785568206ae1e7becaa09eb673ee645d971f\",\"4729aa84\",\"571710\"], [\"Arma 3 Malden\",\"argo\",true,true,\"GAME DIR\",\"db6d4d06a3ad28207da665e8c34bbd8adf191019\",\"61001811\",\"639600\"], [\"Arma 3 Jets\",\"jets\",true,true,\"GAME DIR\",\"8e8e1f9275e37cc90c0f2a8a6901dd2a3e81a29a\",\"fc8366ee\",\"601670\"], [\"Arma 3 Apex\",\"expansion\",true,true,\"GAME DIR\",\"48f32952612dbb6ca972790c17c9920797073233\",\"fc4aed7f\",\"395180\"], [\"Arma 3 Marksmen\",\"mark\",true,true,\"GAME DIR\",\"85c7f2284f8b0271bfafecd96c49230ce0515861\",\"534e5baa\",\"332350\"], [\"Arma 3 Helicopters\",\"heli\",true,true,\"GAME DIR\",\"dae29688657dbc9057f9eb83179a3ad21d3a689d\",\"e7165098\",\"304380\"], [\"Arma 3 Karts\",\"kart\",true,true,\"GAME DIR\",\"eae9e0b218e7a8e8e906477ee1a5e8e3d5298f18\",\"8240ae3f\",\"288520\"], [\"Arma 3 Zeus\",\"curator\",true,true,\"GAME DIR\",\"2310c5c95a558253c7286d93f5a2a810fbf9b620\",\"8af0db5d\",\"275700\"], [\"Arma 3\",\"A3\",true,true,\"NOT FOUND\",\"\",\"\",\"0\"] ] *</nowiki>/",
    "params": "",
    "returns": "array | array"
  },
  "getPlayerVoNVolume": {
    "command": "getPlayerVoNVolume",
    "timestamp": "2021-01-25T22:55:26Z",
    "version": "2.00",
    "syntax": "getPlayerVoNVolume <object>",
    "docSyntax": "getPlayerVoNVolume unit",
    "tags": "[AG]",
    "description": "Gets provided player's Voice over Network (VoN) volume.",
    "example": "private _volume = getPlayerVoNVolume (units player select 1);",
    "params": "<object>",
    "returns": "number"
  },
  "getRoadInfo": {
    "command": "getRoadInfo",
    "timestamp": "2021-01-22T23:55:27Z",
    "version": "2.00",
    "syntax": "getRoadInfo <object>",
    "docSyntax": "getRoadInfo road",
    "tags": "",
    "description": "Returns road info in format [mapType, width, isPedestrian, texture, textureEnd, material, begPos, endPos, isBridge] Feature Informative The bridges are special case. Only large bridges are part of Road Net. Small pedestrian bridges are not recognized as roads. Bridge `mapType` is hl\"ROAD\" so the best way to detect bridges is to check `isBridge` boolean. Bridges are not part of new roads and don't have the same info as other new roads, so only `mapType`, `texture` (maybe `textureEnd`), `begPos`, `endPos` and `isBridge` are updated. Feature Informative Pedestrian roads `mapType` is usually hl\"TRAIL\". They are part of Road Net but excluded from path finding. Use roadsConnectedTo with alternative flag to find the connections between pedestrian roads.",
    "example": "getRoadInfo _road",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "getSteamFriendsServers": {
    "command": "getSteamFriendsServers",
    "timestamp": "2021-01-25T22:54:47Z",
    "version": "2.00",
    "syntax": "getSteamFriendsServers",
    "docSyntax": "getSteamFriendsServers",
    "tags": "",
    "description": "Returns servers information of Steam friends currently playing the game.",
    "example": "getSteamFriendsServers; // returns e.g [[\"127.42.33.8:2302\", \"MyFriend\"], [\"127.84.66.16:4604\", \"My Best Friend\"]]",
    "params": "",
    "returns": "array | array | string"
  },
  "getVehicleTIPars": {
    "command": "getVehicleTIPars",
    "timestamp": "2021-01-25T22:54:59Z",
    "version": "2.00",
    "syntax": "getVehicleTIPars <object>",
    "docSyntax": "getVehicleTIPars vehicle",
    "tags": "",
    "description": "Returns TI parameters of a vehicle.",
    "example": "getVehicleTIPars _veh;",
    "params": "<object>",
    "returns": "array"
  },
  "is3DENPreview": {
    "command": "is3DENPreview",
    "timestamp": "2021-01-23T09:23:10Z",
    "version": "2.00",
    "syntax": "is3DENPreview",
    "docSyntax": "is3DENPreview",
    "tags": "",
    "description": "Returns true if the <Eden Editor> is currently in mission preview mode, single player or multiplayer. (see also is3DEN, is3DENMultiplayer)",
    "example": "if is3DENPreview then {systemChat \"Welcome to Eden Editor Preview!\"};",
    "params": "",
    "returns": "boolean"
  },
  "isFinal": {
    "command": "isFinal",
    "timestamp": "2021-05-23T16:34:27Z",
    "version": "2.00",
    "syntax": "isFinal variable",
    "docSyntax": "isFinal variable",
    "tags": "",
    "description": "Checks if code or a variable was compiled final with compileFinal.",
    "example": "myCode = compileFinal \"a = a + 1\"; if (isFinal myCode) then {systemChat \"Code is compiled final.\"};",
    "params": "<string> <code>",
    "returns": "boolean | true | false"
  },
  "localNamespace": {
    "command": "localNamespace",
    "timestamp": "2021-01-23T09:59:38Z",
    "version": "2.00",
    "syntax": "localNamespace",
    "docSyntax": "localNamespace",
    "tags": "",
    "description": "Returns local Namespace attached to the mission. Has the same lifetime as missionNamespace but variables 'cannot be broadcasted' out of or into this namespace in multiplayer and will not be serialized when game is saved. UI variables can be safely stored in this namespace. Use allVariables command to save the variables elsewhere if required.",
    "example": "localNamespace setVariable [\"abc\", 123]",
    "params": "",
    "returns": "namespace"
  },
  "lockedInventory": {
    "command": "lockedInventory",
    "timestamp": "2021-01-25T22:54:58Z",
    "version": "2.00",
    "syntax": "lockedInventory <object>",
    "docSyntax": "lockedInventory vehicle",
    "tags": "",
    "description": "Get a vehicle's inventory lock state. Can also be used on a unit's backback (see lockInventory).",
    "example": "_isInventoryLocked = lockedInventory vehicle player;",
    "params": "<object>",
    "returns": "boolean"
  },
  "lockInventory": {
    "command": "lockInventory",
    "timestamp": "2021-01-25T22:54:43Z",
    "version": "2.00",
    "syntax": "<object> <boolean>Inventory lock",
    "docSyntax": "vehicle lockInventory lock",
    "tags": "[AG] [EL]",
    "description": "Lock or unlock a vehicle's inventory access. This command can also lock backpack a unit is wearing to prevent access by a third party. If you set it true (locked), the inventory won't be accessed via hotkey or action menu.",
    "example": "vehicle player lockInventory true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "namedProperties": {
    "command": "namedProperties",
    "timestamp": "2021-01-23T10:06:49Z",
    "version": "2.00",
    "syntax": "namedProperties <object>",
    "docSyntax": "namedProperties object",
    "tags": "",
    "description": "Returns a list of named properties on Geometry LOD.",
    "example": "_properties = namedProperties _object; // [[\"sbsource\",\"shadowvolume\"],[\"prefershadowvolume\",\"1\"],[\"reversed\",\"1\"],[\"buoyancy\",\"1\"]]",
    "params": "<object>",
    "returns": "array | array | string"
  },
  "periscopeElevation": {
    "command": "periscopeElevation",
    "timestamp": "2021-01-25T22:55:44Z",
    "version": "2.00",
    "syntax": "<object> periscopeElevation <array>",
    "docSyntax": "vehicle periscopeElevation turretPath",
    "tags": "",
    "description": "Returns current periscope elevation value, see also elevatePeriscope.",
    "example": "_eddie periscopeElevation [0];",
    "params": "<object> <array>",
    "returns": "array | number | boolean"
  },
  "radioChannelInfo": {
    "command": "radioChannelInfo",
    "timestamp": "2021-01-25T22:55:36Z",
    "version": "2.00",
    "syntax": "radioChannelInfo custom",
    "docSyntax": "radioChannelInfo customChannelID",
    "tags": "",
    "description": "Obtains custom radio channel's details, set by radioChannelCreate.",
    "example": "private _channelID = radioChannelCreate [nowiki[1, 0, 0.5, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false]; radioChannelInfo _channelID; // returns [nowiki[1,0,0.5,0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false, true]",
    "params": "custom",
    "returns": "array | radiochannelcreate"
  },
  "setPlayerVoNVolume": {
    "command": "setPlayerVoNVolume",
    "timestamp": "2021-01-25T22:55:52Z",
    "version": "2.00",
    "syntax": "<object> setPlayerVoNVolume <number>",
    "docSyntax": "unit setPlayerVoNVolume volume",
    "tags": "[AG] [EL]",
    "description": "Sets provided player's Voice over Network (VoN) volume.",
    "example": "_loudPlayer setPlayerVoNVolume 0.5;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setWaypointLoiterAltitude": {
    "command": "setWaypointLoiterAltitude",
    "timestamp": "2021-01-24T00:43:46Z",
    "version": "2.00",
    "syntax": "<array> setWaypointLoiterAltitude <number>",
    "docSyntax": "waypoint setWaypointLoiterAltitude loiterAltitude",
    "tags": "",
    "description": "Assignes loiter altitude to waypoint",
    "example": "[_grp, 2] setWaypointLoiterAltitude 100",
    "params": "<array> <number>",
    "returns": "nothing"
  },
  "surfaceTexture": {
    "command": "surfaceTexture",
    "timestamp": "2021-01-24T00:17:29Z",
    "version": "2.00",
    "syntax": "surfaceTexture position2d",
    "docSyntax": "surfaceTexture position",
    "tags": "",
    "description": "Same as surfaceType, but returns texture path to ground texture as string. Feature Informative The texture returned is of the ground, even if there is a road at that position. To get road texture use getRoadInfo command",
    "example": "_tex = surfaceTexture getPos player;",
    "params": "position2d",
    "returns": "string"
  },
  "systemTime": {
    "command": "systemTime",
    "timestamp": "2021-01-24T01:09:55Z",
    "version": "2.00",
    "syntax": "systemTime",
    "docSyntax": "systemTime",
    "tags": "",
    "description": "Returns system time.",
    "example": "_currentTime = systemTime;",
    "params": "",
    "returns": "array"
  },
  "systemTimeUTC": {
    "command": "systemTimeUTC",
    "timestamp": "2021-01-24T00:00:01Z",
    "version": "2.00",
    "syntax": "systemTimeUTC",
    "docSyntax": "systemTimeUTC",
    "tags": "",
    "description": "Returns systemTime according to 'U'niversal 'T'ime 'C'oordinated time scale.",
    "example": "private _UKTime = systemTimeUTC;",
    "params": "",
    "returns": "array"
  },
  "unitTurret": {
    "command": "unitTurret",
    "timestamp": "2021-01-24T10:40:04Z",
    "version": "2.00",
    "syntax": "<object> unitTurret <object>",
    "docSyntax": "vehicle unitTurret gunner",
    "tags": "",
    "description": "Returns the turret path the given vehicle's gunner is in. hl[-1] is returned if gunner is driver. When unit is not in any of vehicle's turret, empty array hl[] is returned. To get unit in turret see turretUnit",
    "example": "_vehicle unitTurret _gunner;",
    "params": "<object> <object>",
    "returns": "array"
  },
  "waypointLoiterAltitude": {
    "command": "waypointLoiterAltitude",
    "timestamp": "2021-01-24T10:40:24Z",
    "version": "2.00",
    "syntax": "<array>LoiterAltitude waypoint",
    "docSyntax": "waypointLoiterAltitude waypoint",
    "tags": "",
    "description": "Gets the waypoint loiter altitude. Waypoint uses format Waypoint.",
    "example": "private _loiterAlt = waypointLoiterAltitude [groupOne, 1];",
    "params": "<array>",
    "returns": "number"
  },
  "addBinocularItem": {
    "command": "addBinocularItem",
    "timestamp": "2021-02-23T12:56:35Z",
    "version": "2.02",
    "syntax": "<object> addBinocularItem <string>",
    "docSyntax": "unit addBinocularItem item",
    "tags": "[AL] [EG]",
    "description": "Adds weapon item, including magazine, directly to the binocular weapon. This is used for infantry weapons.",
    "example": "player addBinocularItem \"Laserbatteries\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "binocularItems": {
    "command": "binocularItems",
    "timestamp": "2021-02-23T12:56:40Z",
    "version": "2.02",
    "syntax": "binocularItems <object>",
    "docSyntax": "binocularItems unit",
    "tags": "[AG]",
    "description": "Returns array with all items assigned to the binocular weapon except magazines. Use binocularMagazine command for the latter. This command is used for infantry weapons only.",
    "example": "binocularItems player;",
    "params": "<object>",
    "returns": "array"
  },
  "binocularMagazine": {
    "command": "binocularMagazine",
    "timestamp": "2021-02-23T12:56:37Z",
    "version": "2.02",
    "syntax": "binocularMagazine <object>",
    "docSyntax": "binocularMagazine unit",
    "tags": "[AG]",
    "description": "Collects all loaded magazines from all binocular muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
    "example": "hint str binocularMagazine player; cc[\"Laserbatteries\"]",
    "params": "<object>",
    "returns": "array"
  },
  "break": {
    "command": "break",
    "timestamp": "2021-02-23T12:58:30Z",
    "version": "2.02",
    "syntax": "break",
    "docSyntax": "break",
    "tags": "",
    "description": "Skips all loop interations.",
    "example": "== 2) then { break }; systemChat str _i; };ccprints 0, 1 and then exit",
    "params": "",
    "returns": "nothing"
  },
  "breakWith": {
    "command": "breakWith",
    "timestamp": "2021-02-23T12:58:30Z",
    "version": "2.02",
    "syntax": "breakWith <anything>",
    "docSyntax": "breakWith return",
    "tags": "",
    "description": "Skips all loop iterations and immediately returns the given value.",
    "example": "systemChat call { for \"_i\" from 0 to 10 do { if (_i == 5) then { breakWith \"END\"; }; systemChat str _i; }; };",
    "params": "<anything>",
    "returns": "anything"
  },
  "compileScript": {
    "command": "compileScript",
    "timestamp": "2021-02-23T12:57:24Z",
    "version": "2.02",
    "syntax": "PAGENAMEE [<string>, <boolean>, <string>]",
    "docSyntax": "PAGENAMEE [path, final, prefixHeader]",
    "tags": "",
    "description": "This command is an alias for SQF Bytecode files, which can reduce compilation time.",
    "example": "compileScript [\"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\"]; // has the same functionality as compile preprocessFileLineNumbers \"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\";",
    "params": "<string> <boolean> <string>",
    "returns": "code"
  },
  "continue": {
    "command": "continue",
    "timestamp": "2021-02-23T12:58:30Z",
    "version": "2.02",
    "syntax": "continue",
    "docSyntax": "continue",
    "tags": "",
    "description": "Skips current loop iteration and continues with the next one.",
    "example": "== 2) then { continue }; systemChat str _i; }; // prints 0, 1, 3",
    "params": "",
    "returns": "nothing"
  },
  "continueWith": {
    "command": "continueWith",
    "timestamp": "2021-02-23T12:58:21Z",
    "version": "2.02",
    "syntax": "continueWith <anything>",
    "docSyntax": "continueWith return",
    "tags": "",
    "description": "Skips the current loop iteration, continues with the next one and returns the given value.",
    "example": "[1, 2, 3] apply { if (_x == 2) then { continueWith \"TEST\"; } else { _x + 1 }; };",
    "params": "<anything>",
    "returns": "anything"
  },
  "createHashMap": {
    "command": "createHashMap",
    "timestamp": "2021-02-23T12:57:37Z",
    "version": "2.02",
    "syntax": "createHashMap",
    "docSyntax": "createHashMap",
    "tags": "",
    "description": "Creates a new empty HashMap.",
    "example": "sqfprivate _myHashMap = createHashMap;</sqf>",
    "params": "",
    "returns": "hashmap"
  },
  "createHashMapFromArray": {
    "command": "createHashMapFromArray",
    "timestamp": "2021-02-23T12:57:34Z",
    "version": "2.02",
    "syntax": "createHashMapFromArray [[<hashmapkey>1, <anything>1], [key2, value2]]",
    "docSyntax": "createHashMapFromArray [[key1, value1], [key2, value2]]",
    "tags": "",
    "description": "Creates a new HashMap and initializes it from a key-value pair array",
    "example": "sqfcreateHashMapFromArray [[\"a\", 1], [\"b\", 2], [\"c\", 3]];</sqf>",
    "params": "<hashmapkey> <anything> <array> <array>",
    "returns": "hashmap"
  },
  "ctrlFontHeight": {
    "command": "ctrlFontHeight",
    "timestamp": "2021-02-23T12:57:07Z",
    "version": "2.02",
    "syntax": "ctrlFontHeight <control>",
    "docSyntax": "ctrlFontHeight control",
    "tags": "",
    "description": "Returns control's font size, usually sizeEx value (see ctrlSetFontHeight).",
    "example": "ctrlFontHeight _control;",
    "params": "<control>",
    "returns": "number"
  },
  "ctrlSetMousePosition": {
    "command": "ctrlSetMousePosition",
    "timestamp": "2021-02-23T12:57:31Z",
    "version": "2.02",
    "syntax": "<control> ctrlSetMousePosition [<number>, <number>]",
    "docSyntax": "control ctrlSetMousePosition [x, y]",
    "tags": "",
    "description": "Similar to setMousePosition but relative to the given control.",
    "example": "_control ctrlSetMousePosition [0.5, 0.5];",
    "params": "<control> <number> <number>",
    "returns": "nothing"
  },
  "ctrlSetURL": {
    "command": "ctrlSetURL",
    "timestamp": "2021-02-23T12:57:39Z",
    "version": "2.02",
    "syntax": "<control> ctrlSet<string> URL",
    "docSyntax": "control ctrlSetURL URL",
    "tags": "",
    "description": "Sets URL property of the given control subject to allowedHTMLLoadURIs[] whitelisting in CfgCommands config. Supported controls \nare: * CT_BUTTON * CT_SHORTCUTBUTTON * CT_ACTIVETEXT FeatureimportantURL should be written in lower case including address prefix. For example nowikiHTTP://ARMA3.COM/</nowiki> will not pass allowed filter validation but nowikihttp://arma3.com/</nowiki> will.",
    "example": "_control ctrlSetURL \"nowikihttp://arma3.com/</nowiki>\"; // note the forward slash / at the end",
    "params": "<control> <string>",
    "returns": "nothing"
  },
  "ctrlStyle": {
    "command": "ctrlStyle",
    "timestamp": "2021-02-23T12:57:09Z",
    "version": "2.02",
    "syntax": "ctrlStyle <control>",
    "docSyntax": "ctrlStyle control",
    "tags": "[AL]",
    "description": "Returns the provided control's style. See \nHashLinkArma: GUI Configuration#Control Styles.",
    "example": "private _ctrlStyle = ctrlStyle _myControl; private _bitFlags = _ctrlStyle call BIS_fnc_bitflagsToArray; if (2 in _bitFlags) then { hint \"This control has centered text!\"; }; ",
    "params": "<control>",
    "returns": "number"
  },
  "ctrlTextColor": {
    "command": "ctrlTextColor",
    "timestamp": "2021-02-23T12:56:29Z",
    "version": "2.02",
    "syntax": "ctrlTextColor <control>",
    "docSyntax": "ctrlTextColor control",
    "tags": "",
    "description": "Returns control's text color in Color (RGBA) format (see ctrlSetTextColor).",
    "example": "ctrlTextColor _control",
    "params": "<control>",
    "returns": "array"
  },
  "ctrlTooltip": {
    "command": "ctrlTooltip",
    "timestamp": "2021-02-23T12:57:22Z",
    "version": "2.02",
    "syntax": "ctrlTooltip <control>",
    "docSyntax": "ctrlTooltip control",
    "tags": "",
    "description": "Returns the tooltip property of a button control. Getter for ctrlSetTooltip.",
    "example": "ctrlTooltip _control;",
    "params": "<control>",
    "returns": "string"
  },
  "ctrlURL": {
    "command": "ctrlURL",
    "timestamp": "2021-02-23T12:57:00Z",
    "version": "2.02",
    "syntax": "ctrlURL <control>",
    "docSyntax": "ctrlURL control",
    "tags": "",
    "description": "Returns the URL property of a button control. Getter for ctrlSetURL.",
    "example": "ctrlURL _control; // e.g. \"nowikihttp://arma3.com/</nowiki>\"",
    "params": "<control>",
    "returns": "string"
  },
  "diag_exportConfig": {
    "command": "diag_exportConfig",
    "timestamp": "2021-05-23T12:46:00Z",
    "version": "2.02",
    "syntax": "diag_exportConfig [<string>, <config>]",
    "docSyntax": "diag_exportConfig [path, config]",
    "tags": "",
    "description": "Exports given config into file of given path.",
    "example": "All-in-One config",
    "params": "<string> <config>",
    "returns": "nothing"
  },
  "diag_exportTerrainSVG": {
    "command": "diag_exportTerrainSVG",
    "timestamp": "2021-05-23T12:46:25Z",
    "version": "2.02",
    "syntax": "diag_exportTerrainSVG [<string>, <boolean>, <boolean>, <boolean>, <boolean>, <boolean>, <boolean>]",
    "docSyntax": "diag_exportTerrainSVG [filePath, drawLocationNames, drawGrid, drawCountlines, drawTreeObjects, drawMountainHeightpoints, simpleRoads]",
    "tags": "",
    "description": "thumb|right|400px|Highly detailed map of <Stratis|right> Like the old TOPOGRAPHY cheat code, exports terrain, but in modern SVG format instead of the proprietary EMF format.",
    "example": "diag_exportTerrainSVG [\"C:\\Users\\USERNAME\\Desktop\\Stratis_Map.svg\", true, true, true, true, true, false]; // Replace USERNAME with your username!",
    "params": "<string> <boolean> <boolean> <boolean> <boolean> <boolean> <boolean>",
    "returns": "nothing"
  },
  "diag_scope": {
    "command": "diag_scope",
    "timestamp": "2021-02-23T12:56:43Z",
    "version": "2.02",
    "syntax": "diag_scope",
    "docSyntax": "diag_scope",
    "tags": "",
    "description": "Returns script scope depth. When script is directly executed by the engine or a new script is added to the scheduler, the scope depth is 0. The examples of such execution are event handlers, spawn, etc. isNil Code will also create a parent scope. Any use of call and such will stack execution creating child scopes and increasing scope depth.",
    "example": "[] spawn { systemChat str diag_scope; // 0 call { call { systemChat str diag_scope; // 2 isNil { systemChat str diag_scope; // 0 call { systemChat str diag_scope; // 1 }; }; }; }; };",
    "params": "",
    "returns": "number"
  },
  "fileExists": {
    "command": "fileExists",
    "timestamp": "2021-02-23T12:56:33Z",
    "version": "2.02",
    "syntax": "fileExists <string>",
    "docSyntax": "fileExists path",
    "tags": "",
    "description": "Checks if file on given path exists. Uses same path resolve code as loadFile. FeatureInformativeAbsolute paths are not supported, such as those generated using getMissionPath. Attempting to check an absolute path will result in this error in RPT \nlogs: icInvalid path (only relative paths supported): 'C:\\...'",
    "example": "sqffileExists \"\\a3\\mySuperPath\\bestFileEver.paa\"; // returns false</sqf>",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "flatten": {
    "command": "flatten",
    "timestamp": "2021-02-23T12:56:31Z",
    "version": "2.02",
    "syntax": "flatten <array>",
    "docSyntax": "flatten array",
    "tags": "",
    "description": "Flattens an array.",
    "example": "flatten [1, [2], 3</nowiki>, <[4>]]; // returns [1, 2, 3, 4]",
    "params": "<array>",
    "returns": "array"
  },
  "forceCadetDifficulty": {
    "command": "forceCadetDifficulty",
    "timestamp": "2021-02-23T12:57:14Z",
    "version": "2.02",
    "syntax": "forceCadetDifficulty [<boolean>, <boolean>]",
    "docSyntax": "forceCadetDifficulty [showCadetHints, showCadetWP]",
    "tags": "",
    "description": "Forces showCadetHints and showCadetWP global Cadet arma3 difficulty, returns previous settings.",
    "example": "private _previousSettings = forceCadetDifficulty [true, false];",
    "params": "<boolean> <boolean>",
    "returns": "array | boolean"
  },
  "forceUnicode": {
    "command": "forceUnicode",
    "timestamp": "2021-02-23T12:58:26Z",
    "version": "2.02",
    "syntax": "forceUnicode <number>",
    "docSyntax": "forceUnicode mode",
    "tags": "",
    "description": "Sets the Unicode flag which forces some of the string manipulation commands to switch to Unicode. The Unicode flag is always set right after forceUnicode command execution, but is reset depending on the command \nmode: * 1 - the Unicode flag is reset right after any of the supported commands executed or the end of script, whichever comes earlier. * 0 - the Unicode flag is reset at the end of the script. When the flag is set it will also affect all scopes within the script including child scopes (see \nalso: diag_scope). There are many other string manipulation commands like ctrlSetText, getTextWidth, etc. that support Unicode by design so no additional forcing is needed. brbrList of the commands that work with \nforceUnicode: Columns5 * copyFromClipboard * copyToClipboard * count * find * in * insert * reverse * select * splitString * trim * regexFind * regexMatch * regexReplace",
    "example": "copyToClipboard \"д\"; // Copies \"Ð´\" to clipboard forceUnicode 1; copyToClipboard \"д\"; // Copies \"д\" to clipboard",
    "params": "<number>",
    "returns": "anything"
  },
  "get": {
    "command": "get",
    "timestamp": "2021-02-23T12:57:33Z",
    "version": "2.02",
    "syntax": "<hashmap>get <hashmapkey>",
    "docSyntax": "hashMap get key",
    "tags": "",
    "description": "Retrieves a value out of a HashMap after looking it up by its key.",
    "example": "private _myValue = _myHashMap get \"a\";",
    "params": "<hashmap> <hashmapkey>",
    "returns": "anything | nothing"
  },
  "getAllPylonsInfo": {
    "command": "getAllPylonsInfo",
    "timestamp": "2021-02-23T12:57:39Z",
    "version": "2.02",
    "syntax": "PAGENAMEE <object>",
    "docSyntax": "PAGENAMEE vehicle",
    "tags": "",
    "description": "Return an array with the vehicle's all pylons info.",
    "example": "getAllPylonsInfo vehicle player; codecomment/* Executed on an Mi-48 Kajman: [ [1,\"PylonLeft1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000646\"], [2,\"PylonLeft2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000648\"], [3,\"PylonRight2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000649\"], [4,\"PylonRight1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000650\"] ] nowiki*</nowiki>/",
    "params": "<object>",
    "returns": "magazine detailnowiki]</nowiki>"
  },
  "getObjectScale": {
    "command": "getObjectScale",
    "timestamp": "2021-02-24T16:16:26Z",
    "version": "2.02",
    "syntax": "getObjectScale terrain",
    "docSyntax": "getObjectScale object",
    "tags": "",
    "description": "Returns the render scale of the object relative to the original model.",
    "example": "_scale = getObjectScale _object;",
    "params": "terrain",
    "returns": "number"
  },
  "getOrDefault": {
    "command": "getOrDefault",
    "timestamp": "2021-02-23T12:57:24Z",
    "version": "2.02",
    "syntax": "<hashmap>getOrDefault [<hashmapkey>, <anything>, <boolean>]",
    "docSyntax": "hashMap getOrDefault [key, defaultValue, setDefault]",
    "tags": "",
    "description": "Retrieves a value out of a HashMap after looking it up by its key. When the HashMap doesn't contain the key, the default value is returned",
    "example": "private _myValue = _myHashMap getOrDefault [\"a\", \"Not Found!\"];",
    "params": "<hashmap> <hashmapkey> <anything> <boolean>",
    "returns": "anything"
  },
  "getPlayerID": {
    "command": "getPlayerID",
    "timestamp": "2021-02-23T12:57:11Z",
    "version": "2.02",
    "syntax": "getPlayerID <object>",
    "docSyntax": "getPlayerID unit",
    "tags": "",
    "description": "Returns user DirectPlay ID, which can be used with mission event handlers such as PlayerConnected.",
    "example": "getPlayerID player;",
    "params": "<object>",
    "returns": "player"
  },
  "getTextRaw": {
    "command": "getTextRaw",
    "timestamp": "2021-02-23T12:59:35Z",
    "version": "2.02",
    "syntax": "getTextRaw <config>",
    "docSyntax": "getTextRaw config",
    "tags": "",
    "description": "Returns raw text from config entry. If entry is subject to localization, the translation key is returned. To obtain the localized text, see getText.",
    "example": "sqf private _text = getTextRaw (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // \"$STR_ACTION_GETIN_DRIVER\" _key = _text select [1]; // \"STR_ACTION_GETIN_DRIVER\" _localized = localize _key; // \"Get in %1 as Driver\" _localized == getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // true </sqf>",
    "params": "<config>",
    "returns": "string"
  },
  "insert": {
    "command": "insert",
    "timestamp": "2021-02-23T12:57:14Z",
    "version": "2.02",
    "syntax": "<array>insert [<number>, <array>, <boolean>]",
    "docSyntax": "array insert [index, [value1, value2, ...], onlyIfUnique]",
    "tags": "",
    "description": "Inserts multiple values into Array/String/HashMap.br The String variant also supports forceUnicode.",
    "example": "\"Test\" insert [0, \"Radio\"]; // Returns \"RadioTest\"",
    "params": "<array> <number> <array> <boolean> <string> <number> <string> <hashmap> <hashmapkey> <anything> <hashmap> <boolean> <array>",
    "returns": "nothing"
  },
  "isNotEqualTo": {
    "command": "isNotEqualTo",
    "timestamp": "2021-02-23T12:57:37Z",
    "version": "2.02",
    "syntax": "<anything> isNotEqualTo <anything>",
    "docSyntax": "val1 isNotEqualTo val2",
    "tags": "",
    "description": "Performs strict comparison between var1 and var2 and returns false if equal, otherwise true.",
    "example": "_true = 0 isNotEqualTo 1;",
    "params": "<anything> <anything>",
    "returns": "boolean"
  },
  "keys": {
    "command": "keys",
    "timestamp": "2021-02-23T12:57:05Z",
    "version": "2.02",
    "syntax": "keys hashMap",
    "docSyntax": "keys hashMap",
    "tags": "",
    "description": "Retrieves a list of all keys in a HashMap.",
    "example": "keys _myHashMap;",
    "params": "<hashmap>",
    "returns": "array"
  },
  "markerChannel": {
    "command": "markerChannel",
    "timestamp": "2021-02-23T12:57:11Z",
    "version": "2.02",
    "syntax": "<string>Channel marker",
    "docSyntax": "markerChannel marker",
    "tags": "",
    "description": "Returns the channel that a marker belongs to.",
    "example": "markerChannel \"marker_1\";",
    "params": "<string>",
    "returns": "number"
  },
  "markerPolyline": {
    "command": "markerPolyline",
    "timestamp": "2021-02-23T12:57:05Z",
    "version": "2.02",
    "syntax": "<string>Polyline marker",
    "docSyntax": "markerPolyline marker",
    "tags": "",
    "description": "Returns a polyline marker's path data.",
    "example": "markerPolyline \"_USER_DEFINED #0/0/1\"; // Returns your first polyline's data in Singleplayer",
    "params": "<string>",
    "returns": "array"
  },
  "menuSetShortcut": {
    "command": "menuSetShortcut",
    "timestamp": "2021-02-24T17:20:40Z",
    "version": "2.02",
    "syntax": "menuSetShortcut [<number>, <array>, <number>]",
    "docSyntax": "menuSetShortcut [idc, path, shortcut]",
    "tags": "",
    "description": "Sets shortcut of given menu strip entry.",
    "example": "Code_ctrlMenuStrip menuSetShortcut [nowiki[</nowiki>0,0],2048 + 0x16]; // ALT + U</code>",
    "params": "<number> <array> <number> <control> <array> <number>",
    "returns": "nothing"
  },
  "menuSetText": {
    "command": "menuSetText",
    "timestamp": "2021-02-24T17:20:39Z",
    "version": "2.02",
    "syntax": "menuSetText [<number>, <array>, <string>]",
    "docSyntax": "menuSetText [idc, path, text]",
    "tags": "",
    "description": "Sets text of given menu strip entry.",
    "example": "Code_ctrlMenuStrip menuSetText [nowiki[</nowiki>0,0,1], \"Hello World!\"];</code>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "menuSetURL": {
    "command": "menuSetURL",
    "timestamp": "2021-02-24T17:20:32Z",
    "version": "2.02",
    "syntax": "menuSetURL [<number>, <array>, <string>]",
    "docSyntax": "menuSetURL [idc, path, link]",
    "tags": "",
    "description": "Sets weblink (URL) of given menu strip entry, subject to allowedHTMLLoadURIs[] whitelisting in CfgCommands config.",
    "example": "Code_ctrlMenuStrip menuSetURL [nowiki[</nowiki>0,0,1], \"nowikihttps://arma3.com/</nowiki>\"];</code>",
    "params": "<number> <array> <string> <control> <array> <string>",
    "returns": "nothing"
  },
  "merge": {
    "command": "merge",
    "timestamp": "2021-02-23T12:59:57Z",
    "version": "2.02",
    "syntax": "<hashmap> merge <hashmap>",
    "docSyntax": "hashMap1 merge hashMap2",
    "tags": "",
    "description": "Merges two HashMaps.",
    "example": "_hashMap merge _otherHashMap;",
    "params": "<hashmap> <hashmap> <hashmap> <hashmap> <false>",
    "returns": "nothing"
  },
  "missionNameSource": {
    "command": "missionNameSource",
    "timestamp": "2021-02-23T12:57:18Z",
    "version": "2.02",
    "syntax": "missionNameSource",
    "docSyntax": "missionNameSource",
    "tags": "",
    "description": "Return workshop-compatible currently loaded mission file (path to mission.pbo, relative to game exe). Feature Informative * mission.sqm. * pre-v2.02 missions may return an empty string.",
    "example": "hint format [\"You are playing mission \"\"%1\"\"\", missionNameSource];",
    "params": "",
    "returns": "string"
  },
  "removeAllBinocularItems": {
    "command": "removeAllBinocularItems",
    "timestamp": "2021-02-23T12:56:30Z",
    "version": "2.02",
    "syntax": "removeAllBinocularItems <object>",
    "docSyntax": "removeAllBinocularItems unit",
    "tags": "[AL] [EG]",
    "description": "Removes all items from binocular weapon, except magazine.",
    "example": "removeAllBinocularItems player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeAllSecondaryWeaponItems": {
    "command": "removeAllSecondaryWeaponItems",
    "timestamp": "2021-02-23T12:56:32Z",
    "version": "2.02",
    "syntax": "removeAllSecondaryWeaponItems <object>",
    "docSyntax": "removeAllSecondaryWeaponItems unit",
    "tags": "[AL] [EG]",
    "description": "Removes all items from secondaryWeapon, except magazine.",
    "example": "removeAllSecondaryWeaponItems player;",
    "params": "<object>",
    "returns": "nothing"
  },
  "removeBinocularItem": {
    "command": "removeBinocularItem",
    "timestamp": "2021-02-23T12:56:39Z",
    "version": "2.02",
    "syntax": "<object> removeBinocularItem <string>",
    "docSyntax": "unit removeBinocularItem item",
    "tags": "[AL] [EG]",
    "description": "Removes given weapon item, including magazine, from the binocular weapon.",
    "example": "player removeBinocularItem \"Laserbatteries\";",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "setMarkerPolyline": {
    "command": "setMarkerPolyline",
    "timestamp": "2021-02-23T12:57:17Z",
    "version": "2.02",
    "syntax": "<string> setMarkerPolyline <array>",
    "docSyntax": "marker setMarkerPolyline path",
    "tags": "[EG]",
    "description": "Sets a polyline marker's path. FeatureInformative'Multiplayer optimisation:' Global marker commands always broadcast the ''entire'' marker state over the network. As such, the number of network messages exchanged when creating or editing a marker can be reduced by performing all but the last operation using local marker commands, then using a global marker command for the last change (and subsequent global broadcast of all changes applied to the marker).",
    "example": "\"marker_1\" setMarkerShape \"polyline\"; private _return = [] ; for \"_i\" from 0 to 100 step 0.1 do { _return pushBack (_i + getPosASL player#0); _return pushBack ((sin (_i*10))*10 + getPosASL player#1); } ; \"marker_1\" setMarkerPolyline _return;",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "setMarkerPolylineLocal": {
    "command": "setMarkerPolylineLocal",
    "timestamp": "2021-02-23T12:57:05Z",
    "version": "2.02",
    "syntax": "<string> setMarkerPolylineLocal <array>",
    "docSyntax": "marker setMarkerPolylineLocal path",
    "tags": "[EL]",
    "description": "Sets a polyline marker's path. Works only on the computer that executes this command.",
    "example": "\"marker_1\" setMarkerShape \"polyline\"; private _return = [] ; for \"_i\" from 0 to 100 step 0.1 do { _return pushBack (_i + getPos player#0); _return pushBack ((sin (_i*10))*10 + getPos player#1); } ; \"marker_1\" setMarkerPolylineLocal _return;",
    "params": "<string> <array>",
    "returns": "nothing"
  },
  "setObjectScale": {
    "command": "setObjectScale",
    "timestamp": "2021-02-23T12:57:39Z",
    "version": "2.02",
    "syntax": "attached setObjectScale <number>",
    "docSyntax": "object setObjectScale scale",
    "tags": "[AL] [EG]",
    "description": "Scales an attached object or a Simple Object's model.",
    "example": "_mrap attachTo [player,[0,0,0]]; _mrap setObjectScale 0.1;",
    "params": "attached <number>",
    "returns": "nothing"
  },
  "setUnitCombatMode": {
    "command": "setUnitCombatMode",
    "timestamp": "2021-02-23T12:57:13Z",
    "version": "2.02",
    "syntax": "<object> setUnitCombatMode <string>",
    "docSyntax": "unit setUnitCombatMode mode",
    "tags": "",
    "description": "Sets 'unit's' combat mode (engagement rules). For AI group combat mode see setCombatMode. Mode may be one of the \nfollowing: * hl\"BLUE\" : Never fire, keep formation * hl\"GREEN\" : Hold fire, keep formation * hl\"WHITE\" : Hold fire, engage at will/loose formation * hl\"YELLOW\" : Fire at will, keep formation * hl\"RED\" : Fire at will, engage at will/loose formation See <Combat Modes> for more information on combat modes.",
    "example": "_unit setUnitCombatMode \"YELLOW\"",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "trim": {
    "command": "trim",
    "timestamp": "2021-02-23T12:56:41Z",
    "version": "2.02",
    "syntax": "trim <<string>>",
    "docSyntax": "trim stringValue",
    "tags": "",
    "description": "Trims a string.",
    "example": "trim \" hello, how are you? \"; // returns \"hello, how are you?\"",
    "params": "<string> <string> <string> <number>",
    "returns": "string"
  },
  "tvIsSelected": {
    "command": "tvIsSelected",
    "timestamp": "2021-02-23T12:57:28Z",
    "version": "2.02",
    "syntax": "<control> tvIsSelected <array>",
    "docSyntax": "control tvIsSelected path",
    "tags": "",
    "description": "Returns true if given treeview item is selected.",
    "example": "_control tvIsSelected [0];",
    "params": "<control> <array>",
    "returns": "boolean"
  },
  "tvSelection": {
    "command": "tvSelection",
    "timestamp": "2021-02-23T12:57:32Z",
    "version": "2.02",
    "syntax": "tvSelection <control>",
    "docSyntax": "tvSelection control",
    "tags": "",
    "description": "Returns array of paths to selected items.",
    "example": "_selection = tvSelection _ctrlTV;",
    "params": "<control>",
    "returns": "array"
  },
  "tvSetSelected": {
    "command": "tvSetSelected",
    "timestamp": "2021-02-23T12:57:08Z",
    "version": "2.02",
    "syntax": "<control> tvSetSelected [<array>, <boolean>]",
    "docSyntax": "control tvSetSelected [path, selected]",
    "tags": "",
    "description": "Sets the selection state of given treeview item in multi-select control.",
    "example": "_control tvSetSelected nowiki[[</nowiki>0], true];",
    "params": "<control> <array> <boolean>",
    "returns": "nothing"
  },
  "tvSortAll": {
    "command": "tvSortAll",
    "timestamp": "2021-02-24T17:22:11Z",
    "version": "2.02",
    "syntax": "<control> tvSortAll [<array>, <boolean>]",
    "docSyntax": "control tvSortAll [path, reversed]",
    "tags": "",
    "description": "Sorts all children, including trees deriving from given path. Text of Tree View entries is used for sorting.",
    "example": "control Tree View",
    "params": "<control> <array> <boolean>",
    "returns": "nothing"
  },
  "tvSortByValueAll": {
    "command": "tvSortByValueAll",
    "timestamp": "2021-02-24T17:47:31Z",
    "version": "2.02",
    "syntax": "<control> tvSortByValueAll [<array>, <boolean>]",
    "docSyntax": "control tvSortByValueAll [path, reversed]",
    "tags": "",
    "description": "Sorts all children, including trees deriving from given path. Value of Tree View entries is used for sorting.",
    "example": "control Tree View",
    "params": "<control> <array> <boolean>",
    "returns": "nothing"
  },
  "unitCombatMode": {
    "command": "unitCombatMode",
    "timestamp": "2021-02-23T12:57:35Z",
    "version": "2.02",
    "syntax": "<object>CombatMode unit",
    "docSyntax": "unitCombatMode unit",
    "tags": "",
    "description": "Gets individual unit's combat mode. For more information see setUnitCombatMode.",
    "example": "unitCombatMode _unit",
    "params": "<object>",
    "returns": "string"
  },
  "allDiarySubjects": {
    "command": "allDiarySubjects",
    "timestamp": "2021-04-27T13:32:00Z",
    "version": "2.04",
    "syntax": "allDiarySubjects <object>",
    "docSyntax": "allDiarySubjects person",
    "tags": "[AG] [EL]",
    "description": "Returns array with all Diary subjects available to the given person. See Diary for the explanation on the available subjects and their structure.",
    "example": "allDiarySubjects player;",
    "params": "<object>",
    "returns": "array | string | string | string | number | boolean | boolean | true"
  },
  "apertureParams": {
    "command": "apertureParams",
    "timestamp": "2021-04-27T13:33:24Z",
    "version": "2.04",
    "syntax": "apertureParams",
    "docSyntax": "apertureParams",
    "tags": "[AL]",
    "description": "Returns current aperture parameters.",
    "example": "private _apertureParams = apertureParams;",
    "params": "",
    "returns": "array | number | boolean | setaperture | number | number | number | setaperturenew | number | setaperturenew | number | setaperturenew | number | setaperturenew | boolean | number"
  },
  "combatBehaviour": {
    "command": "combatBehaviour",
    "timestamp": "2021-04-27T13:35:11Z",
    "version": "2.04",
    "syntax": "combatBehaviour <object>",
    "docSyntax": "combatBehaviour unit",
    "tags": "[AG]",
    "description": "Returns combat behaviour of unit or group. To set unit or group behaviour see setCombatBehaviour. The behaviour is one \nof: * \"CARELESS\" * \"SAFE\" * \"AWARE\" * \"COMBAT\" * \"STEALTH\" * \"ERROR\" - when not available",
    "example": "unit1 setCombatBehaviour \"CARELESS\"; combatBehaviour unit1; //\"CARELESS\"",
    "params": "<object> <group>",
    "returns": "string"
  },
  "diag_dumpTerrainSynth": {
    "command": "diag_dumpTerrainSynth",
    "timestamp": "2021-04-27T13:32:02Z",
    "version": "2.04",
    "syntax": "diag_dumpTerrainSynth",
    "docSyntax": "diag_dumpTerrainSynth",
    "tags": "",
    "description": "Returns OutsideTerrain's current world's values.",
    "example": "private _terrainSynth = diag_dumpTerrainSynth;",
    "params": "",
    "returns": "array | number | array | number | number | number | number"
  },
  "diag_getTerrainGrid": {
    "command": "diag_getTerrainGrid",
    "timestamp": "2021-08-10T21:33:12Z",
    "version": "2.04",
    "syntax": "diag_getTerrainGrid",
    "docSyntax": "diag_getTerrainGrid",
    "tags": "",
    "description": "Returns terrain cell size (size of each grid cell in the Heightmap) as scalar",
    "example": "private _terrainGrid = diag_getTerrainGrid;",
    "params": "",
    "returns": "number"
  },
  "diag_getTerrainHeight": {
    "command": "diag_getTerrainHeight",
    "timestamp": "2021-05-23T12:46:44Z",
    "version": "2.04",
    "syntax": "diag_getTerrainHeight position2d",
    "docSyntax": "diag_getTerrainHeight positionWorld",
    "tags": "",
    "description": "Returns terrain height at the specified location. Feature informative Unlike getTerrainHeightASL which returns the exact position's height, it returns the apex of the terrain polygon.",
    "example": "private _h = 'diag_getTerrainHeight' position player;",
    "params": "position2d",
    "returns": "number"
  },
  "diag_getTerrainSegmentOffset": {
    "command": "diag_getTerrainSegmentOffset",
    "timestamp": "2021-08-10T21:32:59Z",
    "version": "2.04",
    "syntax": "diag_getTerrainSegmentOffset position2d",
    "docSyntax": "diag_getTerrainSegmentOffset PositionWorld",
    "tags": "",
    "description": "Returns the terrain segment. It is basically the same \nas: code_worldPos params [\"_x\", \"_y\"]; [nowikifloor(_x/diag_getTerrainGrid), floor(_y/diag_getTerrainGrid)];</code>",
    "example": "private _segmentOffset = diag_getTerrainSegmentOffset getPosWorld player;",
    "params": "position2d",
    "returns": "position2d, which is [x,y] of terrain segment (integer, basically pixel coordinates in heightmap)"
  },
  "diag_localized": {
    "command": "diag_localized",
    "timestamp": "2021-04-27T13:42:35Z",
    "version": "2.04",
    "syntax": "diag_localized <string>",
    "docSyntax": "diag_localized stringtable",
    "tags": "",
    "description": "Returns array with all stringtable or the array of all stringtables names if empty string hl\"\" is given. Common stringtables \nare: hl\"Global\", hl\"Mission\", hl\"Campaign\".",
    "example": "sqf private _randomKey = selectRandom diag_localized \"Global\"; hint format [\"Key: %1 Value: %2\", _randomKey, localize _randomKey]; </sqf>",
    "params": "<string>",
    "returns": "array | strings"
  },
  "environmentVolume": {
    "command": "environmentVolume",
    "timestamp": "2021-04-27T13:38:56Z",
    "version": "2.04",
    "syntax": "environmentVolume",
    "docSyntax": "environmentVolume",
    "tags": "",
    "description": "Returns the current environment volume (set by fadeEnvironment)",
    "example": "hint str environmentVolume;",
    "params": "",
    "returns": "number"
  },
  "fadeEnvironment": {
    "command": "fadeEnvironment",
    "timestamp": "2021-04-27T13:32:04Z",
    "version": "2.04",
    "syntax": "<number> fadeEnvironment <number>",
    "docSyntax": "time fadeEnvironment volume",
    "tags": "[EL]",
    "description": "Changes the master environment volume smoothly within the given time and is different from enableEnvironment global mute option. The default volume is 1.br Influenced sounds among others \nare: * forest sounds (birds, crickets, ...) * waves * wind * rain * sounds produced by air conditioners and similar * GVIarma32.06size=0.75 thunder",
    "example": "5 fadeEnvironment 0.1;",
    "params": "<number> <number>",
    "returns": "nothing"
  },
  "focusedCtrl": {
    "command": "focusedCtrl",
    "timestamp": "2021-04-27T13:31:57Z",
    "version": "2.04",
    "syntax": "focusedCtrl <display>",
    "docSyntax": "focusedCtrl display",
    "tags": "",
    "description": "Returns currently focused control.",
    "example": "_focused = focusedCtrl findDisplay 12;",
    "params": "<display>",
    "returns": "control"
  },
  "markerShadow": {
    "command": "markerShadow",
    "timestamp": "2021-04-27T13:31:55Z",
    "version": "2.04",
    "syntax": "PAGENAMEE <string>",
    "docSyntax": "PAGENAMEE marker",
    "tags": "",
    "description": "Returns if the marker is drawn with shadow enabled.",
    "example": "_shadowEnabled = markerShadow _myMarker;",
    "params": "<string>",
    "returns": "boolean | true | false"
  },
  "openGPS": {
    "command": "openGPS",
    "timestamp": "2021-04-27T13:43:15Z",
    "version": "2.04",
    "syntax": "<boolean>GPS open",
    "docSyntax": "openGPS open",
    "tags": "",
    "description": "Opens or closes minimap if player has hl\"ItemGPS\" linked in inventory and hl\"MinimapDisplayComponent\" is not disabled with enableInfoPanelComponent. Returns true on success. If more than one minimap is open (see infoPanels, infoPanel) each call to the command will close only 1 minimap. Visibility of minimap can be checked with visibleGPS command.",
    "example": "player linkItem \"ItemGPS\"; private _success = openGPS true;",
    "params": "<boolean>",
    "returns": "boolean | true"
  },
  "ropeSegments": {
    "command": "ropeSegments",
    "timestamp": "2021-04-27T13:32:09Z",
    "version": "2.04",
    "syntax": "<object>Segments rope",
    "docSyntax": "ropeSegments rope",
    "tags": "",
    "description": "Returns provided rope's segments",
    "example": "private _segments = ropeSegments _myRope;",
    "params": "<object>",
    "returns": "array | object"
  },
  "setCombatBehaviour": {
    "command": "setCombatBehaviour",
    "timestamp": "2021-04-27T13:40:06Z",
    "version": "2.04",
    "syntax": "<object> setCombatBehaviour <string>",
    "docSyntax": "unit setCombatBehaviour behaviour",
    "tags": "[AL] [EG]",
    "description": "Sets an individual unit behaviour (main syntax) or a whole group behaviour (alternative syntax). To retrieve unit or group behaviour see combatBehaviour. The behaviour is one \nof: * \"CARELESS\" * \"SAFE\" * \"AWARE\" * \"COMBAT\" * \"STEALTH\" Feature Informative See <AI Behaviour> for details of the effect of this command on AI units. Group behaviour usually is \"CARELESS\" or \"SAFE\"",
    "example": "unit1 setCombatBehaviour \"SAFE\";",
    "params": "<object> <string> <group> <string>",
    "returns": "nothing"
  },
  "setDiarySubjectPicture": {
    "command": "setDiarySubjectPicture",
    "timestamp": "2021-04-27T13:31:51Z",
    "version": "2.04",
    "syntax": "<object> setDiarySubjectPicture [<string>, <string>]",
    "docSyntax": "unit setDiarySubjectPicture [subject, picture]",
    "tags": "[AG] [EL]",
    "description": "Sets a picture to be displayed on the right of the creation, but this command also allows to change icon for the fixed subjects, like \"Tasks\", \"Diary\", \"Units\", \"Players\" and \"Statistics\".",
    "example": "player setDiarySubjectPicture [\"Diary\", \"\\A3\\ui_f\\data\\map\\markers ato\\o_mech_inf.paa\"];",
    "params": "<object> <string> <string>",
    "returns": "nothing"
  },
  "setMarkerShadow": {
    "command": "setMarkerShadow",
    "timestamp": "2021-04-27T13:32:10Z",
    "version": "2.04",
    "syntax": "<string> PAGENAMEE <boolean>",
    "docSyntax": "marker PAGENAMEE shadowState",
    "tags": "[EG]",
    "description": "Sets the shadow property of given marker.",
    "example": "_myMarker setMarkerShadow true; // Enable shadow",
    "params": "<string> <boolean>",
    "returns": "nothing"
  },
  "setMarkerShadowLocal": {
    "command": "setMarkerShadowLocal",
    "timestamp": "2021-04-27T13:32:08Z",
    "version": "2.04",
    "syntax": "<string> PAGENAMEE <boolean>",
    "docSyntax": "marker PAGENAMEE shadowState",
    "tags": "[EL]",
    "description": "Sets the shadow property of given marker.",
    "example": "_myMarker setMarkerShadowLocal true; // Enable shadow",
    "params": "<string> <boolean>",
    "returns": "nothing"
  },
  "setWeaponZeroing": {
    "command": "setWeaponZeroing",
    "timestamp": "2021-04-27T13:32:09Z",
    "version": "2.04",
    "syntax": "<object> setWeaponZeroing [<string>, <string>, <number>]",
    "docSyntax": "object setWeaponZeroing [weaponClass, muzzleClass, zeroingIndex]",
    "tags": "",
    "description": "Sets zeroing of given weapon and muzzle for given unit or vehicle.",
    "example": "player setWeaponZeroing [\"arifle_MX_GL_F\", \"GL_3GL_F\", 8]; // Set zeroing for underbarrel grenade launcher to 400 m",
    "params": "<object> <string> <string> <number>",
    "returns": "boolean | true | false"
  },
  "speechVolume": {
    "command": "speechVolume",
    "timestamp": "2021-04-27T13:39:10Z",
    "version": "2.04",
    "syntax": "'speechVolume'",
    "docSyntax": "'speechVolume'",
    "tags": "",
    "description": "Returns the current speech volume (set by fadeSpeech)",
    "example": "hint str speechVolume;",
    "params": "",
    "returns": "number"
  },
  "taskName": {
    "command": "taskName",
    "timestamp": "2021-04-27T13:33:28Z",
    "version": "2.04",
    "syntax": "<task>Name task",
    "docSyntax": "taskName task",
    "tags": "",
    "description": "Returns the name of the given task.",
    "example": "private _taskName = taskName _mytask;",
    "params": "<task>",
    "returns": "string"
  },
  "values": {
    "command": "values",
    "timestamp": "2021-08-14T12:53:28Z",
    "version": "2.04",
    "syntax": "values <hashmap>",
    "docSyntax": "values hashmap",
    "tags": "",
    "description": "Returns all values stored in the given HashMap. The order of the returned Array corresponds to the order of the Array returned by the keys command.",
    "example": "private _values = values _myHashMap;",
    "params": "<hashmap>",
    "returns": "array"
  },
  "addUserActionEventHandler": {
    "command": "addUserActionEventHandler",
    "timestamp": "2021-06-16T09:59:28Z",
    "version": "2.06",
    "syntax": "addUserActionEventHandler [<string>, useraction, <code>]",
    "docSyntax": "addUserActionEventHandler [keyName, event, expression]",
    "tags": "[EL]",
    "description": "Adds a user action event handler to the current mission and returns its event handler index.",
    "example": "private _ehId = addUserActionEventHandler [\"ReloadMagazine\", \"Activate\", { systemChat \"reloading!\"; }];",
    "params": "<string> useraction <code>",
    "returns": "number"
  },
  "allLODs": {
    "command": "allLODs",
    "timestamp": "2021-05-20T12:03:38Z",
    "version": "2.06",
    "syntax": "allLODs model",
    "docSyntax": "allLODs objectOrModel",
    "tags": "",
    "description": "Returns the list of object or model LODs.",
    "example": "allLODs player; codecomment/* [ [0,\"1\",1,91], [1,\"2\",2,91], [2,\"3\",3,84], [3,\"4\",4,43], [4,\"5\",5,34], [5,\"VIEW_PILOT\",1100,89], [6,\"shadow(0)\",10000,80], [7,\"shadow(10)\",10010,33], [8,\"geometry\",1e+013,42], [9,\"memory\",1e+015,55], [10,\"landContact\",2e+015,0], [11,\"hitpoints\",5e+015,33], [12,\"geometryView\",6e+015,19], [13,\"geometryFire\",7e+015,57], [14,\"shadow(1000)\",11000,80], [15,\"shadow(1010)\",11010,33] ] nowiki*/",
    "params": "model",
    "returns": "selectionnames | selectionposition | number | selectionnames"
  },
  "allUsers": {
    "command": "allUsers",
    "timestamp": "2021-08-02T12:16:26Z",
    "version": "2.06",
    "syntax": "allUsers",
    "docSyntax": "allUsers",
    "tags": "[SE]",
    "description": "Returns a list of player ids of all the users on an MP server.",
    "example": "private _allUserIDs = allUsers;",
    "params": "",
    "returns": "array | string | getplayerid"
  },
  "ambientTemperature": {
    "command": "ambientTemperature",
    "timestamp": "2021-08-04T15:33:30Z",
    "version": "2.06",
    "syntax": "ambientTemperature",
    "docSyntax": "ambientTemperature",
    "tags": "",
    "description": "Returns ambient temperature on the current terrain in Celsius in \nformat: [airTemperature, blackSurfaceTemperature, whiteSurfaceTemperature]",
    "example": "private _airTemp = ambientTemperature select 0;",
    "params": "",
    "returns": "array"
  },
  "canDeployWeapon": {
    "command": "canDeployWeapon",
    "timestamp": "2021-08-04T14:24:36Z",
    "version": "2.06",
    "syntax": "canDeployWeapon unit",
    "docSyntax": "canDeployWeapon unit",
    "tags": "[AL]",
    "description": "Returns true if player's weapon can be deployed.",
    "example": "private _canDeploy = canDeployWeapon player;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "conversationDisabled": {
    "command": "conversationDisabled",
    "timestamp": "2021-05-16T11:43:10Z",
    "version": "2.06",
    "syntax": "conversationDisabled <object>",
    "docSyntax": "conversationDisabled unit",
    "tags": "",
    "description": "A getter for disableConversation.",
    "example": "_isConversationDisabled = conversationDisabled soldier1;",
    "params": "<object>",
    "returns": "boolean | true | kbtell | disableconversation"
  },
  "ctrlBackgroundColor": {
    "command": "ctrlBackgroundColor",
    "timestamp": "2021-08-13T10:04:18Z",
    "version": "2.06",
    "syntax": "ctrlBackgroundColor <control>",
    "docSyntax": "ctrlBackgroundColor control",
    "tags": "",
    "description": "Returns control's background color.",
    "example": "ctrlBackgroundColor _control",
    "params": "<control>",
    "returns": "color (rgba)"
  },
  "ctrlForegroundColor": {
    "command": "ctrlForegroundColor",
    "timestamp": "2021-08-13T10:03:02Z",
    "version": "2.06",
    "syntax": "ctrlForegroundColor <control>",
    "docSyntax": "ctrlForegroundColor control",
    "tags": "",
    "description": "Returns control's foreground color.",
    "example": "ctrlForegroundColor _control",
    "params": "<control>",
    "returns": "color (rgba)"
  },
  "ctrlMapSetPosition": {
    "command": "ctrlMapSetPosition",
    "timestamp": "2021-05-24T09:11:53Z",
    "version": "2.06",
    "syntax": "map ctrlMapSetPosition <arra<number>>",
    "docSyntax": "map ctrlMapSetPosition [x, y, w, h]",
    "tags": "",
    "description": "Sets position and size of the given map control and recalculates control center. The effect is immediate and no Map control is different from other controls and normally does not behave well inside Controls Groups. When this command is used on the Map control inside a Controls Group, The ''x'' and ''y'' will be treated as relative position to the top left of Controls Group. Use this command to set position before you use Map control after its position or size had been changed or the Map control was created dynamically (Example 2). If you move Controls Group, use this command to refresh Map control (Example 3).",
    "example": "_map ctrlMapSetPosition [0,0,1,1];",
    "params": "map <array> <number> <number> <number> <number>",
    "returns": "nothing"
  },
  "ctrlSetTooltipMaxWidth": {
    "command": "ctrlSetTooltipMaxWidth",
    "timestamp": "2021-06-26T19:31:17Z",
    "version": "2.06",
    "syntax": "<control> ctrlSetTooltipMaxWidth <number>",
    "docSyntax": "ctrl ctrlSetTooltipMaxWidth width",
    "tags": "",
    "description": "Set maximum width of a control's tooltip.",
    "example": "private _previousMaxWidth = _myControl ctrlSetTooltipMaxWidth SafeZoneW/2;",
    "params": "<control> <number>",
    "returns": "number"
  },
  "diag_setTerrainHeight": {
    "command": "diag_setTerrainHeight",
    "timestamp": "2021-05-23T12:52:07Z",
    "version": "2.06",
    "syntax": "<array> PAGENAMEE <number>",
    "docSyntax": "position PAGENAMEE height",
    "tags": "",
    "description": "Changes the terrain height of the cell in which given position lies. This command is only available with 350px|See Example 1 for the code|thumb|right Feature Warning This causes an instant CTD when ''position'' is out of the map! (ic&lt; 0 and/or ic&gt; worldSize)",
    "example": "= { params [\"_start\", \"_a\", \"_b\", \"_h\"]; for \"_xStep\" from 0 to _a do { for \"_yStep\" from 0 to _b do { _start vectorAdd [_xStep, _yStep, 0] diag_setTerrainHeight _h; }; }; }; [position player, 50, 50, 150] spawn _fnc_flattenTerrain;",
    "params": "<array> <number>",
    "returns": "nothing"
  },
  "diag_stacktrace": {
    "command": "diag_stacktrace",
    "timestamp": "2021-07-25T07:22:28Z",
    "version": "2.06",
    "syntax": "diag_stacktrace",
    "docSyntax": "diag_stacktrace",
    "tags": "",
    "description": "Returns an array containing the function name, line number, scope name and all local variables in form of a hashmap.",
    "example": "private _testvar = 1; private _testother = 2; call { _testvar = 3; if (_testvar == 3) then { _myVariable = 4; hint str diag_stacktrace; }; }; codecomment/* [ [\"\", 3, \"\", <\"_this\", [>, [\"_testother\", 2], [\"_testvar\", 3]]], [\"\", 6, \"\", []], [\"\", 8, \"\", [nowiki[\"_myvariable\", 4]]] ] nowiki*/",
    "params": "",
    "returns": "array | string | number | string | hashmap"
  },
  "directionStabilizationEnabled": {
    "command": "directionStabilizationEnabled",
    "timestamp": "2021-08-04T15:23:17Z",
    "version": "2.06",
    "syntax": "<object> directionStabilizationEnabled <array>",
    "docSyntax": "vehicle directionStabilizationEnabled turretPath",
    "tags": "",
    "description": "Get state of direction stabilization. This command returns true if the current optic mode of the selected turret has direction stabilization configured in config (directionStabilized) and if it is also not disabled by enableDirectionStabilization.br This command can not be used to determine if the current optic of the turret has directionStabilized enabled in config.",
    "example": "uav directionStabilizationEnabled [0];",
    "params": "<object> <array>",
    "returns": "boolean"
  },
  "displayChild": {
    "command": "displayChild",
    "timestamp": "2021-06-29T07:10:17Z",
    "version": "2.06",
    "syntax": "<display>Child display",
    "docSyntax": "displayChild display",
    "tags": "",
    "description": "Returns child display of the given display.",
    "example": "_display = displayChild findDisplay 313; // Display #46",
    "params": "<display>",
    "returns": "display"
  },
  "enableDirectionStabilization": {
    "command": "enableDirectionStabilization",
    "timestamp": "2021-08-04T15:23:22Z",
    "version": "2.06",
    "syntax": "<object> enableDirectionStabilization [<boolean>, <array>]",
    "docSyntax": "vehicle enableDirectionStabilization [enabled, turretPath]",
    "tags": "",
    "description": "Enables / disables direction stabilization of turrets. This command only has an effect if the current optic mode of the selected turret has directionStabilized configured in config.",
    "example": "uav enableDirectionStabilization [false, [0]]; // Disable direction stabilization for the first turret",
    "params": "<object> <boolean> <array>",
    "returns": "nothing"
  },
  "gestureState": {
    "command": "gestureState",
    "timestamp": "2021-07-13T12:02:36Z",
    "version": "2.06",
    "syntax": "gestureState <object>",
    "docSyntax": "gestureState unitName",
    "tags": "[AG]",
    "description": "Returns the name of a unit's current gesture. Seems to be forced to lower case in Arma 3.br FeatureInformativeThis command is only for a man unit, other units such as animals cannot use this command.",
    "example": "_state = gestureState player;",
    "params": "<object>",
    "returns": "string"
  },
  "getCruiseControl": {
    "command": "getCruiseControl",
    "timestamp": "2021-05-26T15:27:36Z",
    "version": "2.06",
    "syntax": "getCruiseControl <object>",
    "docSyntax": "getCruiseControl vehicle",
    "tags": "[AL] [EL]",
    "description": "Returns cruise control settings set with setCruiseControl command.",
    "example": "getCruiseControl vehicle player params [\"_speedLimit\", \"_cruiseControlActive\"];",
    "params": "<object>",
    "returns": "array | number | boolean | true | false"
  },
  "getDebriefingText": {
    "command": "getDebriefingText",
    "timestamp": "2021-08-05T07:37:50Z",
    "version": "2.06",
    "syntax": "getDebriefingText <string>",
    "docSyntax": "getDebriefingText end",
    "tags": "",
    "description": "A getter for setDebriefingText. Returns array in \nformat: [text, title] (if old syntax of setDebriefingText was used)) or [text, title, subtitle, picture, background]] (if alt syntax of setDebriefingText was used) or an empty array [] if setDebriefingText was not used.",
    "example": "_debriefingTexts = getDebriefingText \"endDeath\";",
    "params": "<string>",
    "returns": "array"
  },
  "getSensorTargets": {
    "command": "getSensorTargets",
    "timestamp": "2021-06-06T11:35:28Z",
    "version": "2.06",
    "syntax": "getSensorTargets <object>",
    "docSyntax": "getSensorTargets vehicle",
    "tags": "[AL]",
    "description": "Returns vehicle sensors' potential targets.",
    "example": "private _radarTargets = getSensorTargets vehicle player; codecomment/* returns e.g [ [O Alpha 1-3:1, \"air\", \"unknown\", [\"ir\", \"activeradar\", \"visual\"]], [17750112040# 163957: apc_tracked_01_aa_f.p3d, \"ground\", \"unknown\", [\"datalink\"]] ] nowiki*/ ",
    "params": "<object>",
    "returns": "array | array | object | string | string | array | string"
  },
  "getSensorThreats": {
    "command": "getSensorThreats",
    "timestamp": "2021-06-06T11:40:33Z",
    "version": "2.06",
    "syntax": "getSensorThreats <object>",
    "docSyntax": "getSensorThreats vehicle",
    "tags": "[AL]",
    "description": "Returns vehicle sensors' threats.",
    "example": "private _dangers = getSensorThreats vehicle player; codecomment/* returns e.g [ [164230: titan_missile_atl_fly.p3d, \"missile\", \"visual\"], [164233: titan_missile_atl_fly.p3d, \"threatmissile\", \"radar\"] ] nowiki*/ ",
    "params": "<object>",
    "returns": "array | array | object | string | string"
  },
  "getTextureInfo": {
    "command": "getTextureInfo",
    "timestamp": "2021-06-12T05:59:15Z",
    "version": "2.06",
    "syntax": "getTextureInfo <string>",
    "docSyntax": "getTextureInfo texture",
    "tags": "",
    "description": "Return texture information - resolution in pixels and average colour. Multiply the pixel values by pixelW and pixelH to get screen coordinates.",
    "example": "getTextureInfo \"a3\\characters_f\\blufor\\data\\clothing1_co.paa\"; cc[2048, 2048, [0.458824, 0.427451, 0.34902, 1]]",
    "params": "<string>",
    "returns": "array"
  },
  "getUserInfo": {
    "command": "getUserInfo",
    "timestamp": "2021-08-02T12:32:58Z",
    "version": "2.06",
    "syntax": "getUserInfo playerID",
    "docSyntax": "getUserInfo playerID",
    "tags": "[SE]",
    "description": "Returns extended information about given server user.",
    "example": "sqfprivate _randomUserInfo = getUserInfo selectRandom allUsers;</sqf>",
    "params": "playerconnected",
    "returns": "number | owner | string | getplayeruid | string | profilename | string | name | squadparams | string | profilenamesteam | string | getclientstatenumber | boolean | hasinterface | isserver | number | admin | array | number | object | player | selectplayer"
  },
  "hashValue": {
    "command": "hashValue",
    "timestamp": "2021-08-04T15:25:20Z",
    "version": "2.06",
    "syntax": "hashValue <array>",
    "docSyntax": "hashValue value",
    "tags": "",
    "description": "Processes provided ''value''nowiki's hash, and encodes it using [https://en.wikipedia.org/wiki/Base64 Base64]. The hash algorithm is [https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function FNV-1A 64bit]. FeatureinformativeA hash value remains the same between game restarts but for Object and Group type, their hash being based on their netId.",
    "example": "private _valueHash = hashValue \"Hello There\";",
    "params": "<array>",
    "returns": "string"
  },
  "lbSortBy": {
    "command": "lbSortBy",
    "timestamp": "2021-05-16T09:30:52Z",
    "version": "2.06",
    "syntax": "<control> lbSortBy <array>",
    "docSyntax": "controlOrIDC lbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]",
    "tags": "",
    "description": "Sorts given ListBox by either lbText, lbValue or lbData in normal or reversed order, using case-sensitive or case-insensitive comparison. This command supports UNICODE characters. When sorting by hl\"VALUE\", the rows with the same lbValue will additionally be sorted by lbText in the order specified by `reversedOrder` flag, text specified by `useTextRight` flag and case-sensitivity specified by `caseSensitive` flag. FeatureImportant * This command supports referencing control via IDC as well, but as with any use of IDC in UI Control commands, a dialog should be present, i.e. UI user interaction is created with createDialog rather than createDisplay. * As this command supports UNICODE by default, which may result in slower sorting, you can switch it off with unicodeOff param.",
    "example": "with uiNamespace do { private _lb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListBox\", -1]; _lb ctrlSetPosition [0,0,1,1]; _lb ctrlCommit 0; lbClear _lb; { _lb lbAdd (_x select 0); _lb lbSetValue [_forEachIndex, _x select 1]; } forEach [[\"В\",1], [\"Я\",0], [\"Б\",1], [\"Ю\",0], [\"А\",1]]; _lb lbSortBy [\"VALUE\", false, false]; };",
    "params": "<control> <array> <string> <boolean> <boolean> text <boolean>",
    "returns": "nothing"
  },
  "lbTooltip": {
    "command": "lbTooltip",
    "timestamp": "2021-06-12T13:17:32Z",
    "version": "2.06",
    "syntax": "lbTooltip [<number>, <number>]",
    "docSyntax": "lbTooltip [idc, index]",
    "tags": "",
    "description": "Returns tooltip for ListBox, ComboBox and Toolbox",
    "example": "lbTooltip [1, 1];",
    "params": "<number> <number> <control> <number>",
    "returns": "string"
  },
  "lnbSortBy": {
    "command": "lnbSortBy",
    "timestamp": "2021-05-16T08:32:45Z",
    "version": "2.06",
    "syntax": "<array> lnbSortBy <array>",
    "docSyntax": "[controlOrIDC, column] lnbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]",
    "tags": "",
    "description": "Sorts given multi-column ListNBox in the given column by either lnbText, lnbValue or lnbData in normal or reversed order, using case-sensitive or case-insensitive comparison. Unlike the older 'lnbSortXXX' commands, this command supports UNICODE characters out of the box.br When sorting by hl\"VALUE\", the rows with the same lnbValue will additionally be sorted by lnbText in the order specified by the ''reversedOrder'' flag, text specified by `useTextRight` flag and case-sensitivity specified by `caseSensitive` flag. FeatureImportant * This command supports referencing control via IDC as well, but as with any use of IDC in UI Control commands, a dialog should be present, i.e. UI user interaction is created with createDialog rather than createDisplay. * As this command supports UNICODE by default, which may result in slower sorting, you can switch it off with unicodeOff param.",
    "example": "with uiNamespace do { private _column = 1; private _lnb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListNBox\", -1]; _lnb ctrlSetPosition [0,0,1,1]; _lnb ctrlCommit 0; lnbClear _lnb; { _lnb lnbAddRow [format [\"Row %1\", _forEachIndex], _x select 0]; _lnb lnbSetValue nowiki<</nowiki>[[_forEachIndex>, _column], _x select 1]; } forEach [[\"В\",1], [\"Я\",0], [\"Б\",1], [\"Ю\",0], [\"А\",1]]; [_lnb, _column] lnbSortBy [\"VALUE\", true, false]; };",
    "params": "<array> <control> <number> <array> <string> <boolean> <boolean> text <boolean>",
    "returns": "nothing"
  },
  "missionEnd": {
    "command": "missionEnd",
    "timestamp": "2021-08-05T06:22:33Z",
    "version": "2.06",
    "syntax": "missionEnd",
    "docSyntax": "missionEnd",
    "tags": "",
    "description": "Returns mission end type and how it was ended or an empty array [] is mission was not ended.",
    "example": "private _misssionEnd = missionEnd;",
    "params": "",
    "returns": "array | string | failmission | endmission | boolean | true | failmission | false | endmission | boolean | failmission | false"
  },
  "radioEnabled": {
    "command": "radioEnabled",
    "timestamp": "2021-05-16T11:29:26Z",
    "version": "2.06",
    "syntax": "radioEnabled",
    "docSyntax": "radioEnabled",
    "tags": "",
    "description": "A getter for enableRadio.",
    "example": "_isRadioEnabled = radioEnabled;",
    "params": "",
    "returns": "boolean | true"
  },
  "regexFind": {
    "command": "regexFind",
    "timestamp": "2021-05-21T11:47:02Z",
    "version": "2.06",
    "syntax": "<string> regexFind [regex, startOffset]",
    "docSyntax": "haystack regexFind [pattern, startOffset]",
    "tags": "",
    "description": "Searches in a string with a regular expression. FeatureinformativeSee <Arma \n3: Regular Expressions>.",
    "example": "\"wooKie boOkie cookie\" regexFind [\".ookie/gio\"]; // nowiki<[\"wooKie\", 0>, <\"boOkie\", 7>, <\"cookie\", 14>]</nowiki>",
    "params": "<string> regex <number>",
    "returns": "array | string | number"
  },
  "regexMatch": {
    "command": "regexMatch",
    "timestamp": "2021-05-21T11:47:12Z",
    "version": "2.06",
    "syntax": "<string> PAGENAMEE regex",
    "docSyntax": "haystack PAGENAMEE pattern",
    "tags": "",
    "description": "Returns whether the ''haystack'' matches the ''pattern''.",
    "example": "\"I'm a coOkIe clicker\" PAGENAMEE \".*cookie.*\"; // true",
    "params": "<string> regex",
    "returns": "boolean | true | false"
  },
  "regexReplace": {
    "command": "regexReplace",
    "timestamp": "2021-05-21T11:47:14Z",
    "version": "2.06",
    "syntax": "<string> PAGENAMEE [regex, replace string]",
    "docSyntax": "haystack PAGENAMEE [pattern, replace string]",
    "tags": "",
    "description": "Searches given ''haystack'' with given ''pattern'' and replaces all matches with given ''replaceString''.",
    "example": "\"wookie boOkie cookie\" PAGENAMEE [\".oo/gio\", \"[$']\"]; cc\"[kie boOkie cookie]kie [kie cookie]kie [kie]kie\"",
    "params": "<string> regex <string>",
    "returns": "string"
  },
  "removeAllUserActionEventHandlers": {
    "command": "removeAllUserActionEventHandlers",
    "timestamp": "2021-06-16T10:15:25Z",
    "version": "2.06",
    "syntax": "removeAllUserActionEventHandlers [<string>, useraction]",
    "docSyntax": "removeAllUserActionEventHandlers [keyName, eventType]",
    "tags": "[EL]",
    "description": "Removes all UserAction event handlers of the given type which were added by addUserActionEventHandler. Feature important This command also resets the Event Handler creation index to 0.",
    "example": "removeAllMissionEventHandlers [\"Reload\", \"Activate\"];",
    "params": "<string> useraction",
    "returns": "nothing"
  },
  "removeUserActionEventHandler": {
    "command": "removeUserActionEventHandler",
    "timestamp": "2021-06-16T10:02:22Z",
    "version": "2.06",
    "syntax": "removeUserActionEventHandler [<string>, useraction, <number>]",
    "docSyntax": "removeUserActionEventHandler [keyName, event, index]",
    "tags": "[EL]",
    "description": "Removes a UserAction event handler. For a list of available UserAction event handlers, \nsee: <Arma \n3: Mission Event Handlers>.",
    "example": "removeUserActionEventHandler [\"Reload\", \"Activate\", _reloadUAEH];",
    "params": "<string> useraction <number>",
    "returns": "nothing"
  },
  "selectionVectorDirAndUp": {
    "command": "selectionVectorDirAndUp",
    "timestamp": "2021-07-08T18:15:36Z",
    "version": "2.06",
    "syntax": "<object> selectionVectorDirAndUp [<string>, resolution]",
    "docSyntax": "object selectionVectorDirAndUp [selectionName, LOD]",
    "tags": "[AG]",
    "description": "Searches for selection in the object model's LOD level, and returns the Direction and Up vectors in model space.",
    "example": "",
    "params": "<object> <string> resolution",
    "returns": "array | vectordir | vectorup"
  },
  "sentencesEnabled": {
    "command": "sentencesEnabled",
    "timestamp": "2021-05-16T11:32:37Z",
    "version": "2.06",
    "syntax": "sentencesEnabled",
    "docSyntax": "sentencesEnabled",
    "tags": "",
    "description": "A getter for enableSentences.",
    "example": "_areSentencesEnabled = sentencesEnabled;",
    "params": "",
    "returns": "boolean | true"
  },
  "serverNamespace": {
    "command": "serverNamespace",
    "timestamp": "2021-06-30T20:05:59Z",
    "version": "2.06",
    "syntax": "serverNamespace",
    "docSyntax": "serverNamespace",
    "tags": "[SE]",
    "description": "Returns server's namespace. This namespace is only available on the server for the server's uptime duration (same as uiNamespace). Server event handlers, which are available in server config, all use this namespace.",
    "example": "private _serverVars = allVariables serverNamespace;",
    "params": "",
    "returns": "namespace | nothing"
  },
  "setCruiseControl": {
    "command": "setCruiseControl",
    "timestamp": "2021-05-19T11:27:43Z",
    "version": "2.06",
    "syntax": "<object> setCruiseControl [<number>, <boolean>]",
    "docSyntax": "vehicle setCruiseControl [speed, autoThrust]",
    "tags": "[AL] [EL]",
    "description": "Limits or sets 'local player-controlled' vehicle's speed through cruise control. Featureinformative * this command only works on CarX, TankX, ShipX simulation vehicles * this command is implemented using a PID controller overwriting the vehicle's thrust/brakes input {! class=\"wikitable\" ! Speed Limiter ! Cruise Control !- style=\"vertical-\nalign: top\" ! * the vehicle does not accelerate by itself * manually accelerating is required to move forward * accelerating beyond set speed limit is restricted by the PID controller * applying brakes does not disable Speed Limiter * \nbehaviour: ** if the speed is over 120% the set limit, the vehicle will apply 100% of braking and limit acceleration to 0% ** if the speed is below 80% the set limit, the acceleration and braking are untouched ** between 80 and 120%, the PID controller limits the acceleration and applies brakes if required ! * the vehicle accelerates by itself * manually accelerating is possible * accelerating above set speed limit is possible * applying brakes disables Cruise Control * \nbehaviour: ** if the speed is over 120% the set limit, the vehicle will apply 100% of braking ** if the speed is below 80% the set limit, the vehicle will apply 100% of acceleration ** between 80 and 120%, the PID controller manages the speed !} FeatureimportantThis command should only be called to ''change'' values and 'not' be called every frame, as it resets the PID controller.",
    "example": "vehicle player setCruiseControl [50, true]; // sets cruise control to 50 km/h",
    "params": "<object> <number> <boolean>",
    "returns": "nothing"
  },
  "setLightConePars": {
    "command": "setLightConePars",
    "timestamp": "2021-06-14T08:44:04Z",
    "version": "2.06",
    "syntax": "<object>setLightConePars [<number>, <number>, <number>]",
    "docSyntax": "lightReflector setLightConePars [outerAngle, innerAngle, fadeCoef]",
    "tags": "[AL] [EL]",
    "description": "Sets the lightpoint (directional light ic#lightreflector)'s cone params.",
    "example": "_light setLightConePars [90, 45, 1];",
    "params": "<object> <number> <number> <number>",
    "returns": "nothing"
  },
  "setLightIR": {
    "command": "setLightIR",
    "timestamp": "2021-05-28T10:01:59Z",
    "version": "2.06",
    "syntax": "<object> setLightIR <boolean>",
    "docSyntax": "light setLightIR value",
    "tags": "[AL] [EL]",
    "description": "Sets lightpoint in infrared range.",
    "example": "myLight 'setLightIR' true; // Visible with NVG only!",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "setLightVolumeShape": {
    "command": "setLightVolumeShape",
    "timestamp": "2021-06-14T08:44:09Z",
    "version": "2.06",
    "syntax": "<object>setLightVolumeShape [<string>, <array>]",
    "docSyntax": "lightReflector setLightVolumeShape [shapePath, scale]",
    "tags": "[AL] [EL]",
    "description": "Sets the lightpoint (directional light ic#lightreflector)'s volume shape.",
    "example": "_light setLightVolumeShape [\"a3\\data_f\\VolumeLightFlashlight.p3d\", [1, 1, 1]];",
    "params": "<object> <string> <array>",
    "returns": "nothing"
  },
  "setTowParent": {
    "command": "setTowParent",
    "timestamp": "2021-05-22T09:54:03Z",
    "version": "2.06",
    "syntax": "<object> PAGENAMEE <object>",
    "docSyntax": "towedVehicle PAGENAMEE towingVehicle",
    "tags": "[AG] [EL]",
    "description": "Allows ''towedVehicle'' to be towed by ''towingVehicle''. This loosens the vehicle brakes of the ''towedVehicle'' and turned its steering wheels toward the ''towingVehicle''. Supposed to be used together with a rope connecting both vehicles.",
    "example": "{ moveOut _x; } forEach crew _towedVehicle; // Make sure nobody is in the towed vehicle _towedVehicle lock true; _towedVehicle setTowParent _bobcat;",
    "params": "<object> <object>",
    "returns": "nothing"
  },
  "shownSubtitles": {
    "command": "shownSubtitles",
    "timestamp": "2021-05-16T11:36:13Z",
    "version": "2.06",
    "syntax": "shownSubtitles",
    "docSyntax": "shownSubtitles",
    "tags": "",
    "description": "A getter for showSubtitles.",
    "example": "_setToShow = shownSubtitles;",
    "params": "",
    "returns": "boolean | true"
  },
  "uniqueUnitItems": {
    "command": "uniqueUnitItems",
    "timestamp": "2021-07-21T15:39:38Z",
    "version": "2.06",
    "syntax": "uniqueUnitItems <object>",
    "docSyntax": "uniqueUnitItems unit",
    "tags": "[AG]",
    "description": "Returns hashmap of all items in units inventory as [classname, count] pairs. Featureinformative * ''weaponItems'', ''uniformItems'', ''vestItems'', ''backpackItems'' arguments use the following Number \nvalues: ** \n0: do not return value ** \n1: returns container only (weapon or container) ** \n2: returns container and its content * weapons/containers that are stored inside containers (e.g weapon in backpack) always return all contents if contents for the parent container are enabled.",
    "example": "private _unitUniqueItems = uniqueUnitItems [player, 0, 2, 2, 2, true]; if (_unitUniqueItems getOrDefault [\"FirstAidKit\", 0] > 5) then { hint \"I'm rich of FAK to give!\"; };",
    "params": "<object> <object> <number> <number> <number> <number> goggles",
    "returns": "hashmap | string | number"
  },
  "weaponReloadingTime": {
    "command": "weaponReloadingTime",
    "timestamp": "2021-06-22T06:52:08Z",
    "version": "2.06",
    "syntax": "<object> weaponReloadingTime nowiki[<object>, <string>]</nowiki>",
    "docSyntax": "vehicle weaponReloadingTime nowiki[gunner, muzzleName]</nowiki>",
    "tags": "",
    "description": "Returns current ammo round reloading phase. For a magazine reloading phase see weaponState command.",
    "example": "",
    "params": "<object> <object> <string>",
    "returns": "number"
  },
  "allEnv3DSoundSources": {
    "command": "allEnv3DSoundSources",
    "timestamp": "2021-10-28T08:53:44Z",
    "version": "2.08",
    "syntax": "allEnv3DSoundSources",
    "docSyntax": "allEnv3DSoundSources",
    "tags": "",
    "description": "Returns all environmental 3D sound sources (Objects) like trees and houses in camera vicinity.",
    "example": "_sources = allEnv3DSoundSources;",
    "params": "",
    "returns": "array | object"
  },
  "awake": {
    "command": "awake",
    "timestamp": "2021-11-04T11:03:57Z",
    "version": "2.08",
    "syntax": "<object> <boolean> awake",
    "docSyntax": "object awake awake",
    "tags": "[AG] [EL]",
    "description": "Wakes up sleeping PhysX object or puts a PhysX object to sleep. Feature Informative This command won't have lasting effect on vehicles as vehicles are actively simulated, but it works rather well on smaller PhysX enabled objects",
    "example": "_object awake false;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "brakesDisabled": {
    "command": "brakesDisabled",
    "timestamp": "2021-11-29T14:10:24Z",
    "version": "2.08",
    "syntax": "brakesDisabled <object>",
    "docSyntax": "brakesDisabled transport",
    "tags": "[AG]",
    "description": "Returns the status of autobrake (see disableBrakes)",
    "example": "_autobrakeDisabled = disableBrakes mycar;",
    "params": "<object>",
    "returns": "boolean | true"
  },
  "collisionDisabledWith": {
    "command": "collisionDisabledWith",
    "timestamp": "2021-11-13T13:30:37Z",
    "version": "2.08",
    "syntax": "collisionDisabledWith <object>",
    "docSyntax": "collisionDisabledWith object1",
    "tags": "[AG]",
    "description": "Returns the object, given object has collision disabled with and whether or not returned object has also collision disabled with given object.",
    "example": "_collisionInfo = collisionDisabledWith _tank;",
    "params": "<object>",
    "returns": "array | br | object | objnull | boolean | true | false"
  },
  "ctrlMapPosition": {
    "command": "ctrlMapPosition",
    "timestamp": "2021-10-08T21:10:26Z",
    "version": "2.08",
    "syntax": "ctrlMapPosition map",
    "docSyntax": "ctrlMapPosition map",
    "tags": "",
    "description": "A getter for ctrlMapSetPosition. Returns map position in format [x, y, w, h]. If map is inside a Controls Group, the x and y position is relative to the Controls Group top left corner.",
    "example": "ctrlMapPosition _map;",
    "params": "map",
    "returns": "array"
  },
  "disableBrakes": {
    "command": "disableBrakes",
    "timestamp": "2021-11-29T14:07:37Z",
    "version": "2.08",
    "syntax": "<object> <boolean>Brakes disable",
    "docSyntax": "transport disableBrakes disable",
    "tags": "[AL] [EG]",
    "description": "Disables autobrake, which is engaged when vehicle is stationary and stops wheels from rotating freely when vehicle is pushed.",
    "example": "mycar disableBrakes true;",
    "params": "<object> <boolean>",
    "returns": "nothing"
  },
  "drawLaser": {
    "command": "drawLaser",
    "timestamp": "2021-09-03T15:27:46Z",
    "version": "2.08",
    "syntax": "drawLaser [positionasl, <array>, color, color, <number>, <number>, <number>, <boolean>]",
    "docSyntax": "drawLaser [position, direction, beamColor, dotColor, dotSize, beamThickness, beamMaxLength, isIR]",
    "tags": "[EL]",
    "description": "Draws a laserbeam and a lightpoint at the impact location of the laser.br This command has to be executed every frame - see HashLinkArma \n3: Mission Event Handlers#Draw3D.br Lasers drawn with this command are subject to the same limitations as weapon attachment lasers. These limitations are defined in the CfgIRLaserSettings config class.",
    "example": "addMissionEventHandler [\"Draw3D\", { drawLaser [ eyePos player vectorAdd [0, 0, 0.1], getCameraViewDirection player, [1000, 0, 0], ccBright red [], 5, 20, -1, false ]; }];",
    "params": "positionasl <array> color color <number> <number> <number> <boolean>",
    "returns": "nothing"
  },
  "getAllEnv3DSoundControllers": {
    "command": "getAllEnv3DSoundControllers",
    "timestamp": "2021-10-28T08:41:09Z",
    "version": "2.08",
    "syntax": "getAllEnv3DSoundControllers <object>",
    "docSyntax": "getAllEnv3DSoundControllers object",
    "tags": "",
    "description": "Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds. Feature Important * Controller names are case sensitive * wind param \ndifference: ** wind is for 3D controller ** wind'y' is for 2D controller (getAllEnvSoundControllers)",
    "example": "getAllEnv3DSoundControllers _thatTreeOverThere; codecomment/* returns e.g [ [\"rain\",0], [\"night\",0], [\"wind\",0.161588], ... ] nowiki*/",
    "params": "<object>",
    "returns": "array"
  },
  "getConnectedUAVUnit": {
    "command": "getConnectedUAVUnit",
    "timestamp": "2021-09-10T14:02:25Z",
    "version": "2.08",
    "syntax": "getConnectedUAVUnit <object>",
    "docSyntax": "getConnectedUAVUnit person",
    "tags": "",
    "description": "Returns UAV/UGV AI unit, which player is controlling. To return UAV vehicle, see getConnectedUAV",
    "example": "getConnectedUAVUnit player;",
    "params": "<object>",
    "returns": "object | objnull"
  },
  "getEnv3DSoundController": {
    "command": "getEnv3DSoundController",
    "timestamp": "2021-10-28T08:46:06Z",
    "version": "2.08",
    "syntax": "<object> getEnv3DSoundController <string>",
    "docSyntax": "object getEnv3DSoundController controller",
    "tags": "",
    "description": "Returns value of the specified 3D controller, see getAllEnv3DSoundControllers",
    "example": "_thatTreeOverThere getEnv3DSoundController \"rainDrops\"; //1",
    "params": "<object> <string>",
    "returns": "number"
  },
  "getPiPViewDistance": {
    "command": "getPiPViewDistance",
    "timestamp": "2022-01-06T14:36:43Z",
    "version": "2.08",
    "syntax": "getPiPViewDistance",
    "docSyntax": "getPiPViewDistance",
    "tags": "[EL]",
    "description": "Get the set PiP (Picture-in-Picture) view distance (that can be set by setPiPViewDistance).",
    "example": "private _pipViewDistance = getPiPViewDistance;",
    "params": "",
    "returns": "number"
  },
  "inputController": {
    "command": "inputController",
    "timestamp": "2021-11-21T11:35:05Z",
    "version": "2.08",
    "syntax": "<number>Controller input",
    "docSyntax": "inputController input",
    "tags": "",
    "description": "Returns the state of controller inputs. The controller is a standard XBOX controller which is selected with Windows XBOX controller scheme. The input could \nbe: * XBOX_A 0 * XBOX_B 1 * XBOX_X 2 * XBOX_Y 3 * XBOX_Up 4 * XBOX_Down 5 * XBOX_Left 6 * XBOX_Right 7 * XBOX_Start 8 * XBOX_Back 9 * XBOX_LeftBumper 10 * XBOX_RightBumper 11 * XBOX_LeftTrigger 12 * XBOX_RightTrigger 13 * XBOX_LeftThumb 14 * XBOX_RightThumb 15 * XBOX_LeftThumbXRight 16 * XBOX_LeftThumbYUp 17 * XBOX_RightThumbXRight 18 * XBOX_RightThumbYUp 19 * XBOX_LeftThumbXLeft 20 * XBOX_LeftThumbYDown 21 * XBOX_RightThumbXLeft 22 * XBOX_RightThumbYDown 23",
    "example": "onEachFrame { hintSilent str inputController 13 };",
    "params": "<number>",
    "returns": "number"
  },
  "inputMouse": {
    "command": "inputMouse",
    "timestamp": "2021-11-21T12:09:01Z",
    "version": "2.08",
    "syntax": "inputMouse <number>",
    "docSyntax": "inputMouse button",
    "tags": "",
    "description": "Returns the state of mouse button action, alone or in combination with key presses. For more information on codes and combos see <\n\tArma_3:_Modded_Keybinding> and DIK_KeyCodes but here are some examples of how codes could be hand \nconstructed: * KEYBOARD_COMBO 16777216 (0x1000000) * DEVICE_MOUSE 65536 (0x10000) * HOLD_OFFSET 0 * CLICK_OFFSET 128 (0x80) * DOUBLE_CLICK_OFFSET 256 (0x100) * SPECIAL_COMBINATIONS 1114112 (0x110000) pre Click + \nHold: BUTTON + DEVICE_MOUSE + HOLD_OFFSET = BUTTON + 65536 + 0 \nClick: BUTTON + DEVICE_MOUSE + CLICK_OFFSET = BUTTON + 65536 + 128 Double \nClick: BUTTON + DEVICE_MOUSE + DOUBLE_CLICK_OFFSET = BUTTON + 65536 + 256 RMB Click + \nHold: 1 + 65536 + 0 = 65537 RMB \nClick: 1 + 65536 + 128 = 65665 RMB Double \nClick: 1 + 65536 + 256 = 65793 Combo + Click + \nHold: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + HOLD_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 0 Combo + \nClick: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + CLICK_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 128 Combo + Double \nClick: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + DOUBLE_CLICK_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 256 LShift + RMB Click + \nHold: 42 * 16777216 + 1114112 + 1 + 0 = 705757185 LShift + RMB \nClick: 42 * 16777216 + 1114112 + 1 + 128 = 705757313 LShift + RMB Double \nClick: 42 * 16777216 + 1114112 + 1 + 256 = 705757441 </pre>",
    "example": "onEachFrame { hintSilent str inputMouse 1 };",
    "params": "<number> <string>",
    "returns": "number"
  },
  "isAllowedCrewInImmobile": {
    "command": "isAllowedCrewInImmobile",
    "timestamp": "2021-11-12T11:35:48Z",
    "version": "2.08",
    "syntax": "isAllowedCrewInImmobile <object>",
    "docSyntax": "isAllowedCrewInImmobile vehicle",
    "tags": "[AG]",
    "description": "Whether or not units can be in a vehicle with broken tracks/wheels.",
    "example": "_allowed = isAllowedCrewInImmobile _tank;",
    "params": "<object>",
    "returns": "boolean | true | false"
  },
  "isAwake": {
    "command": "isAwake",
    "timestamp": "2021-11-04T11:05:02Z",
    "version": "2.08",
    "syntax": "isAwake <object>",
    "docSyntax": "isAwake object",
    "tags": "[AG] [EL]",
    "description": "Returns resting state of a PhysX object. If object of class Man is used for the argument, the command returns false if ragdoll simulation is active and true if there is no ragdoll simulation. Destroyed and null objects return false.",
    "example": "_isAwake = isAwake _object;",
    "params": "<object>",
    "returns": "boolean"
  },
  "isSaving": {
    "command": "isSaving",
    "timestamp": "2021-11-05T10:16:25Z",
    "version": "2.08",
    "syntax": "isSaving",
    "docSyntax": "isSaving",
    "tags": "",
    "description": "Returns the status of autosave request, made when saveGame command is executed. When request is made, the command immediately returns true. The engine then handles the saving and when it is done, the command returns false.",
    "example": "[] spawn { saveGame; waitUntil { !isSaving }; systemChat \"Game Saving Is Done!\"; };",
    "params": "",
    "returns": "boolean | true | false"
  },
  "lockedCameraTo": {
    "command": "lockedCameraTo",
    "timestamp": "2022-01-05T15:41:47Z",
    "version": "2.08",
    "syntax": "<object> lockedCameraTo <array>",
    "docSyntax": "vehicle lockedCameraTo turretPath",
    "tags": "[AL]",
    "description": "Return the turret lock target. FeatureinformativeThe command is local to the 'turret', not the vehicle.",
    "example": "vehicle player lockedCameraTo [];",
    "params": "<object> <array>",
    "returns": "positionasl - if locked to a position"
  },
  "maxLoad": {
    "command": "maxLoad",
    "timestamp": "2021-09-08T07:15:58Z",
    "version": "2.08",
    "syntax": "maxLoad <object>",
    "docSyntax": "maxLoad container",
    "tags": "",
    "description": "Returns maximum load limit for a unit, uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders.",
    "example": "_maxLoad = maxLoad _yaMum;",
    "params": "<object>",
    "returns": "number"
  },
  "pose": {
    "command": "pose",
    "timestamp": "2021-11-25T19:09:23Z",
    "version": "2.08",
    "syntax": "pose <object>",
    "docSyntax": "pose unit",
    "tags": "[AG]",
    "description": "Returns the pose of the given unit. It can be one \nof: Columns3 * hl\"Dead\" * hl\"Weapon\" (special weapon - AT) * hl\"BinocLying\" * hl\"LyingNoWeapon\" * hl\"Lying\" * hl\"HandGunLying\" * hl\"Crouch\" * hl\"HandGunCrouch\" * hl\"Combat\" * hl\"HandGunStand\" * hl\"Stand\" * hl\"Swimming\" * hl\"BottomSwimming\" * hl\"SurfaceSwimming\" * hl\"Diving\" * hl\"BottomDiving\" * hl\"SurfaceDiving\" * hl\"NoWeapon\" (civilian moves) * hl\"Binoc\" (binocular pose) * hl\"BinocStand\" (binocular pose (weapon on back)) * hl\"Healing\" * hl\"Dragged\" * hl\"Carrying\" * hl\"Freefall\" shrink= y",
    "example": "sqfif (pose player == \"SurfaceSwimming\") then { hint \"How's water?\" };</sqf>",
    "params": "<object>",
    "returns": "string"
  },
  "rainParams": {
    "command": "rainParams",
    "timestamp": "2021-11-01T10:30:17Z",
    "version": "2.08",
    "syntax": "rainParams",
    "docSyntax": "rainParams",
    "tags": "",
    "description": "Returns currently set RainParticles params, custom or default.",
    "example": "_rainParams = rainParams;",
    "params": "",
    "returns": "br | br | br | br | br | br | br | br | br | br | br | br | br | br | br | br"
  },
  "setHumidity": {
    "command": "setHumidity",
    "timestamp": "2021-11-01T13:20:19Z",
    "version": "2.08",
    "syntax": "setHumidity <number>",
    "docSyntax": "setHumidity humidity",
    "tags": "[EL]",
    "description": "Sets surface humidity. Affects how footsteps sound (dry / wet). humidity is increasing when raining and decreasing when not raining. Exception is if the rain is set with 'snow' flag, then humidity is not updated.",
    "example": "setHumidity 1;",
    "params": "<number>",
    "returns": "nothing"
  },
  "setMaxLoad": {
    "command": "setMaxLoad",
    "timestamp": "2021-09-08T07:24:18Z",
    "version": "2.08",
    "syntax": "<object> setMaxLoad <number>",
    "docSyntax": "container setMaxLoad maxLoadValue",
    "tags": "[SE]",
    "description": "Sets maximum load limit for a uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders. In MP this command should be executed on the server and will persist on given container for JIP FeatureInformativeCannot be set on a unit, as unit max load value is static config type",
    "example": "_yaMum setMaxLoad _maxLoad;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "setPiPViewDistance": {
    "command": "setPiPViewDistance",
    "timestamp": "2022-01-06T14:33:38Z",
    "version": "2.08",
    "syntax": "setPiPViewDistance current",
    "docSyntax": "setPiPViewDistance distance",
    "tags": "[EL]",
    "description": "Set the PiP (Picture-in-Picture) view distance. This has no impact if PiP is disabled (see isPiPEnabled).",
    "example": "setPiPViewDistance 100;",
    "params": "current",
    "returns": "nothing"
  },
  "actionKeysEx": {
    "command": "actionKeysEx",
    "timestamp": "2022-03-28T16:09:48Z",
    "version": "2.10",
    "syntax": "actionKeysEx <string>",
    "docSyntax": "actionKeysEx userAction",
    "tags": "",
    "description": "Gives a broken down version of dikCodes of keys, buttons and combos assigned to the given user action. Action names can be found in config class ControllerSchemes or user action names or user profile (see HashLink#Example 1). In addition, some of the actions are also listed \nhere: <inputAction/actions> The Key Device can be one of several \ntypes: Columns3 * hl\"KEYBOARD\" * hl\"MOUSE_BUTTON\" * hl\"MOUSE_AXIS\" * hl\"JOYSTICK_BUTTON\" * hl\"JOYSTICK_AXIS\" * hl\"JOYSTICK_POV\" * hl\"XINPUT\" - (Xbox) Controller Input * hl\"TRACKER\" - Motion Tracking (TrackIR, Tobii etc) shrink= y",
    "example": "To retrieve the following key's data, use the property name without 'key': syntaxhighlight lang=\"cpp\"keyWatch[] = { 24 };</syntaxhighlight> sqfactionKeysEx \"Watch\"; // [[[24, \"KEYBOARD\"], [], false]]</sqf>",
    "params": "<string>",
    "returns": "array | array | array | number | string | number | array | number | string | number | boolean"
  },
  "activeTitleEffectParams": {
    "command": "activeTitleEffectParams",
    "timestamp": "2022-04-22T20:23:21Z",
    "version": "2.10",
    "syntax": "activeTitleEffectParams <number>",
    "docSyntax": "activeTitleEffectParams layer",
    "tags": "",
    "description": "Returns type, effect, speed and map visibility of the given active title effect (see allActiveTitleEffects)",
    "example": "21 cutText [\"Hello World!\", \"PLAIN\", 2]; hint str activeTitleEffectParams 21; // [\"TXT\", \"PLAIN\", 2, true]",
    "params": "<number>",
    "returns": "array | string | tt | tt | tt | string | tt | tt | number | boolean | true"
  },
  "findAny": {
    "command": "findAny",
    "timestamp": "2022-02-23T10:50:25Z",
    "version": "2.10",
    "syntax": "<array> findAny <array>",
    "docSyntax": "searchIn findAny toFind",
    "tags": "",
    "description": "Returns the zero-based index of the first element in array A that also exists in array B. If no common elements exist it returns -1.br Similar in functionality as find's first syntax, but the second parameter is an array of elements to find.",
    "example": "[0,1,2,3,4] findAny [2,4,6,8]; // returns 2",
    "params": "<array> <array>",
    "returns": "number"
  },
  "getObjectID": {
    "command": "getObjectID",
    "timestamp": "2022-03-16T23:06:25Z",
    "version": "2.10",
    "syntax": "getObjectID <object>",
    "docSyntax": "getObjectID object",
    "tags": "",
    "description": "Returns Visitor ID of the given object. Visitor IDs of static map objects can change if map is in development and updated with new static objects.",
    "example": "getObjectID _tree;",
    "params": "<object>",
    "returns": "string"
  },
  "getOpticsMode": {
    "command": "getOpticsMode",
    "timestamp": "2022-03-24T09:44:15Z",
    "version": "2.10",
    "syntax": "getOpticsMode <object>",
    "docSyntax": "getOpticsMode unit",
    "tags": "",
    "description": "Returns the class name of the current optic mode of the current weapon.",
    "example": "sqfgetOpticsMode player;</sqf>",
    "params": "<object>",
    "returns": "string"
  },
  "getUnitFreefallInfo": {
    "command": "getUnitFreefallInfo",
    "timestamp": "2022-02-09T11:35:00Z",
    "version": "2.10",
    "syntax": "getUnitFreefallInfo <object>",
    "docSyntax": "getUnitFreefallInfo unit",
    "tags": "[AL]",
    "description": "Returns a unit's freefall information.",
    "example": "sqfgetUnitFreefallInfo player;</sqf>",
    "params": "<object>",
    "returns": "array | boolean | true | boolean | true | number | setunitfreefallheight"
  },
  "isMissionProfileNamespaceLoaded": {
    "command": "isMissionProfileNamespaceLoaded",
    "timestamp": "2022-03-17T23:03:45Z",
    "version": "2.10",
    "syntax": "isMissionProfileNamespaceLoaded",
    "docSyntax": "isMissionProfileNamespaceLoaded",
    "tags": "",
    "description": "The missionProfileNamespace variables are loaded at the start of a mission, before 'init.sqf' is executed. If the file with saved variables for current mission exists in user profile and is loaded, the command returns true. It also will return true after the first execution of saveMissionProfileNamespace command, which also creates the file.",
    "example": "sqfprivate _isLoaded = isMissionProfileNamespaceLoaded;</sqf>",
    "params": "",
    "returns": "boolean | true"
  },
  "loadConfig": {
    "command": "loadConfig",
    "timestamp": "2022-03-17T04:05:24Z",
    "version": "2.10",
    "syntax": "loadConfig <string>",
    "docSyntax": "loadConfig path",
    "tags": "",
    "description": "Loads the given file as a >>, etc. It can load .rvmat, .bisurf, .cpp, .bin, .sqm, and description.ext files (both binarized and unbinarized configs are supported). Feature Important Loading a config can be very slow. The config should only be loaded once and cached. For example, the result can be stored in a HashMap of icFile Path - Config pairs. (See Example 2)",
    "example": "sqfprivate _cfg = loadConfig \"a3\\data_f\\default_super.rvmat\"; // note: very slow! ~0.1200 ms on tested system getText (_cfg >> \"Stage2\" >> \"uvSource\");</sqf>",
    "params": "<string>",
    "returns": "config | confignull"
  },
  "missionProfileNamespace": {
    "command": "missionProfileNamespace",
    "timestamp": "2022-03-17T23:01:30Z",
    "version": "2.10",
    "syntax": "missionProfileNamespace",
    "docSyntax": "missionProfileNamespace",
    "tags": "",
    "description": "This namespace has the same lifetime as profileNamespace but is also connected to the mission it is saved from. See saveMissionProfileNamespace for more details.",
    "example": "sqfprivate _currentMissionProfileNamespace = missionProfileNamespace;</sqf>",
    "params": "",
    "returns": "namespace"
  },
  "nearestMines": {
    "command": "nearestMines",
    "timestamp": "2022-04-29T07:02:01Z",
    "version": "2.10",
    "syntax": "nearestMines [positionagl, <array>, <number>, <boolean>, <boolean>]",
    "docSyntax": "nearestMines [position, types, radius, sort, 2Dmode]",
    "tags": "",
    "description": "Returns a list of nearest mines of the given types to the given position or object, within the specified distance. If more than one mine is found they will be ordered by proximity by default, the closest one will be first in the array. The sorting could be turned off.",
    "example": "nearestMines [player, [\"MineBase\"], 20];",
    "params": "positionagl <array> <number> <boolean> <boolean>",
    "returns": "array | object"
  },
  "ropesAttachedTo": {
    "command": "ropesAttachedTo",
    "timestamp": "2022-03-15T10:49:17Z",
    "version": "2.10",
    "syntax": "ropesAttachedTo <object>",
    "docSyntax": "ropesAttachedTo cargo",
    "tags": "",
    "description": "Returns the owners of all ropes attached to the cargo - the transports to which other entities are attached with ropes. This command returns Array of Objects instead of a single Object as with ropeAttachedTo.",
    "example": "r1 = ropeCreate [car1, [0,0,0], car3, [0,0,0], 10]; r2 = ropeCreate [car2, [0,0,0], car3, [0,0,0], 10]; ropesAttachedTo car3; //[car1,car2]",
    "params": "<object>",
    "returns": "array | object"
  },
  "saveMissionProfileNamespace": {
    "command": "saveMissionProfileNamespace",
    "timestamp": "2022-03-17T23:02:56Z",
    "version": "2.10",
    "syntax": "saveMissionProfileNamespace",
    "docSyntax": "saveMissionProfileNamespace",
    "tags": "[EL]",
    "description": "Description.ext. This will create MyMissionCollectionName.vars file for example, instead of default one, which would be loaded into every mission with matching missionGroup entry.",
    "example": "sqfsaveMissionProfileNamespace;</sqf>",
    "params": "",
    "returns": "nothing"
  },
  "setOpticsMode": {
    "command": "setOpticsMode",
    "timestamp": "2022-03-24T09:48:43Z",
    "version": "2.10",
    "syntax": "<object> setOpticsMode <string>",
    "docSyntax": "unit setOpticsMode mode",
    "tags": "",
    "description": "Sets the optic mode of the current weapon to the given class name or the index.",
    "example": "sqfplayer setOpticsMode \"Hamr2Scope\"; // Default optic mode for optic_Hamr</sqf>",
    "params": "<object> <string>",
    "returns": "nothing"
  },
  "setUnitFreefallHeight": {
    "command": "setUnitFreefallHeight",
    "timestamp": "2022-02-09T11:28:01Z",
    "version": "2.10",
    "syntax": "<object> setUnitFreefallHeight <number>",
    "docSyntax": "unit setUnitFreefallHeight minHeight",
    "tags": "[AL] [EG]",
    "description": "Sets minimum freefall height AGL per unit, at which the unit assumes HALO pose. Current engine default is 100m. Use -1 to reset the height to default.",
    "example": "player setUnitFreefallHeight 1000;",
    "params": "<object> <number>",
    "returns": "nothing"
  },
  "weaponsInfo": {
    "command": "weaponsInfo",
    "timestamp": "2022-03-30T06:56:28Z",
    "version": "2.10",
    "syntax": "<object> weaponsInfo [<string>, onlyLoaded]",
    "docSyntax": "unit weaponsInfo [weaponOrMuzzle, onlyLoaded]",
    "tags": "",
    "description": "Returns entity's weapons information including weapon index and firemode.",
    "example": "Find weapon with FullAuto firemode and switch to it: sqfprivate _weapons = player weaponsInfo [currentMuzzle player, true]; private _found = _weapons findIf { _x select 4 == \"FullAuto\" }; if (_found > -1) then { action [\"SwitchWeapon\", player, player, _weapons select _found select 0] };</sqf>",
    "params": "<object> <string> <boolean>",
    "returns": "array | array | number | action | boolean | true | string | string | string | string | number"
  }
}