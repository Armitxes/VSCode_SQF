{"actionName": {"version": "0.50", "tags": "", "description": "Returns localized name of action.", "example": "actionName \"ReloadMagazine\"; //\u00a0Returns \"Reload\"", "docSyntax": "actionName action", "syntax": "actionName action"}, "addAction": {"version": "0.50", "tags": "", "description": "Adds an entry to the action menu of an object. The action can only be activated when in proximity to the object and looking at it. Adding an action to the player makes that action available to the player at all times. For event handling of user interaction see inGameUISetEventHandler.", "example": "//\u00a0short and sweet player addAction [\"a useless action that does nothing\", {}]; player addAction [\"<t color='#FF0000'>This Useless Action Is RED</t>\", {hint \"RED\"}]; player addAction [\"Hint Hello!\", { hint format [\"Hello %1!\", name player] }]; player addAction [\"String Exec\", \"hint 'this is also compiled'\"];", "docSyntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip]", "syntax": "<object> addAction [title,script,arguments,priority,showWindow,hideOnUse,shortcut,condition,positionInModel,radius,radiusView,showIn3D,available,textDefault,textToolTip]"}, "addGoggles": {"version": "0.50", "tags": "", "description": "Create a new item and try to link it into goggles (glasses) slot.", "example": "player addGoggles \"G_Tactical_Clear\";", "docSyntax": "unit addGoggles type", "syntax": "<objUnit> addGoggles type"}, "addHandgunItem": {"version": "0.50", "tags": "", "description": "Adds weapon item, including magazine, directly to the handgunWeapon. This is used for infantry weapons.", "example": "player addHandgunItem \"muzzle_snds_L\";", "docSyntax": "unit addHandgunItem item", "syntax": "<objUnit> addHandgunItem <objItem>"}, "addHeadgear": {"version": "0.50", "tags": "", "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.", "example": "player addHeadgear \"H_HelmetB\";", "docSyntax": "unit addHeadgear item", "syntax": "<objUnit> addHeadgear <objItem>"}, "addItem": {"version": "0.50", "tags": "", "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.", "example": "//\u00a0identical to bluforUnit linkItem \"NVGoggles\" //\u00a0addItem then assignItem makes the item go through through inventory storage and fail if storage space was missing bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "docSyntax": "unit addItem item", "syntax": "<objUnit> addItem <objItem>"}, "addItemCargo": {"version": "0.50", "tags": "", "description": "Creates new items and stores them in given container. Works with items, weapons, magazines, equipment and glasses but not backpacks. In the latter case use addBackpackCargo instead. For global variant see addItemCargoGlobal", "example": "supplyBox addItemCargo [\"optic_ARCO\", 10];", "docSyntax": "box addItemCargo [item, count]", "syntax": "box addItemCargo [<objItem>,count]"}, "addItemCargoGlobal": {"version": "0.50", "tags": "", "description": "Global variant of addItemCargo.", "example": "supplyBox addItemCargoGlobal [\"optic_Arco\", 10];", "docSyntax": "box addItemCargoGlobal [item, count]", "syntax": "box addItemCargoGlobal [<objItem>,count]"}, "addMagazines": {"version": "0.50", "tags": "", "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.", "example": "player addMagazines [\"30Rnd_65x39_caseless_mag\", 3];", "docSyntax": "unit addMagazines [magazineName, count]", "syntax": "<objUnit> addMagazines [magazineName,count]"}, "addMissionEventHandler": {"version": "0.50", "tags": "", "description": "Adds event handler attached to the current mission and returns event handler handle. For the list of available mission event handlers see: Arma 3: Mission Event Handlers", "example": "_id = addMissionEventHandler [\"PlayerDisconnected\", { systemChat str _this }];", "docSyntax": "addMissionEventHandler [event, expression, arguments]", "syntax": "addMissionEventHandler [event,expression,arguments]"}, "addMusicEventHandler": {"version": "0.50", "tags": "", "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Like addMissionEventHandler, the music event handler is attached to the mission.", "example": "private _ehID = addMusicEventHandler [\"MusicStart\", { hint str _this }];", "docSyntax": "addMusicEventHandler [type, function]", "syntax": "addMusicEventHandler [type,function]"}, "addPrimaryWeaponItem": {"version": "0.50", "tags": "", "description": "Adds weapon item, including magazine, directly to the primaryWeapon. This is used for infantry weapons.", "example": "player addPrimaryWeaponItem \"muzzle_snds_H\";", "docSyntax": "unit addPrimaryWeaponItem item", "syntax": "<objUnit> addPrimaryWeaponItem <objItem>"}, "addSecondaryWeaponItem": {"version": "0.50", "tags": "", "description": "Adds weapon item, including magazine, directly to the secondaryWeapon. This is used for infantry weapons.", "example": "player addSecondaryWeaponItem \"muzzle_snds_L\";", "docSyntax": "unit addSecondaryWeaponItem item", "syntax": "<objUnit> addSecondaryWeaponItem <objItem>"}, "addUniform": {"version": "0.50", "tags": "", "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier).", "example": "_unit addUniform \"U_B_CombatUniform_mcam\";", "docSyntax": "unit addUniform type", "syntax": "<objUnit> addUniform type"}, "addVest": {"version": "0.50", "tags": "", "description": "Create a new vest and try to link it into vest slot.", "example": "player addVest \"V_TacVest_blk_POLICE\";", "docSyntax": "unit addVest type", "syntax": "<objUnit> addVest type"}, "allDeadMen": {"version": "0.50", "tags": "", "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.", "example": "{ deleteVehicle _x } forEach allDeadMen;", "docSyntax": "allDeadMen", "syntax": "allDeadMen"}, "allMapMarkers": {"version": "0.50", "tags": "", "description": "Returns all markers in map including user placed markers (_USER_DEFINED #).", "example": "_markers = allMapMarkers; returns: [\"marker1\",\"_USER_DEFINED #2/0\"]", "docSyntax": "allMapMarkers", "syntax": "allMapMarkers"}, "allSites": {"version": "0.50", "tags": "", "description": "Return all sites in map.", "example": "_allSites = allSites;", "docSyntax": "allSites", "syntax": "allSites"}, "animateDoor": {"version": "0.50", "tags": "", "description": "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles -> AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];", "example": "Taru animateDoor [\"Door_1_source\", 1];", "docSyntax": "object animateDoor [doorname, phase, instant]", "syntax": "<object> animateDoor [doorname,phase,instant]"}, "assignAsTurret": {"version": "0.50", "tags": "", "description": "Assigns the soldier to turret.", "example": "player assignAsTurret [BIS_vehicle, [0,1] ];", "docSyntax": "unit assignAsTurret [vehicle, [turretPath]]", "syntax": "<objUnit> assignAsTurret [<objVehicle>,[turretPath]]"}, "assignedItems": {"version": "0.50", "tags": "", "description": "Get array with all assigned items. The resulting Array is sorted like: [<Map>, <Compass>, <Watch>, <Radio>, <GPS>, <NVG>, <Binoculars>]. But if something is missing it get's omitted so you can not be sure that some element is at a constant index. To return stored items see items and itemsWithMagazines.", "example": "hint str assignedItems player;", "docSyntax": "assignedItems unit", "syntax": "assignedItems <objUnit>"}, "assignItem": {"version": "0.50", "tags": "", "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.", "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "docSyntax": "unit assignItem item", "syntax": "<objUnit> assignItem <objItem>"}, "backpack": {"version": "0.50", "tags": "", "description": "Returns a class of a backpack.", "example": "_classname = backpack player;", "docSyntax": "backpack unit", "syntax": "backpack <objUnit>", "returns": "string"}, "backpackCargo": {"version": "0.50", "tags": "", "description": "Get array with backpacks from ammo box (or any general weapon holder container).", "example": "hint str backpackCargo vehicle player;", "docSyntax": "backpackCargo box", "syntax": "backpackCargo box"}, "backpackItems": {"version": "0.50", "tags": "", "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.", "example": "backpackItems player; //\u00a0returns e.g [\"hgun_P07_F\", \"Titan_AT\"]", "docSyntax": "backpackItems unit", "syntax": "backpackItems <objUnit>"}, "backpackMagazines": {"version": "0.50", "tags": "", "description": "Get array with all magazines from backpack of the given unit.", "example": "backpackMagazines player;", "docSyntax": "backpackMagazines unit", "syntax": "backpackMagazines <objUnit>"}, "BIS_fnc_addCommMenuItem": {"version": "0.50", "tags": "", "description": "Add communication menu to the given unit. The item will be available in the Communication menu and visualized in comm menu icon area.", "example": "_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem; _supportHeli = [player,\"Support_Request_CAS_Heli\",nil,nil,\"\"] call BIS_fnc_addCommMenuItem; // don't show notification", "docSyntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem", "syntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem"}, "BIS_fnc_addRespawnPosition": {"version": "0.50", "tags": "", "description": "Add a respawn position for the Arma 3 Respawn Menu.", "example": "[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;", "docSyntax": "[target, position, name] call BIS_fnc_addRespawnPosition", "syntax": "[<object>,position,<string>] call BIS_fnc_addRespawnPosition"}, "BIS_fnc_call": {"version": "0.50", "tags": "", "description": "Execute given code with or without parameter.", "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] call BIS_fnc_call;", "docSyntax": "[params, code] call BIS_fnc_call", "syntax": "[<any>,<code>] call BIS_fnc_call", "type": "executionFunction"}, "BIS_fnc_codePerformance": {"version": "0.50", "tags": "", "description": "Measures how much time it takes to execute given expression. Results may vary based on overall performance; use this function to compare alternative scripting approaches rather than to measure specific values. Upon function execution, window with results is opened. The user then has a choice to copy the result into clipboard or not.", "example": "testArray = []; [\"testArray = testArray + [1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray set [count testArray, 1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray pushBack 1\"] call BIS_fnc_codePerformance; Compare three methods of adding elements into array", "docSyntax": "[expression, arguments, cycles, display] call BIS_fnc_codePerformance", "syntax": "[expression,arguments,cycles,<uiDisplay>] call BIS_fnc_codePerformance", "type": "diagnoseFunction"}, "BIS_fnc_endMission": {"version": "0.50", "tags": "", "description": "Ends mission with the specified ending. Always ends with a 4 seconds black out effect.", "example": "[\"mission2\", 1, \"You won\"] call BIS_fnc_endMission; //\u00a0endMission \"mission2_1\"", "docSyntax": "[nextMission, endingId, displayText, isSuccess, code] call BIS_fnc_endMission", "syntax": "[nextMission,endingId,displayText,isSuccess,<code>] call BIS_fnc_endMission"}, "BIS_fnc_error": {"version": "0.50", "tags": "", "description": "Log error message and display it (bottom of the UI). If it is called from a function, it'll include the function name before your content.", "example": "[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;", "docSyntax": "[param1,param2,...,param10] call BIS_fnc_error", "syntax": "[param1,param2,...,param10] call BIS_fnc_error", "type": "diagnoseFunction"}, "BIS_fnc_log": {"version": "0.50", "tags": "", "description": "Log debug message.", "example": "diag_tickTime call BIS_fnc_log;", "docSyntax": "param call BIS_fnc_log", "syntax": "param call BIS_fnc_log", "type": "diagnoseFunction"}, "BIS_fnc_MP": {"version": "0.50", "tags": "", "description": "Send function for remote execution (and executes locally if conditions are met).", "example": "Log a message for every connected player: [\"Imma spamming your log!\", \"BIS_fnc_log\"] call BIS_fnc_MP;", "docSyntax": "[params, functionName, target, isSpawn, isPersistent] call BIS_fnc_MP", "syntax": "[<any>,functionName,<object>,isSpawn,isPersistent] call BIS_fnc_MP"}, "BIS_fnc_param": {"version": "0.50", "tags": "", "description": "Load a script parameter. See Arma 3: Functions Library for detailed description.", "example": "_target = [_this, 0, objNull, [objNull,[]], [2,3]] call BIS_fnc_param;", "docSyntax": "[input, index, defaultValue, dataTypes, requiredCount] call BIS_fnc_param", "syntax": "[input,<scalar>,defaultValue,dataTypes,requiredCount] call BIS_fnc_param"}, "BIS_fnc_removeCommMenuItem": {"version": "0.50", "tags": "", "description": "Remove an item from the communication menu.", "example": "[player,2] call BIS_fnc_removeCommMenuItem;", "docSyntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem", "syntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem"}, "BIS_fnc_removeRespawnPosition": {"version": "0.50", "tags": "", "description": "Remove a respawn position added by BIS_fnc_addRespawnPosition.", "example": "[west, 1] call BIS_fnc_removeRespawnPosition;", "docSyntax": "[target,id] call BIS_fnc_removeRespawnPosition", "syntax": "[<object>,<scalar>] call BIS_fnc_removeRespawnPosition"}, "BIS_fnc_showNotification": {"version": "0.50", "tags": "", "description": "Show a config-defined notification.", "example": "[\"TaskSucceeded\", [\"\", \"Disable the nuke\"]] call BIS_fnc_showNotification;", "docSyntax": "[template, arguments] call BIS_fnc_showNotification", "syntax": "[template,arguments] call BIS_fnc_showNotification"}, "BIS_fnc_timeToString": {"version": "0.50", "tags": "", "description": "This function returns a 24-hour time as a string (or array) from a decimal.", "example": "_time = 7.36; [_time] call BIS_fnc_timeToString; //\u00a007:21:36", "docSyntax": "[time, format] call BIS_fnc_timeToString", "syntax": "[<scalar>,format] call BIS_fnc_timeToString"}, "blufor": {"version": "0.50", "tags": "", "description": "Pre-defined variable for the blufor side.", "example": "if (side player == blufor) then { hint \"BLUFOR\"; };", "docSyntax": "blufor", "syntax": "blufor", "returns": "objSide"}, "boundingBoxReal": {"version": "0.50", "tags": "", "description": "Returns a raw bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.", "example": "_bbr = boundingBoxReal vehicle player; _p1 = _bbr select 0; _p2 = _bbr select 1; _maxWidth = abs ((_p2 select 0) - (_p1 select 0)); _maxLength = abs ((_p2 select 1) - (_p1 select 1)); _maxHeight = abs ((_p2 select 2) - (_p1 select 2));", "docSyntax": "boundingBoxReal object", "syntax": "boundingBoxReal <object>"}, "buldozer_LoadNewRoads": {"version": "0.50", "tags": "", "description": "Generates new roads. Working only in buldozer.", "example": "_loaded = buldozer_loadNewRoads \"C:/A3/Map_Stratis/data/roads/\"", "docSyntax": "buldozer_loadNewRoads path", "syntax": "buldozer_loadNewRoads path"}, "buldozer_reloadOperMap": {"version": "0.50", "tags": "", "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.", "example": "buldozer_reloadOperMap;", "docSyntax": "buldozer_reloadOperMap", "syntax": "buldozer_reloadOperMap"}, "cancelSimpleTaskDestination": {"version": "0.50", "tags": "", "description": "Cancels a simple task destination.", "example": "cancelSimpleTaskDestination myTask;", "docSyntax": "cancelSimpleTaskDestination task", "syntax": "cancelSimpleTaskDestination <objTask>"}, "className": {"version": "0.50", "tags": "", "description": "Returns short name of location. For config class name, see configName", "example": "_shortName = className myLocation;", "docSyntax": "className location", "syntax": "className location"}, "clearAllItemsFromBackpack": {"version": "0.50", "tags": "", "description": "Removes all items from backpack of a unit.", "example": "clearAllItemsFromBackpack player;", "docSyntax": "clearAllItemsFromBackpack unit", "syntax": "clearAllItemsFromBackpack <objUnit>"}, "clearBackpackCargo": {"version": "0.50", "tags": "", "description": "Removes all backpacks from ammo box (or any general weapon holder container).", "example": "clearBackpackCargo myBox;", "docSyntax": "clearBackpackCargo box", "syntax": "clearBackpackCargo box"}, "clearItemCargo": {"version": "0.50", "tags": "", "description": "Removes all items from ammo box (or any general weapon holder container).", "example": "clearItemCargo myBox;", "docSyntax": "clearItemCargo box", "syntax": "clearItemCargo box"}, "clearItemCargoGlobal": {"version": "0.50", "tags": "", "description": "Removes all items from ammo box (or any general weapon holder container). It also removes vests and uniforms.", "example": "clearItemCargoGlobal _ammoBox;", "docSyntax": "clearItemCargoGlobal box", "syntax": "clearItemCargoGlobal box"}, "commandArtilleryFire": {"version": "0.50", "tags": "", "description": "Orders an artillery unit to fire a burst on the given position (via the radio).", "example": "Mortar commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "docSyntax": "unit commandArtilleryFire [position, type, rounds]", "syntax": "<objUnit> commandArtilleryFire [position,type,rounds]"}, "createSite": {"version": "0.50", "tags": "", "description": "Create a new site.", "example": "-", "docSyntax": "type createSite pos", "syntax": "type createSite <array>"}, "ctrlChecked": {"version": "0.50", "tags": "", "description": "Returns the current state of given CT_CHECKBOXES control. Since Arma 3 v1.72 it is possible to query multiple checkboxes by providing checkbox index. For more information see CT_CHECKBOXES.", "example": "ctrlChecked _control;", "docSyntax": "ctrlChecked control", "syntax": "ctrlChecked <uiControl>"}, "ctrlHTMLLoaded": {"version": "0.50", "tags": "", "description": "Returns true when HTML content was successfully loaded.", "example": "_control htmlLoad \"test.html\"; if (!ctrlHTMLLoaded _control) then { hint \"Loading test.html failed!\"; };", "docSyntax": "ctrlHTMLLoaded control", "syntax": "ctrlHTMLLoaded <uiControl>"}, "ctrlIDC": {"version": "0.50", "tags": "", "description": "Returns control IDC.", "example": "ctrlIDC _ctrl;", "docSyntax": "ctrlIDC control", "syntax": "ctrlIDC <uiControl>"}, "ctrlIDD": {"version": "0.50", "tags": "", "description": "Returns display IDD.", "example": "ctrlIDD findDisplay 46; //46", "docSyntax": "ctrlIDD display", "syntax": "ctrlIDD <uiDisplay>"}, "ctrlSetChecked": {"version": "0.50", "tags": "", "description": "Sets checked state of a CT_CHECKBOXES control.", "example": "_control ctrlSetChecked true;", "docSyntax": "control ctrlSetChecked checked", "syntax": "<uiControl> ctrlSetChecked checked"}, "ctrlTextHeight": {"version": "0.50", "tags": "", "description": "Returns the control text height. Supported control types are:", "example": "_h = ctrlTextHeight _ctrl;", "docSyntax": "ctrlTextHeight control", "syntax": "ctrlTextHeight <uiControl>"}, "currentMagazineDetail": {"version": "0.50", "tags": "", "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.", "example": "_currentMagazineDetail = currentMagazineDetail player; //\u00a0\"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"", "docSyntax": "currentMagazineDetail object", "syntax": "currentMagazineDetail <object>"}, "customChat": {"version": "0.50", "tags": "", "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.", "example": "_unit customChat [1, \"Hi, I am a custom chat message\"];", "docSyntax": "unit customChat [customChannelID, message]", "syntax": "<objUnit> customChat [customChannelID,message]"}, "customRadio": {"version": "0.50", "tags": "", "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.", "example": "_soldierOne customRadio [1, \"WordEnemy\"];", "docSyntax": "unit customRadio [customChannelID, message]", "syntax": "<objUnit> customRadio [customChannelID,message]"}, "debriefingText": {"version": "0.50", "tags": "", "description": "Returns debriefing text of provided end.", "example": "_deathText = debriefingText \"endDeath\";", "docSyntax": "debriefingText end", "syntax": "debriefingText end"}, "deleteSite": {"version": "0.50", "tags": "", "description": "Removes the site.", "example": "-", "docSyntax": "deleteSite site", "syntax": "deleteSite site"}, "disableCollisionWith": {"version": "0.50", "tags": "", "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects. The collision is always disabled for both objects in the arguments, i.e. vehicle1 with vehicle2 and vehicle2 with vehicle1", "example": "[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];", "docSyntax": "vehicle1 disableCollisionWith vehicle2", "syntax": "vehicle1 disableCollisionWith vehicle2"}, "distanceSqr": {"version": "0.50", "tags": "", "description": "Computes the squared distance between two objects or positions.", "example": "player distanceSqr (leader player)", "docSyntax": "var1 distanceSqr var2", "syntax": "var1 distanceSqr var2"}, "doArtilleryFire": {"version": "0.50", "tags": "", "description": "Orders an artillery unit to fire a burst on the given position (silently).", "example": "Mortar doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "docSyntax": "unit doArtilleryFire [position, type, rounds]", "syntax": "<objUnit> doArtilleryFire [position,type,rounds]"}, "doorPhase": {"version": "0.50", "tags": "", "description": "Return animation phase of door on vehicle.", "example": "_phase = heli doorPhase \"door_L\";", "docSyntax": "object doorPhase door", "syntax": "<object> doorPhase door"}, "drawIcon3D": {"version": "0.50", "tags": "", "description": "Draws an icon at the given position in the game world. This command has to be executed every frame. Use the Draw3D Mission Event Handler (which is executed every frame if the user can see the icon).", "example": "Icon and text:addMissionEventHandler [\"Draw3D\", { drawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASLVisual cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"]; }];", "docSyntax": "drawIcon3D [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]", "syntax": "drawIcon3D [<string>,<scalar>,position,width,height,angle,<string>,shadow,textSize,font,textAlign,drawSideArrows,offsetX,offsetY]"}, "drawLine3D": {"version": "0.50", "tags": "", "description": "Draws a line of a given colour between two 3D positions in the current frame. To be used mostly in a \"Draw3D\" mission event handler.", "example": "onEachFrame { drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]]; };", "docSyntax": "drawLine3D [start, end, color]", "syntax": "drawLine3D [start,end,<scalar>]"}, "enableCaustics": {"version": "0.50", "tags": "", "description": "Enable/disable caustics drawing.", "example": "enableCaustics true", "docSyntax": "enableCaustics bool", "syntax": "enableCaustics <bool>"}, "enableCollisionWith": {"version": "0.50", "tags": "", "description": "Cancels the effects of disableCollisionWith. The collision is always enabled for both objects in the arguments, i.e. vehicle1 with vehicle2 and vehicle2 with vehicle1", "example": "[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];", "docSyntax": "vehicle1 enableCollisionWith vehicle2", "syntax": "vehicle1 enableCollisionWith vehicle2"}, "enableCopilot": {"version": "0.50", "tags": "", "description": "Enables copilot actions, toggles availability of the actions related to copilots, such as taking over controls, suspending controls, etc. This command triggers the \"ControlsShifted\" event handler.", "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "docSyntax": "vehicle enableCopilot enable", "syntax": "<objVehicle> enableCopilot <bool>"}, "enableFatigue": {"version": "0.50", "tags": "", "description": "Enables/Disables the person's fatigue.", "example": "player enableFatigue false;", "docSyntax": "unit enableFatigue enable", "syntax": "<objUnit> enableFatigue <bool>"}, "eyeDirection": {"version": "0.50", "tags": "", "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).", "example": "can = \"Land_Can_V3_F\" createVehicle position player; onEachFrame { can setPosASL [ (eyePos player select 0) + (eyeDirection player select 0), (eyePos player select 1) + (eyeDirection player select 1), (eyePos player select 2) + (eyeDirection player select 2) ] }", "docSyntax": "eyeDirection unit", "syntax": "eyeDirection <objUnit>"}, "firstBackpack": {"version": "0.50", "tags": "", "description": "Returns the first stored backpack.", "example": "myVariable = firstBackpack myBox;", "docSyntax": "firstBackpack box", "syntax": "firstBackpack box"}, "forceWeaponFire": {"version": "0.50", "tags": "", "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on player. See also: BIS_fnc_fire", "example": "_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"]; _unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"]; _unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"]; _unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"]; _unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"]; _unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"]; _unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"]; _unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"]; _unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];", "docSyntax": "unit forceWeaponFire [muzzle, firemode]", "syntax": "<objUnit> forceWeaponFire [muzzle,firemode]"}, "freeLook": {"version": "0.50", "tags": "", "description": "Returns if freelook is active on the current machine's controlled character.", "example": "if freeLook then { systemChat \"Quit looking around, soldier!\"; };", "docSyntax": "freeLook", "syntax": "freeLook"}, "getArtilleryAmmo": {"version": "0.50", "tags": "", "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.", "example": "if (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [ _mortar1, _mortar2, _mortar3, _mortar4 ]) then { hint \"Sir, we have white flares, Sir!\"; };", "docSyntax": "getArtilleryAmmo artilleryList", "syntax": "getArtilleryAmmo artilleryList"}, "getArtilleryComputerSettings": {"version": "0.50", "tags": "", "description": "Returns settings from artillery computer currently opened by player.", "example": "hint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]", "docSyntax": "getArtilleryComputerSettings", "syntax": "getArtilleryComputerSettings"}, "getBleedingRemaining": {"version": "0.50", "tags": "", "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.", "example": "_bleedingRemaining = getBleedingRemaining _unit;", "docSyntax": "getBleedingRemaining unit", "syntax": "getBleedingRemaining <objUnit>"}, "getBurningValue": {"version": "0.50", "tags": "", "description": "Returns how much the unit is exposed to fire damage.", "example": "private _fireDamage = getBurningValue player;", "docSyntax": "getBurningValue unit", "syntax": "getBurningValue <objUnit>"}, "getDescription": {"version": "0.50", "tags": "", "description": "Returns the string representation of unit as an four slots array.", "example": "getDescription player; //\u00a0(UAV Operator) //\u00a0returns [\"B_soldier_UAV_F\", \"Combat Fatigues (MTP)\", \"Carrier Special Rig (Green)\", \"B_UAV_01_backpack_F\"]", "docSyntax": "getDescription unit", "syntax": "getDescription <objUnit>"}, "getFatigue": {"version": "0.50", "tags": "", "description": "Returns fatigue of given unit.", "example": "value = getFatigue player;", "docSyntax": "getFatigue unit", "syntax": "getFatigue <objUnit>"}, "getItemCargo": {"version": "0.50", "tags": "", "description": "Returns all items names and count from ammo box (or any general weapon holder container).", "example": "hint str getItemCargo cursorTarget;", "docSyntax": "getItemCargo box", "syntax": "getItemCargo box"}, "getOxygenRemaining": {"version": "0.50", "tags": "", "description": "Returns amount of remaining oxygen.", "example": "_oxygen = getOxygenRemaining player;", "docSyntax": "getOxygenRemaining unit", "syntax": "getOxygenRemaining <objUnit>"}, "getPosASLW": {"version": "0.50", "tags": "", "description": "Returns the object position height above water surface (waves and pond objects included).", "example": "_pos = getPosASLW _diver;", "docSyntax": "getPosASLW obj", "syntax": "getPosASLW <object>"}, "goggles": {"version": "0.50", "tags": "", "description": "Returns name of currently used goggles (for NVGoggles use hmd).", "example": "_goggles = goggles assaultDiver; //G_Diving", "docSyntax": "goggles unit", "syntax": "goggles <objUnit>"}, "groupFromNetId": {"version": "0.50", "tags": "", "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.", "example": "_group = groupFromNetId \"4:45\";", "docSyntax": "groupFromNetId id", "syntax": "groupFromNetId <scalar>"}, "groupId": {"version": "0.50", "tags": "", "description": "Returns group name.", "example": "_name = groupId (group player);", "docSyntax": "groupId group", "syntax": "groupId <objGroup>"}, "gusts": {"version": "0.50", "tags": "", "description": "Return the current gusts value. Scale is 0 to 1.", "example": "_gustsval = gusts;", "docSyntax": "gusts", "syntax": "gusts"}, "handgunItems": {"version": "0.50", "tags": "", "description": "Returns array with all items assigned to the handgunWeapon except magazines. Use handgunMagazine command for the latter. This command is used for infantry weapons only.", "example": "handgunItems player; /* [ \"muzzle_snds_L\", //silencer \"\", //laser \"\", //optics \"\" //bipod ] */", "docSyntax": "handgunItems unit", "syntax": "handgunItems <objUnit>"}, "handgunWeapon": {"version": "0.50", "tags": "", "description": "Returns the name of a unit's handgun (an empty string if there is none).", "example": "hint handgunWeapon player; //\"hgun_P07_F\"", "docSyntax": "handgunWeapon unit", "syntax": "handgunWeapon <objUnit>"}, "headgear": {"version": "0.50", "tags": "", "description": "Returns headgear of unit.", "example": "hint headgear player; //H_HelmetB", "docSyntax": "headgear unit", "syntax": "headgear <objUnit>"}, "humidity": {"version": "0.50", "tags": "", "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.", "example": "currentHumidity = humidity;", "docSyntax": "humidity", "syntax": "humidity"}, "independent": {"version": "0.50", "tags": "", "description": "Pre-defined variable for the independent side.", "example": "if (side _unit == independent) then { hint \"This is a independent unit!\"; };", "docSyntax": "independent", "syntax": "independent", "returns": "objSide"}, "inRangeOfArtillery": {"version": "0.50", "tags": "", "description": "Returns true if all given units are able to fire at given position with given magazineType.", "example": "_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"]", "docSyntax": "pos inRangeOfArtillery [[unit], magazineType]", "syntax": "<array> inRangeOfArtillery [[<objUnit>],magazineType]"}, "isAbleToBreathe": {"version": "0.50", "tags": "", "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.", "example": "_canBreath = isAbleToBreathe player;", "docSyntax": "isAbleToBreathe unit", "syntax": "isAbleToBreathe <objUnit>"}, "isBleeding": {"version": "0.50", "tags": "", "description": "Returns whether the unit is bleeding.", "example": "if (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }", "docSyntax": "isBleeding unit", "syntax": "isBleeding <objUnit>"}, "isBurning": {"version": "0.50", "tags": "", "description": "Returns whether the unit is burning. This returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.", "example": "if (isBurning player) then { player groupChat \"I'm burning!!\"; }", "docSyntax": "isBurning unit", "syntax": "isBurning <objUnit>"}, "isCopilotEnabled": {"version": "0.50", "tags": "", "description": "Returns true if copilots actions are enabled.", "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "docSyntax": "isCopilotEnabled vehicle", "syntax": "isCopilotEnabled <objVehicle>"}, "isFlashlightOn": {"version": "0.50", "tags": "", "description": "Returns true if there is a linked and enabled flashlight on a given weapon.", "example": "player isFlashlightOn (currentWeapon player);", "docSyntax": "unit isFlashlightOn weapon", "syntax": "<objUnit> isFlashlightOn <string>"}, "isIRLaserOn": {"version": "0.50", "tags": "", "description": "Returns true if there is a linked and enabled IR on the given weapon.", "example": "player isIRLaserOn currentWeapon player;", "docSyntax": "unit isIRLaserOn weapon", "syntax": "<objUnit> isIRLaserOn <string>"}, "isLocalized": {"version": "0.50", "tags": "", "description": "Checks whether given stringName is localized.", "example": "if (isLocalized \"STR_USRACT_ADJUST\") then { hint localize \"STR_USRACT_ADJUST\"; } else { hint \"STR_USRACT_ADJUST\"; diag_log \"ToDo: STR_USRACT_ADJUST is not localized\"; };", "docSyntax": "isLocalized stringName", "syntax": "isLocalized stringName"}, "isPipEnabled": {"version": "0.50", "tags": "", "description": "Returns whether Picture-In-Picture video option (Render to Texture) is enabled or not.", "example": "private _PiPState = isPiPEnabled;", "docSyntax": "isPiPEnabled", "syntax": "isPiPEnabled"}, "isTouchingGround": {"version": "0.50", "tags": "", "description": "Returns true if object is touching the ground.", "example": "if (isTouchingGround player) then {hint \"Terraferma!\";};", "docSyntax": "isTouchingGround object", "syntax": "isTouchingGround <object>"}, "isTutHintsEnabled": {"version": "0.50", "tags": "", "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).", "example": "hint str isTutHintsEnabled;", "docSyntax": "isTutHintsEnabled", "syntax": "isTutHintsEnabled"}, "itemCargo": {"version": "0.50", "tags": "", "description": "Get array with items from ammo box (or any general weapon holder container).", "example": "hint str itemCargo vestContainer player;", "docSyntax": "itemCargo object", "syntax": "itemCargo <object>"}, "language": {"version": "0.50", "tags": "", "description": "Returns current game language.", "example": "_myLanguage = language; // will return \"English\" if game language is set to English", "docSyntax": "language", "syntax": "language"}, "lightnings": {"version": "0.50", "tags": "", "description": "Return the current lightnings value.", "example": "Get the current lightnings value:_lightningsVal = lightnings;", "docSyntax": "lightnings", "syntax": "lightnings"}, "linearConversion": {"version": "0.50", "tags": "", "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what.", "example": "//\u00a0Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be 55 linearConversion [0,1,0.55,0,100]; //\u00a0but if given value is 1.1 it will return 110 linearConversion [0,1,1.1,0,100,false]; //\u00a0or if clipping is true it will return 100 linearConversion [0,1,1.1,0,100,true];", "docSyntax": "linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]", "syntax": "linearConversion [minFrom,maxFrom,<scalar>,minTo,maxTo,clip]"}, "linkItem": {"version": "0.50", "tags": "", "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.", "example": "bluforUnit linkItem \"NVGoggles\"; opforUnit linkItem \"NVGoggles_OPFOR\"; independentUnit linkItem \"NVGoggles_INDEP\";", "docSyntax": "unit linkItem item", "syntax": "<objUnit> linkItem <objItem>"}, "load": {"version": "0.50", "tags": "", "description": "Returns the percentage of fullness of a unit's cargo. Output is usually in range 0..1, but can be higher after using certain scripting commands (like addWeaponWithAttachmentsCargoGlobal) which ignore load values when adding items.", "example": "load player;", "docSyntax": "load unit", "syntax": "load <objUnit>"}, "loadAbs": {"version": "0.50", "tags": "", "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.", "example": "Player weight:_weight = loadAbs player;", "docSyntax": "loadAbs unit", "syntax": "loadAbs <objUnit>"}, "loadBackpack": {"version": "0.50", "tags": "", "description": "Returns current percentage of mass from items stored in a backpack relative to the maximum capacity of the backpack.", "example": "private _myVariable = loadBackpack myUnit;", "docSyntax": "loadBackpack unit", "syntax": "loadBackpack <objUnit>"}, "loadUniform": {"version": "0.50", "tags": "", "description": "Returns current percentage of mass from items stored in a uniform relative to the maximum capacity of the uniform.", "example": "_weight = loadUniform player;", "docSyntax": "loadUniform unit", "syntax": "loadUniform <objUnit>"}, "loadVest": {"version": "0.50", "tags": "", "description": "Returns current percentage of mass from items stored in a vest relative to the maximum capacity of the vest.", "example": "_weight = loadVest player", "docSyntax": "loadVest unit", "syntax": "loadVest <objUnit>"}, "magazineCargo": {"version": "0.50", "tags": "", "description": "Get array with magazines from ammo box (or any general weapon holder container).", "example": "hint str magazineCargo uniformContainer cursorTarget;", "docSyntax": "magazineCargo object", "syntax": "magazineCargo <object>"}, "magazinesDetail": {"version": "0.50", "tags": "", "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids for the primary gunner. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.", "example": "_magazinesDetail = magazinesDetail player; /* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\", \"Chemlight (Green)(1/1)[id/cr:10000020/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\", \"RGO Grenade(1/1)[id/cr:10000016/0]\", \"RGO Grenade(1/1)[id/cr:10000017/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000070/0]\", \"PCML Missile(1/1)[id/cr:10000072/0]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000001/0]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000013/0]\" ] */", "docSyntax": "magazinesDetail vehicle", "syntax": "magazinesDetail <objVehicle>"}, "mineActive": {"version": "0.50", "tags": "", "description": "Checks if the given mine is active.", "example": "if (mineActive _mine) then {hint \"BOOM!\"};", "docSyntax": "mineActive obj", "syntax": "mineActive <object>"}, "nearSupplies": {"version": "0.50", "tags": "", "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.", "example": "_list = player nearSupplies 50;", "docSyntax": "origin nearSupplies radius", "syntax": "origin nearSupplies radius"}, "netId": {"version": "0.50", "tags": "", "description": "Unique ID of object or group. As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar", "example": "_playerNetId = netId player;", "docSyntax": "netId var", "syntax": "netId var"}, "objectFromNetId": {"version": "0.50", "tags": "", "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.", "example": "objectFromNetId \"2:3\"", "docSyntax": "objectFromNetId id", "syntax": "objectFromNetId <scalar>"}, "opfor": {"version": "0.50", "tags": "", "description": "Pre-defined variable for the opfor side.", "example": "if (side player == opfor) then { hint \"OPFOR\"; };", "docSyntax": "opfor", "syntax": "opfor", "returns": "objSide"}, "particlesQuality": {"version": "0.50", "tags": "", "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high", "example": "_currentQuality = particlesQuality;", "docSyntax": "particlesQuality", "syntax": "particlesQuality"}, "playSound3D": {"version": "0.50", "tags": "", "description": "Plays positional sound with given filename on every computer on network.", "example": "playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]", "docSyntax": "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance, offset, local]", "syntax": "playSound3D [filename,soundSource,isInside,soundPosition,volume,soundPitch,<scalar>,offset,local]"}, "ppEffectForceInNVG": {"version": "0.50", "tags": "", "description": "Forces use of Post process effects in NVG.", "example": "_ppGrain ppEffectForceInNVG true;", "docSyntax": "ppHandle ppEffectForceInNVG force", "syntax": "ppHandle ppEffectForceInNVG force"}, "primaryWeaponItems": {"version": "0.50", "tags": "", "description": "Returns array with all items assigned to the primaryWeapon except magazines. Use primaryWeaponMagazine command for the latter. This command is used for infantry weapons only.", "example": "primaryWeaponItems player; /* [ \"muzzle_snds_H\", //silencer \"acc_pointer_IR\", //laser \"optic_Aco\", //optics \"bipod_01_F_blk\" //bipod ] */", "docSyntax": "primaryWeaponItems unit", "syntax": "primaryWeaponItems <objUnit>"}, "profileName": {"version": "0.50", "tags": "", "description": "Returns currently chosen user profile name. For Steam profile name see profileNameSteam.", "example": "_myInGameProfileName = profileName;", "docSyntax": "profileName", "syntax": "profileName"}, "rainbow": {"version": "0.50", "tags": "", "description": "Returns the current rainbow intensity.", "example": "private _intensity = rainbow;", "docSyntax": "rainbow", "syntax": "rainbow"}, "removeAllActions": {"version": "0.50", "tags": "", "description": "Removes all unit's user added actions.", "example": "removeAllActions player;", "docSyntax": "removeAllActions unit", "syntax": "removeAllActions <objUnit>"}, "removeAllAssignedItems": {"version": "0.50", "tags": "", "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which does not include goggles or headgear.", "example": "removeAllAssignedItems player;", "docSyntax": "removeAllAssignedItems unit", "syntax": "removeAllAssignedItems <objUnit>"}, "removeAllContainers": {"version": "0.50", "tags": "", "description": "Removes all containers from the unit.", "example": "removeAllContainers player;", "docSyntax": "removeAllContainers unit", "syntax": "removeAllContainers <objUnit>"}, "removeAllMissionEventHandlers": {"version": "0.50", "tags": "", "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler.", "example": "removeAllMissionEventHandlers \"Loaded\";", "docSyntax": "removeAllMissionEventHandlers type", "syntax": "removeAllMissionEventHandlers type"}, "removeAllMusicEventHandlers": {"version": "0.50", "tags": "", "description": "Removes all music track event handlers of given type.", "example": "removeAllMusicEventHandlers \"MusicStart\"", "docSyntax": "removeAllMusicEventHandlers type", "syntax": "removeAllMusicEventHandlers type"}, "removeGoggles": {"version": "0.50", "tags": "", "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.", "example": "removeGoggles assaultDiver;", "docSyntax": "removeGoggles unit", "syntax": "removeGoggles <objUnit>"}, "removeHeadgear": {"version": "0.50", "tags": "", "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.", "example": "removeHeadgear player;", "docSyntax": "removeHeadgear unit", "syntax": "removeHeadgear <objUnit>"}, "removeItem": {"version": "0.50", "tags": "", "description": "Removes item from the inventory.", "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";", "docSyntax": "unit removeItem item", "syntax": "<objUnit> removeItem <objItem>"}, "removeItems": {"version": "0.50", "tags": "", "description": "Removes all items with given class name from the inventory.", "example": "player removeItems \"FirstAidKit\";", "docSyntax": "unit removeItems item", "syntax": "<objUnit> removeItems <objItem>"}, "removeMissionEventHandler": {"version": "0.50", "tags": "", "description": "Removes mission event handler added by addMissionEventHandler.", "example": "private _eventHandlerId = addMissionEventHandler [\"Ended\", { diag_log \"mission complete\"; }]; //\u00a0... removeMissionEventHandler [\"Ended\", _eventHandlerId];", "docSyntax": "removeMissionEventHandler [type, index]", "syntax": "removeMissionEventHandler [type,<scalar>]"}, "removeMusicEventHandler": {"version": "0.50", "tags": "", "description": "Removes specified music track event handler.", "example": "removeMusicEventHandler [\"MusicStart\", 12];", "docSyntax": "removeMusicEventHandler [type, id]", "syntax": "removeMusicEventHandler [type,<scalar>]"}, "removeUniform": {"version": "0.50", "tags": "", "description": "Removes uniform from unit.", "example": "removeUniform player;", "docSyntax": "removeUniform unit", "syntax": "removeUniform <objUnit>"}, "removeVest": {"version": "0.50", "tags": "", "description": "Removes vest from unit.", "example": "removeVest player;", "docSyntax": "removeVest unit", "syntax": "removeVest <objUnit>"}, "resetSubgroupDirection": {"version": "0.50", "tags": "", "description": "Sets formation direction of a group relative to current direction of the group leader. The group units will change their positions to form new formation if new formation direction is different (approx +/- 15 degrees). Does the same as:", "example": "resetSubgroupDirection myUnit;", "docSyntax": "resetSubgroupDirection unit", "syntax": "resetSubgroupDirection <objUnit>"}, "revealMine": {"version": "0.50", "tags": "", "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)", "example": "west revealMine _mine;", "docSyntax": "side revealMine mine", "syntax": "<objSide> revealMine mine"}, "saveJoysticks": {"version": "0.50", "tags": "", "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.", "example": "saveJoysticks;", "docSyntax": "saveJoysticks", "syntax": "saveJoysticks"}, "secondaryWeaponItems": {"version": "0.50", "tags": "", "description": "Returns array with all items assigned to the secondaryWeapon except magazines. Use secondaryWeaponMagazine command for the latter. This command is used for infantry weapons only.", "example": "secondaryWeaponItems player; //[\"\",\"\",\"\",\"\"]", "docSyntax": "secondaryWeaponItems unit", "syntax": "secondaryWeaponItems <objUnit>"}, "sendAUMessage": {"version": "0.50", "tags": "", "description": "Send the command to the list of clients.", "example": "sendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"];", "docSyntax": "sendAUMessage [clientList, command]", "syntax": "sendAUMessage [clientList,command]"}, "setAmmo": {"version": "0.50", "tags": "", "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon or muzzle.", "example": "Set player's handgun magazine ammo count to 10 rounds: player setAmmo [handgunWeapon player, 10];", "docSyntax": "unit setAmmo [weaponOrMuzzle, count]", "syntax": "<objUnit> setAmmo [weaponOrMuzzle,count]"}, "setApertureNew": {"version": "0.50", "tags": "", "description": "Sets custom camera aperture when HDR is enabled ([-1] to do it automatically). `minimum` should be <= `standard` and <= `maximum`.", "example": "setApertureNew [0.3, 0.2, 0.1, 1];", "docSyntax": "setApertureNew [minimum, standard, maximum, luminance]", "syntax": "setApertureNew [minimum,standard,maximum,luminance]"}, "setBleedingRemaining": {"version": "0.50", "tags": "", "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.", "example": "_unit setBleedingRemaining 60;", "docSyntax": "unit setBleedingRemaining time", "syntax": "<objUnit> setBleedingRemaining <scalar>"}, "setCompassOscillation": {"version": "0.50", "tags": "", "description": "This command sets random heading on the player's compass (both in map and in 3D view) with given frequency, which is also randomised.", "example": "Set compass to oscillate every second within -90/+90 degrees: setCompassOscillation [rad 90, 1, 1];", "docSyntax": "setCompassOscillation [angle, frequencyMin, frequencyMax]", "syntax": "setCompassOscillation [angle,frequencyMin,frequencyMax]"}, "setDebriefingText": {"version": "0.50", "tags": "", "description": "Sets debriefing title, text, subtitle, picture and background for a mission ending. The end type could be the engine-defined (\"CONTINUE\", \"KILLED\", \"LOSER\", \"END1\", \"END2\", \"END3\", \"END4\", \"END5\", \"END6\"), config-defined (see CfgDebriefing) or, with an alternative syntax of this command, any String. Given texts will be used to replace the corresponding texts on the debriefing screen.", "example": "_currentObjective = (taskDescription (currentTask player)) select 2; \"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];", "docSyntax": "endType setDebriefingText [title, description]", "syntax": "endType setDebriefingText [title,description]"}, "setFatigue": {"version": "0.50", "tags": "", "description": "Sets the person's fatigue, from 0 to 1.", "example": "player setFatigue 1;", "docSyntax": "unit setFatigue value", "syntax": "<objUnit> setFatigue <scalar>"}, "setGusts": {"version": "0.50", "tags": "", "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.", "example": "60 setGusts 0.75;", "docSyntax": "time setGusts value", "syntax": "<scalar> setGusts <scalar>"}, "setHorizonParallaxCoef": {"version": "0.50", "tags": "", "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).", "example": "setHorizonParallaxCoef 1;", "docSyntax": "setHorizonParallaxCoef coef", "syntax": "setHorizonParallaxCoef <scalar>"}, "setHUDMovementLevels": {"version": "0.50", "tags": "", "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.", "example": "setHUDMovementLevels [20, 30, -1, -1, 0.23, 2.1, [0,0,0]]", "docSyntax": "setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]", "syntax": "setHUDMovementLevels [minSpeed,maxSpeed,minAlt,maxAlt,minDir,maxDir,targetOrPosition]"}, "setLightAttenuation": {"version": "0.50", "tags": "", "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).", "example": "myLight setLightAttenuation [2, 4, 4, 0, 9, 10];", "docSyntax": "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]", "syntax": "light setLightAttenuation [start,constant,linear,quadratic,hardlimitstart,hardlimitend]"}, "setLightDayLight": {"version": "0.50", "tags": "", "description": "Sets if light can be used during the day.", "example": "myLight setLightDayLight true;", "docSyntax": "light setLightDayLight bool", "syntax": "light setLightDayLight <bool>"}, "setLightFlareMaxDistance": {"version": "0.50", "tags": "", "description": "Sets max distance where the flare is visible.", "example": "myLight setLightFlareMaxDistance 500;", "docSyntax": "light setLightFlareMaxDistance distance", "syntax": "light setLightFlareMaxDistance <scalar>"}, "setLightFlareSize": {"version": "0.50", "tags": "", "description": "Sets relative size of the flare for the light.", "example": "myLight setLightFlareSize 5;", "docSyntax": "light setLightFlareSize size", "syntax": "light setLightFlareSize size"}, "setLightIntensity": {"version": "0.50", "tags": "", "description": "Sets intensity of light.", "example": "myLight setLightIntensity 4;", "docSyntax": "light setLightIntensity value", "syntax": "light setLightIntensity <scalar>"}, "setLightnings": {"version": "0.50", "tags": "", "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "1800 setLightnings 0.7;", "docSyntax": "time setLightnings value", "syntax": "<scalar> setLightnings <scalar>"}, "setLightUseFlare": {"version": "0.50", "tags": "", "description": "Sets if light has flare.", "example": "myLight setLightUseFlare true;", "docSyntax": "light setLightUseFlare bool", "syntax": "light setLightUseFlare <bool>"}, "setLocalWindParams": {"version": "0.50", "tags": "", "description": "Sets parameters for helicopter rotor wash. It affects the visual effect of a rotor's downwash, such as blown particles, vegetation wind effect and area size.", "example": "setLocalWindParams [10, 5];", "docSyntax": "setLocalWindParams [strength, diameter]", "syntax": "setLocalWindParams [strength,diameter]"}, "setObjectMaterial": {"version": "0.50", "tags": "", "description": "Sets material of object selection. The selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).", "example": "car setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"]; car setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "docSyntax": "obj setObjectMaterial [selectionNumber, material]", "syntax": "<object> setObjectMaterial [selectionNumber,material]"}, "setObjectViewDistance": {"version": "0.50", "tags": "", "description": "Sets the rendering distance of objects and shadows.", "example": "setObjectViewDistance 2000;", "docSyntax": "setObjectViewDistance objectDistance", "syntax": "setObjectViewDistance objectDistance"}, "setOxygenRemaining": {"version": "0.50", "tags": "", "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.", "example": "player setOxygenRemaining 0; // Drowns player", "docSyntax": "unit setOxygenRemaining value", "syntax": "<objUnit> setOxygenRemaining <scalar>"}, "setParticleClass": {"version": "0.50", "tags": "", "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use setParticleParams subsequently if you need to overwrite some values.", "example": "_source01 = \"#particlesource\" createVehicleLocal _pos01; _source01 setParticleClass \"ObjectDestructionFire1Smallx\"; _source01 attachTo [_object,[0,0,0]];", "docSyntax": "source setParticleClass className", "syntax": "source setParticleClass className"}, "setPosASLW": {"version": "0.50", "tags": "", "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.", "example": "_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];", "docSyntax": "obj setPosASLW pos", "syntax": "<object> setPosASLW <array>"}, "setRainbow": {"version": "0.50", "tags": "", "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "360 setRainbow 1;", "docSyntax": "time setRainbow value", "syntax": "<scalar> setRainbow <scalar>"}, "setRandomLip": {"version": "0.50", "tags": "", "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it is talking.", "example": "player setRandomLip true;", "docSyntax": "unit setRandomLip bool", "syntax": "<objUnit> setRandomLip <bool>"}, "setShadowDistance": {"version": "0.50", "tags": "", "description": "Sets the shadows rendering distance.", "example": "setShadowDistance 1000", "docSyntax": "setShadowDistance value", "syntax": "setShadowDistance <scalar>"}, "setSystemOfUnits": {"version": "0.50", "tags": "", "description": "Set system of units. This will only impact gauges from advanced flight model.", "example": "if (player in _myHelicopter) then { setSystemOfUnits 2; };", "docSyntax": "setSystemOfUnits value", "syntax": "setSystemOfUnits <scalar>"}, "setUserActionText": {"version": "0.50", "tags": "", "description": "Changes user added action (see addAction) menu item text.", "example": "_id = player addAction [\"Hello\", \"\"]; player setUserActionText [_id, \"Good Bye\"];", "docSyntax": "object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]", "syntax": "<object> setUserActionText [actionIndex,textMenu,textWindowBackground,textWindowForeground]"}, "setVehicleAmmoDef": {"version": "0.50", "tags": "", "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.", "example": "player setVehicleAmmoDef 0;", "docSyntax": "unit setVehicleAmmoDef value", "syntax": "<objUnit> setVehicleAmmoDef <scalar>"}, "setWaves": {"version": "0.50", "tags": "", "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "180 setWaves .5;", "docSyntax": "time setWaves value", "syntax": "<scalar> setWaves <scalar>"}, "setWaypointName": {"version": "0.50", "tags": "", "description": "Changes the waypoint name.", "example": "[_grp,2] setWaypointName \"myName\";", "docSyntax": "waypoint setWaypointName name", "syntax": "waypoint setWaypointName <string>"}, "setWindDir": {"version": "0.50", "tags": "", "description": "Changes the wind direction smoothly.", "example": "60 setWindDir 180;", "docSyntax": "time setWindDir value", "syntax": "<scalar> setWindDir <scalar>"}, "setWindForce": {"version": "0.50", "tags": "", "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.", "example": "1800 setWindForce 0.5", "docSyntax": "time setWindForce wind", "syntax": "<scalar> setWindForce wind"}, "setWindStr": {"version": "0.50", "tags": "", "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "60 setWindStr 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds", "docSyntax": "time setWindStr value", "syntax": "<scalar> setWindStr <scalar>"}, "showChat": {"version": "0.50", "tags": "", "description": "Shows/hides the whole chat window.", "example": "showChat false;", "docSyntax": "showChat bool", "syntax": "showChat <bool>"}, "shownArtilleryComputer": {"version": "0.50", "tags": "", "description": "Checks whether the player has the artillery computer currently open.", "example": "if ( shownArtilleryComputer ) then { hint \"Artillery Computer shown on screen\"; };", "docSyntax": "shownArtilleryComputer", "syntax": "shownArtilleryComputer"}, "simulSetHumidity": {"version": "0.50", "tags": "", "description": "Sets simul cloud cover. This command does not affect overcast value.", "example": "simulSetHumidity 1;", "docSyntax": "simulSetHumidity humidity", "syntax": "simulSetHumidity humidity"}, "simulWeatherSync": {"version": "0.50", "tags": "", "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.", "example": "simulWeatherSync;", "docSyntax": "simulWeatherSync", "syntax": "simulWeatherSync"}, "soldierMagazines": {"version": "0.50", "tags": "", "description": "Get array with all magazines of the given unit.", "example": "soldierMagazines player;", "docSyntax": "soldierMagazines unit", "syntax": "soldierMagazines <objUnit>"}, "stance": {"version": "0.50", "tags": "", "description": "Returns the stance of the given unit.", "example": "if (stance player == \"STAND\") then {hint \"I am standing!\"};", "docSyntax": "stance unit", "syntax": "stance <objUnit>"}, "swimInDepth": {"version": "0.50", "tags": "", "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.", "example": "soldier swimInDepth -20;", "docSyntax": "unit swimInDepth value", "syntax": "<objUnit> swimInDepth <scalar>"}, "synchronizedTriggers": {"version": "0.50", "tags": "", "description": "Returns the list of triggers synchronized with a given waypoint.", "example": "synchronizedTriggers _someWaypoint;", "docSyntax": "synchronizedTriggers waypoint", "syntax": "synchronizedTriggers waypoint"}, "synchronizedWaypoints": {"version": "0.50", "tags": "", "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.", "example": "synchronizedWaypoints _someTrigger;", "docSyntax": "synchronizedWaypoints obj", "syntax": "synchronizedWaypoints <object>"}, "unassignItem": {"version": "0.50", "tags": "", "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.", "example": "_bluforUnit unassignItem \"NVGoggles\"; _bluforUnit removeItem \"NVGoggles\"; _opforUnit unassignItem \"NVGoggles_OPFOR\"; _opforUnit removeItem \"NVGoggles_OPFOR\"; _independentUnit unassignItem \"NVGoggles_INDEP\"; _independentUnit removeItem \"NVGoggles_INDEP\";", "docSyntax": "unit unassignItem item", "syntax": "<objUnit> unassignItem <objItem>"}, "underwater": {"version": "0.50", "tags": "", "description": "Returns whether the object is fully underwater", "example": "_isUnderwater = underwater vehicle player;", "docSyntax": "underwater object", "syntax": "underwater <object>"}, "uniform": {"version": "0.50", "tags": "", "description": "Returns name of uniform.", "example": "_uniform = uniform _unit;", "docSyntax": "uniform unit", "syntax": "uniform <objUnit>"}, "uniformItems": {"version": "0.50", "tags": "", "description": "Get array with all items (of any kind, even weapons) from uniform.", "example": "uniformItems player;", "docSyntax": "uniformItems unit", "syntax": "uniformItems <objUnit>"}, "uniformMagazines": {"version": "0.50", "tags": "", "description": "Get array with all magazines from uniform of the given unit.", "example": "uniformMagazines player;", "docSyntax": "uniformMagazines unit", "syntax": "uniformMagazines <objUnit>"}, "velocityModelSpace": {"version": "0.50", "tags": "", "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.", "example": "velocityModelSpace _chopper; comment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";", "docSyntax": "velocityModelSpace vehicle", "syntax": "velocityModelSpace <objVehicle>"}, "vest": {"version": "0.50", "tags": "", "description": "nameof vest.", "example": "_myVest = vest player;", "docSyntax": "vest unit", "syntax": "vest <objUnit>"}, "vestItems": {"version": "0.50", "tags": "", "description": "Get array with all items (of any kind, even weapons) from vest.", "example": "vestItems player; [ \"30Rnd_65x39_caseless_mag\", \"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\", \"16Rnd_9x21_Mag\", \"HandGrenade\", \"HandGrenade\", \"SmokeShell\", \"SmokeShellGreen\", \"Chemlight_green\", \"Chemlight_green\" ]", "docSyntax": "vestItems unit", "syntax": "vestItems <objUnit>"}, "vestMagazines": {"version": "0.50", "tags": "", "description": "Get array with all magazines from vest of the given unit.", "example": "vestMagazines player;", "docSyntax": "vestMagazines unit", "syntax": "vestMagazines <objUnit>"}, "waves": {"version": "0.50", "tags": "", "description": "Return waves value.", "example": "waveIntensity = waves;", "docSyntax": "waves", "syntax": "waves"}, "waypointName": {"version": "0.50", "tags": "", "description": "Gets the waypoint name.", "example": "_wpName = waypointName [_grp,2];", "docSyntax": "waypointName waypoint", "syntax": "waypointName waypoint"}, "weaponAccessories": {"version": "0.50", "tags": "", "description": "Get array with all items linked to a given weapon.", "example": "player weaponAccessories primaryWeapon player; //[\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]", "docSyntax": "unit weaponAccessories weapon", "syntax": "<objUnit> weaponAccessories <string>"}, "weaponCargo": {"version": "0.50", "tags": "", "description": "Get array with weapons from ammo box (or any general weapon holder container).", "example": "hint str weaponCargo backpackContainer player;", "docSyntax": "weaponCargo box", "syntax": "weaponCargo box"}, "weaponLowered": {"version": "0.50", "tags": "", "description": "Returns true if given soldier's weapon is lowered.", "example": "isWeaponLowered = weaponLowered player;", "docSyntax": "weaponLowered unit", "syntax": "weaponLowered <objUnit>"}, "windDir": {"version": "0.50", "tags": "", "description": "Returns the current wind azimuth.", "example": "if (windDir < 45 || windDir > 315) then { hint \"I feel a southern wind\"; //\u00a0wind going from South to North };", "docSyntax": "windDir", "syntax": "windDir"}, "windStr": {"version": "0.50", "tags": "", "description": "Returns the current wind strength.", "example": "10 setWindStr (0.5 * windStr);", "docSyntax": "windStr", "syntax": "windStr"}, "BIS_fnc_spawn": {"version": "0.56", "tags": "", "description": "Execute given code with or without parameter.", "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] spawn BIS_fnc_spawn;", "docSyntax": "[params, code] spawn BIS_fnc_spawn", "syntax": "[<any>,<code>] spawn BIS_fnc_spawn", "type": "executionFunction"}, "compileFinal": {"version": "0.56", "tags": "", "description": "Compile expression and makes it final, preventing it from:", "example": "myCode = compileFinal \"a = a + 1\"; call myCode;", "docSyntax": "compileFinal expression", "syntax": "compileFinal expression", "type": "compilationStatement"}, "difficulty": {"version": "0.56", "tags": "", "description": "Returns high-level selected difficulty mode. Returned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)", "example": "value = difficulty;", "docSyntax": "difficulty", "syntax": "difficulty"}, "getAmmoCargo": {"version": "0.56", "tags": "", "description": "Returns the amount (1 is full) of ammo resources in the cargo space of a rearm vehicle.", "example": "value = getAmmoCargo myVehicleName;", "docSyntax": "getAmmoCargo vehicle", "syntax": "getAmmoCargo <objVehicle>"}, "getArtilleryETA": {"version": "0.56", "tags": "", "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.", "example": "_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];", "docSyntax": "unit getArtilleryETA [targetPosition, magazineType]", "syntax": "<objUnit> getArtilleryETA [targetPosition,magazineType]"}, "getFuelCargo": {"version": "0.56", "tags": "", "description": "Returns the fuel amount (1 is full) in the cargo space of a refueling vehicle.", "example": "value = getFuelCargo myVehicleName;", "docSyntax": "getFuelCargo vehicle", "syntax": "getFuelCargo <objVehicle>"}, "getRepairCargo": {"version": "0.56", "tags": "", "description": "Returns the amount (1 is full) of repair resources in the cargo space of a repair vehicle.", "example": "value = getRepairCargo vehicleName;", "docSyntax": "getRepairCargo vehicle", "syntax": "getRepairCargo <objVehicle>"}, "BIS_fnc_arrayShuffle": {"version": "0.58", "tags": "", "description": "Return a new array with randomized order of elements from input array.", "example": "[1,2,3] call BIS_fnc_arrayShuffle; // can return [1,2,3], [3,1,2], [2,3,1], [1,3,2], [2,1,3] or [3,2,1]", "docSyntax": "array call BIS_fnc_arrayShuffle", "syntax": "<array> call BIS_fnc_arrayShuffle"}, "BIS_fnc_endLoadingScreen": {"version": "0.58", "tags": "", "description": "Unregister a loading screen. When none other remains, end the loading.", "example": "[\"myLoadingScreen\", \"Loading\u2026 wait for my splendid\u2122 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "docSyntax": "screenId call BIS_fnc_endLoadingScreen", "syntax": "screenId call BIS_fnc_endLoadingScreen"}, "BIS_fnc_loadInventory": {"version": "0.58", "tags": "", "description": "Adds a predefined loadout (either via CfgVehicles, CfgRespawnInventory, or a custom inventory saved via BIS_fnc_saveInventory) to a specified unit.", "example": "loadout = [player, configFile >> \"CfgVehicles\" >> \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; //\u00a0gives BLUFOR Squad Leader's loadout to player unit", "docSyntax": "param call BIS_fnc_loadInventory", "syntax": "param call BIS_fnc_loadInventory"}, "BIS_fnc_sortBy": {"version": "0.58", "tags": "", "description": "Sorts an array according to given algorithm. See sort for simple sorts.", "example": "//\u00a0sort numbers from lowest to highest _sortedNumbers = [[1,-80,0,480,15,-40], [], {_x}, \"ASCEND\"] call BIS_fnc_sortBy;", "docSyntax": "[array, parameters, algorithm, direction, filter] call BIS_fnc_sortBy", "syntax": "[<array>,parameters,algorithm,direction,filter] call BIS_fnc_sortBy"}, "BIS_fnc_startLoadingScreen": {"version": "0.58", "tags": "", "description": "Register a loading screen. Start the loading when it is the first one registered.", "example": "[\"myLoadingScreen\", \"Loading\u2026 wait for my splendid\u2122 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "docSyntax": "[screenId, layout] call BIS_fnc_startLoadingScreen", "syntax": "[screenId,layout] call BIS_fnc_startLoadingScreen"}, "lbSetTooltip": {"version": "0.58", "tags": "", "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", "example": "lbSetTooltip [101, 1, \"tooltip\"];", "docSyntax": "lbSetTooltip [idc, index, tooltip]", "syntax": "lbSetTooltip [<scalar>,<scalar>,tooltip]"}, "canAdd": {"version": "0.70", "tags": "", "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit. Since Arma 3 v2.09 this command will count unit storage space as whole, instead of as biggest container, when multiple items are queried.", "example": "if (player canAdd \"FirstAidKit\") then { player addItem \"FirstAidKit\"; } else { hint \"Not enough space\"; };", "docSyntax": "object canAdd item", "syntax": "<object> canAdd <objItem>"}, "handgunMagazine": {"version": "0.70", "tags": "", "description": "Collects all loaded magazines from all handgunWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.", "example": "hint str handgunMagazine player; //\u00a0[\"16Rnd_9x21_Mag\"]", "docSyntax": "handgunMagazine unit", "syntax": "handgunMagazine <objUnit>"}, "isStreamFriendlyUIEnabled": {"version": "0.70", "tags": "", "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).", "example": "hint str isStreamFriendlyUIEnabled;", "docSyntax": "isStreamFriendlyUIEnabled", "syntax": "isStreamFriendlyUIEnabled"}, "primaryWeaponMagazine": {"version": "0.70", "tags": "", "description": "Collects all loaded magazines from all primaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.", "example": "hint str primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]", "docSyntax": "primaryWeaponMagazine unit", "syntax": "primaryWeaponMagazine <objUnit>"}, "removeAllHandgunItems": {"version": "0.70", "tags": "", "description": "Removes all items from handgunWeapon, except magazine.", "example": "removeAllHandgunItems player;", "docSyntax": "removeAllHandgunItems unit", "syntax": "removeAllHandgunItems <objUnit>"}, "removeAllPrimaryWeaponItems": {"version": "0.70", "tags": "", "description": "Removes all items from primaryWeapon, except magazine.", "example": "removeAllPrimaryWeaponItems player;", "docSyntax": "removeAllPrimaryWeaponItems unit", "syntax": "removeAllPrimaryWeaponItems <objUnit>"}, "removeHandgunItem": {"version": "0.70", "tags": "", "description": "Removes given weapon item, including magazine, from the handgunWeapon", "example": "player removeHandgunItem \"muzzle_snds_L\";", "docSyntax": "unit removeHandgunItem item", "syntax": "<objUnit> removeHandgunItem <objItem>"}, "removePrimaryWeaponItem": {"version": "0.70", "tags": "", "description": "Removes given weapon item, including magazine, from the primaryWeapon.", "example": "player removePrimaryWeaponItem \"acc_flashlight\";", "docSyntax": "unit removePrimaryWeaponItem item", "syntax": "<objUnit> removePrimaryWeaponItem <objItem>"}, "secondaryWeaponMagazine": {"version": "0.70", "tags": "", "description": "Collects all loaded magazines from all secondaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.", "example": "hint str secondaryWeaponMagazine player; //[\"NLAW_F\"]", "docSyntax": "secondaryWeaponMagazine unit", "syntax": "secondaryWeaponMagazine <objUnit>"}, "BIS_fnc_respawnTickets": {"version": "0.74", "tags": "", "description": "Manage respawn tickets used by Tickets respawn template.", "example": "Add 5 tickets for BLUFOR: [west, 5] call BIS_fnc_respawnTickets;", "docSyntax": "[target, tickets, dynamicTarget] call BIS_fnc_respawnTickets", "syntax": "[<object>,tickets,dynamicTarget] call BIS_fnc_respawnTickets"}, "isSteamMission": {"version": "0.74", "tags": "", "description": "Returns true if the current mission is a Steam Workshop mission.", "example": "if (isSteamMission) then { hint \"Thank you for subscribing to my mission on Steam!\"; } else { hint \"Thank you for downloading my mission off the Internet!\"; };", "docSyntax": "isSteamMission", "syntax": "isSteamMission"}, "markAsFinishedOnSteam": {"version": "0.74", "tags": "", "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.", "example": "markAsFinishedOnSteam; endMission \"END1\";", "docSyntax": "markAsFinishedOnSteam", "syntax": "markAsFinishedOnSteam"}, "tvAdd": {"version": "0.74", "tags": "", "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.", "example": "_index = _ctrl tvAdd [[], \"Parent Item\"];", "docSyntax": "tvAdd [idc, pathParent, text]", "syntax": "tvAdd [<scalar>,pathParent,<string>]"}, "tvClear": {"version": "0.74", "tags": "", "description": "Removes all items from Tree View with given idc.", "example": "tvClear 101;", "docSyntax": "tvClear idc", "syntax": "tvClear <scalar>"}, "tvCollapse": {"version": "0.74", "tags": "", "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.", "example": "tvCollapse [101, [0]];", "docSyntax": "tvCollapse [idc, path]", "syntax": "tvCollapse [<scalar>,path]"}, "tvCollapseAll": {"version": "0.74", "tags": "", "description": "Collapses all tree items for the given Tree View.", "example": "tvCollapseAll 101;", "docSyntax": "tvCollapseAll idc", "syntax": "tvCollapseAll <scalar>"}, "tvCount": {"version": "0.74", "tags": "", "description": "Returns children count on given path. IDC means id of parent Tree View.", "example": "tvCount [101, [0]];", "docSyntax": "tvCount [idc, path]", "syntax": "tvCount [<scalar>,path]"}, "tvCurSel": {"version": "0.74", "tags": "", "description": "Returns path to currently selected item. IDC means id of parent Tree View.", "example": "tvCurSel 101;", "docSyntax": "tvCurSel idc", "syntax": "tvCurSel <scalar>"}, "tvData": {"version": "0.74", "tags": "", "description": "Returns string data from item on given path. IDC means id of parent CT_TREE.", "example": "tvData [101, [0]];", "docSyntax": "tvData [idc, path]", "syntax": "tvData [<scalar>,path]"}, "tvDelete": {"version": "0.74", "tags": "", "description": "Removes an item with given Tree View Path from Tree View.", "example": "tvDelete [101, [0, 0]];", "docSyntax": "tvDelete [idc, path]", "syntax": "tvDelete [<scalar>,path]"}, "tvExpand": {"version": "0.74", "tags": "", "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.", "example": "tvExpand [101, [0]];", "docSyntax": "tvExpand [idc, path]", "syntax": "tvExpand [<scalar>,path]"}, "tvExpandAll": {"version": "0.74", "tags": "", "description": "Expands all tree items for the given Tree View.", "example": "tvExpandAll 101;", "docSyntax": "tvExpandAll idc", "syntax": "tvExpandAll <scalar>"}, "tvPicture": {"version": "0.74", "tags": "", "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.", "example": "tvPicture [101, [0]];", "docSyntax": "tvPicture [idc, path]", "syntax": "tvPicture [<scalar>,path]"}, "tvSetColor": {"version": "0.74", "tags": "", "description": "Sets text color on given Tree View Item", "example": "tvSetColor [101, [0,0], [1,0,0,1]];", "docSyntax": "tvSetColor [idc, path, color]", "syntax": "tvSetColor [<scalar>,path,<scalar>]"}, "tvSetCurSel": {"version": "0.74", "tags": "", "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.56)", "example": "tvSetCurSel [101, [0]];", "docSyntax": "tvSetCurSel [idc, path]", "syntax": "tvSetCurSel [<scalar>,path]"}, "tvSetData": {"version": "0.74", "tags": "", "description": "Sets string data to item on given path. IDC means id of parent Tree View.", "example": "tvSetData [101, [0], \"Test data\"];", "docSyntax": "tvSetData [idc, path, data]", "syntax": "tvSetData [<scalar>,path,data]"}, "tvSetPicture": {"version": "0.74", "tags": "", "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.", "example": "tvSetPicture [101, [0], \"picture\"];", "docSyntax": "tvSetPicture [idc, path, name]", "syntax": "tvSetPicture [<scalar>,path,<string>]"}, "tvSetPictureColor": {"version": "0.74", "tags": "", "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.", "example": "tvSetPictureColor [101, [0,2], [1,0,1,1]];", "docSyntax": "tvSetPictureColor [idc, path, color]", "syntax": "tvSetPictureColor [<scalar>,path,<scalar>]"}, "tvSetTooltip": {"version": "0.74", "tags": "", "description": "Sets the tooltip text associated with the specified tree view path.", "example": "tvSetTooltip [101, [0,2], \"This is a tooltip\"];", "docSyntax": "tvSetTooltip [idc, path, text]", "syntax": "tvSetTooltip [<scalar>,path,<string>]"}, "tvSetValue": {"version": "0.74", "tags": "", "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer", "example": "tvSetValue [101, [0], 555];", "docSyntax": "tvSetValue [idc, path, val]", "syntax": "tvSetValue [<scalar>,path,val]"}, "tvSort": {"version": "0.74", "tags": "", "description": "Sorts all children of given path. Text of Tree View entries is used for sorting.", "example": "control tvSort [[0], true];", "docSyntax": "control tvSort [path, reversed]", "syntax": "<uiControl> tvSort [path,reversed]"}, "tvSortByValue": {"version": "0.74", "tags": "", "description": "Sorts all children of given path. Value of Tree View entries is used for sorting.", "example": "control tvSortByValue [[0], false];", "docSyntax": "control tvSortByValue [path, reversed]", "syntax": "<uiControl> tvSortByValue [path,reversed]"}, "tvText": {"version": "0.74", "tags": "", "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.", "example": "tvText [101, [0]];", "docSyntax": "tvText [idc, path]", "syntax": "tvText [<scalar>,path]"}, "tvTooltip": {"version": "0.74", "tags": "", "description": "Gets the tooltip text associated with the specified tree view path.", "example": "_text = tvTooltip [101, [0,2]];", "docSyntax": "tvTooltip [idc, path]", "syntax": "tvTooltip [<scalar>,path]"}, "tvValue": {"version": "0.74", "tags": "", "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.", "example": "tvValue [101, [0]];", "docSyntax": "tvValue [idc, path]", "syntax": "tvValue [<scalar>,path]"}, "addMagazineGlobal": {"version": "0.76", "tags": "", "description": "Adds magazine to a unit regardless of locality. This command can also be used to add magazine to a vehicle, like a static gun, for example.", "example": "player addMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "docSyntax": "unit addMagazineGlobal magazineName", "syntax": "<objUnit> addMagazineGlobal magazineName"}, "addWeaponGlobal": {"version": "0.76", "tags": "", "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. This command can link items to respective slots as well, in which case the functionality is identical to linkItem. To make sure the added weapon is loaded and ready, add the magazine first.", "example": "{ _x addMagazineGlobal \"Laserbatteries\"; _x addWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "docSyntax": "object addWeaponGlobal weapon", "syntax": "<object> addWeaponGlobal <string>"}, "allUnitsUAV": {"version": "0.76", "tags": "", "description": "Return a list of all UAV vehicles.", "example": "hint format [\"Number of UAV(s) on the map: %1\", count allUnitsUAV];", "docSyntax": "allUnitsUAV", "syntax": "allUnitsUAV"}, "BIS_fnc_addToPairs": {"version": "0.76", "tags": "", "description": "Adds given value to pair array, stored under unique key.", "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_addToPairs; //\u00a0Returns [[\"apple\",3],[\"pear\",12]]", "docSyntax": "[array, key, value, copyArray] call BIS_fnc_addToPairs", "syntax": "[<array>,key,<scalar>,copyArray] call BIS_fnc_addToPairs"}, "BIS_fnc_consolidateArray": {"version": "0.76", "tags": "", "description": "Finds duplicates in the given array of anything and consolidates them into an array of sub-arrays", "example": "[\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray; // Return: [[\"apple\",3],[\"pear\",2]]", "docSyntax": "array call BIS_fnc_consolidateArray", "syntax": "<array> call BIS_fnc_consolidateArray"}, "BIS_fnc_findInPairs": {"version": "0.76", "tags": "", "description": "Searches the associative array for the first occurance of the key string and returns its index. Seach is not case sensitiv.", "example": "[[[\"apple\",3],[\"pear\",2]],\"apple\"] call BIS_fnc_findInPairs; //\u00a0Returns 0", "docSyntax": "[array, key] call BIS_fnc_findInPairs", "syntax": "[<array>,key] call BIS_fnc_findInPairs"}, "BIS_fnc_groupVehicles": {"version": "0.76", "tags": "", "description": "Returns all vehicles a group possesses, assigned vehicles can be included.", "example": "[group player, true] call BIS_fnc_groupVehicles;", "docSyntax": "[target, assignedVeh] call BIS_fnc_groupVehicles", "syntax": "[<object>,assignedVeh] call BIS_fnc_groupVehicles"}, "BIS_fnc_moduleSector": {"version": "0.76", "tags": "", "description": "/* Description: Initialize a sector module. Can be also used to get sector parameters. --- Get all sectors --- Parameter(s): 0: BOOL Returns: ARRAY of OBJECTs --- Get number of sectors held by a side --- Parameter(s): 0: SIDE Returns: NUMBER - number of sectors owned by the side --- Set sector owner --- Parameter(s): 0: OBJECT - sector module 1: SIDE Returns: BOOL --- Initialize --- Parameter(s): 0: OBJECT - sector module Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_nearestRoad": {"version": "0.76", "tags": "", "description": "Find the nearest road segment to certain position, within given radius.", "example": "_nearestRoad = [getPosATL player, 500] call BIS_fnc_nearestRoad;", "docSyntax": "[center, radius, blacklist] call BIS_fnc_nearestRoad", "syntax": "[center,radius,blacklist] call BIS_fnc_nearestRoad"}, "BIS_fnc_removeSupportLink": {"version": "0.76", "tags": "", "description": "Removes support types during a mission.", "example": "[requesterMod, providerMod] call BIS_fnc_removeSupportLink;", "docSyntax": "[requester, provider] call BIS_fnc_removeSupportLink", "syntax": "[requester,provider] call BIS_fnc_removeSupportLink"}, "BIS_fnc_taskState": {"version": "0.76", "tags": "", "description": "Returns task's state.", "example": "\"task_1\" call BIS_fnc_taskState;", "docSyntax": "taskID call BIS_fnc_taskState", "syntax": "taskID call BIS_fnc_taskState"}, "connectTerminalToUAV": {"version": "0.76", "tags": "", "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.", "example": "bool = player connectTerminalToUAV uav1;", "docSyntax": "person connectTerminalToUAV uav", "syntax": "<objUnit> connectTerminalToUAV uav"}, "createVehicleCrew": {"version": "0.76", "tags": "", "description": "Creates vehicle crew corresponding to the provided vehicle's faction. If the vehicle is already occupied, the command will only create missing crew in the existing vehicle's group.", "example": "_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"]; createVehicleCrew _veh;", "docSyntax": "createVehicleCrew vehicle", "syntax": "createVehicleCrew <objVehicle>"}, "getConnectedUAV": {"version": "0.76", "tags": "", "description": "Returns UAV/UGV vehicle if person has connection to some UAV. To return the AI unit which player controls, see getConnectedUAVUnit.", "example": "getConnectedUAV player;", "docSyntax": "getConnectedUAV person", "syntax": "getConnectedUAV <objUnit>"}, "isUAVConnected": {"version": "0.76", "tags": "", "description": "Returns true if UAV is connected to some terminal.", "example": "_isConnected = isUAVConnected cursorTarget;", "docSyntax": "isUAVConnected uav", "syntax": "isUAVConnected uav"}, "magazinesAmmo": {"version": "0.76", "tags": "", "description": "Returns all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.", "example": "_magazinesAmmo = magazinesAmmo player; /* [ [\"30Rnd_65x39_caseless_mag\",30], [\"30Rnd_65x39_caseless_mag\",30], [\"16Rnd_9x21_Mag\",16], [\"SmokeShellGreen\",1], [\"Chemlight_green\",1], [\"HandGrenade\",1] ] */", "docSyntax": "magazinesAmmo vehicle", "syntax": "magazinesAmmo <objVehicle>"}, "magazinesAmmoFull": {"version": "0.76", "tags": "", "description": "Returns array of arrays of all unit's or vehicle's magazines with extended information about them. The magazines returned are for primary gunner. If you need magazines for all turrets, see magazinesAllTurrets.", "example": "toFixed 0; magazinesAmmoFull player; /* [ [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\",10000003,0], [\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\",10000016,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000008,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000009,0], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000010,0], [\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\",10000018,0], [\"HandGrenade\",1,false,-1,\"Vest\",10000019,0], [\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\",10000001,0], [\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\",10000011,0] ] */", "docSyntax": "magazinesAmmoFull entity", "syntax": "magazinesAmmoFull entity"}, "removeMagazineGlobal": {"version": "0.76", "tags": "", "description": "Removes the magazine from the unit.", "example": "player removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "docSyntax": "unit removeMagazineGlobal magazineName", "syntax": "<objUnit> removeMagazineGlobal magazineName"}, "removeWeaponGlobal": {"version": "0.76", "tags": "", "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.", "example": "{ _x removeWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "docSyntax": "unit removeWeaponGlobal weapon", "syntax": "<objUnit> removeWeaponGlobal <string>"}, "weaponsItems": {"version": "0.76", "tags": "", "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.", "example": "hint str weaponsItems player; [ [\"arifle_MX_ACO_pointer_F\",\"muzzle_snds_H\",\"acc_pointer_IR\",\"optic_Aco\",[\"30Rnd_65x39_caseless_mag\",30],[],\"bipod_01_F_blk\"], [\"launch_NLAW_F\",\"\",\"\",\"\",[\"NLAW_F\",1],[],\"\"], [\"hgun_P07_F\",\"muzzle_snds_L\",\"\",\"\",[\"16Rnd_9x21_Mag\",11],[],\"\"] ]", "docSyntax": "weaponsItems vehicle", "syntax": "weaponsItems <objVehicle>"}, "BIS_fnc_3DENAttributeDoorStates": {"version": "1.00", "tags": "", "description": "Internal function used for the Eden Editor Edit Terrain Object module.", "example": "-", "docSyntax": "[] call BIS_fnc_3DENAttributeDoorStates", "syntax": "[] call BIS_fnc_3DENAttributeDoorStates"}, "BIS_fnc_3DENCamera": {"version": "1.00", "tags": "", "description": "Moves Eden's camera depending on one of two modes:", "example": "Move Eden's camera to the currently selected Eden entity [\"selected\"] call BIS_fnc_3DENCamera;", "docSyntax": "[mode] call BIS_fnc_3DENCamera", "syntax": "[mode] call BIS_fnc_3DENCamera"}, "BIS_fnc_3DENControlsHint": {"version": "1.00", "tags": "", "description": "Used by Eden to display control hints for the current Eden operation as seen in the bottom right corner of the Editor display.", "example": "[\"toggle\"] call BIS_fnc_3DENControlsHint; //\u00a0toggle Eden controls hints", "docSyntax": "[mode] call BIS_fnc_3DENControlsHint", "syntax": "[mode] call BIS_fnc_3DENControlsHint"}, "BIS_fnc_3DENDrawLocations": {"version": "1.00", "tags": "", "description": "Internal function used by Eden Editor to draw locations.", "example": "-", "docSyntax": "[] call BIS_fnc_3DENDrawLocations", "syntax": "[] call BIS_fnc_3DENDrawLocations"}, "BIS_fnc_3DENInterface": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3DENStatusBar": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_activateAddons": {"version": "1.00", "tags": "", "description": "Activate addons upon mission start. Doesn't work when the mission is already running.", "example": "[\"class_1\",\"class_2\"] call BIS_fnc_activateAddons;", "docSyntax": "[addons] call BIS_fnc_activateAddons", "syntax": "[addons] call BIS_fnc_activateAddons"}, "BIS_fnc_addClassOO": {"version": "1.00", "tags": "", "description": "Registering a class for the OO scripting shell.", "example": "\"someOOClass\" call BIS_fnc_addClassOO;", "docSyntax": "class call BIS_fnc_addClassOO", "syntax": "class call BIS_fnc_addClassOO"}, "BIS_fnc_addScore": {"version": "1.00", "tags": "", "description": "Adds a set amount of points to the score of a unit (MP only)", "example": "[player,20] call BIS_fnc_addScore;", "docSyntax": "[object, number] call BIS_fnc_addScore", "syntax": "[<object>,<scalar>] call BIS_fnc_addScore"}, "BIS_fnc_addScriptedEventHandler": {"version": "1.00", "tags": "", "description": "Adds a Scripted Event Handler and returns its ID. Additionally, the \"ScriptedEventHandlerAdded\" Scripted EH is called. For the full list of all available Scripted EHs see Arma 3: Scripted Event Handlers.", "example": "[missionNamespace, \"event\", { hint \"Hello World\" }] call BIS_fnc_addScriptedEventHandler;", "docSyntax": "[namespace, name, code] call BIS_fnc_addScriptedEventHandler", "syntax": "[namespace,<string>,<code>] call BIS_fnc_addScriptedEventHandler"}, "BIS_fnc_addStackedEventHandler": {"version": "1.00", "tags": "", "description": "\ud83d\udd56", "example": "[\"someId\", \"onEachFrame\", {hintSilent str time}] call BIS_fnc_addStackedEventHandler;", "docSyntax": "[id, event, code, arguments] call BIS_fnc_addStackedEventHandler", "syntax": "[<scalar>,event,<code>,arguments] call BIS_fnc_addStackedEventHandler"}, "BIS_fnc_addSupportLink": {"version": "1.00", "tags": "", "description": "Adds support types during a mission.", "example": "[player, BIS_requesterMod, BIS_providerMod ] call BIS_fnc_addSupportLink;", "docSyntax": "[requesterUnit, requesterMod, providerMod] call BIS_fnc_addSupportLink", "syntax": "[requesterUnit,requesterMod,providerMod] call BIS_fnc_addSupportLink"}, "BIS_fnc_addWeapon": {"version": "1.00", "tags": "", "description": "Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in CfgWeapons). This function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually.", "example": "Add 6 dual-purpose magazines and the underwater gun to the player: newGun = [player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon;", "docSyntax": "[unit, weaponClassName, quantity, type] call BIS_fnc_addWeapon", "syntax": "[<objUnit>,weaponClassName,quantity,type] call BIS_fnc_addWeapon"}, "BIS_fnc_advHint": {"version": "1.00", "tags": "", "description": "Shows advanced hint to player.", "example": "[[\"Common\", \"GPS\"]] call BIS_fnc_advHint;", "docSyntax": "[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call BIS_fnc_advHint", "syntax": "[classes,duration1,condition1,duration2,condition2,showing,onlyFullHint,onlyOnce,useSound] call BIS_fnc_advHint"}, "BIS_fnc_advHintArg": {"version": "1.00", "tags": "", "description": "Advanced hint arguments preprocess.", "docSyntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg", "syntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg"}, "BIS_fnc_advHintCredits": {"version": "1.00", "tags": "", "description": "Advanced hint credits preprocessor.", "example": "call BIS_fnc_advHintCredits;", "docSyntax": "call BIS_fnc_advHintCredits", "syntax": "call BIS_fnc_advHintCredits"}, "BIS_fnc_advHintFormat": {"version": "1.00", "tags": "", "description": "Return formatted texts of a CfgHints hint.", "example": "[\"Arma3\",\"Feedback\",\"\",[0.5,0.3,0.6,1]] call BIS_fnc_advHintFormat;", "docSyntax": "[topic,hint,subHint,colour] call BIS_fnc_advHintFormat", "syntax": "[topic,hint,subHint,colour] call BIS_fnc_advHintFormat"}, "BIS_fnc_AircraftCatapultLaunch": {"version": "1.00", "tags": "", "description": "Accelerates an aircraft off the aircraft carrier. For this to work the aircraft must be properly configured in config. See Arma 3: Aircraft Systems for information about needed config changes.", "example": "[_plane] call BIS_fnc_aircraftCatapultLaunch;", "docSyntax": "[aircraft, direction] call BIS_fnc_aircraftCatapultLaunch", "syntax": "[aircraft,direction] call BIS_fnc_aircraftCatapultLaunch"}, "BIS_fnc_AircraftSystemsInit": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - Init function to invoke scripted features required for Jets DLC content. Exucution: - Call the function via int EH on each aircrfat config class Eventhandlers: Eventhandlers { init = \"_this call BIS_fnc_AircraftSystemsInit\"; }; Requirments: - Compatible aircrfat must have a config definition for all sub-systems that will be invoked by this function example of cfgVehicles subclass definitions; class AircraftAutomatedSystems { wingStateControl = 1; //enable automated wing state control to prevent player to take off with folded wings wingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"}; //foldable wing animation list wingStateFolded = 1; //animation state when folded wingStateUnFolded = 0; //animation state when un-folded wingAutoUnFoldSpeed = 40; //speed treshold when triger this feature, and unfold wings for player }; Parameter(s): _this select 0: mode (Scalar) 0: plane/object Returns: nothing Result: Aircrfat additional functionality added */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_AircraftTailhook": {"version": "1.00", "tags": "", "description": "Aircraft carrier arrest/recovery function for USS Freedom aircraft carrier. If the aircraft exceeds the speed defined in config a wire snap will be simulated.", "example": "[_aircraft] call BIS_fnc_aircraftTailhook;", "docSyntax": "[aircraft] call BIS_fnc_aircraftTailhook", "syntax": "[aircraft] call BIS_fnc_aircraftTailhook"}, "BIS_fnc_AircraftWingStateCheck": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This function is designed to prevent take off with folded wings on the Jets DLC aircraft that have such useraction/function enabled. Exucution: - Call the function via int EH on each aircrfat config class Eventhandlers: Eventhandlers { init = \"_this call BIS_fnc_AircraftSystemsInit\"; }; Requirments: - Compatible aircrfat must have a config definition for all subsytems that will be invoked by this function example of cfgVehicles subclass definitions; class AircraftAutomatedSystems { wingStateControl = 1; //enable automated wing state control to prevent player to take off with folded wings wingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"}; //foldable wing animation list wingStateFolded = 1; //animation state when folded wingStateUnFolded = 0; //animation state when un-folded wingAutoUnFoldSpeed = 40; //speed treshold when triger this feature, and unfold wings for player }; Parameter(s): _this select 0: mode (Scalar) 0: plane/object Returns: nothing Result: Aircrfat should not be able to take off/ fly with wings folded */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_alignTabs": {"version": "1.00", "tags": "", "description": "Align two columns divided by tabs. A tab counts for 8 characters.", "example": "[ [\"Player:\", str player], [\"Name:\", name player], [\"Type:\", typeOf player], [\"Location:\", str getPosATL player], [\"Direction:\", str getDir player] ] call BIS_fnc_alignTabs;", "docSyntax": "array call BIS_fnc_alignTabs", "syntax": "<array> call BIS_fnc_alignTabs"}, "BIS_fnc_allSynchronizedObjects": {"version": "1.00", "tags": "", "description": "Return all synchronized objects, including those synced to synced and so on.", "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_allSynchronizedObjects;", "docSyntax": "[object, filter] call BIS_fnc_allSynchronizedObjects", "syntax": "[<object>,filter] call BIS_fnc_allSynchronizedObjects"}, "BIS_fnc_ambientAnim": {"version": "1.00", "tags": "", "description": "Play set of ambient animations on given unit. If the unit should react to combat, use BIS_fnc_ambientAnimCombat instead.", "example": "[player, \"STAND1\", \"ASIS\"] call BIS_fnc_ambientAnim;", "docSyntax": "[unit, animationSet, equipmentLevel, snapTo, interpolate, attachToLogic] call BIS_fnc_ambientAnim", "syntax": "[<objUnit>,animationSet,equipmentLevel,snapTo,interpolate,attachToLogic] call BIS_fnc_ambientAnim"}, "BIS_fnc_ambientAnimCombat": {"version": "1.00", "tags": "", "description": "Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away.", "example": "[_unit, \"STAND\", \"FULL\", { (player distance _this) < 5 }] call BIS_fnc_ambientAnimCombat;", "docSyntax": "[unit, animationSet, equipmentLevel, condition, behaviour] call BIS_fnc_ambientAnimCombat", "syntax": "[<objUnit>,animationSet,equipmentLevel,condition,behaviour] call BIS_fnc_ambientAnimCombat"}, "BIS_fnc_ambientAnimGetParams": {"version": "1.00", "tags": "", "description": "Feeds params of given animset to BIS_fnc_ambientAnim.", "example": "_animParams = \"KNEEL\" call BIS_fnc_ambientAnimGetParams;", "docSyntax": "animType call BIS_fnc_ambientAnimGetParams", "syntax": "animType call BIS_fnc_ambientAnimGetParams"}, "BIS_fnc_ambientFlyby": {"version": "1.00", "tags": "", "description": "Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches its destination.", "example": "//\u00a0spawns a Littlebird that flies from position 200,200,50 to 250,250,75 at altitude 100 and normal speed [[200,200,50], [250,250,75]] call BIS_fnc_ambientFlyby;", "docSyntax": "[startPos, endPos, altitude, speedMode, classname, side] call BIS_fnc_ambientFlyby", "syntax": "[startPos,endPos,<scalar>,speedMode,classname,<objSide>] call BIS_fnc_ambientFlyby"}, "BIS_fnc_animalBehaviour": {"version": "1.00", "tags": "", "description": "Animal behaviour control. Called by Animals_F\\Data\\Scripts\\main.fsm.", "example": "[animal] call BIS_fnc_animalBehaviour;", "docSyntax": "[animal] call BIS_fnc_animalBehaviour", "syntax": "[animal] call BIS_fnc_animalBehaviour"}, "BIS_fnc_animalRandomization": {"version": "1.00", "tags": "", "description": "Randomise animals skin.", "example": "myDog call BIS_fnc_animalRandomization;", "docSyntax": "animal call BIS_fnc_animalRandomization", "syntax": "animal call BIS_fnc_animalRandomization"}, "BIS_fnc_animalSiteSpawn": {"version": "1.00", "tags": "", "description": "Create an area that spawns animals. The animals will be created or deleted if a player is inside or outside the area's radius.", "example": "[ player, [\"rabbit_f\",\"turtle_f\",\"hen_random_f\"], 200] call BIS_fnc_animalSiteSpawn;", "docSyntax": "[animalSite, classnamesToSpawn, radius] call BIS_fnc_animalSiteSpawn", "syntax": "[animalSite,classnamesToSpawn,radius] call BIS_fnc_animalSiteSpawn"}, "BIS_fnc_animViewer": {"version": "1.00", "tags": "", "description": "Opens the Splendid\u2122 Animation Viewer.", "example": "[] call BIS_fnc_animViewer;", "docSyntax": "[] call BIS_fnc_animViewer", "syntax": "[] call BIS_fnc_animViewer"}, "BIS_fnc_areEqualNotNil": {"version": "1.00", "tags": "", "description": "Compares all elements of passed array between each other and returns true is all are defined and identical.", "example": "[[1, 2, [3, [4, 5]]], [1, 2, [3, [4, 5]]]] call BIS_fnc_areEqualNotNil; //\u00a0true [[1, 2, [3, [4, nil]]], [1, 2, [3, [4, nil]]]] call BIS_fnc_areEqualNotNil; //\u00a0false", "docSyntax": "[anything1, anything2, \u2026] call BIS_fnc_areEqualNotNil", "syntax": "[anything1,anything2,\u2026] call BIS_fnc_areEqualNotNil"}, "BIS_fnc_areFriendly": {"version": "1.00", "tags": "", "description": "Function that takes two Sides and compares them, returning whether they are friendly or not.", "example": "_areFriendly = [west, east] call BIS_fnc_areFriendly;", "docSyntax": "[side1, side2] call BIS_fnc_areFriendly", "syntax": "[side1,side2] call BIS_fnc_areFriendly"}, "BIS_fnc_baseVehicle": {"version": "1.00", "tags": "", "description": "Returns base vehicle (i.e., vehicle which is not just derivative of other with different textures / animations).", "example": "[\"O_MBT_04_cannon_F\"] call BIS_fnc_baseVehicle;", "docSyntax": "class call BIS_fnc_baseVehicle", "syntax": "class call BIS_fnc_baseVehicle"}, "BIS_fnc_baseWeapon": {"version": "1.00", "tags": "", "description": "Determines base weapon class, with no attachments.", "example": "[\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; //\u00a0Returns \"arifle_Mk20_F\"", "docSyntax": "[weaponName] call BIS_fnc_baseWeapon", "syntax": "[weaponName] call BIS_fnc_baseWeapon"}, "BIS_fnc_basicBackpack": {"version": "1.00", "tags": "", "description": "Determines basic backpack with no equipment present (ie empty).", "example": "baseBackpack = \"b_assaultpack_rgr_medic\" call BIS_fnc_basicBackpack; //\u00a0returns \"b_assaultpack_rgr\", the base class", "docSyntax": "backPackClassName call BIS_fnc_basicBackpack", "syntax": "backPackClassName call BIS_fnc_basicBackpack"}, "BIS_fnc_basicTask": {"version": "1.00", "tags": "", "description": "Internally used .fsm.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_bezierLength": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_bezierLength", "syntax": "[] call BIS_fnc_bezierLength"}, "BIS_fnc_blackIn": {"version": "1.00", "tags": "", "description": "Unregister a black screen. When none other black screen is registered, fade it out.", "example": "[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackIn;", "docSyntax": "[id, smoothing, fadeSpeed] call BIS_fnc_blackIn", "syntax": "[<scalar>,smoothing,fadeSpeed] call BIS_fnc_blackIn"}, "BIS_fnc_blackOut": {"version": "1.00", "tags": "", "description": "Register a black screen. Start the black screen when the first request is registered.", "example": "[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackOut;", "docSyntax": "[id, smoothing, fadeSpeed] call BIS_fnc_blackOut", "syntax": "[<scalar>,smoothing,fadeSpeed] call BIS_fnc_blackOut"}, "BIS_fnc_bloodEffect": {"version": "1.00", "tags": "", "description": "Adds the bleeding effect post-processing effect to the players screen.", "example": "[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds.", "docSyntax": "[10] call BIS_fnc_bloodEffect", "syntax": "[10] call BIS_fnc_bloodEffect"}, "BIS_fnc_briefingAnimate": {"version": "1.00", "tags": "", "description": "Animate briefing markers.", "example": "// given you have 6 markers: // - \"myMarker\" // - \"myMarker_0\" // - \"myMarker_1\" // - \"myMarker_2\" // - \"myMarker_3\" // - \"myMarker_4\" for \"_i\" from 0 to 4 do { private _commit = 1; [\"myMarker\", 5, _commit] call BIS_fnc_briefingAnimate; sleep _commit; };", "docSyntax": "[markerName, stepId, delay] call BIS_fnc_briefingAnimate", "syntax": "[<string>,stepId,<scalar>] call BIS_fnc_briefingAnimate"}, "BIS_fnc_briefingInit": {"version": "1.00", "tags": "", "description": "Initialize animated briefing markers.", "example": "\"marker_1\" call BIS_fnc_briefingInit;", "docSyntax": "marker call BIS_fnc_briefingInit", "syntax": "marker call BIS_fnc_briefingInit"}, "BIS_fnc_buildingPositions": {"version": "1.00", "tags": "", "description": "Get all available positions within a building or structure.", "example": "[_building] call BIS_fnc_buildingPositions;", "docSyntax": "param call BIS_fnc_buildingPositions", "syntax": "param call BIS_fnc_buildingPositions"}, "BIS_fnc_callScriptedEventHandler": {"version": "1.00", "tags": "", "description": "Calls all the codes assigned to scripted event handler with given name. Since 1.68 the code receives current EH id in the special variable: _thisScriptedEventHandler", "example": "[missionNamespace, \"event\", [player, 123]] call BIS_fnc_callScriptedEventHandler;", "docSyntax": "[namespace, name, arguments, returnResults] call BIS_fnc_callScriptedEventHandler", "syntax": "[namespace,<string>,arguments,returnResults] call BIS_fnc_callScriptedEventHandler"}, "BIS_fnc_camera": {"version": "1.00", "tags": "", "description": "Splendid\u2122 Camera, \"Ultimate Screenshot Simulator\"", "example": "[] call BIS_fnc_camera;", "docSyntax": "[mode, parameter] call BIS_fnc_camera", "syntax": "[mode,parameter] call BIS_fnc_camera"}, "BIS_fnc_camera_deleted": {"version": "1.00", "tags": "", "description": "Deletes given camera.", "example": "[BIS_camera] call BIS_fnc_camera_deleted;", "docSyntax": "[camera] call BIS_fnc_camera_deleted", "syntax": "[<objCamera>] call BIS_fnc_camera_deleted"}, "BIS_fnc_camera_getCam": {"version": "1.00", "tags": "", "description": "Gets camera instance of camerea object", "example": "[BIS_camera] call BIS_fnc_camera_getCam;", "docSyntax": "[camera] call BIS_fnc_camera_getCam", "syntax": "[<objCamera>] call BIS_fnc_camera_getCam"}, "BIS_fnc_camera_getCinemaBordersEnabled": {"version": "1.00", "tags": "", "description": "Check if camera uses cinema borders.", "example": "[BIS_camera] call BIS_fnc_camera_getCinemaBordersEnabled;", "docSyntax": "[camera] call BIS_fnc_camera_getCinemaBordersEnabled", "syntax": "[<objCamera>] call BIS_fnc_camera_getCinemaBordersEnabled"}, "BIS_fnc_camera_getFocus": {"version": "1.00", "tags": "", "description": "Returns camera focus.", "example": "[BIS_camera] call BIS_fnc_camera_getFocus;", "docSyntax": "[camera] call BIS_fnc_camera_getFocus", "syntax": "[<objCamera>] call BIS_fnc_camera_getFocus"}, "BIS_fnc_camera_getFOV": {"version": "1.00", "tags": "", "description": "Gets FOV of camera.", "example": "[BIS_camera] call BIS_fnc_camera_getFOV;", "docSyntax": "[camera] call BIS_fnc_camera_getFOV", "syntax": "[<objCamera>] call BIS_fnc_camera_getFOV"}, "BIS_fnc_camera_getHUDEnabled": {"version": "1.00", "tags": "", "description": "Returns wether camera HUD is enabled.", "example": "[BIS_camera] call BIS_fnc_camera_getHUDEnabled;", "docSyntax": "[camera] call BIS_fnc_camera_getHUDEnabled", "syntax": "[<objCamera>] call BIS_fnc_camera_getHUDEnabled"}, "BIS_fnc_camera_getVisionMode": {"version": "1.00", "tags": "", "description": "Returns camera vision mode.", "example": "[BIS_camera] call BIS_fnc_camera_getVisionMode;", "docSyntax": "[camera] call BIS_fnc_camera_getVisionMode", "syntax": "[<objCamera>] call BIS_fnc_camera_getVisionMode"}, "BIS_fnc_camera_init": {"version": "1.00", "tags": "", "description": "Initialises a camera.", "example": "[BIS_camera] call BIS_fnc_camera_init;", "docSyntax": "[camera] call BIS_fnc_camera_init", "syntax": "[<objCamera>] call BIS_fnc_camera_init"}, "BIS_fnc_camera_setCam": {"version": "1.00", "tags": "", "description": "Sets camera instance of camera object.", "example": "[BIS_camera,BIS_camera_instance] call BIS_fnc_camera_setCam;", "docSyntax": "[camera, cameraInstance] call BIS_fnc_camera_setCam", "syntax": "[<objCamera>,cameraInstance] call BIS_fnc_camera_setCam"}, "BIS_fnc_camera_setCinemaBordersEnabled": {"version": "1.00", "tags": "", "description": "Sets cinema borders.", "example": "[BIS_camera,true] call BIS_fnc_camera_setCinemaBordersEnabled;", "docSyntax": "[camera, enabled] call BIS_fnc_camera_setCinemaBordersEnabled", "syntax": "[<objCamera>,<bool>] call BIS_fnc_camera_setCinemaBordersEnabled"}, "BIS_fnc_camera_setFocus": {"version": "1.00", "tags": "", "description": "Sets camera focus.", "example": "[BIS_camera, [0.5,0.5]] call BIS_fnc_camera_setFocus;", "docSyntax": "[camera, focusValues] call BIS_fnc_camera_setFocus", "syntax": "[<objCamera>,focusValues] call BIS_fnc_camera_setFocus"}, "BIS_fnc_camera_setFOV": {"version": "1.00", "tags": "", "description": "Sets the FOV of given camera.", "example": "[BIS_camera,0.5] call BIS_fnc_camera_setFOV;", "docSyntax": "[camera, FOV] call BIS_fnc_camera_setFOV", "syntax": "[<objCamera>,FOV] call BIS_fnc_camera_setFOV"}, "BIS_fnc_camera_setHUDEnabled": {"version": "1.00", "tags": "", "description": "Enables or disables camera HUD.", "example": "[BIS_camera,true] call BIS_fnc_camera_setHUDEnabled;", "docSyntax": "[camera, state] call BIS_fnc_camera_setHUDEnabled", "syntax": "[<objCamera>,state] call BIS_fnc_camera_setHUDEnabled"}, "BIS_fnc_camera_setVisionMode": {"version": "1.00", "tags": "", "description": "Sets camera vision mode.", "example": "[BIS_camera,1] call BIS_fnc_camera_setVisionMode;", "docSyntax": "[camera, mode] call BIS_fnc_camera_setVisionMode", "syntax": "[<objCamera>,mode] call BIS_fnc_camera_setVisionMode"}, "BIS_fnc_camera_tick": {"version": "1.00", "tags": "", "description": "Ticks a camera. Updates position and view mode.", "example": "[BIS_camera] call BIS_fnc_camera_tick;", "docSyntax": "[camera] call BIS_fnc_camera_tick", "syntax": "[<objCamera>] call BIS_fnc_camera_tick"}, "BIS_fnc_cameraOld": {"version": "1.00", "tags": "", "description": "Classic camera script, replaced by the Splendid\u2122 BIS_fnc_camera.", "example": "[player] call BIS_fnc_cameraOld; //\u00a0starts the camera on the player", "docSyntax": "[target] call BIS_fnc_cameraOld", "syntax": "[<object>] call BIS_fnc_cameraOld"}, "BIS_fnc_cargoTurretIndex": {"version": "1.00", "tags": "", "description": "Return cargo index of a person turret and the other way around.", "example": "private _vehicle = vehicle player; private _turretCargoIndex = [_vehicle, [0, 1]] call BIS_fnc_cargoTurretIndex; private _playerTurretPath = [_vehicle, player] call BIS_fnc_cargoTurretIndex;", "docSyntax": "[vehicle, personOrTurretPath] call BIS_fnc_cargoTurretIndex", "syntax": "[<objVehicle>,personOrTurretPath] call BIS_fnc_cargoTurretIndex"}, "BIS_fnc_Carrier01AnimateDeflectors": {"version": "1.00", "tags": "", "description": "Plays a set of animations to animate the carriers' catapult jet blast deflectors. See Arma 3: Aircraft Systems for information about needed config changes.", "example": "[_carrierPart, [\"Deflector_1\", \"Deflector_1_hydraulic_1\", \"Deflector_1_hydraulic_2\", \"Deflector_1_hydraulic_3\"], 10] spawn BIS_fnc_carrier01AnimateDeflectors;", "docSyntax": "[carrierPart, animations, animationState] spawn BIS_fnc_carrier01AnimateDeflectors", "syntax": "[carrierPart,animations,animationState] spawn BIS_fnc_carrier01AnimateDeflectors"}, "BIS_fnc_Carrier01CatapultActionAdd": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01CatapultActionRemove": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01CatapultID": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01CatapultLockTo": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01CrewInAnim": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01CrewPlayAnim": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01EdenDelete": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This is a sub function designed to delete dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will delete carrier parts in EDEN editor after main object is deleted. Exucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). Example: class Eventhandlers { init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor }; Requirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select 0: mode (Scalar) 0: carrier Base/object and 1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; Returns: nothing Result: Aircraft Carrier's parts are deleted in EDEN editor. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01EdenInit": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This is a sub function designed to assemble dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will update initial init setup on EDEN editor invoked. Exucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). Example: class Eventhandlers { init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor }; Requirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select 0: mode (Scalar) 0: carrier Base/object and 1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; Returns: nothing Result: Aircraft Carrier's possition is updated in EDEN editor. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01Init": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_Carrier01PosUpdate": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This is a sub function designed to update dynamic aircraft carriers position in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space. Function will update initial object positions when player drggs the object in EDEN editor. Exucution: - Call from EH on the main carrier base model (blank model with momory points and reference config). Example: class Eventhandlers { init = \"_this call BIS_fnc_Carrier01Init\"; //main init fnc, will assemble carrier in game AttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //function to update objects position in EDEN editor if attributes changed by player Dragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\"; //function to update objects position in EDEN editor if attributes changed by player RegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\"; //initial EDEN init fnc (main init is still called) UnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\"; //function to delete all carrier objects in EDEN editor }; Requirments: - An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init. Parameter(s): _this select 0: mode (Scalar) 0: carrier Base/object and 1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []]; Returns: nothing Result: Aircraft Carrier's possition is updated in EDEN editor. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_changeSupportRadioChannel": {"version": "1.00", "tags": "", "description": "/* Description: Changes the radio channel for Support module-related protocol. Parameter(s): _this select 0: SIDE - Affected side _this select 1: ANY - Channel setting Returns: nothing */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_cinemaBorder": {"version": "1.00", "tags": "", "description": "Creates cinematic borders. Player cannot move during cutscene.", "example": "[1, 2, true, true ] call BIS_fnc_cinemaBorder;", "docSyntax": "[mode, duration, sound, view] call BIS_fnc_cinemaBorder", "syntax": "[mode,duration,sound,view] call BIS_fnc_cinemaBorder"}, "BIS_fnc_clamp": {"version": "1.00", "tags": "", "description": "Clamps provided value within min..max range.", "example": "[5, 0, 10] call BIS_fnc_clamp; //\u00a0returns 5 [0, 0, 10] call BIS_fnc_clamp; //\u00a0returns 0 [10, 0, 10] call BIS_fnc_clamp; //\u00a0returns 10 [-5, 0, 10] call BIS_fnc_clamp; //\u00a0returns 0 [15, 0, 10] call BIS_fnc_clamp; //\u00a0returns 10 [5, 10, 3] call BIS_fnc_clamp; //\u00a0returns 10", "docSyntax": "[value, min, max] call BIS_fnc_clamp", "syntax": "[<scalar>,min,max] call BIS_fnc_clamp"}, "BIS_fnc_clampVector": {"version": "1.00", "tags": "", "description": "Clamps vector values between provided min/max boundaries.", "example": "private _newVelocity = [velocity vehicle player, -100, 100] call BIS_fnc_clampVector; vehicle player setVelocity _newVelocity;", "docSyntax": "[vector, min, max] call BIS_fnc_clampVector", "syntax": "[vector,min,max] call BIS_fnc_clampVector"}, "BIS_fnc_colorConfigToRGBA": {"version": "1.00", "tags": "", "description": "Converts config color format to RGBA array of numbers.", "example": "[\"0.5 + 0.25\",0,0,1] call BIS_fnc_colorConfigToRGBA; // returns [0.75,0,0,1]", "docSyntax": "configColor call BIS_fnc_colorConfigToRGBA", "syntax": "configColor call BIS_fnc_colorConfigToRGBA"}, "BIS_fnc_colorRGBAtoHTML": {"version": "1.00", "tags": "", "description": "Converts RGBA color format to #AARRGGBB HTML color format.", "example": "[0,0,0,1] call BIS_fnc_colorRGBAtoHTML; // will return #FF000000", "docSyntax": "colorArray call BIS_fnc_colorRGBAtoHTML", "syntax": "colorArray call BIS_fnc_colorRGBAtoHTML"}, "BIS_fnc_colorRGBAtoTexture": {"version": "1.00", "tags": "", "description": "Converts RGB color format to procedural texture, e.g [0,0,0,1] becomes \"#(argb,8,8,3)color(0,0,0,1)\".", "example": "_texture = [0,0,0,1] call BIS_fnc_colorRGBAtoTexture;", "docSyntax": "color call BIS_fnc_colorRGBAtoTexture", "syntax": "<scalar> call BIS_fnc_colorRGBAtoTexture"}, "BIS_fnc_configPath": {"version": "1.00", "tags": "", "description": "Returns config path to given entry in given format.", "example": "[\"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"] call BIS_fnc_configPath; //\u00a0[\"configFile\",\"CfgVehicles\",\"Car\"]", "docSyntax": "[config, format, strict] call BIS_fnc_configPath", "syntax": "[config,format,strict] call BIS_fnc_configPath"}, "BIS_fnc_controlConfigs": {"version": "1.00", "tags": "", "description": "Return config paths to all display controls.", "example": "[ findDisplay 313, configFile >> \"Display3DEN\" ] call BIS_fnc_controlConfigs;", "docSyntax": "[display,path] call BIS_fnc_controlConfigs", "syntax": "[<uiDisplay>,path] call BIS_fnc_controlConfigs"}, "BIS_fnc_createLogRecord": {"version": "1.00", "tags": "", "description": "Create a dated, timed diary record in the owner's \"Log\" subject.", "example": "[player, \"Title\", \"This is a log entry. Have fun!\"] call BIS_fnc_createLogRecord;", "docSyntax": "[owner, title, text] call BIS_fnc_createLogRecord", "syntax": "[owner,title,<string>] call BIS_fnc_createLogRecord"}, "BIS_fnc_createObjectOO": {"version": "1.00", "tags": "", "description": "Instantiates an object of a certain class.", "example": "[\"someOOClass\", [1,2,3]] call BIS_fnc_createObjectOO;", "docSyntax": "[class,params] call BIS_fnc_createObjectOO", "syntax": "[class,<any>] call BIS_fnc_createObjectOO"}, "BIS_fnc_credits_movie": {"version": "1.00", "tags": "", "description": "Movie credits function.", "example": "[] spawn BIS_fnc_credits_movie;", "docSyntax": "[display, mode] call BIS_fnc_credits_movie", "syntax": "[<uiDisplay>,mode] call BIS_fnc_credits_movie"}, "BIS_fnc_credits_movieConfig": {"version": "1.00", "tags": "", "description": "/* File: fn_credits_movieConfig.sqf Description: Movie credits config preprocessor. Parameter(s): _this select 0: Number - Index of item in config (CfgCredits >> CreditsMovie >> item) Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text. _array select 2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_credits_movieSupport": {"version": "1.00", "tags": "", "description": "/* File: fn_credits_movieSupport.sqf Description: Movie credits supporters preprocessor. Parameter(s): None. Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text - 1st paragraph. _array select 2: String - Names (and tags) as structured text - 2nd paragraph. _array select 3: String - Names (and tags) as structured text - 3rd paragraph. _array select 4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef) */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_ctrlFitToTextHeight": {"version": "1.00", "tags": "", "description": "Resize structured text control to fit its text height.", "example": "_height = [_ctrl, 1.5, 3] call BIS_fnc_ctrlFitToTextHeight;", "docSyntax": "[control,offset,time] call BIS_fnc_ctrlFitToTextHeight", "syntax": "[<uiControl>,offset,<scalar>] call BIS_fnc_ctrlFitToTextHeight"}, "BIS_fnc_ctrlSetScale": {"version": "1.00", "tags": "", "description": "Scale a control while maintaining its centering.", "example": "_finalPos = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlSetScale;", "docSyntax": "[control,scale,time] spawn BIS_fnc_ctrlSetScale", "syntax": "[<uiControl>,<scalar>,<scalar>] spawn BIS_fnc_ctrlSetScale"}, "BIS_fnc_ctrlTextHeight": {"version": "1.00", "tags": "", "description": "Resize control according to it is text.", "example": "[_ctrl] call BIS_fnc_ctrlTextHeight;", "docSyntax": "[control] call BIS_fnc_ctrlTextHeight", "syntax": "[<uiControl>] call BIS_fnc_ctrlTextHeight"}, "BIS_fnc_damageChanged": {"version": "1.00", "tags": "", "description": "Handle effects caused by changing of damage.", "example": "call BIS_fnc_damageChanged;", "docSyntax": "call BIS_fnc_damageChanged", "syntax": "call BIS_fnc_damageChanged"}, "BIS_fnc_damagePulsing": {"version": "1.00", "tags": "", "description": "Game pulsing damage effect.", "example": "call BIS_fnc_damagePulsing;", "docSyntax": "call BIS_fnc_damagePulsing", "syntax": "call BIS_fnc_damagePulsing"}, "BIS_fnc_debugConsoleExec": {"version": "1.00", "tags": "", "description": "Executes Debug Console code.", "example": "[1,{hint \"Hello Players!\"}] call BIS_fnc_debugConsoleExec;", "docSyntax": "[target, code] call BIS_fnc_debugConsoleExec", "syntax": "[<object>,<code>] call BIS_fnc_debugConsoleExec"}, "BIS_fnc_debugProfile": {"version": "1.00", "tags": "", "description": "Purges user profile from unwanted BIS_fnc_diagAAR data. If more than 7500 entries are found, the user is asked to delete profileNamespace variable BIS_fnc_diagAAR_data.", "example": "call BIS_fnc_debugProfile;", "docSyntax": "call BIS_fnc_debugProfile", "syntax": "call BIS_fnc_debugProfile"}, "BIS_fnc_decodeFlags": {"version": "1.00", "tags": "", "description": "Decodes a single scalar into array of unique binary flags with indexes between 0-15.", "example": "_decodedFlags = 13 call BIS_fnc_decodeFlags;//Returns [0,2,3]", "docSyntax": "scalar call BIS_fnc_decodeFlags", "syntax": "scalar call BIS_fnc_decodeFlags"}, "BIS_fnc_decodeFlags2": {"version": "1.00", "tags": "", "description": "Decodes a single scalar into array of unique binary flags (zeroes or ones).", "example": "private _result = 13 call BIS_fnc_decodeFlags2; //\u00a0returns [1,0,1,1]", "docSyntax": "[value, size] call BIS_fnc_decodeFlags2", "syntax": "[<scalar>,size] call BIS_fnc_decodeFlags2"}, "BIS_fnc_decodeFlags4": {"version": "1.00", "tags": "", "description": "/* Decodes a single scalar into array of unique 4-state flags (values 0,1,2,3). Max. number that can be decoded is 16777215 (= 4^12 - 1). An optional parameter can by supplied to resize the output. Syntax: ------- _flags:array = _encodedFlags:scalar call BIS_fnc_decodeFlags4; _flags:array = [_encodedFlags:scalar,_size:scalar] call BIS_fnc_decodeFlags4; Example: -------- [1,0,2,3] = 225 call BIS_fnc_decodeFlags4; [1,0,2,3,0,0,0,0] = [225,8] call BIS_fnc_decodeFlags4; Explanation: ------------ 225 -> 11 10 00 01 -> [1,0,2,3] */", "docSyntax": "[] call BIS_fnc_decodeFlags4", "syntax": "[] call BIS_fnc_decodeFlags4"}, "BIS_fnc_decodeFlags8": {"version": "1.00", "tags": "", "description": "/* Decodes a single scalar into array of unique 8-state flags (values 0,1,2,3,4,5,6,7). Max. number that can be decoded is 16777215 (= 8^8 - 1). An optional parameter can by supplied to resize the output. Syntax: ------- _flags:array = _encodedFlags:scalar call BIS_fnc_decodeFlags8; _flags:array = [_encodedFlags:scalar,_size:scalar] call BIS_fnc_decodeFlags8; Example: -------- [7,2,3,0,1] = 4311 call BIS_fnc_decodeFlags8; [7,2,3,0,1,0,0,0] = [4311,8] call BIS_fnc_decodeFlags8; Explanation: ------------ 4311 -> 0001 0000 1101 0111 -> 001 000 011 010 111 -> [7,2,3,0,1] */", "docSyntax": "[] call BIS_fnc_decodeFlags8", "syntax": "[] call BIS_fnc_decodeFlags8"}, "BIS_fnc_deleteCounter": {"version": "1.00", "tags": "", "description": "/* Author: Killzone_Kid Description: Delete given counter Parameter(s): 0: STRING - variable name of counter ARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace Returns: NOTHING */ #define VAR_SPACES [currentNamespace, objNull, displayNull, controlNull, grpNull, locationNull, taskNull, teamMemberNull]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_deleteInventory": {"version": "1.00", "tags": "", "description": "Delete loadout saved using BIS_fnc_saveInventory.", "example": "[ player, [missionNamespace, \"BIS_inv\"] ] call BIS_fnc_deleteInventory;", "docSyntax": "[unit,input] call BIS_fnc_deleteInventory", "syntax": "[<objUnit>,input] call BIS_fnc_deleteInventory"}, "BIS_fnc_deleteVehicleCrew": {"version": "1.00", "tags": "", "description": "Deletes specific crew member directly from the vehicle.", "example": "[BIS_tank, gunner BIS_tank] call BIS_fnc_deleteVehicleCrew;", "docSyntax": "[vehicle, crewMember] call BIS_fnc_deleteVehicleCrew", "syntax": "[<objVehicle>,crewMember] call BIS_fnc_deleteVehicleCrew"}, "BIS_fnc_deltaTime": {"version": "1.00", "tags": "", "description": "Calculates and returns the time's delta between previous and current call to this function.", "example": "[\"TAG_duration\"] call BIS_fnc_deltaTime; //\u00a0Defines the starting point //\u00a0... private _duration1 = [\"TAG_duration\"] call BIS_fnc_deltaTime; //\u00a0Gets time between starting point and now //\u00a0... private _duration2 = [\"TAG_duration\"] call BIS_fnc_deltaTime; //\u00a0Gets time between _duration1 and now [\"TAG_duration\", true] call BIS_fnc_deltaTime; //\u00a0deletes the global variable \"TAG_duration\"", "docSyntax": "[id, clear] call BIS_fnc_deltaTime", "syntax": "[<scalar>,clear] call BIS_fnc_deltaTime"}, "BIS_fnc_diagAAR": {"version": "1.00", "tags": "", "description": "Fill an AAR (After Action Review) display with data and Event Handlers.", "example": "[\"Init\", [_anAARDisplay]] call BIS_fnc_diagAAR;", "docSyntax": "[mode, arguments] call BIS_fnc_diagAAR", "syntax": "[mode,arguments] call BIS_fnc_diagAAR", "type": "diagnoseFunction"}, "BIS_fnc_diagAARrecord": {"version": "1.00", "tags": "", "description": "Starts recording units position and events for an AAR (After Action Review).", "example": "call BIS_fnc_diagAARrecord;", "docSyntax": "call BIS_fnc_diagAARrecord", "syntax": "call BIS_fnc_diagAARrecord", "type": "diagnoseFunction"}, "BIS_fnc_diagBulletCam": {"version": "1.00", "tags": "", "description": "Add a \"bullet camera\" to shots fired by the specified unit.", "example": "player call BIS_fnc_diagBulletCam;", "docSyntax": "unit call BIS_fnc_diagBulletCam", "syntax": "<objUnit> call BIS_fnc_diagBulletCam", "type": "diagnoseFunction"}, "BIS_fnc_diagConfig": {"version": "1.00", "tags": "", "description": "/* Description: Prints config entries. Parameter(s): 0: CONFIG - config class which will be searched (default: configFile) 1: STRING or ARRAY - entry name(s) whose values will be printed 2: STRING - scan mode, can be one of following: \"controls\" - recursively scans controls in root, class controls, class controlsBackground and in RscControlsGroup controls (type = 15). \"turrets\" - recursively scans vehicles's turrets. \"weapons\" - scans weapon muzzles and modes. (default) - scans just class roots. Returns: STRING Results are printed to debug log and wiki compatible table is copied to clipboard. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagFindMissingAuthors": {"version": "1.00", "tags": "", "description": "Copies a list of objects to the clipboard which miss the author attribute.", "example": "call BIS_fnc_diagFindMissingAuthors;", "docSyntax": "call BIS_fnc_diagFindMissingAuthors", "syntax": "call BIS_fnc_diagFindMissingAuthors", "type": "diagnoseFunction"}, "BIS_fnc_diagHit": {"version": "1.00", "tags": "", "description": "Tracks received wounds. (getNumber (missionConfigFile >> \"diagHit\") > 0) has to be true.", "example": "call BIS_fnc_diagHit;", "docSyntax": "call BIS_fnc_diagHit", "syntax": "call BIS_fnc_diagHit", "type": "diagnoseFunction"}, "BIS_fnc_diagJIRAlink": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_diagJIRAlink", "syntax": "[] call BIS_fnc_diagJIRAlink", "type": "diagnoseFunction"}, "BIS_fnc_diagKey": {"version": "1.00", "tags": "", "description": "Tracks pressed keys. (getNumber (missionConfigFile >> \"diagKey\") > 0) has to be true.", "example": "call BIS_fnc_diagKey;", "docSyntax": "call BIS_fnc_diagKey", "syntax": "call BIS_fnc_diagKey", "type": "diagnoseFunction"}, "BIS_fnc_diagKeyLayout": {"version": "1.00", "tags": "", "description": "/* Description: Exports default key layout to wiki template. Parameter(s): _this select 0: STRING - category, can be one of following \"\" - all controls in game \"All\" \"BasicInfantryControls\" \"Car\" \"Air\" \"Helicopter\" \"Submarine\" \"Buldozer\" \"UserActions\" _this select 1: STRING - selection method, can be one of following \"\" - single tap \"double\" - double tap \"LCtrl\" - with left control pressed \"RCtrl\" - with right control pressed \"LShift\" - with left shift pressed \"RShift\" - with right shift pressed Returns: STRING - wiki export text (also copied to clipboard) */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagKeyTest": {"version": "1.00", "tags": "", "description": "Returns all user actions according to mode.", "example": "0 call BIS_fnc_diagKeyTest;", "docSyntax": "mode call BIS_fnc_diagKeyTest", "syntax": "mode call BIS_fnc_diagKeyTest", "type": "diagnoseFunction"}, "BIS_fnc_diagKnownAsTarget": {"version": "1.00", "tags": "", "description": "/* File: fn_diagKnownAsTarget.sqf Description: Visualize and profile which units know about one specific unit and how much they do. Calling function again stops diagnostics. Parameter(s): _this select 0: profile unit (Object) [default player] _this select 1: radius (Scalar - meters) [default 1000m] Returns: - */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagKnownTargets": {"version": "1.00", "tags": "", "description": "Visualize and profile which units one specific unit knows about and how much. Calling function again stops diagnostics.", "example": "call BIS_fnc_diagKnownTargets;", "docSyntax": "[target, radius] call BIS_fnc_diagKnownTargets", "syntax": "[<object>,radius] call BIS_fnc_diagKnownTargets", "type": "diagnoseFunction"}, "BIS_fnc_diagLoop": {"version": "1.00", "tags": "", "description": "Runs scripted loop. Repeated call terminates previous loops.", "example": "[{systemChat \"Loop!\"}, 0.5] spawn BIS_fnc_diagLoop;", "docSyntax": "[code,delay] spawn BIS_fnc_diagLoop", "syntax": "[<code>,<scalar>] spawn BIS_fnc_diagLoop", "type": "diagnoseFunction"}, "BIS_fnc_diagMacros": {"version": "1.00", "tags": "", "description": "/* Description: Exports config macros. Parameter(s): 0: CONFIG or ARRAY - config container to be searched (e.g. configFile >> \"CfgVehicles\") or list of classes or classnames 1: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"]) 2 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\") Returns: STRING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosAuthor": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosEditorPreview": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_diagMacrosEditorPreview", "syntax": "[] call BIS_fnc_diagMacrosEditorPreview", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosMapSize": {"version": "1.00", "tags": "", "description": "/* Description: Prints mapSize values based on real object size and copies it to clipboard. Mission has to be running on order to get the values. Parameter(s): 0: CONFIG or ARRAY - either config container, or list of classes or classnames 1: STRING - output mode, can be on of following: \"wiki\" - wiki table \"config\" - #define macros with model dimension values \"config_current\" - #define macros with current config values 2: ARRAY - list of classnames which will be excluded from the scan Returns: STRING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosNameSound": {"version": "1.00", "tags": "", "description": "Detects vehicle types and prints their radio protocol definitions to clipboard.", "example": "call BIS_fnc_diagMacrosNameSound;", "docSyntax": "call BIS_fnc_diagMacrosNameSound", "syntax": "call BIS_fnc_diagMacrosNameSound", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosSimpleObject": {"version": "1.00", "tags": "", "description": "/* Generates simple object config data. Parameters: 0: OBJECT or ARRAY - ground position where ground objects will be created (default: position calculated 15 meters away from player) 1: SCALAR or BOOL - autolog mode (default: false) 0 or false - no autolog, results will be only stored in clipboard 1 or true - autolog on, results will be stored in \\A3\\macros_CfgVehicles_simpleObject_auto_A3.hpp file. 2 - autlog on + world name, random number and custom suffix are appended to name of generated file to prevent overwriting and provide extra info 2: ARRAY - classes you want to scan, use [] to scan all (default: []). 3: OBJECT or ARRAY - sea position where ground objects will be created (default: position calculated 15 meters away from player) 4: STRING - custom suffix added to filename if autolog is used (default: \"\"). Example: bis_scriptHandle = [] spawn BIS_fnc_diagMacrosSimpleObject; Expected output per class (animate and hide arrays can have varying amount of elements): #define CFGVEHICLES_SIMPLEOBJECT_class_F\\ class SimpleObject\\ {\\ animate[] =\\ {\\ {\"animationName1\", 1},\\ {\"animationName2\", 2}\\ };\\ hide[] =\\ {\\ \"animationSelection1\",\\ \"animationSelection2\"\\ };\\ verticalOffsetAsl = 0;\\ }; */", "docSyntax": "[] call BIS_fnc_diagMacrosSimpleObject", "syntax": "[] call BIS_fnc_diagMacrosSimpleObject", "type": "diagnoseFunction"}, "BIS_fnc_diagMacrosVerify": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIS_fnc_diagMissionPositions": {"version": "1.00", "tags": "", "description": "Displays positions of units from all missions", "example": "[configFile >> \"CfgMissions\", true, false] call BIS_fnc_diagMissionPositions;", "docSyntax": "[configPath, allUnits, isCampaign] call BIS_fnc_diagMissionPositions", "syntax": "[configPath,allUnits,isCampaign] call BIS_fnc_diagMissionPositions", "type": "diagnoseFunction"}, "BIS_fnc_diagMissionWeapons": {"version": "1.00", "tags": "", "description": "Lists all weapons and magazines available in a mission.", "example": "true call BIS_fnc_diagMissionWeapons;", "docSyntax": "[clipboard] call BIS_fnc_diagMissionWeapons", "syntax": "[clipboard] call BIS_fnc_diagMissionWeapons", "type": "diagnoseFunction"}, "BIS_fnc_diagPreview": {"version": "1.00", "tags": "", "description": "Previews selected classes from given container.", "example": "[ \"CfgVehicles\", \"Car\", 15, [0,0,0] ] call BIS_fnc_diagPreview;", "docSyntax": "[container, parentClass, distance, startPos] call BIS_fnc_diagPreview", "syntax": "[container,parentClass,<scalar>,startPos] call BIS_fnc_diagPreview", "type": "diagnoseFunction"}, "BIS_fnc_diagPreviewCycle": {"version": "1.00", "tags": "", "description": "Previews selected class from the list. When cheat1 is activated, classnames will be shown instead of display names.", "example": "[ \"CfgVehicles\"] call BIS_fnc_diagPreviewCycle;", "docSyntax": "[container, position, vector, display] call BIS_fnc_diagPreviewCycle", "syntax": "[container,position,vector,<uiDisplay>] call BIS_fnc_diagPreviewCycle", "type": "diagnoseFunction"}, "BIS_fnc_diagPreviewVehicleCrew": {"version": "1.00", "tags": "", "description": "Creates vehicles with their crew.", "example": "[\"B_MRAP_01_F\", [5,5], 10] call BIS_fnc_diagPreviewVehicleCrew;", "docSyntax": "[class, numVeh, distance] call BIS_fnc_diagPreviewVehicleCrew", "syntax": "[class,numVeh,<scalar>] call BIS_fnc_diagPreviewVehicleCrew", "type": "diagnoseFunction"}, "BIS_fnc_diagRadio": {"version": "1.00", "tags": "", "description": "Tracks played radio sentences.", "example": "call BIS_fnc_diagRadio;", "docSyntax": "call BIS_fnc_diagRadio;", "syntax": "call BIS_fnc_diagRadio;", "type": "diagnoseFunction"}, "BIS_fnc_diagVehicleIcons": {"version": "1.00", "tags": "", "description": "Previews all vehicle icons on map.", "example": "[\"all\", getPos player] call BIS_fnc_diagVehicleIcons;", "docSyntax": "[parentClass, position, map] call BIS_fnc_diagVehicleIcons", "syntax": "[parentClass,position,<objMap>] call BIS_fnc_diagVehicleIcons", "type": "diagnoseFunction"}, "BIS_fnc_diagWiki": {"version": "1.00", "tags": "", "description": "Scans specific config folder and outputs the values in wiki format.", "example": "[\"RadioProtocol_Sent\"] call BIS_fnc_diagWiki;", "docSyntax": "[mode] call BIS_fnc_diagWiki", "syntax": "[mode] call BIS_fnc_diagWiki", "type": "diagnoseFunction"}, "BIS_fnc_dirtEffect": {"version": "1.00", "tags": "", "description": "Screen dirt (texture) postprocess. Displays dust PP according to damage obtained from near explosion; takes array from \"Explosion\" event handler.", "example": "[nil, 0.5] call BIS_fnc_dirtEffect;", "docSyntax": "[unit, damage] call BIS_fnc_dirtEffect", "syntax": "[<objUnit>,<scalar>] call BIS_fnc_dirtEffect"}, "BIS_fnc_disableLoading": {"version": "1.00", "tags": "", "description": "Disables the load/restart button. Currently only for BIS_fnc_cinemaBorder used within the Prologue and Survive campaigns. Only works in single player.", "example": "call BIS_fnc_disableLoading;", "docSyntax": "call BIS_fnc_disableLoading", "syntax": "call BIS_fnc_disableLoading"}, "BIS_fnc_disableSaving": {"version": "1.00", "tags": "", "description": "Controls the disabling of saving, stacking each request to prevent saving being enabled too early.", "example": "\"savingID\" call BIS_fnc_disableSaving;", "docSyntax": "id call BIS_fnc_disableSaving", "syntax": "<scalar> call BIS_fnc_disableSaving"}, "BIS_fnc_Door": {"version": "1.00", "tags": "", "description": "Changes animation phase of given door.", "example": "[_building, 5, 1] call BIS_fnc_door;", "docSyntax": "[building, doorIndex, animationPhase] call BIS_fnc_door", "syntax": "[building,doorIndex,animationPhase] call BIS_fnc_door"}, "BIS_fnc_DoorClose": {"version": "1.00", "tags": "", "description": "Close a door with an animated doorhandle.", "example": "[building,\"doorAnimation\",\"animationUp\",\"animationDown\",1] call BIS_fnc_doorClose;", "docSyntax": "[building, doorAnimation, handleDownAnimation, doorHandleUpAnimation, animationPhase] call BIS_fnc_doorClose", "syntax": "[building,doorAnimation,handleDownAnimation,doorHandleUpAnimation,animationPhase] call BIS_fnc_doorClose"}, "BIS_fnc_DoorNoHandleClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_doorNoHandleClose", "syntax": "[] call BIS_fnc_doorNoHandleClose"}, "BIS_fnc_DoorNoHandleOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_doorNoHandleOpen", "syntax": "[] call BIS_fnc_doorNoHandleOpen"}, "BIS_fnc_DoorOpen": {"version": "1.00", "tags": "", "description": "Open a door with an animated doorhandle.", "example": "[_house, \"door_1_rot\", nil, nil, 0.25] call BIS_fnc_doorOpen;", "docSyntax": "[building, doorAnimation, upDownAnimation, downUpAnimation, animationPhase] call BIS_fnc_doorOpen", "syntax": "[building,doorAnimation,upDownAnimation,downUpAnimation,animationPhase] call BIS_fnc_doorOpen"}, "BIS_fnc_drawAO": {"version": "1.00", "tags": "", "description": "Draws a dashed line around the outer edges of a trigger.", "example": "[Trigger1] call BIS_fnc_drawAO; //\u00a0draws a dashed line around trigger1's outer edge, with 50m between each line", "docSyntax": "[triggers, distance] call BIS_fnc_drawAO", "syntax": "[triggers,<scalar>] call BIS_fnc_drawAO"}, "BIS_fnc_drawMinefields": {"version": "1.00", "tags": "", "description": "Draw minefields on the map. Dynamically calculated from all mines positions. Distinguishes AP and AT minefields.", "example": "call BIS_fnc_drawMinefields;", "docSyntax": "call BIS_fnc_drawMinefields", "syntax": "call BIS_fnc_drawMinefields"}, "BIS_fnc_drawRespawnPositions": {"version": "1.00", "tags": "", "description": "Draws respawn positions on the map which were added by BIS_fnc_addRespawnPosition.", "example": "[ true ] call BIS_fnc_drawRespawnPositions;", "docSyntax": "[state] call BIS_fnc_drawRespawnPositions", "syntax": "[state] call BIS_fnc_drawRespawnPositions"}, "BIS_fnc_earthquake": {"version": "1.00", "tags": "", "description": "Earthquake simulation - now just camera shake and sound. Stamina is impacted by the earthquake too. Earthquake will last between 13 and 20 seconds. While earthquake is in progress missionNamespace variable BIS_fnc_earthquake_inprogress will be true.", "example": "[4] spawn BIS_fnc_earthquake;", "docSyntax": "[intensity] spawn BIS_fnc_earthquake", "syntax": "[intensity] spawn BIS_fnc_earthquake"}, "BIS_fnc_effectFired": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredArtillery": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredCruiseMissile": {"version": "1.00", "tags": "", "description": "/* Cruise Missile Start VFX BIS_fnc_effectFiredCruiseMissile a: reyhard */", "docSyntax": "[] call BIS_fnc_effectFiredCruiseMissile", "syntax": "[] call BIS_fnc_effectFiredCruiseMissile"}, "BIS_fnc_effectFiredFlares": {"version": "1.00", "tags": "", "description": "/*Arma 2 flares, by Maddmatt */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredHeliRocket": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredLongSmoke": {"version": "1.00", "tags": "", "description": "This function does nothing.", "example": "-", "docSyntax": "[] call BIS_fnc_effectFiredLongSmoke", "syntax": "[] call BIS_fnc_effectFiredLongSmoke"}, "BIS_fnc_effectFiredRifle": {"version": "1.00", "tags": "", "description": "Used to add an effect to fired bullets. Should be executed from Fired Event Handler.", "example": "unit addEventHandler [\"Fired\", { _this call BIS_fnc_effectFiredRifle; }];", "docSyntax": "[unit, nil, nil, nil, ammoType] call BIS_fnc_effectFiredRifle", "syntax": "[<objUnit>,nil,nil,nil,ammoType] call BIS_fnc_effectFiredRifle"}, "BIS_fnc_effectFiredRocket": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredSmokeLauncher": {"version": "1.00", "tags": "", "description": "/*Arma 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectFiredSmokeLauncher_boat": {"version": "1.00", "tags": "", "description": "/*Arma 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectKilled": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectKilledAirDestruction": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectKilledAirDestructionStage2": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectKilledSecondaries": {"version": "1.00", "tags": "", "description": "//Small secondary fuel explosions //By Maddmatt for Arma 2", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_effectPlankton": {"version": "1.00", "tags": "", "description": "Create underwater plankton particle effect.", "example": "call BIS_fnc_effectPlankton;", "docSyntax": "call BIS_fnc_effectPlankton", "syntax": "call BIS_fnc_effectPlankton"}, "BIS_fnc_EGSpectatorCameraPrepareTarget": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorCameraResetTarget": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorCameraSetTarget": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorCameraTick": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorDraw2D": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorDraw3D": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EGSpectatorGetUnitsToDraw": {"version": "1.00", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EjectionSeatRelease": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - Additional option for player to separate from ejetor seat via user action. default ejection function will ato deploy parachute at 350 m altitude. This is a manual override. - Generic parachute used, currently only one model in game so no need to parametarize. Exucution: - Call the function via user action defined on the ejector seat vehicle. Example: class UserActions { class Ejection_Seat_Eject { priority = 0.05; shortcut = \"Eject\"; displayName = \"$STR_A3_action_deploy_parachute\"; condition = \"player in this\"; statement = \"[this] spawn BIS_fnc_ejectionSeatRelease\"; position = \"pilotcontrol\"; radius = 10; onlyforplayer = 1; showWindow = 0; hideOnUse = 1; }; }; Requirments: - Compatible ejector seat must have a user action set up to triger this fnc. Parameter(s): _this select 0: mode (Scalar) 0: ejector seat/object Returns: nothing Result: Pilot will be forced from ejection seat vehicle to parachute. Semi-authenthic behaviour. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_enableSaving": {"version": "1.00", "tags": "", "description": "Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.", "example": "\"savingID\" call BIS_fnc_enableSaving;", "docSyntax": "id call BIS_fnc_enableSaving", "syntax": "<scalar> call BIS_fnc_enableSaving"}, "BIS_fnc_encodeFlags": {"version": "1.00", "tags": "", "description": "Encodes array of unique binary flags with indexes between 0-15 into a single scalar.", "example": "_encodedFlags = [0,2,3] call BIS_fnc_encodeFlags;//Returns 13", "docSyntax": "flags call BIS_fnc_encodeFlags", "syntax": "flags call BIS_fnc_encodeFlags"}, "BIS_fnc_encodeFlags2": {"version": "1.00", "tags": "", "description": "Encodes array of unique binary flags (zeroes or ones) into a single scalar.", "example": "private _result = [1,0,1,1] call BIS_fnc_encodeFlags2; hint str _result; //\u00a0Displays 13", "docSyntax": "arrayOfNumbers call BIS_fnc_encodeFlags2", "syntax": "arrayOfNumbers call BIS_fnc_encodeFlags2"}, "BIS_fnc_encodeFlags4": {"version": "1.00", "tags": "", "description": "/* Encodes array of unique 4-state flags (0,1,2,3) into a single number. Syntax: ------- _encodedFlags:scalar = _flags:array call BIS_fnc_encodeFlags4; Example: -------- 225 = [1,0,2,3] call BIS_fnc_encodeFlags4; Explanation: ------------ [1,0,2,3] -> 11 10 00 01 -> 225 [0,0,0,0,0,0,0,1] -> 01 00 00 00 00 00 00 00 -> 0100 0000 0000 0000 -> 16384 */", "docSyntax": "[] call BIS_fnc_encodeFlags4", "syntax": "[] call BIS_fnc_encodeFlags4"}, "BIS_fnc_encodeFlags8": {"version": "1.00", "tags": "", "description": "/* Encodes array of unique 8-state flags (0,1,2,3,4,5,6,7) into a single number. Syntax: ------- _encodedFlags:scalar = _flags:array call BIS_fnc_encodeFlags8; Example: -------- 4311 = [7,2,3,0,1] call BIS_fnc_encodeFlags8; Explanation: ------------ [7,2,3,0,1] -> 001 000 011 010 111 -> 0001 0000 1101 0111 -> 4311 */", "docSyntax": "[] call BIS_fnc_encodeFlags8", "syntax": "[] call BIS_fnc_encodeFlags8"}, "BIS_fnc_endMissionServer": {"version": "1.00", "tags": "", "description": "Ends the mission properly for all players in a multiplayer environment.", "example": "\"SideScore\" call BIS_fnc_endMissionServer;", "docSyntax": "endType call BIS_fnc_endMissionServer", "syntax": "endType call BIS_fnc_endMissionServer"}, "BIS_fnc_enemyDetected": {"version": "1.00", "tags": "", "description": "Returns true if unit knows about nearby enemy unit or driven vehicle.", "example": "_enemyDetected = _unit call BIS_fnc_enemyDetected;", "docSyntax": "unit call BIS_fnc_enemyDetected", "syntax": "<objUnit> call BIS_fnc_enemyDetected"}, "BIS_fnc_enemySides": {"version": "1.00", "tags": "", "description": "Returns sides hostile to the given side / object.", "example": "player call BIS_fnc_enemySides;", "docSyntax": "input call BIS_fnc_enemySides", "syntax": "input call BIS_fnc_enemySides"}, "BIS_fnc_enemyTargets": {"version": "1.00", "tags": "", "description": "Return list of nearby enemy targets for given unit.", "example": "_targets = _unit call BIS_fnc_enemyTargets;", "docSyntax": "unit call BIS_fnc_enemyTargets", "syntax": "<objUnit> call BIS_fnc_enemyTargets"}, "BIS_fnc_errorParamsType": {"version": "1.00", "tags": "", "description": "Displays a parameter type error message (using BIS_fnc_error) explaining the problem.", "example": "//\u00a0Show error and abort if input is not of type ARRAY: if\u00a0!(_this isEqualType []) exitWith { [_this, \"isEqualType\", []] call BIS_fnc_errorParamsType; };", "docSyntax": "[value, method, expected] call BIS_fnc_errorParamsType", "syntax": "[<scalar>,method,expected] call BIS_fnc_errorParamsType"}, "BIS_fnc_establishingShot": {"version": "1.00", "tags": "", "description": "Plays a fake UAV observational sequence which serves as an establishing shot.", "example": "[player, \"I can see my house from here\", 500, 250, 75, 1, [], 0, true] spawn BIS_fnc_establishingShot;", "docSyntax": "[target, text, altitude, radius, angle, rotation, iconOptions, mode, fadeIn,waitTime] spawn BIS_fnc_establishingShot", "syntax": "[<object>,<string>,<scalar>,radius,angle,<array>,iconOptions,mode,fadeIn,waitTime] spawn BIS_fnc_establishingShot"}, "BIS_fnc_estimatedTimeLeft": {"version": "1.00", "tags": "", "description": "Set mission countdown.", "example": "[180] call BIS_fnc_estimatedTimeLeft;", "docSyntax": "[time] call BIS_fnc_estimatedTimeLeft", "syntax": "[<scalar>] call BIS_fnc_estimatedTimeLeft"}, "BIS_fnc_execFSM": {"version": "1.00", "tags": "", "description": "Execute the scripted FSM. Shell for execFSM command", "example": "_handle = [[_param1, _param2, etc..], \"test.fsm\"] call BIS_fnc_execFSM;", "docSyntax": "filename call BIS_fnc_execFSM", "syntax": "filename call BIS_fnc_execFSM"}, "BIS_fnc_execRemote": {"version": "1.00", "tags": "", "description": "This function is now an alias to BIS_fnc_MP.", "example": "See BIS_fnc_MP", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_executeStackedEventHandler": {"version": "1.00", "tags": "", "description": "This function executes the stacked items.", "example": "[\"onEachFrame\"] call BIS_fnc_executeStackedEventHandler;", "docSyntax": "[EHType] call BIS_fnc_executeStackedEventHandler", "syntax": "[EHType] call BIS_fnc_executeStackedEventHandler"}, "BIS_fnc_execVM": {"version": "1.00", "tags": "", "description": "execVM desired script with desired argument(s). This function is only really useful when combined with BIS_fnc_MP to execute a script remotely.", "example": "\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;", "docSyntax": "filename call BIS_fnc_execVM", "syntax": "filename call BIS_fnc_execVM"}, "BIS_fnc_exportCfgGroups": {"version": "1.00", "tags": "", "description": "/* Description: Export group or object composition for use in CfgGroups. The result will be copied to clipboard. Parameter(s): 0: position (for supported types see BIS_fnc_position). Screen center is used by default 1: objects to be saved. Currently selected objects in curator are used by default ARRAY of OBJECTs - specific objects to be saved array in format used by nearEntities, which automatically get nearby objects 0: STRING or ARRAY of STRINGS - object types 1: NUMBER - radius in metres Returns: STRING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_exportCfgHints": {"version": "1.00", "tags": "", "description": "Exports CfgHints to wiki format (see Category:Arma 3: Field Manual).", "example": "[] call BIS_fnc_exportCfgHints;", "docSyntax": "[category, class] call BIS_fnc_exportCfgHints", "syntax": "[category,class] call BIS_fnc_exportCfgHints"}, "BIS_fnc_exportCfgMagazines": {"version": "1.00", "tags": "", "description": "Export list of magazines for Arma 3: Assets.", "example": "[] spawn BIS_fnc_exportCfgMagazines; //\u00a0exports Arma 3 CfgMagazines", "docSyntax": "[classes] spawn BIS_fnc_exportCfgMagazines", "syntax": "[classes] spawn BIS_fnc_exportCfgMagazines"}, "BIS_fnc_exportCfgPatches": {"version": "1.00", "tags": "", "description": "Export list of addons for Community Wiki - Arma 3: Assets.", "example": "call BIS_fnc_exportCfgPatches;", "docSyntax": "[config,classes] call BIS_fnc_exportCfgPatches", "syntax": "[config,classes] call BIS_fnc_exportCfgPatches"}, "BIS_fnc_exportCfgVehiclesAssetDB": {"version": "1.00", "tags": "", "description": "Copies CfgVehicles information to clipboard in wiki format.", "example": "[0] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles EAST [1] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles WEST [2] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles GUER [3,0] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles CIV [3,1] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles Structures [3,2] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles Ruins & Wrecks [3,3] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles Equipment [3,4] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles EMPTY [3,5] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles VR Objects [3,6] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles Animals [] spawn BIS_fnc_exportCfgVehiclesAssetDB; //\u00a0exports Arma 3 CfgVehicles Other: //\u00a0Unknown, Enemy, Friendly, Modules, Empty, Ambient Life", "docSyntax": "[side, category] call BIS_fnc_exportCfgVehiclesAssetDB", "syntax": "[<objSide>,category] call BIS_fnc_exportCfgVehiclesAssetDB"}, "BIS_fnc_exportCfgWeapons": {"version": "1.00", "tags": "", "description": "Export list of weapons for Community Wiki Arma 3 Assets Category.", "example": "[\"Weapon\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0exports Arma 3 CfgWeapons Weapons [\"VehicleWeapon\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0exports Arma 3 CfgWeapons Vehicle Weapons [\"Item\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0exports Arma 3 CfgWeapons Items [\"Equipment\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0exports Arma 3 CfgWeapons Equipment [\"screenshots\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0exports screenshots [\"screenshotsTest\"] spawn BIS_fnc_exportCfgWeapons; //\u00a0screenshots test mode, does nothing", "docSyntax": "[mode, patches, types] spawn BIS_fnc_exportCfgWeapons", "syntax": "[mode,patches,types] spawn BIS_fnc_exportCfgWeapons"}, "BIS_fnc_exportConfigHierarchy": {"version": "1.00", "tags": "", "description": "Export config hierarchy of given config.", "example": "[ configFile >> \"CfgWeapons\" ] call BIS_fnc_exportConfigHierarchy;", "docSyntax": "[config,class] call BIS_fnc_exportConfigHierarchy", "syntax": "[config,class] call BIS_fnc_exportConfigHierarchy"}, "BIS_fnc_exportFunctionsToWiki": {"version": "1.00", "tags": "", "description": "Export function descriptions to Community Wiki. Exported text will be copied to clipboard in XML format.", "example": "[] spawn BIS_fnc_exportFunctionsToWiki; //\u00a0export all functions", "docSyntax": "[filter, timestamp] spawn BIS_fnc_exportFunctionsToWiki", "syntax": "[filter,timestamp] spawn BIS_fnc_exportFunctionsToWiki"}, "BIS_fnc_exportGroupFormations": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_exportGUIBaseClasses": {"version": "1.00", "tags": "", "description": "Export GUI macros and base classes to the clipboard.", "example": "\"all\" call BIS_fnc_exportGUIBaseClasses;", "docSyntax": "mode call BIS_fnc_exportGUIBaseClasses", "syntax": "mode call BIS_fnc_exportGUIBaseClasses"}, "BIS_fnc_exportInventory": {"version": "1.00", "tags": "", "description": "Exports unit's loadout as a String, also copies it to clipboard.", "example": "[player, \"init\", true] call BIS_fnc_exportInventory;", "docSyntax": "[unit, type, includeIdentity] call BIS_fnc_exportInventory", "syntax": "[<objUnit>,type,includeIdentity] call BIS_fnc_exportInventory"}, "BIS_fnc_exportMapToBiTXT": {"version": "1.00", "tags": "", "description": "Returns terrain height map to BiTXT (Universal Bistudio TXT) format, which can be imported to Object Builder. Output is also copied to clipboard.", "example": "[10, 10, 1] call BIS_fnc_exportMapToBiTXT;", "docSyntax": "[resolution, size, zCoeff] call BIS_fnc_exportMapToBiTXT", "syntax": "[resolution,size,zCoeff] call BIS_fnc_exportMapToBiTXT"}, "BIS_fnc_exportVehicle": {"version": "1.00", "tags": "", "description": "Export vehicle settings", "example": "[BIS_tank,\"\"] call BIS_fnc_exportVehicle; //Returns \"[ _this, [\"\"Hex\"\",1], [\"\"showCamonetHull\"\",1,\"\"showCamonetTurret\"\",1] ] call BIS_fnc_initVehicle;\"", "docSyntax": "[vehicle,vehicleClass] call BIS_fnc_exportVehicle", "syntax": "[<objVehicle>,vehicleClass] call BIS_fnc_exportVehicle"}, "BIS_fnc_fadeEffect": {"version": "1.00", "tags": "", "description": "Easily carry out complex fading. Default values will be used if parameters are not defined or set to nil.", "example": "[1, \"WHITE\", 5, 1] spawn BIS_fnc_fadeEffect;", "docSyntax": "[fadeInOrOut, blackOrWhite, duration, blur, music, ending, success] spawn BIS_fnc_fadeEffect", "syntax": "[fadeInOrOut,blackOrWhite,duration,blur,music,ending,success] spawn BIS_fnc_fadeEffect"}, "BIS_fnc_fatigueEffect": {"version": "1.00", "tags": "", "description": "Effects for high fatigue values. Internal engine use only, as it relies on internal BIS_* variables.", "example": "call BIS_fnc_fatigueEffect;", "docSyntax": "call BIS_fnc_fatigueEffect", "syntax": "call BIS_fnc_fatigueEffect"}, "BIS_fnc_feedbackInit": {"version": "1.00", "tags": "", "description": "Init function for feedback system. Declaration of variables, eventhandlers, etc. for in-game effects. Engine use only.", "example": "call BIS_fnc_feedbackInit;", "docSyntax": "call BIS_fnc_feedbackInit", "syntax": "call BIS_fnc_feedbackInit"}, "BIS_fnc_feedbackMain": {"version": "1.00", "tags": "", "description": "Main feedback FSM, used for feedback effects (fatigue, drowning, injury etc.). Internal use only.", "example": "[] call BIS_fnc_feedbackMain;", "docSyntax": "[] call BIS_fnc_feedbackMain", "syntax": "[] call BIS_fnc_feedbackMain"}, "BIS_fnc_filterString": {"version": "1.00", "tags": "", "description": "Removes characters from a string based on the list of allowed characters.", "example": "[\"Player 1 @%!@$\"] call BIS_fnc_filterString; //\u00a0returns \"Player1\"", "docSyntax": "[ text, filter ] call BIS_fnc_filterString", "syntax": "[ <string>,filter ] call BIS_fnc_filterString"}, "BIS_fnc_findAllNestedElements": {"version": "1.00", "tags": "", "description": "Returns array of paths to all matching elements in deeply nested array, similar to BIS_fnc_findNestedElement but with all occurences.", "example": "_array = [[1, 2, 3], [[1, 2, 3], 1, 2, 3]]; _result = [_array, 2] call BIS_fnc_findAllNestedElements; // returns [[0, 1], [1, 0, 1], [1, 2]]", "docSyntax": "[array, query] call BIS_fnc_findAllNestedElements", "syntax": "[<array>,query] call BIS_fnc_findAllNestedElements"}, "BIS_fnc_findLookAt": {"version": "1.00", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Given target location, calculates orientation vectors facing direction Parameter(s): _this select 0: Object - The curve Returns: Array - In format [Dir Vector, Up Vector] */", "docSyntax": "[] call BIS_fnc_findLookAt", "syntax": "[] call BIS_fnc_findLookAt"}, "BIS_fnc_findOverwatch": {"version": "1.00", "tags": "", "description": "Selects a position that provides overwatch onto another position.", "example": "[getPosATL enemyTank, 300, 75, 20, getPosATL player] call BIS_fnc_findOverwatch;", "docSyntax": "[target, maxDistance, minDistance, minHeightAbove, searchCentre] call BIS_fnc_findOverwatch", "syntax": "[<object>,maxDistance,minDistance,minHeightAbove,searchCentre] call BIS_fnc_findOverwatch"}, "BIS_fnc_fireSupport": {"version": "1.00", "tags": "", "description": "Mortar/artillery fire support.", "example": "[BIS_Mortar,[3600,3600,0],\"\",100,24,10] spawn BIS_fnc_fireSupport;", "docSyntax": "[arty,target,mag,radius,rounds,delay,conditionEnd,safezone] spawn BIS_fnc_fireSupport", "syntax": "[arty,<object>,mag,radius,rounds,<scalar>,conditionEnd,safezone] spawn BIS_fnc_fireSupport"}, "BIS_fnc_fireSupportCluster": {"version": "1.00", "tags": "", "description": "Virtual fire support - cluster shell.", "example": "[BIS_Player,\"G_40mm_HEDP\",100,[4,10],10] spawn BIS_fnc_fireSupportCluster;", "docSyntax": "[position,ammo,radius,rounds,delay,conditionEnd,safezone,altitude,velocity,sounds] spawn BIS_fnc_fireSupportCluster", "syntax": "[position,ammo,radius,rounds,<scalar>,conditionEnd,safezone,<scalar>,velocity,sounds] spawn BIS_fnc_fireSupportCluster"}, "BIS_fnc_fireSupportVirtual": {"version": "1.00", "tags": "", "description": "Fires virtual mortar/artillery fire support.", "example": "[BIS_Player, \"Sh_82mm_AMOS\", 100, 24, 10] spawn BIS_fnc_fireSupportVirtual;", "docSyntax": "[target, mag, radius, rounds, delay, conditionEnd, safezone, alt, speed, sounds] spawn BIS_fnc_fireSupportVirtual", "syntax": "[<object>,mag,radius,rounds,<scalar>,conditionEnd,safezone,alt,<scalar>,sounds] spawn BIS_fnc_fireSupportVirtual"}, "BIS_fnc_flamesEffect": {"version": "1.00", "tags": "", "description": "Flames (texture) postprocess.", "example": "call BIS_fnc_flamesEffect;", "docSyntax": "call BIS_fnc_flamesEffect", "syntax": "call BIS_fnc_flamesEffect"}, "BIS_fnc_forceEnd": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_friendlySides": {"version": "1.00", "tags": "", "description": "Returns sides allied to the given side / object.", "example": "player call BIS_fnc_friendlySides; // can return [FRIENDLY,WEST,GUER,CIV]", "docSyntax": "toCheck call BIS_fnc_friendlySides", "syntax": "toCheck call BIS_fnc_friendlySides"}, "BIS_fnc_functionMeta": {"version": "1.00", "tags": "", "description": "Returns function's meta data.", "example": "//\u00a0returns [\"A3\\functions_f\\Debug\\fn_functionMeta.sqf\", \".sqf\", 0, false, false, false, \"A3\", \"Debug\", \"functionMeta\"] \"BIS_fnc_functionMeta\" call BIS_fnc_functionMeta;", "docSyntax": "functionName call BIS_fnc_functionMeta", "syntax": "functionName call BIS_fnc_functionMeta"}, "BIS_fnc_getAngleDelta": {"version": "1.00", "tags": "", "description": "Returns the smallest difference between two angles in degrees.", "example": "_delta = [90,193] call BIS_fnc_getAngleDelta;//-103", "docSyntax": "[angleA, angleB] call BIS_fnc_getAngleDelta", "syntax": "[angleA,angleB] call BIS_fnc_getAngleDelta"}, "BIS_fnc_getCfg": {"version": "1.00", "tags": "", "description": "Smart-return config (extension for BIS_fnc_getCfgXXXX functions). Can by called 2 ways:", "example": "( configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" ) call BIS_fnc_getCfg;", "docSyntax": "input call BIS_fnc_getCfg", "syntax": "input call BIS_fnc_getCfg"}, "BIS_fnc_getCfgData": {"version": "1.00", "tags": "", "description": "Smart-return number, text or array value from config.", "example": "_value = (configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" >> \"type\") call BIS_fnc_getCfgData;", "docSyntax": "config call BIS_fnc_getCfgData", "syntax": "config call BIS_fnc_getCfgData"}, "BIS_fnc_getCfgDataArray": {"version": "1.00", "tags": "", "description": "Gets an array defined in Config. If the value is not an array, it is retyped into one.", "example": "_array = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataArray;", "docSyntax": "config call BIS_fnc_getCfgDataArray", "syntax": "config call BIS_fnc_getCfgDataArray"}, "BIS_fnc_getCfgDataBool": {"version": "1.00", "tags": "", "description": "Gets a number defined in config and retype it into a boolean. Everything greater than 0 is true, otherwise it is false.", "example": "_value = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataBool;", "docSyntax": "config call BIS_fnc_getCfgDataBool", "syntax": "config call BIS_fnc_getCfgDataBool"}, "BIS_fnc_getCfgDataObject": {"version": "1.00", "tags": "", "description": "/* Description: Get the object defined in cfg by its name (global variable). Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _value = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgDataObject; * 2nd way of calling: _value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject; Returns: OBJECT or OBJNULL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_getCfgDataPool": {"version": "1.00", "tags": "", "description": "/* Description: * Get array of attribute values out of the parent config class. * Attributes need to be in this format: \"_n\", where n is an index number (starting from 0). * If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned. * Max. index supported is 99. * If more then 9 attributes used, 0-9 need to use leading zeroes. CFG example: class Timeline { class StageA { _0[] = {2035,7,7,04,30}; _1[] = {2035,7,7,06,15}; _2[] = {2035,7,7,18,35}; _3[] = {2035,7,8,09,05}; _4[] = {2035,7,8,13,25}; _5[] = {2035,7,8,17,10}; _6[] = {2035,7,8,21,40}; _7[] = {2035,7,9,19,55}; }; }; Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes. Example: * 1st way of calling: _array = (configfile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData; _array = (missionconfigfile >> \"Timeline\" >> \"StageA\") call BIS_fnc_getCfgData; * 2nd way of calling: _array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData; Returns: ARRAY or nil, if parent class is not found */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_getCfgIsClass": {"version": "1.00", "tags": "", "description": "Return true if it is a class. Can by called in two ways:", "example": "_isClass = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call BIS_fnc_getCfgIsClass;", "docSyntax": "configEntry call BIS_fnc_getCfgIsClass", "syntax": "configEntry call BIS_fnc_getCfgIsClass"}, "BIS_fnc_getCfgSubClasses": {"version": "1.00", "tags": "", "description": "/* Description: Return all child classes of given class. Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _subclasses = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call Bis_fnc_getCfgSubClasses; * 2nd way of calling: _subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses; Returns: ARRAY (of STRINGS with sub-classes names) */", "example": "private _allVehHitPoints = (configfile >> \"CfgVehicles\" >> \"C_Hatchback_01_sport_F\" >> \"HitPoints\") call BIS_fnc_getCfgSubClasses;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_getIntersectionsUnderCursor": {"version": "1.00", "tags": "", "description": "Returns intersections under cursor. For more information see lineIntersectsSurfaces.", "example": "[ eyePos player, aimPos chopper, player, chopper, true ] call BIS_fnc_getIntersectionsUnderCursor;", "docSyntax": "[begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults] call BIS_fnc_getIntersectionsUnderCursor", "syntax": "[begPosASL,endPosASL,ignoreObj1,ignoreObj2,sortMode,maxResults] call BIS_fnc_getIntersectionsUnderCursor"}, "BIS_fnc_getName": {"version": "1.00", "tags": "", "description": "Returns name of a unit. Name of unit is stored in it is namespace so it can be retrieved later, mainly for when unit dies. Name is stored in the variable BIS_fnc_getName_name.", "example": "[player] call BIS_fnc_getName;", "docSyntax": "[object] call BIS_fnc_getName", "syntax": "[<object>] call BIS_fnc_getName"}, "BIS_fnc_getNetMode": {"version": "1.00", "tags": "", "description": "Returns the current net mode as a string.", "example": "_netMode = call BIS_fnc_getNetMode;", "docSyntax": "call BIS_fnc_getNetMode", "syntax": "call BIS_fnc_getNetMode"}, "BIS_fnc_getObjectBBD": {"version": "1.00", "tags": "", "description": "Get object boundingBoxReal max values and store them with setVariable [\"BIS_EGSpectator_objectBBD\", [maxWidth, maxLength, maxHeight]] for later calls.", "example": "[player] call BIS_fnc_getObjectBBD;", "docSyntax": "[object] call BIS_fnc_getObjectBBD", "syntax": "[<object>] call BIS_fnc_getObjectBBD"}, "BIS_fnc_getParamValue": {"version": "1.00", "tags": "", "description": "Returns the value of mission param given by the class name. This function is global and will return selected param value on any PC including JIP. For backward compatibility it also supports \"param1\" and \"param2\".", "example": "_viewDistance = \"ViewDistance\" call BIS_fnc_getParamValue;", "docSyntax": "paramClass call BIS_fnc_getParamValue", "syntax": "paramClass call BIS_fnc_getParamValue"}, "BIS_fnc_getRespawnMarkers": {"version": "1.00", "tags": "", "description": "Returns all respawn markers for given side.", "example": "[west, false] call BIS_fnc_getRespawnMarkers;", "docSyntax": "[side,vehicleMarkers] call BIS_fnc_getRespawnMarkers", "syntax": "[<objSide>,vehicleMarkers] call BIS_fnc_getRespawnMarkers"}, "BIS_fnc_getRespawnPositions": {"version": "1.00", "tags": "", "description": "Return scripted respawn positions available for the given unit.", "example": "private _respawnPositions = missionNamespace call BIS_fnc_getRespawnPositions; //\u00a0can be e.g [bis_o1, [1337, 4200, 0.01], \"myMarker\", myVehicle]", "docSyntax": "input call BIS_fnc_getRespawnPositions", "syntax": "input call BIS_fnc_getRespawnPositions"}, "BIS_fnc_getServerVariable": {"version": "1.00", "tags": "", "description": "Fetch a variable saved on server. Used when you want to share variables only to specific clients to prevent large traffic. Must be run in scheduled environment because communication with server takes some time.", "example": "[missionNamespace, \"BIS_someVar\", \"defaultValue\"] call BIS_fnc_getServerVariable;", "docSyntax": "[target, varName, default] call BIS_fnc_getServerVariable", "syntax": "[<object>,varName,default] call BIS_fnc_getServerVariable"}, "BIS_fnc_getTurrets": {"version": "1.00", "tags": "", "description": "Returns vehicle turrets.", "example": "[vehicle player] call BIS_fnc_getTurrets;", "docSyntax": "[input, outputType] call BIS_fnc_getTurrets", "syntax": "[input,outputType] call BIS_fnc_getTurrets"}, "BIS_fnc_getUnitByUid": {"version": "1.00", "tags": "", "description": "Returns player-controlled unit (if any) according to the provided player UID.", "example": "private _unitPlayedByUID550055 = \"550055\" call BIS_fnc_getUnitByUID;", "docSyntax": "playerUID call BIS_fnc_getUnitByUID", "syntax": "playerUID call BIS_fnc_getUnitByUID"}, "BIS_fnc_getVehicleCustomization": {"version": "1.00", "tags": "", "description": "Return vehicle customization settings.", "example": "[vehicle player] call BIS_fnc_getVehicleCustomization;", "docSyntax": "[object, class] call BIS_fnc_getVehicleCustomization", "syntax": "[<object>,class] call BIS_fnc_getVehicleCustomization"}, "BIS_fnc_gridToPos": {"version": "1.00", "tags": "", "description": "Converts grid coordinates to world position.", "example": "_realPosition = \"183221\" call BIS_fnc_gridToPos;", "docSyntax": "gridPosition call BIS_fnc_gridToPos", "syntax": "gridPosition call BIS_fnc_gridToPos"}, "BIS_fnc_groupIndicator": {"version": "1.00", "tags": "", "description": "Displays Group Indicator (to the right of the screen in 1.82)", "example": "[] call BIS_fnc_groupIndicator; //\u00a0starts group indicator", "docSyntax": "argument call BIS_fnc_groupIndicator", "syntax": "argument call BIS_fnc_groupIndicator"}, "BIS_fnc_guiEffectTiles": {"version": "1.00", "tags": "", "description": "Used in dialogs to animate background UAV tiles. See notes for a full working example.", "example": "[ findDisplay 49] call BIS_fnc_guiEffectTiles //\u00a0display 49 - pause menu", "docSyntax": "[display] call BIS_fnc_guiEffectTiles", "syntax": "[<uiDisplay>] call BIS_fnc_guiEffectTiles"}, "BIS_fnc_GUInewsfeed": {"version": "1.00", "tags": "", "description": "Load newsfeed.", "example": "[_display] call BIS_fnc_GUInewsfeed;", "docSyntax": "[display] call BIS_fnc_GUInewsfeed", "syntax": "[<uiDisplay>] call BIS_fnc_GUInewsfeed"}, "BIS_fnc_HatchClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_hatchClose", "syntax": "[] call BIS_fnc_hatchClose"}, "BIS_fnc_HatchOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_hatchOpen", "syntax": "[] call BIS_fnc_hatchOpen"}, "BIS_fnc_healing": {"version": "1.00", "tags": "", "description": "Healing postprocess. Supposed to give healing postprocess effects.", "example": "call BIS_fnc_healing; //\u00a0do NOT use", "docSyntax": "call BIS_fnc_healing", "syntax": "call BIS_fnc_healing"}, "BIS_fnc_healthEffects": {"version": "1.00", "tags": "", "description": "Effects when player is hit. Parameters are sent by the HandleDamage event handler.", "example": "call BIS_fnc_healthEffects;", "docSyntax": "call BIS_fnc_healthEffects", "syntax": "call BIS_fnc_healthEffects"}, "BIS_fnc_HEXtoRGB": {"version": "1.00", "tags": "", "description": "Convert hexcode color into RGBA array format.", "example": "[\"025D00FF\"] call BIS_fnc_HEXtoRGB; // [1,0.843138,0,1]", "docSyntax": "[hexString] call BIS_fnc_HEXtoRGB", "syntax": "[hexString] call BIS_fnc_HEXtoRGB"}, "BIS_fnc_highlightControl": {"version": "1.00", "tags": "", "description": "Highlights given control by drawing a border around it and letting it pulsate. The effect is visible until explicitly removed.", "example": "[findDisplay 313 displayCtrl 1023] call BIS_fnc_highlightControl; //\u00a0Will highlight the play button in Eden Editor [findDisplay 313] call BIS_fnc_highlightControl; //\u00a0Will remove the previously created highlight effect", "docSyntax": "[displayOrControl, thickness] call BIS_fnc_highlightControl", "syntax": "[displayOrControl,thickness] call BIS_fnc_highlightControl"}, "BIS_fnc_inAngleSector": {"version": "1.00", "tags": "", "description": "Checks if a position lies within an angle sector.", "example": "[ position player, getDir player, 30, position enemy_tank ] call BIS_fnc_inAngleSector;", "docSyntax": "[center, centerAngle, sectorWidth, position] call BIS_fnc_inAngleSector", "syntax": "[center,centerAngle,sectorWidth,position] call BIS_fnc_inAngleSector"}, "BIS_fnc_incapacitatedEffect": {"version": "1.00", "tags": "", "description": "A draft of incapacitated effects function.", "example": "call BIS_fnc_incapacitatedEffect;", "docSyntax": "call BIS_fnc_incapacitatedEffect", "syntax": "call BIS_fnc_incapacitatedEffect"}, "BIS_fnc_indicateBleeding": {"version": "1.00", "tags": "", "description": "Shows a PP effect which indicates bleeding.", "example": "call BIS_fnc_indicateBleeding;", "docSyntax": "call BIS_fnc_indicateBleeding;", "syntax": "call BIS_fnc_indicateBleeding;"}, "BIS_fnc_initDisplay": {"version": "1.00", "tags": "", "description": "This function is a central part of how BI handles UIs. For a full explanation see this page.", "example": "[\"onLoad\", _this, \"RscDisplayAAR\", \"GUI\", true] call (uiNamespace getVariable \"BIS_fnc_initDisplay\");", "docSyntax": "parameters call BIS_fnc_initDisplay", "syntax": "parameters call BIS_fnc_initDisplay"}, "BIS_fnc_initExpo": {"version": "1.00", "tags": "", "description": "Disable parts of the main menu during public presentation. Press Ctrl + Shift + U to toggle the lock.", "example": "call BIS_fnc_initExpo;", "docSyntax": "call BIS_fnc_initExpo", "syntax": "call BIS_fnc_initExpo"}, "BIS_fnc_initIntelObject": {"version": "1.00", "tags": "", "description": "This function sets up an object as intel retrievable by the players by adding a \"Take Intel\" addAction to it.", "example": "Setup an object as intel from its init attribute in the editor.", "docSyntax": "[object] call BIS_fnc_initIntelObject", "syntax": "[<object>] call BIS_fnc_initIntelObject"}, "BIS_fnc_initListNBoxSorting": {"version": "1.00", "tags": "", "description": "A GUI using BIS fnc initListNBoxSorting", "example": "[_lnbFilter, _lnbContent, [0,1,2,3]] call BIS_fnc_initListNBoxSorting;", "docSyntax": "[ctrlFilter, ctrlContent, columnIndexes, idc] call BIS_fnc_initListNBoxSorting", "syntax": "[ctrlFilter,ctrlContent,columnIndexes,<scalar>] call BIS_fnc_initListNBoxSorting"}, "BIS_fnc_initModules": {"version": "1.00", "tags": "", "description": "Wait until all modules using the Arma 3 Module Framework are initialized.", "example": "[module_1,module_2] call BIS_fnc_initModules;", "docSyntax": "[modules] call BIS_fnc_initModules", "syntax": "[modules] call BIS_fnc_initModules"}, "BIS_fnc_initMultiplayer": {"version": "1.00", "tags": "", "description": "Multiplayer mission init, executed automatically upon mission start.", "example": "call BIS_fnc_initMultiplayer;", "docSyntax": "call BIS_fnc_initMultiplayer", "syntax": "call BIS_fnc_initMultiplayer"}, "BIS_fnc_initParams": {"version": "1.00", "tags": "", "description": "Initialize mission params and create log in the diary.", "example": "call BIS_fnc_initParams;", "docSyntax": "[modules] call BIS_fnc_initParams;", "syntax": "[modules] call BIS_fnc_initParams;"}, "BIS_fnc_initPlayable": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_initRespawn": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_initRespawnBackpack": {"version": "1.00", "tags": "", "description": "Init respawn backpack. Whover \"assembles\" it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.", "example": "call BIS_fnc_initRespawnBackpack;", "docSyntax": "call BIS_fnc_initRespawnBackpack", "syntax": "call BIS_fnc_initRespawnBackpack"}, "BIS_fnc_initVehicleCrew": {"version": "1.00", "tags": "", "description": "Moves units into vehicle seats. When units don't exist, it will create them in a group of vehicle's side.", "example": "[ someVehicle, [player, \"driver\", 0], true, true ] call BIS_fnc_initVehicleCrew;", "docSyntax": "[object, params, deleteCrew, anySeat, agents] call BIS_fnc_initVehicleCrew", "syntax": "[<object>,<any>,deleteCrew,anySeat,agents] call BIS_fnc_initVehicleCrew"}, "BIS_fnc_initVirtualUnit": {"version": "1.00", "tags": "", "description": "Initialize virtual unit. Disable it, turn the camera upwards and save its correct side.", "example": "someObject call BIS_fnc_initVirtualUnit;", "docSyntax": "[object] call BIS_fnc_initVirtualUnit", "syntax": "[<object>] call BIS_fnc_initVirtualUnit"}, "BIS_fnc_initWorldScene": {"version": "1.00", "tags": "", "description": "/* Author: Karel Moricky Description: Initialize world scene Parameter(s): ARRAY of CODEs - random code will be selected and called. The code should contain scene init Returns: Nothing */", "docSyntax": "[] call BIS_fnc_initWorldScene", "syntax": "[] call BIS_fnc_initWorldScene"}, "BIS_fnc_inString": {"version": "1.00", "tags": "", "description": "Find a string within a string.", "example": "[\"rabbit\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true", "docSyntax": "[searchTerm, searchText, caseSensitive] call BIS_fnc_inString", "syntax": "[searchTerm,searchText,caseSensitive] call BIS_fnc_inString"}, "BIS_fnc_InstructorFigure": {"version": "1.00", "tags": "", "description": "/******************************************************************************* Version: 0.1 Name: Instructor Figure DESCRIPTION: www. PARAMETERS: 1) function called - string, list of functions: - Init - Destroy 2) parameter for the function For more information see https://wiki.bistudio.com/index.php/A3_InstructorFigure RETURNED VALUE: depends on the function called TODO: + PlayTopic + Fade out New Intel text + wait for TAB press + use functions for dynamic text - kbTell support - logging + rework data structure (add, remove, search) - ContainerExists function + display only if difficulty is low + disableSerialization + GetTopics should return array, not just debuglog info + deny play more than one topic in a time + Localize + check and fix return values of functions + correct debuglog information - deny addtopic during playing + safe work with BIS_GroupCommunication - dont overwrite user menus + remove INSTRUCTOR FIGURE from BIS_GroupCommunication + PlayTopicRandom - rule exceeding selection of a previous sentence *******************************************************************************/ //Variables", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_interpolateWeather": {"version": "1.00", "tags": "", "description": "/* Description: Interpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions. Parameter(s): _this select 0: array - _date1 [_year1,_month1,_day1,_hour1,_min1] _this select 1: array - _weather1 [_overcast1,_fog1] _this select 2: array - _date2 [_year2,_month2,_day2,_hour2,_min2] _this select 3: array - _weather2 [_overcast2,_fog2] _this select 4: array - _subjectDate [_year,_month,_day,_hour,_min] (default: current date) Returns: [_interpolatedOvercast,_interpolatedFog] Example: [_overcast,_fog] = [[2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00]] call BIS_fnc_interpolateWeather; */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_inventoryExists": {"version": "1.00", "tags": "", "description": "Check if loadout with given name exists.", "example": "private _hasSuperLoadout = [missionNamespace, \"mySuperLoadout\"] call BIS_fnc_inventoryExists;", "docSyntax": "[source, name] call BIS_fnc_inventoryExists", "syntax": "[source,<string>] call BIS_fnc_inventoryExists"}, "BIS_fnc_isBuildingEnterable": {"version": "1.00", "tags": "", "description": "Check whether a building or structure has available positions defined within model.", "example": "[_building] call BIS_fnc_isBuildingEnterable;", "docSyntax": "param call BIS_fnc_isBuildingEnterable", "syntax": "param call BIS_fnc_isBuildingEnterable"}, "BIS_fnc_isCampaign": {"version": "1.00", "tags": "", "description": "Checks to see if a mission is being run in a campaign.", "example": "[] call BIS_fnc_isCampaign;", "docSyntax": "[] call BIS_fnc_isCampaign", "syntax": "[] call BIS_fnc_isCampaign"}, "BIS_fnc_isDebugConsoleAllowed": {"version": "1.00", "tags": "", "description": "Returns true if debug console is allowed in current context", "example": "call BIS_fnc_isDebugConsoleAllowed;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_isDemo": {"version": "1.00", "tags": "", "description": "Returns true when game version is demo.", "example": "_isDemo = call BIS_fnc_isDemo;", "docSyntax": "call BIS_fnc_isDemo", "syntax": "call BIS_fnc_isDemo"}, "BIS_fnc_isEqualVector": {"version": "1.00", "tags": "", "description": "Checks whether two vectors are equal with given tolerance.", "example": "[[1,1,1],[2,2,2],1] call BIS_fnc_isEqualVector; //\u00a0Returns true", "docSyntax": "[vector1, vector2, tolerance] call BIS_fnc_isEqualVector", "syntax": "[vector1,vector2,tolerance] call BIS_fnc_isEqualVector"}, "BIS_fnc_isInsideArea": {"version": "1.00", "tags": "", "description": "Detects whether a position is within a square area of given size about center.", "example": "//\u00a0Check an area, centered on the player that is 10m wide and 10m tall _size = [5, 5]; _checkPos = getPos player; _inArea = [_checkPos, _size, _checkPos] call BIS_fnc_isInsideArea;", "docSyntax": "[center, size, position ] call BIS_fnc_isInsideArea", "syntax": "[center,size,position ] call BIS_fnc_isInsideArea"}, "BIS_fnc_isInZoom": {"version": "1.00", "tags": "", "description": "Checks if map zoom level is in between given interval.", "example": "if ([0.001, 0.02] call BIS_fnc_isInZoom) then { hint \"Zoom level is in between 0.001 and 0.02\"; };", "docSyntax": "[min, max] call BIS_fnc_isInZoom", "syntax": "[min,max] call BIS_fnc_isInZoom"}, "BIS_fnc_isLoading": {"version": "1.00", "tags": "", "description": "Check if a loading screen is opened.", "example": "_isLoading = call BIS_fnc_isLoading;", "docSyntax": "call BIS_fnc_isLoading", "syntax": "call BIS_fnc_isLoading"}, "BIS_fnc_isUnitVirtual": {"version": "1.00", "tags": "", "description": "Return if unit is virtual (used for example for Zeus players).", "example": "_isVirtual = someObject call BIS_fnc_isUnitVirtual;", "docSyntax": "[object] call BIS_fnc_isUnitVirtual", "syntax": "[<object>] call BIS_fnc_isUnitVirtual"}, "BIS_fnc_keyCode": {"version": "1.00", "tags": "", "description": "Returns DIK code of a given key.", "example": "13 call BIS_fnc_keyCode; //\u00a0Returns \"EQUALS\"", "docSyntax": "input call BIS_fnc_keyCode", "syntax": "input call BIS_fnc_keyCode"}, "BIS_fnc_keyHold": {"version": "1.00", "tags": "", "description": "Allows for hold button interactions. Hold action is started by pressing the space bar.", "example": "[\"Hold that key!\",2,{alive player}] spawn BIS_fnc_keyHold;", "docSyntax": "[description, duration, condition, arguments, loaded] spawn BIS_fnc_keyHold", "syntax": "[description,duration,condition,arguments,loaded] spawn BIS_fnc_keyHold"}, "BIS_fnc_lerp": {"version": "1.00", "tags": "", "description": "Linear floating point interpolation. Linear Interpolation (Wikipedia)", "example": "[1,10,0.5] call BIS_fnc_lerp; //\u00a0Returns 5.5", "docSyntax": "[currentValue,targetValue,alpha] call BIS_fnc_lerp", "syntax": "[currentValue,targetValue,alpha] call BIS_fnc_lerp"}, "BIS_fnc_limitAmmunition": {"version": "1.00", "tags": "", "description": "Limits the number of magazines carried by individual unit. Each container (uniform, vest and backpack) can be limited separately or left untouched. The function limits the number of magazines of each unique ammo category in respective container. Items like First Aid Kit or Mine Detector are not affected by the function", "example": "player call BIS_fnc_limitAmmunition;", "docSyntax": "[unit,uniformMags,vestMags,BackpackMags] call BIS_fnc_limitAmmunition", "syntax": "[<objUnit>,uniformMags,vestMags,BackpackMags] call BIS_fnc_limitAmmunition"}, "BIS_fnc_limitItems": {"version": "1.00", "tags": "", "description": "Keeps or removes unit's items (including NVGs and binocular/designator) based on probability user sets.", "example": "player call BIS_fnc_limitItems;", "docSyntax": "[unit,chanceNVG,chanceBino,chanceGPS,chanceMap,chanceRadio,chanceCompass,chanceWatch] call BIS_fnc_limitItems", "syntax": "[<objUnit>,chanceNVG,chanceBino,chanceGPS,chanceMap,chanceRadio,chanceCompass,chanceWatch] call BIS_fnc_limitItems"}, "BIS_fnc_limitSupport": {"version": "1.00", "tags": "", "description": "Limits support runs during a mission.", "example": "[reqModule, \"Transport\", -1] call BIS_fnc_limitSupport;", "docSyntax": "[module, supportType, quantity] call BIS_fnc_limitSupport", "syntax": "[module,supportType,quantity] call BIS_fnc_limitSupport"}, "BIS_fnc_limitWeaponItems": {"version": "1.00", "tags": "", "description": "Keeps or remove unit's weapon attachments based on probability user sets. Apply for primary, secondary or handgun weapon separately.", "example": "player call BIS_fnc_limitWeaponItems;", "docSyntax": "[unit,mode,chanceOptics,chanceAttach,chanceMuzzle,chanceUnderbarrel] call BIS_fnc_limitWeaponItems", "syntax": "[<objUnit>,mode,chanceOptics,chanceAttach,chanceMuzzle,chanceUnderbarrel] call BIS_fnc_limitWeaponItems"}, "BIS_fnc_liveFeed": {"version": "1.00", "tags": "", "description": "Display a live feed. //\u00a0Live feed display: private _UAVFeedDisplay = uiNamespace getVariable \"BIS_fnc_PIP_RscPIP\";", "example": "[myUAV, player, player, 2] call BIS_fnc_liveFeed;", "docSyntax": "[source, target, receiver, effect] call BIS_fnc_liveFeed", "syntax": "[source,<object>,receiver,effect] call BIS_fnc_liveFeed"}, "BIS_fnc_liveFeedEffects": {"version": "1.00", "tags": "", "description": "Add effect to the current live feed.", "example": "1 call BIS_fnc_liveFeedEffects;", "docSyntax": "effect call BIS_fnc_liveFeedEffects", "syntax": "effect call BIS_fnc_liveFeedEffects"}, "BIS_fnc_liveFeedModuleEffects": {"version": "1.00", "tags": "", "description": "/* Description: Add effects to a live feed via a module. Parameters: _this: OBJECT - Live Feed - Effects module */ // They ran me on a dedicated server. I stopped their function.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_liveFeedModuleInit": {"version": "1.00", "tags": "", "description": "/* Description: Display a live feed via a module. Parameters: _this: OBJECT - Live Feed - Init module */ // Need not be run on dedicated servers", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_liveFeedModuleSetSource": {"version": "1.00", "tags": "", "description": "/* Description: Set a live feed's source via a module. Parameters: _this: OBJECT - Live Feed - Set Source module */ // <insert smart comment about dedicated servers here>", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_liveFeedModuleSetTarget": {"version": "1.00", "tags": "", "description": "/* Description: Set a live feed's target via a module. Parameters: _this: OBJECT - Live Feed - Set Target module */ // On dedicated servers, player is not you", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_liveFeedSetSource": {"version": "1.00", "tags": "", "description": "Set the source of the current live feed.", "example": "[player, [0, 0.25, 1.6]] call BIS_fnc_liveFeedSetSource;", "docSyntax": "source call BIS_fnc_liveFeedSetSource", "syntax": "source call BIS_fnc_liveFeedSetSource"}, "BIS_fnc_liveFeedSetTarget": {"version": "1.00", "tags": "", "description": "Set the target of the current live feed.", "example": "player call BIS_fnc_liveFeedSetTarget;", "docSyntax": "target call BIS_fnc_liveFeedSetTarget", "syntax": "<object> call BIS_fnc_liveFeedSetTarget"}, "BIS_fnc_liveFeedTerminate": {"version": "1.00", "tags": "", "description": "Terminate a live feed.", "example": "call BIS_fnc_liveFeedTerminate;", "docSyntax": "call BIS_fnc_liveFeedTerminate", "syntax": "call BIS_fnc_liveFeedTerminate"}, "BIS_fnc_loadClass": {"version": "1.00", "tags": "", "description": "Searches for class in mission, campaign and then in global config file.", "example": "[ [\"bin\\config.bin\"], configFile >> \"Cfg3DEN\" >> \"Camera\"] call BIS_fnc_loadClass", "docSyntax": "[input, defaultValue] call BIS_fnc_loadClass", "syntax": "[input,defaultValue] call BIS_fnc_loadClass"}, "BIS_fnc_loadEntry": {"version": "1.00", "tags": "", "description": "Searches for config entry in mission, campaign and then in global config file.", "example": "[ [\"CfgWeapons\",\"hgun_Rook40_snds_F\",\"bullet3\"], configfile >> \"CfgWeapons\" >> \"hgun_Rook40_snds_F\" >> \"baseWeapon\" ] call BIS_fnc_loadEntry;", "docSyntax": "[path,defaultConfig] call BIS_fnc_loadEntry", "syntax": "[path,defaultConfig] call BIS_fnc_loadEntry"}, "BIS_fnc_loadFunctions": {"version": "1.00", "tags": "", "description": "Compile scripts and save them into globally available functions. Defines _fnc_scriptName variable.", "example": "[\"scripts\\myDir\\\", \"MY_fnc_\", [\"script1\", \"script2\"], true] call BIS_fnc_loadFunctions;", "docSyntax": "[fileDirectory, prefix, nameVars, global] call BIS_fnc_loadFunctions", "syntax": "[fileDirectory,prefix,nameVars,global] call BIS_fnc_loadFunctions"}, "BIS_fnc_loadVehicle": {"version": "1.00", "tags": "", "description": "Load vehicle look saved with BIS_fnc_saveVehicle.", "example": "[BIS_tank, [missionNamespace, \"BIS_someTankSave\"] ] call BIS_fnc_loadVehicle;", "docSyntax": "[object,target] call BIS_fnc_loadVehicle", "syntax": "[<object>,<object>] call BIS_fnc_loadVehicle"}, "BIS_fnc_localize": {"version": "1.00", "tags": "", "description": "Checks if passed string is localization key and if so, return the localized text. Else, returns the passed string itself.", "example": "//\u00a0assuming the stringtable contains a key \"STR_someString\" with the value \"Hello world\" \"STR_someString\" call BIS_fnc_localize; //\u00a0returns \"Hello world\" //\u00a0assuming the stringtable does not contain a key \"STR_anotherString\" \"STR_anotherString\" call BIS_fnc_localize; //\u00a0returns \"STR_anotherString\"", "docSyntax": "localizationString call BIS_fnc_localize", "syntax": "localizationString call BIS_fnc_localize"}, "BIS_fnc_locationDescription": {"version": "1.00", "tags": "", "description": "Return location description (e.g. \"NE of Agia Marina\")", "example": "hint format [\"Player's position: %1\", player call BIS_fnc_locationDescription];", "docSyntax": "position call BIS_fnc_locationDescription", "syntax": "position call BIS_fnc_locationDescription"}, "BIS_fnc_LockedDoorNoHandleOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_lockedDoorNoHandleOpen", "syntax": "[] call BIS_fnc_lockedDoorNoHandleOpen"}, "BIS_fnc_LockedDoorOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_lockedDoorOpen", "syntax": "[] call BIS_fnc_lockedDoorOpen"}, "BIS_fnc_locWeaponInfo": {"version": "1.00", "tags": "", "description": "Shows a utility tool checking length of weapon info texts.", "example": "call BIS_fnc_locWeaponInfo;", "docSyntax": "call BIS_fnc_locWeaponInfo", "syntax": "call BIS_fnc_locWeaponInfo"}, "BIS_fnc_logFormat": {"version": "1.00", "tags": "", "description": "Display debug message.", "example": "[\"My logged name: %1, My position: %2\", name player, getPos player] call BIS_fnc_logFormat; //\u00a0RPT output: //\u00a012:34:56 \"BIS_fnc_log: [BIS_fnc_debugConsoleExec] My logged name: Miller, My position: [4866.73,21947.9,0.00143433]\"", "docSyntax": "[text, parameters] call BIS_fnc_logFormat", "syntax": "[<string>,parameters] call BIS_fnc_logFormat"}, "BIS_fnc_logFormatServer": {"version": "1.00", "tags": "", "description": "Logs (using diag_log) a debug message (profileName, playerUID, _fnc_scriptName, provided text) to server's .RPT. In singleplayer, BIS_fnc_logFormat is used.", "example": "private _currentFPS = diag_fps; if (_currentFPS < 10) then { [\"Player %1 has performance issues (%2 FPS)\", name player, _currentFPS] call BIS_fnc_logFormatServer; };", "docSyntax": "[text, argument1, argument2, ...] call BIS_fnc_logFormatServer", "syntax": "[<string>,argument1,argument2,...] call BIS_fnc_logFormatServer"}, "BIS_fnc_magazinesEntityType": {"version": "1.00", "tags": "", "description": "Return object's magazines as defined in config. Scans also turrets and pylons.", "example": "\"O_MBT_04_cannon_F\" call BIS_fnc_magazinesEntityType; //Returns [\"20Rnd_125mm_APFSDS_T_Green\",\"12Rnd_125mm_HEAT_T_Green\",\"12Rnd_125mm_HE_T_Green\",\"1000Rnd_762x51_Belt_Green\",\"1000Rnd_762x51_Belt_Green\",\"500Rnd_127x99_mag_Tracer_Yellow\",\"SmokeLauncherMag\"]", "docSyntax": "class call BIS_fnc_magazinesEntityType", "syntax": "class call BIS_fnc_magazinesEntityType"}, "BIS_fnc_mapAnimAdd": {"version": "1.00", "tags": "", "description": "Similar to mapAnimAdd, yet it provides additional parameters to allow for a non-linear zoom and various position interpolation modes.", "example": "openMap true; //\u00a0The function won't work if the map is not open [2.0, 0.05, getPos player] call BIS_fnc_mapAnimAdd;", "docSyntax": "[duration, toZoom, toPosition, interpModeZoom, interpModePosition, fromZoom, fromPosition] call BIS_fnc_mapAnimAdd", "syntax": "[duration,toZoom,toPosition,interpModeZoom,interpModePosition,fromZoom,fromPosition] call BIS_fnc_mapAnimAdd"}, "BIS_fnc_mapAnimClear": {"version": "1.00", "tags": "", "description": "/* Author: Nelson Duarte Description: Same as mapAnimClear Parameters: Nothing Returns: Nothing Examples: [] call BIS_fnc_mapAnimClear; */", "docSyntax": "[] call BIS_fnc_mapAnimClear", "syntax": "[] call BIS_fnc_mapAnimClear"}, "BIS_fnc_mapAnimDone": {"version": "1.00", "tags": "", "description": "/* Author: Nelson Duarte Description: Same as mapAnimAdd but with possibility for non linear zoom and position interpolation modes Parameters: Nothing Returns: Bool - False if map animation is in progress, true if not Examples: [] call BIS_fnc_mapAnimDone; */", "docSyntax": "[] call BIS_fnc_mapAnimDone", "syntax": "[] call BIS_fnc_mapAnimDone"}, "BIS_fnc_mapSize": {"version": "1.00", "tags": "", "description": "Returns map size from config. Do not confuse with worldSize. The engine command calculates the map size and doesn't read it from config.", "example": "\"Altis\" call BIS_fnc_mapSize;", "docSyntax": "terrainName call BIS_fnc_mapSize", "syntax": "terrainName call BIS_fnc_mapSize"}, "BIS_fnc_markerToTrigger": {"version": "1.00", "tags": "", "description": "Makes an existing or new marker cover a trigger area.", "example": "_createdMarker = [\"marker1\", myTrigger] call BIS_fnc_markerToTrigger;", "docSyntax": "[markerName, trigger, localChange] call BIS_fnc_markerToTrigger", "syntax": "[<string>,<objTrigger>,localChange] call BIS_fnc_markerToTrigger"}, "BIS_fnc_markWaypoints": {"version": "1.00", "tags": "", "description": "/* Description: Creates a marker on each uncompleted waypoint and marks it checked after completing that WP. Note: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality Parameter(s): _this select 0: OBJECT - unit who will have its waypoints marked _this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint, %1 is used for WP number (default \"\") _this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints, %1 is used for WP number (default [\"%1\", \"%1\"]) _this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"]) _this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"]) _this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75]) Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_missileLaunchPositionFix": {"version": "1.00", "tags": "", "description": "Workaround fix for ATGM/SAM launch positions", "example": "[_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix;", "docSyntax": "[vehicle, projectile, selection, projectileType] call BIS_fnc_missileLaunchPositionFix", "syntax": "[<objVehicle>,projectile,selection,projectileType] call BIS_fnc_missileLaunchPositionFix"}, "BIS_fnc_missionConversations": {"version": "1.00", "tags": "", "description": "/* Description: Header function of local mission conversations Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_missionConversationsLocal": {"version": "1.00", "tags": "", "description": "\u24d8", "example": "call BIS_fnc_missionConversationsLocal", "docSyntax": "call BIS_fnc_missionConversationsLocal", "syntax": "call BIS_fnc_missionConversationsLocal"}, "BIS_fnc_missionFlow": {"version": "1.00", "tags": "", "description": "This function is automatically run in post-init by a CfgFunctions declaration. If the mission contains a missionFlow.fsm file, it will be loaded, otherwise an empty, default one will be used.", "example": "call BIS_fnc_missionFlow;", "docSyntax": "call BIS_fnc_missionFlow", "syntax": "call BIS_fnc_missionFlow"}, "BIS_fnc_missionHandlers": {"version": "1.00", "tags": "", "description": "#define VAR_RELOADS (missionname + \"_reloads_\" + str ismultiplayer) //--- Mission end type and rating", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_missionRespawnType": {"version": "1.00", "tags": "", "description": "Return respawn type defined in Description.ext. Can return as Number (e.g 1) or String (e.g \"BIRD\").", "example": "_respawnAsNumber = 0 call BIS_fnc_missionRespawnType;", "docSyntax": "type call BIS_fnc_missionRespawnType", "syntax": "type call BIS_fnc_missionRespawnType"}, "BIS_fnc_missionTasks": {"version": "1.00", "tags": "", "description": "/* Description: Header function of local mission tasks. Automatically declares following variables: _taskID: STRING _taskState: STRING _taskExists: BOOL Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params 2 (Optional): CODE - specific task function (default: \"BIS_fnc_missionTasksLocal\") Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_missionTasksLocal": {"version": "1.00", "tags": "", "description": "\u24d8", "example": "call BIS_fnc_missionTasksLocal;", "docSyntax": "call BIS_fnc_missionTasksLocal", "syntax": "call BIS_fnc_missionTasksLocal"}, "BIS_fnc_missionTimeLeft": {"version": "1.00", "tags": "", "description": "Returns time in seconds until the mission end. Remaining time can be set using estimatedTimeLeft command or using BIS_fnc_countdown.", "example": "call BIS_fnc_missionTimeLeft;", "docSyntax": "call BIS_fnc_missionTimeLeft", "syntax": "call BIS_fnc_missionTimeLeft"}, "BIS_fnc_moduleAI": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleAmmo": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleAnimals": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleArsenal": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleBleedTickets": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleBootcampStage": {"version": "1.00", "tags": "", "description": "/* Description: Change the current Stage in Bootcamp MP Guided Mode Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCAS": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleChat": {"version": "1.00", "tags": "", "description": "Make a list of units use any *chat command (groupChat, vehicleChat, sideChat, commandChat, globalChat).", "example": "myLogic setVariable [\"Channel\", \"2\"]; myLogic setVariable [\"Text\", \"Hello everyone, this is side chat!\"]; [myLogic, [player], true] call BIS_fnc_moduleChat;", "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleChat", "syntax": "[logic,units,isActivated] call BIS_fnc_moduleChat"}, "BIS_fnc_moduleCombatGetIn": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCountdown": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCoverMap": {"version": "1.00", "tags": "", "description": "Covers the map except for a defined area. This function was designed to be used by the Modules framework, but it can also be used without the module. The effect does not move with the centerObject.", "example": "centerObject setVariable [\"objectArea\",[1000, 1000, 0, false, 0]]; [_centerObject,[],true] call BIS_fnc_moduleCoverMap; //\u00a0Covers the whole map except an area of 1000 m by 1000 m, can be used to dynamically change size of the area during mission", "docSyntax": "[centerUnit,units,init] call BIS_fnc_moduleCoverMap", "syntax": "[centerUnit,units,init] call BIS_fnc_moduleCoverMap"}, "BIS_fnc_moduleCreateDiaryRecord": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCreateProjectile": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCurator": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddAddons": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddCameraArea": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddEditableObjects": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddEditingArea": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddEditingAreaPlayers": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddIcon": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorAddPoints": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetAttributes": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetCamera": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetCoefs": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetCostsDefault": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetCostsSide": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetCostsVehicleClass": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetEditingAreaType": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleCuratorSetObjectCost": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleDamage": {"version": "1.00", "tags": "", "description": "Damage given vehicles.", "example": "[myLogic, vehicle player, true] call BIS_fnc_moduleDamage;", "docSyntax": "[logic, vehicles, isActivated] call BIS_fnc_moduleDamage", "syntax": "[logic,vehicles,isActivated] call BIS_fnc_moduleDamage"}, "BIS_fnc_moduleDate": {"version": "1.00", "tags": "", "description": "Used by the Date module.", "example": "[logic, objNull, true] call BIS_fnc_moduleDate;", "docSyntax": "[logic, objNull, activated] call BIS_fnc_moduleDate", "syntax": "[logic,objNull,activated] call BIS_fnc_moduleDate"}, "BIS_fnc_moduleDiary": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleDoorOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleEffectsBubbles": {"version": "1.00", "tags": "", "description": "Creates underwater bubble effect on defined place (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsBubbles;", "docSyntax": "[module] call BIS_fnc_moduleEffectsBubbles", "syntax": "[module] call BIS_fnc_moduleEffectsBubbles"}, "BIS_fnc_moduleEffectsEmitterCreator": {"version": "1.00", "tags": "", "description": "/* File: fn_moduleEffectsEmitterCreator.sqf Description: Module function. Creates particle emitters and calls effect function. Parameter(s): _this select 0 (Object) - Module logic. _this select 1 (String) - Function name. _this select 2 (Number) - Optional - Number of emitters. Returned value: None. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleEffectsFire": {"version": "1.00", "tags": "", "description": "Creates fire on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsFire;", "docSyntax": "[module] call BIS_fnc_moduleEffectsFire", "syntax": "[module] call BIS_fnc_moduleEffectsFire"}, "BIS_fnc_moduleEffectsPlankton": {"version": "1.00", "tags": "", "description": "Creates underwater plankton effect around player (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsPlankton;", "docSyntax": "[module] call BIS_fnc_moduleEffectsPlankton", "syntax": "[module] call BIS_fnc_moduleEffectsPlankton"}, "BIS_fnc_moduleEffectsShells": {"version": "1.00", "tags": "", "description": "Creates empty ammo cartridges on position of the module logic.", "example": "[BIS_module] call BIS_fnc_moduleEffectsShells;", "docSyntax": "[module] call BIS_fnc_moduleEffectsShells", "syntax": "[module] call BIS_fnc_moduleEffectsShells"}, "BIS_fnc_moduleEffectsSmoke": {"version": "1.00", "tags": "", "description": "Creates smoke on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsSmoke;", "docSyntax": "[module] call BIS_fnc_moduleEffectsSmoke", "syntax": "[module] call BIS_fnc_moduleEffectsSmoke"}, "BIS_fnc_moduleEndMission": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleExecute": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDBalloonAirDestruction": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDBalloonWaterDestruction": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDCPClear": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDCPIn": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDCPOut": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDFadeMarker": {"version": "1.00", "tags": "", "description": "Gradually change the alpha of the given marker.", "example": "[\"tankMarker\", 0.25] spawn BIS_fnc_moduleFDFadeMarker;", "docSyntax": "[markerName, alpha] spawn BIS_fnc_moduleFDFadeMarker", "syntax": "[<string>,alpha] spawn BIS_fnc_moduleFDFadeMarker"}, "BIS_fnc_moduleFDSkeetDestruction": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFDStatsClear": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFiringDrill": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFriendlyFire": {"version": "1.00", "tags": "", "description": "/******************************************************************************* Version: 2.0 Name: Friendly Fire Author: Zozo DESCRIPTION: Handles the friendly fire. Use either the module interface in the editor, or call individual functions. PARAMETERS: 1) function called - string, list of functions: - Init - Destroy - AddUnits - RemoveUnits - ChangePriority - ListActiveUnit 2) parameter for the function RETURNED VALUE: depends on the function called EXAMPLES: // Initializes the module if not added in editor // No units are directly checked for friendly fire, but renegade state is checked anyway _ret = [ \"Init\", [] ] call BIS_fnc_moduleFriendlyFire // Initializes the module if not added in editor // BIS_vip1, BIS_vip2, BIS_noVip units are directly checked for friendly fire x = [ \"Init\", [ [ BIS_vip1, BIS_vip2, BIS_noVip],true ] ] call BIS_fnc_moduleFriendlyFire // De-initializes the module _ret = [ \"Destroy\" ] call BIS_fnc_moduleFriendlyFire // Add BIS_vip3 unit to be checked for friendly fire x = [ \"AddUnits\", [ [BIS_vip3] ] ] call BIS_fnc_moduleFriendlyFire // Remove BIS_vip1 unit from active units x = [ \"RemoveUnits\", [ [ BIS_vip1 ] ] ] call BIS_fnc_moduleFriendlyFire // set another priority for a vehicle- if it is hit once, considered as friendly fire x = [ \"ChangePriority\", [BIS_vip,1] ] call BIS_fnc_moduleFriendlyFire *******************************************************************************/", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleFuel": {"version": "1.00", "tags": "", "description": "Set fuel of linked units' vehicles.", "example": "[myLogic, [unit1, unit2, vehicle1], true] call BIS_fnc_moduleFuel;", "docSyntax": "[logic, units, isActivated] call BIS_fnc_moduleFuel", "syntax": "[logic,units,isActivated] call BIS_fnc_moduleFuel"}, "BIS_fnc_moduleGenericRadio": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleGrenade": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleGrenade", "syntax": "[] call BIS_fnc_moduleGrenade"}, "BIS_fnc_moduleGroupID": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleHandle": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleHealth": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleHint": {"version": "1.00", "tags": "", "description": "/* Description: Show a hint to all players of side Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleHQ": {"version": "1.00", "tags": "", "description": "/* Description: Register or return side HQ speaker Parameter(s): 0: OBJECT - register the HQ SIDE - return HQ of the side Returns: OBJECT - the HQ */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleInit": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMine": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMissionName": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMode": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleModules": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMPTypeDefense": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMPTypeGameMaster": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_ModuleMPTypeGroundSupport": {"version": "1.00", "tags": "", "description": "// Debug log", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_ModuleMPTypeGroundSupportBase": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMPTypeSectorControl": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleMPTypeSeize": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjective": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveFind": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveGetIn": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveMove": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveRaceCP": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveRaceFinish": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveRaceStart": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveSector": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleObjectiveTarget": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_modulePositioning": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_modulePoster": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_modulePostprocess": {"version": "1.00", "tags": "", "description": "\u24d8", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_moduleProjectile": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_modulePunishment": {"version": "1.00", "tags": "", "description": "/* Description: Make a unit play a punishment animation Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRadioChannelCreate": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRank": {"version": "1.00", "tags": "", "description": "Used by the Set Rank module.", "example": "[logic,[player]] call BIS_fnc_moduleRank;", "docSyntax": "[logic, units, activated] call BIS_fnc_moduleRank", "syntax": "[logic,units,activated] call BIS_fnc_moduleRank"}, "BIS_fnc_moduleRating": {"version": "1.00", "tags": "", "description": "Function used by the Rating module.", "example": "[myLogic, units group player, true] call BIS_fnc_moduleRating;", "docSyntax": "[logic, units, activated] call BIS_fnc_moduleRating", "syntax": "[logic,units,activated] call BIS_fnc_moduleRating"}, "BIS_fnc_moduleRemoteControl": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRespawnInventory": {"version": "1.00", "tags": "", "description": "/* Description: Set respawn loadouts a curator can assign to players Parameter(s): 0: OBJECT - curator logic 1: BOOL - true to make all loadouts availale, false to base them on units the curator can place Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRespawnPosition": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRespawnTickets": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleRespawnVehicle": {"version": "1.00", "tags": "", "description": "/* Description: Set vehicle respawn, compatible both with SP and MP. Parameter(s): 0: OBJECT - vehicle 1: NUMBER - respawn delay in seconds (default is 0) BOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn 2: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled) 3: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited) 4: CODE - code executed upon respawn. Passed arguments are [<newVehicle>,<oldVehicle>]. The old vehicle is deleted only after this code is completed. 5: POSITION - type of respawn position: 0 = where it started 1 = where it was destroyed 2 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\") 3 = on BLUFOR respawn marker 4 = on OPFOR respawn marker 5 = on Independent respawn marker 6 = on Civilian respawn marker 7 = on side respawn marker of unit which destroyed the vehicle 6: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest) 7: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect) 8: BOOL - true to show notifcation when the vehicle is respawned Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSaveGame": {"version": "1.00", "tags": "", "description": "Saves the game. Saving has to be enabled.", "example": "call BIS_fnc_moduleSaveGame;", "docSyntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame", "syntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame"}, "BIS_fnc_moduleSFX": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleShowHide": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSimulationManager": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSimulationManager_grab": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSimulationManager_grab", "syntax": "[] call BIS_fnc_moduleSimulationManager_grab"}, "BIS_fnc_moduleSiteInit": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSiteInit", "syntax": "[] call BIS_fnc_moduleSiteInit"}, "BIS_fnc_moduleSkill": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSkiptime": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSound": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleStrategicMapImage": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleStrategicMapInit": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleStrategicMapMission": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleStrategicMapOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleStrategicMapORBAT": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleSupportsInitProvider": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSupportsInitProvider", "syntax": "[] call BIS_fnc_moduleSupportsInitProvider"}, "BIS_fnc_moduleSupportsInitProviderVirtual": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSupportsInitProviderVirtual", "syntax": "[] call BIS_fnc_moduleSupportsInitProviderVirtual"}, "BIS_fnc_moduleSupportsInitRequester": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSupportsInitRequester", "syntax": "[] call BIS_fnc_moduleSupportsInitRequester"}, "BIS_fnc_moduleTaskCreate": {"version": "1.00", "tags": "", "description": "/* Description: Create Task module function */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTaskSetDescription": {"version": "1.00", "tags": "", "description": "/* Description: Set Task Description module function */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTaskSetDestination": {"version": "1.00", "tags": "", "description": "/* Description: Set Task Destination module function */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTaskSetState": {"version": "1.00", "tags": "", "description": "/* Description: Set Task State module function */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTimeMultiplier": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleTimeMultiplier", "syntax": "[] call BIS_fnc_moduleTimeMultiplier"}, "BIS_fnc_moduleTracers": {"version": "1.00", "tags": "", "description": "Function used by the Tracers module.", "example": "[myLogic, true] call BIS_fnc_moduleTracers;", "docSyntax": "[logic, activated] call BIS_fnc_moduleTracers", "syntax": "[logic,activated] call BIS_fnc_moduleTracers"}, "BIS_fnc_moduleTrident": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTriggers": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTTCPTrigger": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTTCPTriggerBehind": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleTTStatsClear": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleUnits": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleUnlockArea": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleUnlockObject": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleVanguardFob": {"version": "1.00", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleVanguardFob", "syntax": "[] call BIS_fnc_moduleVanguardFob"}, "BIS_fnc_moduleVanguardObjective": {"version": "1.00", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleVanguardObjective", "syntax": "[] call BIS_fnc_moduleVanguardObjective"}, "BIS_fnc_moduleVanguardScorePersistence": {"version": "1.00", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleVanguardScorePersistence", "syntax": "[] call BIS_fnc_moduleVanguardScorePersistence"}, "BIS_fnc_moduleVolume": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleWeather": {"version": "1.00", "tags": "", "description": "/* Description: Set overcast and fog Parameter(s): 0: STRING - mode, can be one of following \"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission) 1: BOOL - true to enbale, false to disable Returns: Nothing \"isDelayEnabled\" Returns: true if delayed activation is enabled, otherwise false \"commit\" - apply weather changes Returns: Nothing */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleZoneProtection": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moduleZoneRestriction": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_moveAction": {"version": "1.00", "tags": "", "description": "Return current move action (used in playAction, playActionNow and switchAction) Parameter(s): 0: OBJECT 1 (Optional): BOOL - true to return config path of the action, false to return just the action name (default: false) Returns: STRING or ARRAY", "example": "_actionName = [player, false] call BIS_fnc_moveAction; _actionConfig = [player, true] call BIS_fnc_moveAction;", "docSyntax": "[unit, returnConfig] call BIS_fnc_moveAction", "syntax": "[<objUnit>,returnConfig] call BIS_fnc_moveAction"}, "BIS_fnc_moveToRespawnPosition": {"version": "1.00", "tags": "", "description": "Move given unit to given respawn position. Units moved to height >= 30m will start on parachute. Position [0,0,0] is blacklisted. This function must be executed where unit to be moved is local.", "example": "[player, \"SpawnMarker1\"] call BIS_fnc_moveToRespawnPosition;", "docSyntax": "[unit, position, canBeDead] call BIS_fnc_moveToRespawnPosition", "syntax": "[<objUnit>,position,canBeDead] call BIS_fnc_moveToRespawnPosition"}, "BIS_fnc_multiplySquareMatrixByVector": {"version": "1.00", "tags": "", "description": "/* * Author: Zozo * Multiplies the square matrix by a vector: A(m,m) x V(m) * * Arguments: * 0: _matrix ARRAY (multi-dimensional) * 1: _vector ARRAY ([x,y,z] or [x,y,z,1]) * * Return Value: * ARRAY [x,y,z] * * Example: * [_transformMatrix, vectorDir player] call BIS_multiplySquareMatrixVector * */", "docSyntax": "[] call BIS_fnc_multiplySquareMatrixByVector", "syntax": "[] call BIS_fnc_multiplySquareMatrixByVector"}, "BIS_fnc_neutralizeUnit": {"version": "1.00", "tags": "", "description": "Neutralize an object by intrinsic means:", "example": "cursorTarget call BIS_fnc_neutralizeUnit;", "docSyntax": "object call BIS_fnc_neutralizeUnit", "syntax": "<object> call BIS_fnc_neutralizeUnit"}, "BIS_fnc_objectHeight": {"version": "1.00", "tags": "", "description": "Return object height defined by its bounding box and eventual offset fix. For the following classes an offset is used.", "example": "player call BIS_fnc_objectHeight;", "docSyntax": "object call BIS_fnc_objectHeight", "syntax": "<object> call BIS_fnc_objectHeight"}, "BIS_fnc_ObjectInventoryAnimatedClose": {"version": "1.00", "tags": "", "description": "Animates an object being closed, for example a drawer. The counter set by BIS_fnc_objectInventoryAnimatedOpen gets reset when this function is called.", "docSyntax": "[object, animationArray] call BIS_fnc_objectInventoryAnimatedClose", "syntax": "[<object>,animationArray] call BIS_fnc_objectInventoryAnimatedClose"}, "BIS_fnc_ObjectInventoryAnimatedOpen": {"version": "1.00", "tags": "", "description": "Animates an object being opened, for example a drawer. It also sets a counter which prevents animation to be played multiple time if more than one player accesses that drawer.", "docSyntax": "[object, animationArray] call BIS_fnc_objectInventoryAnimatedOpen", "syntax": "[<object>,animationArray] call BIS_fnc_objectInventoryAnimatedOpen"}, "BIS_fnc_objectSide": {"version": "1.00", "tags": "", "description": "Returns object side as defined in config (i.e. not affected by dynamic changing like rating)", "example": "_realVehicleSide = [vehicle player, true] call BIS_fnc_objectSide;", "docSyntax": "[target, boolean] call BIS_fnc_objectSide", "syntax": "[<object>,<bool>] call BIS_fnc_objectSide"}, "BIS_fnc_objectVar": {"version": "1.00", "tags": "", "description": "Return a unique object variable. The variable is preserved after unit respawn.", "example": "hint str (player call BIS_fnc_objectVar); //\u00a0\"bis_o1\" hint str (player == (missionNamespace getVariable \"bis_o1\")); //\u00a0true", "docSyntax": "[object, varNameRoot] call BIS_fnc_objectVar", "syntax": "[<object>,varNameRoot] call BIS_fnc_objectVar"}, "BIS_fnc_onDiaryChanged": {"version": "1.00", "tags": "", "description": "/* Description: Register code to be executed when diary item changes. Arguments passed into code are: 0: DISPLAY - map display 1: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record) 2: STRING - subject name 3: STRING - record name 4: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used) Parameter(s): _this: CODE ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...] NUMBER - remove code of given index Returns: NUMBER - index of onDiaryChanged code */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_onPlayerConnected": {"version": "1.00", "tags": "", "description": "Executes a function on server every time a player connects the mission.", "example": "[ { params [\"_player\", \"_params\"]; hint name _player; hint _params; }, \"Parameter\" ] call BIS_fnc_onPlayerConnected;", "docSyntax": "[code, params]] call BIS_fnc_onPlayerConnected", "syntax": "[<code>,<any>]] call BIS_fnc_onPlayerConnected"}, "BIS_fnc_ORBATAddGroupOverlay": {"version": "1.00", "tags": "", "description": "Register texture(s) to be displayed over CfgORBAT group.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", \"\\A3\\weapons_f\\data\\UI\\icon_MG_CA.paa\", [0,0,01], 3, 3, 0, \"Some Text\", true ] call BIS_fnc_ORBATAddGroupOverlay;", "docSyntax": "[target, texture, colour, widthMulti, heightMulti, angle, text, shadow] call BIS_fnc_ORBATAddGroupOverlay", "syntax": "[<object>,<string>,colour,widthMulti,heightMulti,angle,<string>,shadow] call BIS_fnc_ORBATAddGroupOverlay"}, "BIS_fnc_ORBATAnimate": {"version": "1.00", "tags": "", "description": "Animates an ORBAT viewer.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 0.5, 3 ] spawn BIS_fnc_ORBATAnimate;", "docSyntax": "[target, zoom, duration] spawn BIS_fnc_ORBATAnimate", "syntax": "[<object>,<scalar>,duration] spawn BIS_fnc_ORBATAnimate"}, "BIS_fnc_ORBATConfigPreview": {"version": "1.00", "tags": "", "description": "Opens config viewer and shows CfgORBAT. Used to retrieve CfgOrbat data", "example": "[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\"] call BIS_fnc_ORBATConfigPreview;", "docSyntax": "[class] call BIS_fnc_ORBATConfigPreview", "syntax": "[class] call BIS_fnc_ORBATConfigPreview"}, "BIS_fnc_ORBATGetGroupParams": {"version": "1.00", "tags": "", "description": "Returns group params from CfgORBAT.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\" ] call BIS_fnc_ORBATGetGroupParams;", "docSyntax": "[path] call BIS_fnc_ORBATGetGroupParams", "syntax": "[path] call BIS_fnc_ORBATGetGroupParams"}, "BIS_fnc_ORBATOpen": {"version": "1.00", "tags": "", "description": "Opens the ORBAT Viewer.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\",findDisplay 46, [], 4, [\"ConfigClass_1\",{systemChat \"ConfigClass_1\"}] ] call BIS_fnc_ORBATOpen;", "docSyntax": "[path, display, tags, numTiers, parameters] call BIS_fnc_ORBATOpen", "syntax": "[path,<uiDisplay>,tags,numTiers,parameters] call BIS_fnc_ORBATOpen"}, "BIS_fnc_ORBATRemoveGroupOverlay": {"version": "1.00", "tags": "", "description": "Unregister texture(s) to be displayed over CfgORBAT group.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 4 ] call BIS_fnc_ORBATRemoveGroupOverlay;", "docSyntax": "[path, number] call BIS_fnc_ORBATRemoveGroupOverlay", "syntax": "[path,<scalar>] call BIS_fnc_ORBATRemoveGroupOverlay"}, "BIS_fnc_ORBATSetGroupFade": {"version": "1.00", "tags": "", "description": "Set fade value of CfgORBAT group and all groups below it.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 0.5, 5 ] call BIS_fnc_ORBATSetGroupFade;", "docSyntax": "[path, alpha, time] call BIS_fnc_ORBATSetGroupFade", "syntax": "[path,alpha,<scalar>] call BIS_fnc_ORBATSetGroupFade"}, "BIS_fnc_ORBATSetGroupParams": {"version": "1.00", "tags": "", "description": "Overrides group params from CfgORBAT. See ORBAT Viewer for a detailed explanation.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 1, \"Platoon\", \"Infantry\", \"West\", \"Name: %1 %2 %3\", \"Short Name: %1 %2 %3\", \"b_air\", 3, \"\\A3\\Air_F_EPB\\Heli_Light_03\\data\\UI\\Heli_Light_03_CA.paa\", [0,0,0,1], \"Commander Name\", \"General\", \"Description\", [ [\"B_MRAP_01_F\",5] ] ] call BIS_fnc_ORBATSetGroupParams;", "docSyntax": "[target, IDType, size, type, side, name, shortName, texture, textSizeCoef, insignia, textColour, commName, commRank, description, assets] call BIS_fnc_ORBATSetGroupParams", "syntax": "[<object>,IDType,size,type,<objSide>,<string>,shortName,<string>,textSizeCoef,insignia,textColour,commName,commRank,description,assets] call BIS_fnc_ORBATSetGroupParams"}, "BIS_fnc_ORBATTooltip": {"version": "1.00", "tags": "", "description": "Animates an ORBAT viewer.", "docSyntax": "[target, control, position] call BIS_fnc_ORBATTooltip", "syntax": "[<object>,<uiControl>,position] call BIS_fnc_ORBATTooltip"}, "BIS_fnc_ordinalNumber": {"version": "1.00", "tags": "", "description": "Return number as ordinal number (e.g. 1 become \"1st\")", "example": "_second = [42] call BIS_fnc_ordinalNumber; //\u00a0will return \"42nd\" for English-speaking players", "docSyntax": "[number, language, isFeminine] call BIS_fnc_ordinalNumber", "syntax": "[<scalar>,language,isFeminine] call BIS_fnc_ordinalNumber"}, "BIS_fnc_packStaticWeapon": {"version": "1.00", "tags": "", "description": "This function will make weapon team pack a static weapon. The weapon crew will pack carried weapon (or given weapon if different) and follow leader. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible", "example": "[leader1] call BIS_fnc_packStaticWeapon;", "docSyntax": "[group, weapon, leaderPos] call BIS_fnc_packStaticWeapon", "syntax": "[<objGroup>,<string>,<array>] call BIS_fnc_packStaticWeapon"}, "BIS_fnc_paramCountdown": {"version": "1.00", "tags": "", "description": "Set side mission time.", "example": "360 call BIS_fnc_paramCountdown;", "docSyntax": "number call BIS_fnc_paramCountdown", "syntax": "<scalar> call BIS_fnc_paramCountdown"}, "BIS_fnc_paramDaytime": {"version": "1.00", "tags": "", "description": "Sets time of the day to the hour. Minutes will always be zero.", "example": "_date = 12 call BIS_fnc_paramDaytime;", "docSyntax": "datetime call BIS_fnc_paramDaytime", "syntax": "datetime call BIS_fnc_paramDaytime"}, "BIS_fnc_paramGuerFriendly": {"version": "1.00", "tags": "", "description": "Set relationship between Independents and remaining sides.", "example": "2 call BIS_fnc_paramGuerFriendly;", "docSyntax": "number call BIS_fnc_paramGuerFriendly", "syntax": "<scalar> call BIS_fnc_paramGuerFriendly"}, "BIS_fnc_paramRespawnTickets": {"version": "1.00", "tags": "", "description": "Set side respawn tickets.", "example": "360 call BIS_fnc_paramRespawnTickets;", "docSyntax": "number call BIS_fnc_paramRespawnTickets", "syntax": "<scalar> call BIS_fnc_paramRespawnTickets"}, "BIS_fnc_paramReviveBleedOutDuration": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_bleedOutDuration)", "example": "call BIS_fnc_paramReviveBleedOutDuration;", "docSyntax": "call BIS_fnc_paramReviveBleedOutDuration", "syntax": "call BIS_fnc_paramReviveBleedOutDuration"}, "BIS_fnc_paramReviveDuration": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_duration)", "example": "call BIS_fnc_paramReviveDuration;", "docSyntax": "call BIS_fnc_paramReviveDuration", "syntax": "call BIS_fnc_paramReviveDuration"}, "BIS_fnc_paramReviveForceRespawnDuration": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_forceRespawnDuration)", "example": "call BIS_fnc_paramReviveForceRespawnDuration;", "docSyntax": "call BIS_fnc_paramReviveForceRespawnDuration", "syntax": "call BIS_fnc_paramReviveForceRespawnDuration"}, "BIS_fnc_paramReviveMedicSpeedMultiplier": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_medicSpeedMultiplier)", "example": "call BIS_fnc_paramReviveMedicSpeedMultiplier;", "docSyntax": "call BIS_fnc_paramReviveMedicSpeedMultiplier", "syntax": "call BIS_fnc_paramReviveMedicSpeedMultiplier"}, "BIS_fnc_paramReviveMode": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_mode)", "example": "call BIS_fnc_paramReviveMode;", "docSyntax": "call BIS_fnc_paramReviveMode", "syntax": "call BIS_fnc_paramReviveMode"}, "BIS_fnc_paramReviveRequiredItems": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_requiredItems)", "example": "call BIS_fnc_paramReviveRequiredItems;", "docSyntax": "call BIS_fnc_paramReviveRequiredItems", "syntax": "call BIS_fnc_paramReviveRequiredItems"}, "BIS_fnc_paramReviveRequiredTrait": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_requiredTrait)", "example": "call BIS_fnc_paramReviveRequiredTrait;", "docSyntax": "call BIS_fnc_paramReviveRequiredTrait", "syntax": "call BIS_fnc_paramReviveRequiredTrait"}, "BIS_fnc_paramReviveUnconsciousStateMode": {"version": "1.00", "tags": "", "description": "Grabs server param into global variable. (bis_reviveParam_unconsciousStateMode)", "example": "call BIS_fnc_paramReviveUnconsciousStateMode;", "docSyntax": "call BIS_fnc_paramReviveUnconsciousStateMode", "syntax": "call BIS_fnc_paramReviveUnconsciousStateMode"}, "BIS_fnc_paramTimeAcceleration": {"version": "1.00", "tags": "", "description": "Manages setTimeMultiplier Multiplayer setting (set with paramTimeAcceleration.hpp)", "example": "5 call BIS_fnc_paramTimeAcceleration;", "docSyntax": "timeMultiplier call BIS_fnc_paramTimeAcceleration", "syntax": "timeMultiplier call BIS_fnc_paramTimeAcceleration"}, "BIS_fnc_paramViewDistance": {"version": "1.00", "tags": "", "description": "Set view distance.", "example": "7500 call BIS_fnc_paramViewDistance;", "docSyntax": "viewDistance call BIS_fnc_paramViewDistance", "syntax": "viewDistance call BIS_fnc_paramViewDistance"}, "BIS_fnc_paramWeather": {"version": "1.00", "tags": "", "description": "Sets overcast using BIS_fnc_setOvercast.", "example": "overCastValue = [1] call BIS_fnc_paramWeather;", "docSyntax": "[0] call BIS_fnc_paramWeather", "syntax": "[0] call BIS_fnc_paramWeather"}, "BIS_fnc_phoneticalWord": {"version": "1.00", "tags": "", "description": "Convert number to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\") or letter of alphabet.", "example": "[1] call BIS_fnc_phoneticalWord; //\u00a0Returns \"Alpha\"", "docSyntax": "[integer, short] call BIS_fnc_phoneticalWord", "syntax": "[integer,short] call BIS_fnc_phoneticalWord"}, "BIS_fnc_PlaneAiEject": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - AI behaviour handler. Exucution: - Call the function via attached EH to the aircrfat itself. Example: class Eventhandlers: Eventhandlers { Hit = \"_this call BIS_fnc_planeAiEject\"; }; Requirments: - Compatible aircrfat must have a config definition for all subsytems that will be invoked by ejection system (see BIS_fnc_PlaneEjection). Parameter(s): _this select 0: mode (Scalar) 0: plane/object Returns: nothing Result: AI pilot will be forced to eject from aircrfat upon damage treshold reached. Semi-authenthic behaviour. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_PlaneEjection": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This function is designed to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. Exucution: - Call the function via user action added to the aircrfat itself. class Plane_Eject_UserActionExample { priority = 0.05; shortcut = \"Eject\"; displayName = \"$STR_A3_action_eject\"; condition = \"player in this\"; statement = \"[this] spawn BIS_fnc_planeEjection\"; position = \"pilotcontrol\"; radius = 10; onlyforplayer = 1; showWindow = 0; hideOnUse = 1; }; Requirments: - Compatible aircrfat must have a config definition for all sub-sytems that will be invoked by this function. 1. Old legacy ejection must be disabled in aircrfat's cfgVehicles configuration. driverCanEject = 0; gunnerCanEject = 0; cargoCanEject = 0; 2. Aircrfat must have a set of parameters defined in CfgVehicles subClass (EjectionSystem) for ejection system. Theese parameters will affect the ejection behaviour. example of cfgVehicles subclass definitions; class EjectionSystem { EjectionSeatEnabled = 1; //enable advanced ejection system EjectionDual = 0; //currently only single seat aircraft ejectiion supported (to do for latter) EjectionSeatClass = \"B_Ejection_Seat_Plane_Fighter_01_F\"; //class name of ejector seat to use (separate vehicle/object) CanopyClass = \"Plane_Fighter_01_Canopy_F\"; //class name of canopy to use (separate vehicle/object) EjectionSeatHideAnim = \"ejection_seat_hide\"; //name of the hide animation that will hide ejector seat mesh in plane EjectionSeatRailAnim = \"ejection_seat_motion\"; //name of the animation that will be played to start a smooth ejection motion out of cockpit CanopyHideAnim = \"canopy_hide\"; //name of the hide animation that will hide canopy mesh in plane EjectionSeatPos = \"pos_eject\"; //position memory point whwre to attach ejector seat CanopyPos = \"pos_eject_canopy\"; //position memory point where to attach dummy canopy EjectionSoundExt = \"Plane_Fighter_01_ejection_ext_sound\"; //sound to play when ejection trigered (external) EjectionSoundInt = \"Plane_Fighter_01_ejection_in_sound\"; //sound to play when ejection trigered (in-ternal) EjectionParachute = \"Steerable_Parachute_F\"; //class name parachute used in ejection EjectionSeatForce = 50; //ejection seat blast force CanopyForce = 30; //canopy bast force }; 3. Aircrfat model must have momory points definig positions where to attach new vehicle ejector seat, new vehicle canopy. 4. Aircrfat model (in model cfg & class AnimationSources) must have a set of hide animations defined to hide ejector seat and canopy in model when new seaparate vehicles are spawned. In model.cfg class canopy_hide { type=\"hide\"; source=\"user\"; selection=\"canopy_hide\"; minValue = 0.0; maxValue = 1.0; minPhase = 0.0; maxPhase = 1.0; initPhase = 0; hideValue = 0.001; }; class ejection_seat_hide { type=\"hide\"; source=\"user\"; selection=\"ejection_seat\"; minValue = 0.0; maxValue = 1.0; minPhase = 0.0; maxPhase = 1.0; initPhase = 0; hideValue = 0.001; } In cfgVehicles >> class AnimationSources class canopy_hide { source = \"user\"; animPeriod = 0.001; initPhase = 0; }; class ejection_seat_hide { source = \"user\"; animPeriod = 0.001; initPhase = 0; }; 5. Aircrfat model must have an animation for initial ejection stage, where new ejector seat with pilot is pushed gradualy out of cockpit (done to avaoid PhysX colisions and make this feature look good, rathre than spawnig ejetor seat above plane). New ejector seat with pilot will be attached to this animation (via animated meory point). Memory point EjectionSeatPos must be part of this animated selection. In model.cfg class ejection_seat_motion { type = \"translation\"; source = \"user\"; selection = \"ejection_seat\"; begin = \"tns_ejection_seat\"; end = \"tns_ejection_seat_e\"; animPeriod = 0; memory = 1; minValue = 0.0; maxValue = 1.0; offset0 = 0.0; offset1 = 3.0; }; In cfgVehicles >> class AnimationSources class ejection_seat_motion { source = \"user\"; animPeriod = 0.25; initPhase = 0; }; 6. Ejector seat and canopy must be created/defined as separate objects. Can be reused. Parameter(s): _this select 0: mode (Scalar) 0: plane/object other parameters are gathered from configuration files. Returns: nothing Result: Pilot will be ejected from aircraft. Semi-authenthic behaviour. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_PlaneEjectionFX": {"version": "1.00", "tags": "", "description": "/* Author: Bravo Zero One development - John_Spartan Description: - This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured. - Function created to add FX (sound/particles) for ejection feature. Exucution: - Call from within the main ejection fnc (on demand). Example: [_plane, _ejectionSeat] spawn BIS_fnc_planeEjectionFX; Requirments: - Compatible ejector seat must have a hide animation for rocket motor flash and position for FX to be attached. (TO DO PARAMETARIZE) Inehector seats model.cfg class Animations { class Rocket_Flash_hide { type = \"hide\"; source = \"user\"; selection = \"rocket_flash\"; sourceAddress = \"mirror\"; minValue = -1.5; maxValue = 0; hideValue = 0.99; }; }; Parameter(s): _this select 0: mode (Scalar) 0: plane/object 1: ejector seat/object Returns: nothing Result: Set of particle FX and sound FX will be aplied to ejection feature. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_playEndMusic": {"version": "1.00", "tags": "", "description": "Play mission end music (when it is nearing the end)", "example": "true call BIS_fnc_playEndMusic;", "docSyntax": "play call BIS_fnc_playEndMusic", "syntax": "play call BIS_fnc_playEndMusic"}, "BIS_fnc_playMusic": {"version": "1.00", "tags": "", "description": "Plays given song.", "example": "[\"LeadTrack04_F\",10,0.5] call BIS_fnc_playMusic; //Song starts at 10 seconds with 50% volume.", "docSyntax": "[class,start,volume] call BIS_fnc_playMusic", "syntax": "[class,start,volume] call BIS_fnc_playMusic"}, "BIS_fnc_playSound": {"version": "1.00", "tags": "", "description": "Plays given sound. Identical to playSound.", "example": "\"3DEN_visionMode\" call BIS_fnc_playSound;", "docSyntax": "[sound, forced] call BIS_fnc_playSound", "syntax": "[sound,forced] call BIS_fnc_playSound"}, "BIS_fnc_pow": {"version": "1.00", "tags": "", "description": "Return value1 raised to the power of value2. Identical to a ^ b.", "example": "[2, 10] call BIS_fnc_pow; //\u00a0returns 2^10 = 1024", "docSyntax": "[value1, value2] call BIS_fnc_pow", "syntax": "[value1,value2] call BIS_fnc_pow"}, "BIS_fnc_preload": {"version": "1.00", "tags": "", "description": "Start automatic loading screen upon mission start. On client, it will finish only when server is finished.", "example": "call BIS_fnc_preload;", "docSyntax": "call BIS_fnc_preload", "syntax": "call BIS_fnc_preload"}, "BIS_fnc_prepareAO": {"version": "1.00", "tags": "", "description": "Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).", "example": "0.75 call BIS_fnc_prepareAO;", "docSyntax": "density call BIS_fnc_prepareAO", "syntax": "density call BIS_fnc_prepareAO"}, "BIS_fnc_pulsate": {"version": "1.00", "tags": "", "description": "Pulsates a value from 0 to 1.", "example": "200 call BIS_fnc_pulsate; //\u00a00.113001", "docSyntax": "[frequency] call BIS_fnc_pulsate", "syntax": "[frequency] call BIS_fnc_pulsate"}, "BIS_fnc_quotations": {"version": "1.00", "tags": "", "description": "Display a quotation video.", "example": "[\"a3\\missions_f_mark\\video\\ffv.ogv\"] spawn BIS_fnc_quotations;", "docSyntax": "[videoPath, subtitle] call BIS_fnc_quotations", "syntax": "[videoPath,subtitle] call BIS_fnc_quotations"}, "BIS_fnc_radialRed": {"version": "1.00", "tags": "", "description": "Red radial postprocess (hit damage, fire damage). Parameters are the same as the first four of HandleDamage EH.", "example": "player addEventHandler [\"HandleDamage\", { _this call BIS_fnc_radialRed; }];", "docSyntax": "[victim, bodyPart, damage, shooter] call BIS_fnc_radialRed", "syntax": "[victim,bodyPart,<scalar>,shooter] call BIS_fnc_radialRed"}, "BIS_fnc_radialRedOut": {"version": "1.00", "tags": "", "description": "Removes red radial postprocess (fire damage) created by BIS_fnc_radialRed.", "example": "call BIS_fnc_radialRedOut;", "docSyntax": "call BIS_fnc_radialRedOut", "syntax": "call BIS_fnc_radialRedOut"}, "BIS_fnc_randomPos": {"version": "1.00", "tags": "", "description": "Selects random position according to given params within given area", "example": "_randomPosMapNoWater = [] call BIS_fnc_randomPos;", "docSyntax": "[whitelist, blacklist, code] call BIS_fnc_randomPos", "syntax": "[whitelist,blacklist,<code>] call BIS_fnc_randomPos"}, "BIS_fnc_rankParams": {"version": "1.00", "tags": "", "description": "Return information about military rank. 1: STRING - requited data, can be one of following: \"displayName\" - full localized name (e.g. \"Major\") \"displayNameShort\" - short localized name (e.g. \"Maj.\") \"classname\" - system name (e.g. \"MAJOR\") \"texture\" - path to rank insignia", "example": "_shortRank = [player, \"displayNameShort\"] call BIS_fnc_rankParams;", "docSyntax": "[source, infoType] call BIS_fnc_rankParams", "syntax": "[source,infoType] call BIS_fnc_rankParams"}, "BIS_fnc_relPosObject": {"version": "1.00", "tags": "", "description": "Place an object relative to another object, like a setRelPos command.", "example": "[BIS_briefingTable, BIS_map, [0, -0.58, 0.857], 98] call BIS_fnc_relPosObject;", "docSyntax": "[parent, child, relPos, direction] call BIS_fnc_relPosObject", "syntax": "[parent,child,relPos,direction] call BIS_fnc_relPosObject"}, "BIS_fnc_relScaledDist": {"version": "1.00", "tags": "", "description": "Exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger. This function can be used to check where in a trigger area an object is. Is it near the border of the trigger area the number will go against 0.", "example": "[ myTrigger, player ] call BIS_fnc_relScaledDist;", "docSyntax": "[referenceObject, relativeObject] call BIS_fnc_relScaledDist", "syntax": "[referenceObject,relativeObject] call BIS_fnc_relScaledDist"}, "BIS_fnc_removeAllScriptedEventHandlers": {"version": "1.00", "tags": "", "description": "Removes all scripted event handler with given name. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called for every removed event handler. For the list of available scripted event handlers see Arma 3: Scripted Event Handlers", "example": "[missionNamespace, \"event\"] call BIS_fnc_removeAllScriptedEventHandlers;", "docSyntax": "[namespace, name] call BIS_fnc_removeAllScriptedEventHandlers", "syntax": "[namespace,<string>] call BIS_fnc_removeAllScriptedEventHandlers"}, "BIS_fnc_removeFromPairs": {"version": "1.00", "tags": "", "description": "Removes an item from pair array modifying original array. This can be overriden by setting '_copyArray' param to true.", "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\"] call BIS_fnc_removeFromPairs; //\u00a0Returns [[\"apple\",3]]", "docSyntax": "[array, key, copyArray] call BIS_fnc_removeFromPairs", "syntax": "[<array>,key,copyArray] call BIS_fnc_removeFromPairs"}, "BIS_fnc_removeScriptedEventHandler": {"version": "1.00", "tags": "", "description": "Removes scripted event handler with given name and id. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called. For the list of available scripted event handlers see Arma 3: Scripted Event Handlers", "example": "[missionNamespace, \"event\", 2] call BIS_fnc_removeScriptedEventHandler;", "docSyntax": "[namespace, name, id] call BIS_fnc_removeScriptedEventHandler", "syntax": "[namespace,<string>,<scalar>] call BIS_fnc_removeScriptedEventHandler"}, "BIS_fnc_removeStackedEventHandler": {"version": "1.00", "tags": "", "description": "Removes a stacked event handler with specified custom id.", "example": "[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;", "docSyntax": "[id, event] call BIS_fnc_removeStackedEventHandler", "syntax": "[<scalar>,event] call BIS_fnc_removeStackedEventHandler"}, "BIS_fnc_respawnBase": {"version": "1.00", "tags": "", "description": "\u24d8", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnConfirm": {"version": "1.00", "tags": "", "description": "Shows a message box which the user needs to accept in order to respawn.", "example": "[3] spawn BIS_fnc_respawnConfirm;", "docSyntax": "[respawnDelay] spawn BIS_fnc_respawnConfirm", "syntax": "[respawnDelay] spawn BIS_fnc_respawnConfirm"}, "BIS_fnc_respawnCounter": {"version": "1.00", "tags": "", "description": "Set or execute respawn counter params.", "example": "[\"Some text\", 2] call BIS_fnc_respawnCounter;", "docSyntax": "[text,colour] call BIS_fnc_respawnCounter", "syntax": "[<string>,colour] call BIS_fnc_respawnCounter"}, "BIS_fnc_respawnEndMission": {"version": "1.00", "tags": "", "description": "End a mission if all players are dead and there are no more respawn tickets (if any).", "example": "call BIS_fnc_respawnEndMission;", "docSyntax": "call BIS_fnc_respawnEndMission", "syntax": "call BIS_fnc_respawnEndMission"}, "BIS_fnc_respawnGroup": {"version": "1.00", "tags": "", "description": "Camera script used by the \"group respawn\" template - when the player dies and gets transferred to the new group member.", "example": "//\u00a0in onPlayerRespawn.sqf params [\"_newUnit\", \"_oldUnit\", \"_respawn\", \"_respawnDelay\"]; [_oldUnit, _newUnit] spawn BIS_fnc_respawnGroup;", "docSyntax": "[oldUnit, newUnit] call BIS_fnc_respawnGroup", "syntax": "[oldUnit,newUnit] call BIS_fnc_respawnGroup"}, "BIS_fnc_respawnInstant": {"version": "1.00", "tags": "", "description": "\u24d8", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnMenuInventory": {"version": "1.00", "tags": "", "description": "Handles respawn inventory menu.", "example": "[player,5] call BIS_fnc_respawnMenuInventory;", "docSyntax": "[player, respawnDelay, revive] call BIS_fnc_respawnMenuInventory", "syntax": "[<objUnit>,respawnDelay,revive] call BIS_fnc_respawnMenuInventory"}, "BIS_fnc_respawnMenuPosition": {"version": "1.00", "tags": "", "description": "Shows respawn menu. Closes it if the player is alive.", "example": "[player,5] call BIS_fnc_respawnMenuPosition;", "docSyntax": "[player, respawnDelay, revive] call BIS_fnc_respawnMenuPosition", "syntax": "[<objUnit>,respawnDelay,revive] call BIS_fnc_respawnMenuPosition"}, "BIS_fnc_respawnMenuSpectator": {"version": "1.00", "tags": "", "description": "Handles the spectator mode.", "example": "[player,5] call BIS_fnc_respawnMenuSpectator;", "docSyntax": "[player, respawnDelay] call BIS_fnc_respawnMenuSpectator", "syntax": "[<objUnit>,respawnDelay] call BIS_fnc_respawnMenuSpectator"}, "BIS_fnc_respawnNone": {"version": "1.00", "tags": "", "description": "Create a death screen.", "example": "[player, someUnit] spawn BIS_fnc_respawnNone;", "docSyntax": "[killed, killer] spawn BIS_fnc_respawnNone", "syntax": "[<objUnit>,<objUnit>] spawn BIS_fnc_respawnNone"}, "BIS_fnc_respawnRounds": {"version": "1.00", "tags": "", "description": "/* Description: Disable respawn until players of only one side (including its allies) remains, then respawn everyone at once. When \"Rounds\" respawn is used by only one side, wait until all its players are dead. Parameter(s): BOOL - true to force round end SIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings) ARRAY - empty array to return if a round is still on (players of more than one involved faction are alive) */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnSeagull": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnSide": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnSpectator": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnTimePenalty": {"version": "1.00", "tags": "", "description": "/* Description: Set or execute respawn time penalty Parameter(s): 0: CODE - penalty condition 1: NUMBER - penalty delay 2: TEXT - text displayed when penalty is in effect Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_respawnWave": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_returnChildren": {"version": "1.00", "tags": "", "description": "Returns all subclasses within given class.", "example": "[configFile >> \"CfgFunctions\", 2] call BIS_fnc_returnChildren; //\u00a0returns config paths of all functions", "docSyntax": "[config, depth, lastTier, firstTier] call BIS_fnc_returnChildren", "syntax": "[config,depth,lastTier,firstTier] call BIS_fnc_returnChildren"}, "BIS_fnc_romanNumeral": {"version": "1.00", "tags": "", "description": "Convert integer to roman numeral (e.g. 42 becomes \"XLII\").", "example": "1 call BIS_fnc_romanNumeral; //\u00a0returns \"I\"", "docSyntax": "integer call BIS_fnc_romanNumeral", "syntax": "integer call BIS_fnc_romanNumeral"}, "BIS_fnc_rotateVector3D": {"version": "1.00", "tags": "", "description": "Rotates the vector around the given axis by the given angle", "example": "[vectorDir player, 90, 2] call BIS_fnc_rotateVector3D;", "docSyntax": "[vector, angle, axis] call BIS_fnc_rotateVector3D", "syntax": "[vector,angle,axis] call BIS_fnc_rotateVector3D"}, "BIS_fnc_rscLayer": {"version": "1.00", "tags": "", "description": "Register RSC layer and returns a unique ID.", "example": "_id = [\"myLayerName\"] call BIS_fnc_rscLayer;", "docSyntax": "[layerName] call BIS_fnc_rscLayer", "syntax": "[layerName] call BIS_fnc_rscLayer"}, "BIS_fnc_saveInventory": {"version": "1.00", "tags": "", "description": "Save unit's loadout.", "example": "[ player, [missionNamespace, \"BIS_inv\"], [], true ] call BIS_fnc_saveInventory;", "docSyntax": "[unit,input,params,delete] call BIS_fnc_saveInventory", "syntax": "[<objUnit>,input,<any>,delete] call BIS_fnc_saveInventory"}, "BIS_fnc_saveVehicle": {"version": "1.00", "tags": "", "description": "Save vehicle's params (textures, animations, crew).", "example": "[BIS_tank, [missionNamespace, \"BIS_someTankSave\"], [\"SomeRandomParam\"], false ] call BIS_fnc_saveVehicle;", "docSyntax": "[object,target,params,delete] call BIS_fnc_saveVehicle", "syntax": "[<object>,<object>,<any>,delete] call BIS_fnc_saveVehicle"}, "BIS_fnc_sayMessage": {"version": "1.00", "tags": "", "description": "Make a speaker say a message.", "example": "[leader player, \"to_c01_m01_brief_001_br_briefing_a_CENTAUR_0\", \"say3D\"] call BIS_fnc_sayMessage;", "docSyntax": "[speaker, message, channel] call BIS_fnc_sayMessage", "syntax": "[speaker,message,channel] call BIS_fnc_sayMessage"}, "BIS_fnc_scriptedWaypointType": {"version": "1.00", "tags": "", "description": "Return CfgWaypoints type of scripted waypoint. Returns empty string/config when waypoint is not scripted Returns \"Custom\"/CfgWaypoints root when waypoint is using custom script.", "example": "[BIS_scripted_WP_01,\"returnString\"] call BIS_fnc_scriptedWaypointType;", "docSyntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType", "syntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType"}, "BIS_fnc_selectDiarySubject": {"version": "1.00", "tags": "", "description": "Selects a diary subject.", "example": "[\"someSubject\"] call BIS_fnc_selectDiarySubject;", "docSyntax": "[diaryName] call BIS_fnc_selectDiarySubject", "syntax": "[diaryName] call BIS_fnc_selectDiarySubject"}, "BIS_fnc_selectRespawnTemplate": {"version": "1.00", "tags": "", "description": "Select respawn template from CfgRespawnTemplates and execute its script / function. Internal use.", "example": "[\"playerKilledScript\", []] call BIS_fnc_selectRespawnTemplate;", "docSyntax": "[mode, arguments] call BIS_fnc_selectRespawnTemplate", "syntax": "[mode,arguments] call BIS_fnc_selectRespawnTemplate"}, "BIS_fnc_setDate": {"version": "1.00", "tags": "", "description": "Instantly set date and share it across network with optional transition effect.", "example": "[[2035, 12, 31, 23, 59], true, true] call BIS_fnc_setDate;", "docSyntax": "[value, global, transition] call BIS_fnc_setDate", "syntax": "[<scalar>,global,transition] call BIS_fnc_setDate"}, "BIS_fnc_setFog": {"version": "1.00", "tags": "", "description": "Instantly set weather conditions and share it across network.", "example": "[1,1,100] call BIS_fnc_setFog; //\u00a0returns [1,1,100]", "docSyntax": "[strength, density, altitude] call BIS_fnc_setFog", "syntax": "[strength,density,<scalar>] call BIS_fnc_setFog"}, "BIS_fnc_setIDCStreamFriendly": {"version": "1.00", "tags": "", "description": "Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.", "example": "[ (findDisplay 1337) displayCtrl 42 ] call BIS_fnc_setIDCStreamFriendly;", "docSyntax": "[target,IDC] call BIS_fnc_setIDCStreamFriendly", "syntax": "[<object>,<scalar>] call BIS_fnc_setIDCStreamFriendly"}, "BIS_fnc_setIdentity": {"version": "1.00", "tags": "", "description": "Sets the unit's identity.", "example": "[player, \"Kerry\", \"Male01ENGB\", 1.05, \"Big Daddy\"] call BIS_fnc_setIdentity;", "docSyntax": "[object, face, speaker, pitch, callsign] call BIS_fnc_setIdentity", "syntax": "[<object>,face,speaker,pitch,callsign] call BIS_fnc_setIdentity"}, "BIS_fnc_setObjectRotation": {"version": "1.00", "tags": "", "description": "Set object rotation.", "example": "[cursorObject, [100,100,100]] call BIS_fnc_setObjectRotation;", "docSyntax": "[object, rotation] call BIS_fnc_setObjectRotation", "syntax": "[<object>,<array>] call BIS_fnc_setObjectRotation"}, "BIS_fnc_setObjectTexture": {"version": "1.00", "tags": "", "description": "Set object textures.", "example": "[player, \"#(rgb,8,8,3)color(0,0,1,1)\"] call BIS_fnc_setObjectTexture;", "docSyntax": "[object, textures] call BIS_fnc_setObjectTexture", "syntax": "[<object>,textures] call BIS_fnc_setObjectTexture"}, "BIS_fnc_setOvercast": {"version": "1.00", "tags": "", "description": "Instantly set weather conditions and share it across network. Must be executed in scheduled environment.", "example": "[0.5] call BIS_fnc_setOvercast;", "docSyntax": "[value] call BIS_fnc_setOvercast", "syntax": "[<scalar>] call BIS_fnc_setOvercast"}, "BIS_fnc_setPPeffectTemplate": {"version": "1.00", "tags": "", "description": "Apply post-process effects according to template from CfgPostprocessTemplates.", "example": "[\"Mediterranean\", 3, false] call BIS_fnc_setPPeffectTemplate;", "docSyntax": "[template, transition, global] call BIS_fnc_setPPeffectTemplate", "syntax": "[template,transition,global] call BIS_fnc_setPPeffectTemplate"}, "BIS_fnc_setRank": {"version": "1.00", "tags": "", "description": "Set rank of vehicle crew.", "example": "[ vehicle player, \"Captain\" ] call BIS_fnc_setRank;", "docSyntax": "[target, rank] call BIS_fnc_setRank", "syntax": "[<object>,rank] call BIS_fnc_setRank"}, "BIS_fnc_setRespawnDelay": {"version": "1.00", "tags": "", "description": "/* Description: Increase the respawn time based on a condition Parameter(s): 0: CODE - Condition, must return BOOL 1: NUMBER - delay in seconds which is applied when the condition is true 2: STRING - description displayed when the delay is in effect Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_setServerVariable": {"version": "1.00", "tags": "", "description": "Set variable stored only on server. Clients can the download it using BIS_fnc_getServerVariable. Used when you want to share variables only to specific clients to prevent large traffic.", "example": "[nil, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;", "docSyntax": "[namespace, varName, value] call BIS_fnc_setServerVariable", "syntax": "[namespace,varName,<scalar>] call BIS_fnc_setServerVariable"}, "BIS_fnc_setTask": {"version": "1.00", "tags": "", "description": "Set task parameters.", "example": "[\"Task_01\", true, [\"Protect the respawn point.\",\"Respawn Point West\",\"respawn_west\"], [MHQ,false], \"ASSIGNED\", 5, true, true, \"Defend\", true] call BIS_fnc_setTask;", "docSyntax": "[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call BIS_fnc_setTask", "syntax": "[taskId,<object>,description,(destination,state,priority,showNotification,isGlobal,type,visibleIn3D)] call BIS_fnc_setTask"}, "BIS_fnc_setTaskLocal": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_setToPairs": {"version": "1.00", "tags": "", "description": "Works similar to the BIS_fnc_addToPairs but it doesn't try to add values. It just overwrites the volue if the key already exists.", "example": "[[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs; //\u00a0Returns [[\"apple\",3],[\"pear\",10]]", "docSyntax": "[array, key, newValue] call BIS_fnc_setToPairs", "syntax": "[<array>,key,newValue] call BIS_fnc_setToPairs"}, "BIS_fnc_setVehicleMass": {"version": "1.00", "tags": "", "description": "Set mass relative to the default vehicle mass (default mass being vehicle mass on first execution of this function).", "example": "//\u00a0default behaviour, change the mass according to the current phase of the animation sources result = [this] call BIS_fnc_setVehicleMass; result = [this, [], 0] call BIS_fnc_setVehicleMass;", "docSyntax": "[vehicle, animationInformation, massDifference] call BIS_fnc_setVehicleMass", "syntax": "[<objVehicle>,animationInformation,massDifference] call BIS_fnc_setVehicleMass"}, "BIS_fnc_sharedObjectives": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_showMarkers": {"version": "1.00", "tags": "", "description": "Show or hide given markers using fade effect.", "example": "[\"hide\", [\"respawn_west\", \"respawn_east\"]] call BIS_fnc_showMarkers;", "docSyntax": "[action, markers] call BIS_fnc_showMarkers", "syntax": "[action,markers] call BIS_fnc_showMarkers"}, "BIS_fnc_showRespawnMenu": {"version": "1.00", "tags": "", "description": "Triggers the respawn screen in the given mode", "example": "[\"open\"] call BIS_fnc_showRespawnMenu; //\u00a0spawn does work as well", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuDisableItemCheck": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuDisableItemDraw": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuHeader": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventory": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryDetails": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryItems": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryLimit": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryLimitRefresh": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryLimitRespawn": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryList": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryLoadout": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuInventoryMetadata": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuPosition": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuPositionList": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuPositionMap": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuPositionMapDraw": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_showRespawnMenuPositionMapHandle": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showRespawnMenuPositionMetadata": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_showRespawnMenuPositionName": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_showRespawnMenuPositionRefresh": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_showSubtitle": {"version": "1.00", "tags": "", "description": "Displays a subtitle at the bottom of the screen.", "example": "[\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go, Crossroad, out.\"] spawn BIS_fnc_showSubtitle;", "docSyntax": "[name, subtitle] spawn BIS_fnc_showSubtitle", "syntax": "[<string>,subtitle] spawn BIS_fnc_showSubtitle"}, "BIS_fnc_showUnitInfo": {"version": "1.00", "tags": "", "description": "Hides or shows weapon information. Also hides grenades information.", "example": "false call BIS_fnc_showUnitInfo; //\u00a0hides weapon information", "docSyntax": "[showUnitInfo] call BIS_fnc_showUnitInfo", "syntax": "[showUnitInfo] call BIS_fnc_showUnitInfo"}, "BIS_fnc_showWelcomeScreen": {"version": "1.00", "tags": "", "description": "Show welcome screen. Used in the main menu (works fine in Eden Editor).", "example": "[findDisplay 313, true] call BIS_fnc_showWelcomeScreen;", "docSyntax": "[display, forceLatest] call BIS_fnc_showWelcomeScreen", "syntax": "[<uiDisplay>,forceLatest] call BIS_fnc_showWelcomeScreen"}, "BIS_fnc_sideColor": {"version": "1.00", "tags": "", "description": "Returns colour of define side either as Array in format RGBA or the name of the colour as String", "example": "[blufor, false] call BIS_fnc_sideColor; //\u00a0returns [0,0.3,0.6,1]", "docSyntax": "[side, returnString] call BIS_fnc_sideColor", "syntax": "[<objSide>,returnString] call BIS_fnc_sideColor"}, "BIS_fnc_sideID": {"version": "1.00", "tags": "", "description": "Return config side number.", "example": "west call BIS_fnc_sideID; //\u00a0returns 1", "docSyntax": "testedSide call BIS_fnc_sideID", "syntax": "testedSide call BIS_fnc_sideID"}, "BIS_fnc_sideName": {"version": "1.00", "tags": "", "description": "Returns localized side name.", "example": "[2] call BIS_fnc_sideName;", "docSyntax": "[sideNumber] call BIS_fnc_sideName", "syntax": "[sideNumber] call BIS_fnc_sideName"}, "BIS_fnc_sideNameUnlocalized": {"version": "1.00", "tags": "", "description": "Returns unlocalized side name.", "example": "west call BIS_fnc_sideNameUnlocalized;//Returns \"WEST\"", "docSyntax": "input call BIS_fnc_sideNameUnlocalized", "syntax": "input call BIS_fnc_sideNameUnlocalized"}, "BIS_fnc_sideType": {"version": "1.00", "tags": "", "description": "Returns side type based on side ID. See BIS_fnc_sideID for more information.", "example": "0 call BIS_fnc_sideType; //\u00a0returns EAST", "docSyntax": "sideID call BIS_fnc_sideType", "syntax": "sideID call BIS_fnc_sideType"}, "BIS_fnc_SingleWingSlideDoorClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_singleWingSlideDoorClose", "syntax": "[] call BIS_fnc_singleWingSlideDoorClose"}, "BIS_fnc_SingleWingSlideDoorOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_singleWingSlideDoorOpen", "syntax": "[] call BIS_fnc_singleWingSlideDoorOpen"}, "BIS_fnc_skirmishTrigger": {"version": "1.00", "tags": "", "description": "An internally used .fsm.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_spawnObjects": {"version": "1.00", "tags": "", "description": "Create a stack of objects at given position or on top of given object (eg. table).", "example": "_randomPos = [(random 0.2) -0.1, (random 0.2) -0.1, 0]; _objects = [[_table, \"TOP\"], \"Box_NATO_Wps_F\", 3, _randomPos,(random 20)-10] call BIS_fnc_spawnObjects;", "docSyntax": "[position, className, count, offsetMatrix, offsetDir, dirNoise, enableSimulation] call BIS_fnc_spawnObjects", "syntax": "[position,className,count,offsetMatrix,offsetDir,dirNoise,enableSimulation] call BIS_fnc_spawnObjects"}, "BIS_fnc_splitString": {"version": "1.00", "tags": "", "description": "Splits given string according to given separator(s).", "example": "[\"this is a test\", \" \"] call BIS_fnc_splitString; // returns [\"this\", \"is\", \"a\", \"test\"]", "docSyntax": "[stringToSplit, separators, byWord] call BIS_fnc_splitString", "syntax": "[stringToSplit,separators,byWord] call BIS_fnc_splitString"}, "BIS_fnc_stalk": {"version": "1.00", "tags": "", "description": "Continuously set WP of one group to a different group to hunt it. It does not change the group's behaviour.", "example": "_stalking = [BIS_grpStalkers, BIS_grpPlayer] spawn BIS_fnc_stalk;", "docSyntax": "[stalker, stalked, refresh, radius, endCondition, endDestination] spawn BIS_fnc_stalk", "syntax": "[stalker,stalked,refresh,radius,endCondition,endDestination] spawn BIS_fnc_stalk"}, "BIS_fnc_storeParamsValues": {"version": "1.00", "tags": "", "description": "Parses mission params and stores them into public variable \"BIS_fnc_storeParamsValues_data\". Use BIS_fnc_getParamValue to retrieve params values from the variable.", "example": "call BIS_fnc_storeParamsValues;", "docSyntax": "call BIS_fnc_storeParamsValues", "syntax": "call BIS_fnc_storeParamsValues"}, "BIS_fnc_StrategicMapAnimate": {"version": "1.00", "tags": "", "description": "Animates a Strategic Map.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", 5] spawn BIS_fnc_strategicMapAnimate;", "docSyntax": "[target,time] spawn BIS_fnc_strategicMapAnimate", "syntax": "[<object>,<scalar>] spawn BIS_fnc_strategicMapAnimate"}, "BIS_fnc_StrategicMapMouseButtonClick": {"version": "1.00", "tags": "", "description": "Internal function used by BIS_fnc_strategicMapOpen.", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_StrategicMapOpen": {"version": "1.00", "tags": "", "description": "Creates a strategic map.", "example": "[ findDisplay 46, [2000,2000,0], [ [ [2000,2000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"1st Mission\", \"This is mission one\", \"Name of mission's player\", \"\\A3\\Data_F_Exp\\Logos\\arma3_exp_icon_ca.paa\", 1.5, [ player ] ], [ [1000,1000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"2nd Mission\", \"This is mission two\", \"Name of mission's player\", \"\\A3\\Data_F_Argo\\Logos\\arma3_argo_logoTitle_ca.paa\", 1.5, [ player ] ] ], [ [ [3000,3000,0], configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1\", [], 10 ] ], [ \"marker_1\", \"marker_2\" ], [ [ \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\", [0,0,0,1], [4000,4000,0], 8, 8, 0, \"Arma 3 Logo\", true ] ], 0, false, 1, true, \"Strategic Map Example\", false, \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\" ] call BIS_fnc_strategicMapOpen;", "docSyntax": "[display,pos,missions,ORBATs,markers,images,weather,night,scale,simulation,label,missionName,missionIcon] call BIS_fnc_strategicMapOpen", "syntax": "[<uiDisplay>,<array>,missions,ORBATs,markers,images,weather,night,<scalar>,simulation,label,missionName,missionIcon] call BIS_fnc_strategicMapOpen"}, "BIS_fnc_subClasses": {"version": "1.00", "tags": "", "description": "Same function as BIS_fnc_returnChildren", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_synchronizedObjects": {"version": "1.00", "tags": "", "description": "Get all objects of given type directly synchronized to the given object. Works in Eden Editor too.", "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_synchronizedObjects;", "docSyntax": "[object,filter,preciseMatch] call BIS_fnc_synchronizedObjects", "syntax": "[<object>,filter,preciseMatch] call BIS_fnc_synchronizedObjects"}, "BIS_fnc_synchronizedObjectsQueue": {"version": "1.00", "tags": "", "description": "/* Author: Jiri Wainar Description: Return sequence of all synchronized objects forming either line or circle. Parameter(s): 0: OBJECT - starting object 1: STRING or ARRAY of STRINGs (Optional) - object types that are considered 2: BOOL (Optional) - class filter uses exact match true (default): objects need to match exectly one of the filter classes false: exact match is not required, objects can inherit from one of the listed classes 3: NUMBER (Optional) - expected connection shape 0 (default): none, can be either line or circle 1: line expected 2: circle expected Returns: ARRAY of OBJECTs or empty ARRAY if error is encountered Errors: * There are more then 2 objects matching class filter connected. * Circle is required but closing connection is not detected. Example: [_start,[\"ModuleToWAreaVertex_F\",\"ModuleToWAreaOptions_F\"],true,0] call BIS_fnc_synchronizedObjectsQueue; */", "docSyntax": "[] call BIS_fnc_synchronizedObjectsQueue", "syntax": "[] call BIS_fnc_synchronizedObjectsQueue"}, "BIS_fnc_target": {"version": "1.00", "tags": "", "description": "Target Board display", "example": "//\u00a0open the Score Board [\"uiOpen\", [myTarget]] call BIS_fnc_target;", "docSyntax": "[action, parameters] call BIS_fnc_target", "syntax": "[action,parameters] call BIS_fnc_target"}, "BIS_fnc_taskAlwaysVisible": {"version": "1.00", "tags": "", "description": "Returns true if task is forced to be always visible (default: false).", "example": "_isForcedVisible = \"task_1\" call BIS_fnc_taskAlwaysVisible;", "docSyntax": "taskID call BIS_fnc_taskAlwaysVisible", "syntax": "taskID call BIS_fnc_taskAlwaysVisible"}, "BIS_fnc_taskChildren": {"version": "1.00", "tags": "", "description": "Return a task's sub-tasks.", "example": "\"task_1\" call BIS_fnc_taskChildren;", "docSyntax": "taskID call BIS_fnc_taskChildren", "syntax": "taskID call BIS_fnc_taskChildren"}, "BIS_fnc_taskCompleted": {"version": "1.00", "tags": "", "description": "Returns true if task has been completed.", "example": "_completed = \"task_1\" call BIS_fnc_taskCompleted;", "docSyntax": "taskID call BIS_fnc_taskCompleted", "syntax": "taskID call BIS_fnc_taskCompleted"}, "BIS_fnc_taskCreate": {"version": "1.00", "tags": "", "description": "Create a task.", "example": "[civilian, \"task1\", [\"Do this and you get a cookie\", \"Earn Cookie\", \"cookiemarker\"], [0,0,0], \"ASSIGNED\", 2, true] call BIS_fnc_taskCreate;", "docSyntax": "[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call BIS_fnc_taskCreate", "syntax": "[owner,taskID,description,destination,state,priority,showNotification,type,visibleIn3D] call BIS_fnc_taskCreate"}, "BIS_fnc_taskCurrent": {"version": "1.00", "tags": "", "description": "Returns unit's current task.", "example": "_currentTask = player call BIS_fnc_taskCurrent;", "docSyntax": "unit call BIS_fnc_taskCurrent", "syntax": "<objUnit> call BIS_fnc_taskCurrent"}, "BIS_fnc_taskDescription": {"version": "1.00", "tags": "", "description": "Return a task's description.", "example": "\"BIS_task_01\" call BIS_fnc_taskDescription;", "docSyntax": "taskName call BIS_fnc_taskDescription", "syntax": "<string> call BIS_fnc_taskDescription"}, "BIS_fnc_taskDestination": {"version": "1.00", "tags": "", "description": "Return a task's destination.", "example": "\"BIS_task_01\" call BIS_fnc_taskDestination;", "docSyntax": "taskName call BIS_fnc_taskDestination", "syntax": "<string> call BIS_fnc_taskDestination"}, "BIS_fnc_taskExists": {"version": "1.00", "tags": "", "description": "Return true if a task exists.", "example": "_exists = [\"MyTask\"] call BIS_fnc_taskExists;", "docSyntax": "[taskName] call BIS_fnc_taskExists", "syntax": "[<string>] call BIS_fnc_taskExists"}, "BIS_fnc_taskHint": {"version": "1.00", "tags": "", "description": "Shows a task hint.", "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskHint;", "docSyntax": "[taskName, taskState] call BIS_fnc_taskHint", "syntax": "[<string>,taskState] call BIS_fnc_taskHint"}, "BIS_fnc_taskParent": {"version": "1.00", "tags": "", "description": "Return a sub-task's parent task.", "example": "\"BIS_task_01\" call BIS_fnc_taskParent;", "docSyntax": "taskName call BIS_fnc_taskParent", "syntax": "<string> call BIS_fnc_taskParent"}, "BIS_fnc_taskReal": {"version": "1.00", "tags": "", "description": "Find the actual task associated with a task name assigned to a unit.", "example": "[ \"testTask\", player ] call BIS_fnc_taskReal; //Returns Task testTask (id 0)", "docSyntax": "[taskName, owner] call BIS_fnc_taskReal", "syntax": "[<string>,owner] call BIS_fnc_taskReal"}, "BIS_fnc_taskSetCurrent": {"version": "1.00", "tags": "", "description": "Set a task to current. Identical to assigning a task.", "example": "\"BIS_task_01\" call BIS_fnc_taskSetCurrent;", "docSyntax": "taskName call BIS_fnc_taskSetCurrent", "syntax": "<string> call BIS_fnc_taskSetCurrent"}, "BIS_fnc_taskSetDescription": {"version": "1.00", "tags": "", "description": "Set a task description.", "example": "[ \"tsk_destroyAA\", [ \"You should plant Satchels under those Shilkas! Good luck.\", \"Destroy the Shilkas\", \"Shilkas\" ] ] call BIS_fnc_taskSetDescription;", "docSyntax": "[taskId, [taskDescription, taskTitle, taskMarker]] call BIS_fnc_taskSetDescription", "syntax": "[taskId,[taskDescription,taskTitle,taskMarker]] call BIS_fnc_taskSetDescription"}, "BIS_fnc_taskSetDestination": {"version": "1.00", "tags": "", "description": "Set a task's destination.", "example": "[\"BIS_task_01\",[1337,1337,0]] call BIS_fnc_taskSetDestination;", "docSyntax": "[taskName, destination] call BIS_fnc_taskSetDestination", "syntax": "[<string>,destination] call BIS_fnc_taskSetDestination"}, "BIS_fnc_taskSetState": {"version": "1.00", "tags": "", "description": "Set a task's state.", "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskSetState;", "docSyntax": "[taskName, taskState, showHint] call BIS_fnc_taskSetState", "syntax": "[<string>,taskState,showHint] call BIS_fnc_taskSetState"}, "BIS_fnc_tasksUnit": {"version": "1.00", "tags": "", "description": "Grab all tasks currently created for a given unit.", "example": "player call BIS_fnc_tasksUnit;", "docSyntax": "target call BIS_fnc_tasksUnit", "syntax": "<object> call BIS_fnc_tasksUnit"}, "BIS_fnc_taskVar": {"version": "1.00", "tags": "", "description": "Returns task's variable name.", "example": "\"task_1\" call BIS_fnc_taskVar;", "docSyntax": "taskID call BIS_fnc_taskVar", "syntax": "taskID call BIS_fnc_taskVar"}, "BIS_fnc_teamColor": {"version": "1.00", "tags": "", "description": "Convert number to color team name or color.", "example": "[2, true] call BIS_fnc_teamColor;", "docSyntax": "[teamId, getColour] call BIS_fnc_teamColor", "syntax": "[teamId,getColour] call BIS_fnc_teamColor"}, "BIS_fnc_terrainGradAngle": {"version": "1.00", "tags": "", "description": "Returns the gradient angle (in radians) of the terrain at a specified position and a compass direction. It is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction.", "example": "_radGrad = [getPos player, getDir player] call BIS_fnc_terrainGradAngle;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_textTiles": {"version": "1.00", "tags": "", "description": "Shows an animated text with background tiles.", "example": "[parseText \"<t font='PuristaBold' size='1.6'>MyMission</t><br />by Username\", true, nil, 7, 0.7, 0] spawn BIS_fnc_textTiles;", "docSyntax": "[content, position, tileSize, duration, fadeInOutTime, tileTransparency] spawn BIS_fnc_textTiles", "syntax": "[content,position,tileSize,duration,fadeInOutTime,tileTransparency] spawn BIS_fnc_textTiles"}, "BIS_fnc_textureMarker": {"version": "1.00", "tags": "", "description": "Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.", "example": "_notWhiteFlag = [\"flag_France\"] call BIS_fnc_textureMarker;", "docSyntax": "[wantedMarker] call BIS_fnc_textureMarker", "syntax": "[wantedMarker] call BIS_fnc_textureMarker"}, "BIS_fnc_textureVehicleIcon": {"version": "1.00", "tags": "", "description": "Checks whether icon is defined in CfgVehicleIcons and if so, returns the icon.", "example": "_mediTexture = [\"iconManMedic\"] call BIS_fnc_textureVehicleIcon;", "docSyntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon", "syntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon"}, "BIS_fnc_titlecard": {"version": "1.00", "tags": "", "description": "Display a mission-specific titlecard before the mission begins. Only works the first time it is called.", "example": "[\"\\a3\\missions_f_epb\\video\\b_out2_quotation.ogv\", \"your translation\"] call BIS_fnc_titlecard;", "docSyntax": "[path, subtitle] call BIS_fnc_titlecard", "syntax": "[path,subtitle] call BIS_fnc_titlecard"}, "BIS_fnc_toUpperDisplayTexts": {"version": "1.00", "tags": "", "description": "Converts text of selected classes in one display to upper-case except classes with name PlayersName. Also searches inside CT_CONTROLS_GROUPs.", "example": "[\"RscDisplayOptionsAudio\", [\"RscText\"]] call BIS_fnc_toUpperDisplayTexts;", "docSyntax": "[displayClass, controlClasses, blacklist] call BIS_fnc_toUpperDisplayTexts", "syntax": "[displayClass,controlClasses,blacklist] call BIS_fnc_toUpperDisplayTexts"}, "BIS_fnc_traceBullets": {"version": "1.00", "tags": "", "description": "Visualise unit's bullet trajectories. Can only be used on one shooter in a single instance.", "example": "[player] spawn BIS_fnc_traceBullets;", "docSyntax": "[unit, number] call BIS_fnc_traceBullets", "syntax": "[<objUnit>,<scalar>] call BIS_fnc_traceBullets"}, "BIS_fnc_trackMissionTime": {"version": "1.00", "tags": "", "description": "Tracks mission time by storing time in profileNamespace.", "example": "[true, true] call BIS_fnc_trackMissionTime; //\u00a0Delete saved mission time", "docSyntax": "[save, delete] call BIS_fnc_trackMissionTime", "syntax": "[save,delete] call BIS_fnc_trackMissionTime"}, "BIS_fnc_tridentClient": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_tridentExecute": {"version": "1.00", "tags": "", "description": "Execute a code based on Trident relationship.", "example": "[west, east, { params [\"_higherScore\", \"_lowerScore\", \"_areAllied\"] }] call BIS_fnc_tridentExecute;", "docSyntax": "[side_1, side_2, codeFriendly, codeEnemy] call BIS_fnc_tridentExecute", "syntax": "[side_1,side_2,codeFriendly,codeEnemy] call BIS_fnc_tridentExecute"}, "BIS_fnc_tridentGetRelationship": {"version": "1.00", "tags": "", "description": "Gets the relationship of competing Trident sides. The value slowly decreases towards 0.", "example": "[west, east] call BIS_fnc_tridentGetRelationship;", "docSyntax": "[side_1, side_2] call BIS_fnc_tridentGetRelationship", "syntax": "[side_1,side_2] call BIS_fnc_tridentGetRelationship"}, "BIS_fnc_tridentHandleDamage": {"version": "1.00", "tags": "", "description": "Register a unit as Trident unit. When competing sides are still friendly and the unit is killed by the competing side, the killer won't be punsihed by negative score. Instead, Trident relationship will decrease.", "example": "BIS_tridentObject call BIS_fnc_tridentHandleDamage;", "docSyntax": "object call BIS_fnc_tridentHandleDamage", "syntax": "<object> call BIS_fnc_tridentHandleDamage"}, "BIS_fnc_tridentSetRelationship": {"version": "1.00", "tags": "", "description": "Set relationship of competing Trident sides. When the value reaches threshold, side relationship will change. The value slowly decreases towards 0.", "example": "[west, east, 0.5, true] call BIS_fnc_tridentSetRelationship;", "docSyntax": "[side1, side2, value, absolute] call BIS_fnc_tridentSetRelationship", "syntax": "[side1,side2,<scalar>,absolute] call BIS_fnc_tridentSetRelationship"}, "BIS_fnc_triggerToMarker": {"version": "1.00", "tags": "", "description": "Makes an existing or new trigger cover a marker area.", "example": "_createdTrigger = [objNull, myAreaTrigger] call BIS_fnc_triggerToMarker;", "docSyntax": "[trigger, markerName] call BIS_fnc_triggerToMarker", "syntax": "[<objTrigger>,<string>] call BIS_fnc_triggerToMarker"}, "BIS_fnc_trimString": {"version": "1.00", "tags": "", "description": "Get a substring out of the string.", "example": "[\"dreaded_is_the_man\", 0, 6] call BIS_fnc_trimString; //\u00a0will return \"dreaded\"", "docSyntax": "[someText, beginning, length] call BIS_fnc_trimString", "syntax": "[someText,beginning,length] call BIS_fnc_trimString"}, "BIS_fnc_TwoWingDoorNoHandleClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorNoHandleClose", "syntax": "[] call BIS_fnc_twoWingDoorNoHandleClose"}, "BIS_fnc_TwoWingDoorNoHandleOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorNoHandleOpen", "syntax": "[] call BIS_fnc_twoWingDoorNoHandleOpen"}, "BIS_fnc_TwoWingDoorOneHandleClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorOneHandleClose", "syntax": "[] call BIS_fnc_twoWingDoorOneHandleClose"}, "BIS_fnc_TwoWingDoorOneHandleOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorOneHandleOpen", "syntax": "[] call BIS_fnc_twoWingDoorOneHandleOpen"}, "BIS_fnc_TwoWingDoorTwoHandleClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorTwoHandleClose", "syntax": "[] call BIS_fnc_twoWingDoorTwoHandleClose"}, "BIS_fnc_TwoWingDoorTwoHandleOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingDoorTwoHandleOpen", "syntax": "[] call BIS_fnc_twoWingDoorTwoHandleOpen"}, "BIS_fnc_TwoWingSlideDoorClose": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingSlideDoorClose", "syntax": "[] call BIS_fnc_twoWingSlideDoorClose"}, "BIS_fnc_TwoWingSlideDoorOpen": {"version": "1.00", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_twoWingSlideDoorOpen", "syntax": "[] call BIS_fnc_twoWingSlideDoorOpen"}, "BIS_fnc_typeText": {"version": "1.00", "tags": "", "description": "Types a structured text on the screen, letter by letter, cursor blinking.", "example": "[ [ [\"CAMP ROGAIN,\", \"<t align = 'center' shadow = '1' size = '0.7' font='PuristaBold'>%1</t>\"], [\"RESUPPLY POINT\", \"<t align = 'center' shadow = '1' size = '0.7'>%1</t><br/>\"], [\"10 MINUTES LATER ...\", \"<t align = 'center' shadow = '1' size = '1.0'>%1</t>\", 15] ] ] spawn BIS_fnc_typeText;", "docSyntax": "[stringLines, posX, posY, rootFormat] spawn BIS_fnc_typeText", "syntax": "[stringLines,posX,posY,rootFormat] spawn BIS_fnc_typeText"}, "BIS_fnc_typeText2": {"version": "1.00", "tags": "", "description": "Types a structured text on the screen, letter by letter, cursor blinking. Note that line returns are manual, unlike BIS_fnc_typeText.", "example": "[ [ [\"CAMP ROGAIN, \", \"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"], [\"RESUPPLY POINT\", \"align = 'center' shadow = '1' size = '0.7'\", \"#aaaaaa\"], [\"\", \"<br/>\"], // line break [\"10 MINUTES LATER...\", \"align = 'center' shadow = '1' size = '1.0'\"] ] ] spawn BIS_fnc_typeText2;", "docSyntax": "[stringLines, posX, posY, alignBottom, rootFormat, abortParams, abortCond, playSounds] call BIS_fnc_typeText2", "syntax": "[stringLines,posX,posY,alignBottom,rootFormat,abortParams,abortCond,playSounds] call BIS_fnc_typeText2"}, "BIS_fnc_uniqueClasses": {"version": "1.00", "tags": "", "description": "/* Description: Composes array of classes with unique param (based on returned value of passed code). If class inherits the param from parent, it is not listed. Parameter(s): 0: CONFIG - class which is searched 1: CODE - code executed on class, which is passed as _this Returns: ARRAY - classes in format [class,value] class: CONFIG - class with unique param value: ANY - value returned by the passed code for the given class */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_unitAddon": {"version": "1.00", "tags": "", "description": "Return addon from CfgPatches to which a given object belongs to.", "example": "[ player ] call BIS_fnc_unitAddon;", "docSyntax": "[object] call BIS_fnc_unitAddon", "syntax": "[<object>] call BIS_fnc_unitAddon"}, "BIS_fnc_unpackStaticWeapon": {"version": "1.00", "tags": "", "description": "This function will move given support team to the given weapon position. The weapon crew will unpack carried weapon and start watching given target position. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible.", "example": "[leader1, \"weapon_mrk\", \"target_mrk\"] call BIS_fnc_unpackStaticWeapon;", "docSyntax": "[group, weaponPos, targetPos, leaderPos] call BIS_fnc_unpackStaticWeapon", "syntax": "[<objGroup>,weaponPos,targetPos,<array>] call BIS_fnc_unpackStaticWeapon"}, "BIS_fnc_updatePlayerArray": {"version": "1.00", "tags": "", "description": "Updates dead player objects to their current respawned objects.", "example": "_newPlayerObjects = _oldPlayerObjects call BIS_fnc_updatePlayerArray;", "docSyntax": "[input] call BIS_fnc_updatePlayerArray", "syntax": "[input] call BIS_fnc_updatePlayerArray"}, "BIS_fnc_validateParametersOO": {"version": "1.00", "tags": "", "description": "Validating the parameters of a certain method in a class.", "example": "[\"someClass\",\"someMethod\",[5,47,\"test\"]] call BIS_fnc_validateParametersOO;", "docSyntax": "[class,method,params] call BIS_fnc_validateParametersOO", "syntax": "[class,method,<any>] call BIS_fnc_validateParametersOO"}, "BIS_fnc_vectorDivide": {"version": "1.00", "tags": "", "description": "Divides vector by scalar, by dividing all vector elements.", "example": "[[123, 456, 789], 5] call BIS_fnc_vectorDivide;", "docSyntax": "[vector, divider] call BIS_fnc_vectorDivide", "syntax": "[vector,divider] call BIS_fnc_vectorDivide"}, "BIS_fnc_vehicleRoles": {"version": "1.00", "tags": "", "description": "Returns vehicle roles.", "example": "cursorObject call BIS_fnc_vehicleRoles;", "docSyntax": "vehicle call BIS_fnc_vehicleRoles", "syntax": "<objVehicle> call BIS_fnc_vehicleRoles"}, "BIS_fnc_versionInfo": {"version": "1.00", "tags": "", "description": "Fills the first passed control with game type and version number, and positions both controls according to the game type.", "example": "[_ctrlVersion, _ctrlModded] call BIS_fnc_versionInfo;", "docSyntax": "[gameTypeVersionControl, modControl] call BIS_fnc_versionInfo;", "syntax": "[gameTypeVersionControl,modControl] call BIS_fnc_versionInfo;"}, "BIS_fnc_VRDrawGrid": {"version": "1.00", "tags": "", "description": "Visualizes surface grid (used primarily for VR missions).", "example": "[getPosATL player, [0.078, 0.3647, 0.0]] call BIS_fnc_VRDrawGrid;", "docSyntax": "[location, colour] call BIS_fnc_VRDrawGrid", "syntax": "[location,colour] call BIS_fnc_VRDrawGrid"}, "BIS_fnc_VRFadeIn": {"version": "1.00", "tags": "", "description": "Fade In effect for VR.", "example": "call BIS_fnc_VRFadeIn;", "docSyntax": "call BIS_fnc_VRFadeIn", "syntax": "call BIS_fnc_VRFadeIn"}, "BIS_fnc_VRFadeOut": {"version": "1.00", "tags": "", "description": "Fade Out effect for VR.", "example": "call BIS_fnc_VRFadeOut;", "docSyntax": "call BIS_fnc_VRFadeOut", "syntax": "call BIS_fnc_VRFadeOut"}, "BIS_fnc_VRTimer": {"version": "1.00", "tags": "", "description": "Timer for VR and time trials. The following missionNamespace variables can be used:", "example": "[] spawn BIS_fnc_VRTimer;", "docSyntax": "[colour] spawn BIS_fnc_VRTimer", "syntax": "[colour] spawn BIS_fnc_VRTimer"}, "BIS_fnc_weaponAddon": {"version": "1.00", "tags": "", "description": "Return addon from CfgPatches to which a given weapon class belongs to.", "example": "\"arifle_MX_F\" call BIS_fnc_weaponAddon; //\u00a0returns \"A3_Weapons_F_Rifles_MX\"", "docSyntax": "classname call BIS_fnc_weaponAddon", "syntax": "classname call BIS_fnc_weaponAddon"}, "BIS_fnc_weaponComponents": {"version": "1.00", "tags": "", "description": "Returns array with classname of the parent weapon (without attachments), followed by classnames of all its attachments.", "example": "\"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents; //\u00a0[\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"]", "docSyntax": "[classname] call BIS_fnc_weaponComponents", "syntax": "[classname] call BIS_fnc_weaponComponents"}, "BIS_fnc_weaponsEntityType": {"version": "1.00", "tags": "", "description": "Return object's weapons as defined in config. Scans also turrets and pylons.", "example": "[\"B_Soldier_GL_F\"] call BIS_fnc_weaponsEntityType; //\u00a0returns e.g [\"arifle_MX_GL_ACO_F\",\"hgun_P07_F\",\"Throw\",\"Put\"]", "docSyntax": "class call BIS_fnc_weaponsEntityType", "syntax": "class call BIS_fnc_weaponsEntityType"}, "BIS_fnc_wpArtillery": {"version": "1.00", "tags": "", "description": "Let group members fire artillery barrage on waypoint position. Units must have magazine type.", "example": "[group player, getMarkerPos \"artilleryStrike\", objNull, 30, \"8Rnd_82mm_Mo_shells\"] call BIS_fnc_wpArtillery;", "docSyntax": "[group, position, target, firedRounds, type] call BIS_fnc_wpArtillery", "syntax": "[<objGroup>,position,<object>,firedRounds,type] call BIS_fnc_wpArtillery"}, "BIS_fnc_wpLand": {"version": "1.00", "tags": "", "description": "\"LAND\" custom waypoint. Land on specific spot.", "example": "[player, position dude, 10, [42, 20], true] spawn BIS_fnc_wpLand;", "docSyntax": "arguments: [dirParam, visualize]", "syntax": "arguments: [dirParam,visualize]"}, "BIS_fnc_wpPatrol": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_wpRelax": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_wpSuppress": {"version": "1.00", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "clearItemPool": {"version": "1.00", "tags": "", "description": "Removes all items from ammo box (or any general weapon holder container)", "example": "clearItemPool jeepOne", "docSyntax": "clearItemPool box", "syntax": "clearItemPool box"}, "diag_enable": {"version": "1.00", "tags": "", "description": "Toggles various diagnostics.", "example": "\"All\" diag_enable true;", "docSyntax": "mode diag_enable state", "syntax": "mode diag_enable state", "type": "diagnoseStatement"}, "diag_enabled": {"version": "1.00", "tags": "", "description": "Checks whether specific diagnostic mode is activated.", "example": "\"Animation\" diag_enable true; diag_enabled \"Animation\"; //\u00a0Returns true", "docSyntax": "diag_enabled mode", "syntax": "diag_enabled mode", "type": "diagnoseStatement"}, "diag_toggle": {"version": "1.00", "tags": "", "description": "Toggles various diagnostics.", "example": "diag_toggle \"Animation\"; //\u00a0enable diag_toggle \"Animation\"; //\u00a0disable", "docSyntax": "diag_toggle mode", "syntax": "diag_toggle mode", "type": "diagnoseStatement"}, "disableDebriefingStats": {"version": "1.00", "tags": "", "description": "Disable debriefing score table.", "example": "disableDebriefingStats;", "docSyntax": "disableDebriefingStats", "syntax": "disableDebriefingStats"}, "enableDebriefingStats": {"version": "1.00", "tags": "", "description": "Enable debriefing score table.", "example": "enableDebriefingStats [0.1, 0.1, 0.8, 0.8];", "docSyntax": "enableDebriefingStats [left, top, width, height]", "syntax": "enableDebriefingStats [left,top,width,height]"}, "enableGunLights": {"version": "1.00", "tags": "", "description": "Toggles the target group's gun light(s).", "example": "_group enableGunLights false;", "docSyntax": "target enableGunLights state", "syntax": "<object> enableGunLights state"}, "enableSatNormalOnDetail": {"version": "1.00", "tags": "", "description": "Enables/Disables satellite normal map or detail maps.", "example": "enableSatNormalOnDetail true;", "docSyntax": "enableSatNormalOnDetail state", "syntax": "enableSatNormalOnDetail state"}, "fogParams": {"version": "1.00", "tags": "", "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog", "example": "private _fog = fogParams", "docSyntax": "fogParams", "syntax": "fogParams"}, "getShadowDistance": {"version": "1.00", "tags": "", "description": "Gets the shadows rendering distance.", "example": "_value = getShadowDistance;", "docSyntax": "getShadowDistance", "syntax": "getShadowDistance"}, "incapacitatedState": {"version": "1.00", "tags": "", "description": "Returns the incapacitated sub-state of the given unit, when the lifeState of the unit is \"INCAPACITATED\". Could be one of:", "example": "_result = incapacitatedState player;", "docSyntax": "incapacitatedState person", "syntax": "incapacitatedState <objUnit>"}, "isDLCAvailable": {"version": "1.00", "tags": "", "description": "Returns true if the DLC (CDLC included) is marked as available on Steam. Official and Creator DLC appIds can be found on Arma 3: DLCs & Expansions and Arma 3: CDLCs pages.", "example": "private _karts = 288520; isDLCAvailable _karts; //\u00a0returns true", "docSyntax": "isDLCAvailable appId", "syntax": "isDLCAvailable appId"}, "netObjNull": {"version": "1.00", "tags": "", "description": "A non-existing network object.", "example": "-", "docSyntax": "netObjNull", "syntax": "netObjNull"}, "setSimulWeatherLayers": {"version": "1.00", "tags": "", "description": "Sets number of simul weather layers, affects quality of simul weather clouds.", "example": "setSimulWeatherLayers 0; //\u00a0Very flat clouds", "docSyntax": "setSimulWeatherLayers layers", "syntax": "setSimulWeatherLayers layers"}, "setWaypointLoiterRadius": {"version": "1.00", "tags": "", "description": "Assignes loiter radius to waypoint", "example": "[_grp, 2] setWaypointLoiterRadius 200;", "docSyntax": "waypoint setWaypointLoiterRadius radius", "syntax": "waypoint setWaypointLoiterRadius radius"}, "setWaypointLoiterType": {"version": "1.00", "tags": "", "description": "Sets the waypoint loiter type.", "example": "[_grp, 2] setWaypointLoiterType \"CIRCLE\";", "docSyntax": "waypoint setWaypointLoiterType type", "syntax": "waypoint setWaypointLoiterType type"}, "showWaypoints": {"version": "1.00", "tags": "", "description": "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.", "example": "showWaypoints true;", "docSyntax": "showWaypoints enabled", "syntax": "showWaypoints <bool>"}, "simulCloudDensity": {"version": "1.00", "tags": "", "description": "Returns density of clouds at given position.", "example": "simulCloudDensity getPos player;", "docSyntax": "simulCloudDensity pos", "syntax": "simulCloudDensity <array>"}, "simulCloudOcclusion": {"version": "1.00", "tags": "", "description": "Returns clouds occlusion between two given points.", "example": "private _posPlayer = getPos player; private _posAbovePlayer = +_posPlayer; _posAbovePlayer set [2,200]; simulCloudOcclusion [_posPlayer, _posAbovePlayer];", "docSyntax": "simulCloudOcclusion [pos1, pos2]", "syntax": "simulCloudOcclusion [pos1,pos2]"}, "simulInClouds": {"version": "1.00", "tags": "", "description": "Returns if given position is in clouds.", "example": "simulInClouds getPos player;", "docSyntax": "simulInClouds pos", "syntax": "simulInClouds <array>"}, "UAVControl": {"version": "1.00", "tags": "", "description": "Returns array with current operator of UAV and his vehicle role in UAV. If nobody is controlling the UAV, the command tries to find any person with connected terminal to this UAV, in which case the vehicle role is an empty string. If command cannot find anyone, output is [objNull, \"\"].", "example": "UAVControl uav;", "docSyntax": "UAVControl uav", "syntax": "UAVControl uav"}, "unitAddons": {"version": "1.00", "tags": "", "description": "Returns list with addons the unit belongs to.", "example": "hint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]", "docSyntax": "unitAddons className", "syntax": "unitAddons className"}, "unlinkItem": {"version": "1.00", "tags": "", "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.", "example": "bluforUnit unlinkItem \"NVGoggles\"; opforUnit unlinkItem \"NVGoggles_OPFOR\"; independentUnit unlinkItem \"NVGoggles_INDEP\";", "docSyntax": "unit unlinkItem item", "syntax": "<objUnit> unlinkItem <objItem>"}, "waypointLoiterRadius": {"version": "1.00", "tags": "", "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.", "example": "_radius = waypointLoiterRadius [groupOne, 1];", "docSyntax": "waypointLoiterRadius Waypoint", "syntax": "waypointLoiterRadius Waypoint"}, "waypointLoiterType": {"version": "1.00", "tags": "", "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.", "example": "_type = waypointLoiterType [groupOne, 1]", "docSyntax": "waypointLoiterType waypoint", "syntax": "waypointLoiterType waypoint"}, "BIS_fnc_countdown": {"version": "1.02", "tags": "", "description": "Triggers a countdown.", "example": "_initialCountdown = [50,false] call BIS_fnc_countdown; //\u00a0sets countdown to 50 seconds where function is executed", "docSyntax": "[timeInSeconds, global] call BIS_fnc_countdown", "syntax": "[timeInSeconds,global] call BIS_fnc_countdown"}, "BIS_fnc_getFromPairs": {"version": "1.02", "tags": "", "description": "Searches the associative array for the 1st occurance of the key string and returns the value associated with it. Search is not case sensitiv.", "example": "[[[\"apple\",3],[\"pear\",\"test\"]],\"pear\"] call BIS_fnc_getFromPairs; //\u00a0Returns \"test\"", "docSyntax": "[array, key, defaultValue] call BIS_fnc_getFromPairs", "syntax": "[<array>,key,defaultValue] call BIS_fnc_getFromPairs"}, "face": {"version": "1.02", "tags": "", "description": "Returns the face of a person.", "example": "face player", "docSyntax": "face person", "syntax": "face <objUnit>"}, "nameSound": {"version": "1.02", "tags": "", "description": "Returns the nameSound of a person.", "example": "nameSound player", "docSyntax": "nameSound person", "syntax": "nameSound <objUnit>"}, "pitch": {"version": "1.02", "tags": "", "description": "Returns the pitch of a persons voice.", "example": "pitch player", "docSyntax": "pitch person", "syntax": "pitch <objUnit>"}, "setCenterOfMass": {"version": "1.02", "tags": "", "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", "example": "myObject setCenterOfMass [[0,-1,0], 0.5];", "docSyntax": "myObject setCenterOfMass [centerOfMass, time]", "syntax": "myObject setCenterOfMass [centerOfMass,<scalar>]"}, "setDetailMapBlendPars": {"version": "1.02", "tags": "", "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance.", "example": "setDetailMapBlendPars [20, 50];", "docSyntax": "setDetailMapBlendPars [fullDetail, noDetail]", "syntax": "setDetailMapBlendPars [fullDetail,noDetail]"}, "setMass": {"version": "1.02", "tags": "", "description": "Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.", "example": "myObject setMass [10, 0.5];", "docSyntax": "myObject setMass mass", "syntax": "myObject setMass mass"}, "setMusicEventHandler": {"version": "1.02", "tags": "", "description": "Sets given music track event handler. Will overwrite other music event handlers.", "example": "_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];", "docSyntax": "setMusicEventHandler [type, function]", "syntax": "setMusicEventHandler [type,function]"}, "setNameSound": {"version": "1.02", "tags": "", "description": "Sets the nameSound of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\".", "example": "unit1 setNameSound \"dixon\";", "docSyntax": "person setNameSound name", "syntax": "<objUnit> setNameSound <string>"}, "setPitch": {"version": "1.02", "tags": "", "description": "Sets the pitch of a persons voice.", "example": "unit1 setPitch 0.5;", "docSyntax": "person setPitch pitch", "syntax": "<objUnit> setPitch pitch"}, "setSpeaker": {"version": "1.02", "tags": "", "description": "Sets the speaker of a person.", "example": "unit1 setSpeaker \"Male02GRE\";", "docSyntax": "person setSpeaker speaker", "syntax": "<objUnit> setSpeaker speaker"}, "speaker": {"version": "1.02", "tags": "", "description": "Returns the speaker class name of a unit.", "example": "speaker player; //\u00a0Can return \"male09eng\"", "docSyntax": "speaker unit", "syntax": "speaker <objUnit>"}, "addItemPool": {"version": "1.04", "tags": "", "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)", "example": "addItemPool [\"ItemGPS\", 5];", "docSyntax": "addItemPool [itemName, count]", "syntax": "addItemPool [itemName,count]"}, "addItemToBackpack": {"version": "1.04", "tags": "", "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.", "example": "player addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";", "docSyntax": "unit addItemToBackpack item", "syntax": "<objUnit> addItemToBackpack <objItem>"}, "addItemToUniform": {"version": "1.04", "tags": "", "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.", "example": "player addItemToUniform \"itemGPS\";", "docSyntax": "unit addItemToUniform item", "syntax": "<objUnit> addItemToUniform <objItem>"}, "addItemToVest": {"version": "1.04", "tags": "", "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.", "example": "player addItemToVest \"itemGPS\";", "docSyntax": "unit addItemToVest item", "syntax": "<objUnit> addItemToVest <objItem>"}, "backpackContainer": {"version": "1.04", "tags": "", "description": "Returns a cargo container of a unit's backpack.", "example": "hint str backpackContainer player; //\u00a01a5f7900# 163944: backpack_fast.p3d", "docSyntax": "backpackContainer unit", "syntax": "backpackContainer <objUnit>"}, "canAddItemToBackpack": {"version": "1.04", "tags": "", "description": "Checks if given object can be stored into soldier's backpack.", "example": "if (player canAddItemToBackpack \"HandGrenade\") then { player addItemToBackpack _item } else { hint \"no room!\" };", "docSyntax": "unit canAddItemToBackpack item", "syntax": "<objUnit> canAddItemToBackpack <objItem>"}, "canAddItemToUniform": {"version": "1.04", "tags": "", "description": "Checks if given object can be stored into soldier's uniform.", "example": "_item = \"HandGrenade\"; _fits = player canAddItemToUniform _item; if (_fits) then { player addItemToUniform _item; } else { hint \"no room!\"; };", "docSyntax": "unit canAddItemToUniform item", "syntax": "<objUnit> canAddItemToUniform <objItem>"}, "canAddItemToVest": {"version": "1.04", "tags": "", "description": "Checks if given object can be stored into soldier's vest.", "example": "_item = \"HandGrenade\"; private _fits = player canAddItemToVest _item; if (_fits) then { player addItemToVest _item; } else { hint \"no room!\"; };", "docSyntax": "unit canAddItemToVest item", "syntax": "<objUnit> canAddItemToVest <objItem>"}, "everyBackpack": {"version": "1.04", "tags": "", "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.", "example": "everyBackpack cursorTarget;", "docSyntax": "everyBackpack box", "syntax": "everyBackpack box"}, "forceRespawn": {"version": "1.04", "tags": "", "description": "Forces the unit to respawn. The effect is as if the player pressed the RESPAWN button in the game pause menu; the unit is killed but there is no \"X was killed\" message and no score adjustment.", "example": "forceRespawn player;", "docSyntax": "forceRespawn unit", "syntax": "forceRespawn <objUnit>"}, "isInstructorFigureEnabled": {"version": "1.04", "tags": "", "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).", "example": "hint str isInstructorFigureEnabled;", "docSyntax": "isInstructorFigureEnabled", "syntax": "isInstructorFigureEnabled"}, "itemsWithMagazines": {"version": "1.04", "tags": "", "description": "Returns combined array including all unit's stored items and all unit's stored magazines and all unit's stored weapons. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine, binocularMagazine as well as assignedItems are excluded.", "example": "itemsWithMagazines player //is essentially the same as items player + magazines player [ \"FirstAidKit\", //item \"30Rnd_65x39_caseless_mag\", //magazine \"16Rnd_9x21_Mag\", //magazine \"Chemlight_green\", //magazine \"HandGrenade\", //magazine \"ToolKit\", //item \"MineDetector\" //item ]", "docSyntax": "itemsWithMagazines unit", "syntax": "itemsWithMagazines <objUnit>"}, "magazinesDetailBackpack": {"version": "1.04", "tags": "", "description": "Returns an array with the type names of all the unit's backpack magazines.", "example": "magazinesDetailBackpack player; /* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000011/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/2]\", \"Chemlight (Green)(1/1)[id/cr:10000027/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000013/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000014/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000015/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000016/2]\", \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000017/2]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000019/2]\", \"9 mm 16Rnd Mag(16/16)[id/cr:10000020/2]\", \"RGO Grenade(1/1)[id/cr:10000021/2]\", \"RGO Grenade(1/1)[id/cr:10000022/2]\", \"IR Grenade [NATO](1/1)[id/cr:10000023/2]\", \"IR Grenade [NATO](1/1)[id/cr:10000024/2]\", \"Smoke Grenade (White)(1/1)[id/cr:10000025/2]\", \"Smoke Grenade (Green)(1/1)[id/cr:10000026/2]\", \"Chemlight (Green)(1/1)[id/cr:10000028/2]\" ] */", "docSyntax": "magazinesDetailBackpack unit", "syntax": "magazinesDetailBackpack <objUnit>"}, "magazinesDetailUniform": {"version": "1.04", "tags": "", "description": "Returns an array with the type names of all the unit's uniform magazines.", "example": "magazinesDetailUniform player; /* [ \"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\", \"Chemlight (Green)(1/1)[id/cr:10000020/0]\" ] */", "docSyntax": "magazinesDetailUniform unit", "syntax": "magazinesDetailUniform <objUnit>"}, "magazinesDetailVest": {"version": "1.04", "tags": "", "description": "Returns an array with the type names of all the unit's vest magazines.", "example": "magazinesDetailVest player; /* [ [\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\", \"RGO Grenade(1/1)[id/cr:10000016/0]\", \"RGO Grenade(1/1)[id/cr:10000017/0]\"] ] */", "docSyntax": "magazinesDetailVest unit", "syntax": "magazinesDetailVest <objUnit>"}, "removeAllItemsWithMagazines": {"version": "1.04", "tags": "", "description": "Removes all itemsWithMagazines from the uniform, vest and backpack. Command essentially clears all unit's containers.", "example": "removeAllItemsWithMagazines player;", "docSyntax": "removeAllItemsWithMagazines unit", "syntax": "removeAllItemsWithMagazines <objUnit>"}, "removeItemFromBackpack": {"version": "1.04", "tags": "", "description": "Removes item from soldier's backpack.", "example": "player removeItemFromBackpack \"itemGPS\";", "docSyntax": "unit removeItemFromBackpack item", "syntax": "<objUnit> removeItemFromBackpack <objItem>"}, "removeItemFromUniform": {"version": "1.04", "tags": "", "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.", "example": "player removeItemFromUniform \"FirstAidKit\";", "docSyntax": "unit removeItemFromUniform item", "syntax": "<objUnit> removeItemFromUniform <objItem>"}, "removeItemFromVest": {"version": "1.04", "tags": "", "description": "Removes item from soldier's vest.", "example": "player removeItemFromVest \"itemWatch\";", "docSyntax": "unit removeItemFromVest item", "syntax": "<objUnit> removeItemFromVest <objItem>"}, "uniformContainer": {"version": "1.04", "tags": "", "description": "Returns a cargo container of a unit's uniform.", "example": "hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d", "docSyntax": "uniformContainer unit", "syntax": "uniformContainer <objUnit>"}, "vestContainer": {"version": "1.04", "tags": "", "description": "Returns a cargo container of a unit's vest.", "example": "hint str vestContainer player; //\u00a02df7d600# 163942: dummyweapon.p3d", "docSyntax": "vestContainer unit", "syntax": "vestContainer <objUnit>"}, "BIS_fnc_deleteTask": {"version": "1.06", "tags": "", "description": "Deletes given task.", "example": "[\"task_1\"] call BIS_fnc_deleteTask;", "docSyntax": "[taskID, owner, removeFromJIP] call BIS_fnc_deleteTask", "syntax": "[taskID,owner,removeFromJIP] call BIS_fnc_deleteTask"}, "BIS_fnc_playerSideFaction": {"version": "1.06", "tags": "", "description": "Return representative faction of the given side. Faction of the first detected player is used.", "example": "west call BIS_fnc_playerSideFaction;", "docSyntax": "side call BIS_fnc_playerSideFaction", "syntax": "<objSide> call BIS_fnc_playerSideFaction"}, "playableSlotsNumber": {"version": "1.06", "tags": "", "description": "Returns the number of available slots in mission per side (both empty and taken).", "example": "_maxBluforPlayers = playableSlotsNumber blufor;", "docSyntax": "playableSlotsNumber side", "syntax": "playableSlotsNumber <objSide>"}, "setObjectTextureGlobal": {"version": "1.06", "tags": "", "description": "Set the texture of the given selection on all computers in a network session.", "example": "player setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];", "docSyntax": "obj setObjectTextureGlobal [selection, texture]", "syntax": "<object> setObjectTextureGlobal [selection,<string>]"}, "BIS_fnc_crewCount": {"version": "1.08", "tags": "", "description": "Function that counts amount of seats, both for crew and cargo seats.", "example": "crewCount = [\"B_Heli_Light_01_F\", false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).", "docSyntax": "param call BIS_fnc_crewCount", "syntax": "param call BIS_fnc_crewCount"}, "BIS_fnc_importImageLinks": {"version": "1.08", "tags": "", "description": "Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/).", "example": "call BIS_fnc_importImageLinks;", "docSyntax": "call BIS_fnc_importImageLinks;", "syntax": "call BIS_fnc_importImageLinks;"}, "BIS_fnc_itemType": {"version": "1.08", "tags": "", "description": "\u26a0", "example": "\"arifle_MX_pointer_F\" call BIS_fnc_itemType;", "docSyntax": "weaponClass call BIS_fnc_itemType", "syntax": "weaponClass call BIS_fnc_itemType"}, "BIS_fnc_jukebox": {"version": "1.08", "tags": "", "description": "Plays music, depending on the player group status.", "example": "[] call BIS_fnc_jukebox;", "docSyntax": "[function, parameters] call BIS_fnc_jukebox", "syntax": "[function,parameters] call BIS_fnc_jukebox"}, "BIS_fnc_objectType": {"version": "1.08", "tags": "", "description": "Return object category and type.", "example": "_myType = player call BIS_fnc_objectType;", "docSyntax": "anObject call BIS_fnc_objectType", "syntax": "<objUnit> call BIS_fnc_objectType"}, "getClientState": {"version": "1.08", "tags": "", "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "example": "_state = getClientState;", "docSyntax": "getClientState", "syntax": "getClientState"}, "lnbSort": {"version": "1.08", "tags": "", "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.", "example": "lnbSort [1800, 1, false];", "docSyntax": "lnbSort [idc, column, reversed]", "syntax": "lnbSort [<scalar>,<scalar>,reversed]"}, "lnbSortByValue": {"version": "1.08", "tags": "", "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.", "example": "lnbSortByValue [1800, 1, false];", "docSyntax": "lnbSortByValue [idc, column, reversed]", "syntax": "lnbSortByValue [<scalar>,<scalar>,reversed]"}, "setParticleFire": {"version": "1.08", "tags": "", "description": "Set fire parameters to particle effect. Note: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleFire [ coreIntensity, coreDistance, damageTime ];", "example": "_emitter = \"#particlesource\" createVehicleLocal (getPos player); _emitter setParticleClass \"MediumSmoke\"; _emitter setParticleFire [0.3,1.0,0.1];", "docSyntax": "source setParticleFire [coreIntensity, coreDistance, damageTime]", "syntax": "source setParticleFire [coreIntensity,coreDistance,damageTime]"}, "skillFinal": {"version": "1.08", "tags": "", "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).", "example": "_unitTrueCourage = unit1 skillFinal \"courage\";", "docSyntax": "unit skillFinal skillName", "syntax": "<objUnit> skillFinal <string>"}, "triggerTimeoutCurrent": {"version": "1.08", "tags": "", "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress.", "example": "private _remaining = triggerTimeoutCurrent _trigger;", "docSyntax": "triggerTimeoutCurrent trigger", "syntax": "triggerTimeoutCurrent <objTrigger>"}, "waypointTimeoutCurrent": {"version": "1.08", "tags": "", "description": "Gets the current timeout for currentWaypoint of a group or -1 if countdown is not in progress.", "example": "_timeout = waypointTimeoutCurrent group player;", "docSyntax": "waypointTimeoutCurrent group", "syntax": "waypointTimeoutCurrent <objGroup>"}, "BIS_fnc_bleedTickets": {"version": "1.10", "tags": "", "description": "Function that handles bleeding ticket system. Tickets are set beforehand using BIS_fnc_respawnTickets.", "example": "call BIS_fnc_bleedTickets;", "docSyntax": "[sides, dominanceRatio, bleedingAmount, bleedingDelay] call BIS_fnc_bleedTickets", "syntax": "[sides,dominanceRatio,bleedingAmount,bleedingDelay] call BIS_fnc_bleedTickets"}, "BIS_fnc_fixDate": {"version": "1.10", "tags": "", "description": "Checks the array with date data and makes sure, the values are within the boundries.", "example": "_fixedDate = [2033,-2,89,25,75] call BIS_fnc_fixDate;", "docSyntax": "date call BIS_fnc_fixDate", "syntax": "date call BIS_fnc_fixDate"}, "BIS_fnc_isLeapYear": {"version": "1.10", "tags": "", "description": "Returns true if given year is a leap year, otherwise false.", "example": "_isLeapYear = 2035 call BIS_fnc_isLeapYear;", "docSyntax": "year call BIS_fnc_isLeapYear", "syntax": "year call BIS_fnc_isLeapYear"}, "BIS_fnc_monthDays": {"version": "1.10", "tags": "", "description": "Returns number of days in given month. Takes in account for leap year.", "example": "_daysInThisMonth = [date select 0, date select 1] call BIS_fnc_monthDays;", "docSyntax": "[year, month] call BIS_fnc_monthDays", "syntax": "[year,month] call BIS_fnc_monthDays"}, "BIS_fnc_sortAlphabetically": {"version": "1.10", "tags": "", "description": "Alphabetically sort an array of strings without modifying the original. See also sort.", "example": "_sortedNames = [\"John\", \"Jane\", \"Julia\", \"Geronimo\"] call BIS_fnc_sortAlphabetically; //\u00a0will return [\"Geronimo\", \"Jane\", \"John\", \"Julia\"]", "docSyntax": "arrayOfStrings call BIS_fnc_sortAlphabetically", "syntax": "arrayOfStrings call BIS_fnc_sortAlphabetically"}, "lineIntersectsObjs": {"version": "1.10", "tags": "", "description": "Returns a list of objects intersected by the line from begPos to endPos.", "example": "Sto = []; Fn = { { Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]]; } forEach [1,2,4,8,16,32]; hintSilent format [\" ONLY_WATER: %1, NEAREST_CONTACT: %2, ONLY_STATIC: %3, ONLY_DYNAMIC: %4, FIRST_CONTACT: %5, ALL_OBJECTS: %6\", Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5]; }; [\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler; //Example display objects' array in the middle of the screen sorted by 6 flags", "docSyntax": "lineIntersectsObjs [begPos, endPos, ignoreObj1, ignoreObj2, sortByDistance, flags]", "syntax": "lineIntersectsObjs [begPos,endPos,ignoreObj1,ignoreObj2,sortByDistance,flags]"}, "setDefaultCamera": {"version": "1.10", "tags": "", "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)", "example": "setDefaultCamera [[5000,5000,200],[1,1,-1]];", "docSyntax": "setDefaultCamera [position, direction]", "syntax": "setDefaultCamera [position,direction]"}, "addScoreSide": {"version": "1.12", "tags": "", "description": "Adds side score. This is shown in the MP score tab as the total score. MP only.", "example": "west addScoreSide 10;", "docSyntax": "side addScoreSide value", "syntax": "<objSide> addScoreSide <scalar>"}, "binocular": {"version": "1.12", "tags": "", "description": "Returns class name of currently used binocular weapon.", "example": "_binocs = binocular player; //Rangefinder", "docSyntax": "binocular unit", "syntax": "binocular <objUnit>"}, "briefingName": {"version": "1.12", "tags": "", "description": "Returns the name of the current briefing/scenario name.", "example": "_name = briefingName;", "docSyntax": "briefingName", "syntax": "briefingName"}, "cbChecked": {"version": "1.12", "tags": "", "description": "Returns the current state of a CT_CHECKBOX control.", "example": "_checked = cbChecked _myCheckBox;", "docSyntax": "cbChecked control", "syntax": "cbChecked <uiControl>"}, "cbSetChecked": {"version": "1.12", "tags": "", "description": "Sets the current state of a CT_CHECKBOX control. Use \"CheckedChanged\" control event handler with it.", "example": "_myCheckBox cbSetChecked true;", "docSyntax": "control cbSetChecked state", "syntax": "<uiControl> cbSetChecked state"}, "currentMagazineDetailTurret": {"version": "1.12", "tags": "", "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "example": "_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];", "docSyntax": "vehicle currentMagazineDetailTurret [turret path]", "syntax": "<objVehicle> currentMagazineDetailTurret [turret path]"}, "currentMagazineTurret": {"version": "1.12", "tags": "", "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "example": "_magazine = MBT_Kuma currentMagazineTurret [0];", "docSyntax": "vehicle currentMagazineTurret [turret path]", "syntax": "<objVehicle> currentMagazineTurret [turret path]"}, "currentWeaponTurret": {"version": "1.12", "tags": "", "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.", "example": "_weapon = MBT_Kuma currentWeaponTurret [0];", "docSyntax": "vehicle currentWeaponTurret [turret path]", "syntax": "<objVehicle> currentWeaponTurret [turret path]"}, "enableDiagLegend": {"version": "1.12", "tags": "", "description": "Enable or disable the legend for diagnostics. Internal dev only!", "example": "enableDiagLegend false;", "docSyntax": "enableDiagLegend enable", "syntax": "enableDiagLegend <bool>"}, "enableSimulationGlobal": {"version": "1.12", "tags": "", "description": "Enable or disable simulation for given entity, globally. Has the same effect as enableSimulation when used in singleplayer.", "example": "_myObject enableSimulationGlobal false;", "docSyntax": "entity enableSimulationGlobal enable", "syntax": "entity enableSimulationGlobal <bool>"}, "getCenterOfMass": {"version": "1.12", "tags": "", "description": "Returns center of mass of an object.", "example": "_com = getCenterOfMass _myCar;", "docSyntax": "getCenterOfMass object", "syntax": "getCenterOfMass <object>"}, "getMass": {"version": "1.12", "tags": "", "description": "Returns mass of a PhysX object.", "example": "_mass = getMass _myCar", "docSyntax": "getMass object", "syntax": "getMass <object>"}, "hideObjectGlobal": {"version": "1.12", "tags": "", "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Can be used on static objects. In singleplayer this command behaves just like hideObject.", "example": "hideObjectGlobal myObject; //\u00a0hides myObject hideObjectGlobal nearestBuilding [2500, 2500, 0];", "docSyntax": "hideObjectGlobal object", "syntax": "hideObjectGlobal <object>"}, "hmd": {"version": "1.12", "tags": "", "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.", "example": "_nvgs = hmd player; //NVGoggles", "docSyntax": "hmd unit", "syntax": "hmd <objUnit>"}, "queryItemsPool": {"version": "1.12", "tags": "", "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).", "example": "private _amountOfFAKgiven = queryItemsPool \"FirstAidKit\";", "docSyntax": "queryItemsPool name", "syntax": "queryItemsPool <string>"}, "selectWeaponTurret": {"version": "1.12", "tags": "", "description": "Selects the given weapon on the specified turret. Use turret path [-1] for the driver's turret.", "example": "MBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];", "docSyntax": "vehicle selectWeaponTurret [weapon, turretPath, muzzle, firemode]", "syntax": "<objVehicle> selectWeaponTurret [<string>,turretPath,muzzle,firemode]"}, "setSpeech": {"version": "1.12", "tags": "", "description": "Add speech to location.", "example": "_location setSpeech \"SomeSpeech\";", "docSyntax": "location setSpeech speech", "syntax": "location setSpeech speech"}, "activatedAddons": {"version": "1.14", "tags": "", "description": "Returns a list of all activated addons.", "example": "_addons = activatedAddons;", "docSyntax": "activatedAddons", "syntax": "activatedAddons"}, "attachedObjects": {"version": "1.14", "tags": "", "description": "Returns a list of objects attached to the given object.", "example": "{ detach _x; } forEach attachedObjects player;", "docSyntax": "attachedObjects obj", "syntax": "attachedObjects <object>"}, "attachedTo": {"version": "1.14", "tags": "", "description": "Returns object the given object is attached to or objNull if the given object is not attached to anything.", "example": "if (isNull attachedTo _obj1) then { hint \"_obj1 is not attached to anything.\"; };", "docSyntax": "attachedTo obj", "syntax": "attachedTo <object>"}, "addCuratorAddons": {"version": "1.16", "tags": "", "description": "Allow curator use of given addon.", "example": "curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];", "docSyntax": "curatorObj addCuratorAddons addons", "syntax": "<objCurator> addCuratorAddons addons"}, "addCuratorCameraArea": {"version": "1.16", "tags": "", "description": "Adds or changes curator camera area (depends on if ID is already used).", "example": "myCurator addCuratorCameraArea [3,position mySoldier,300];", "docSyntax": "curatorObj addCuratorCameraArea [cameraAreaID, position, radius]", "syntax": "<objCurator> addCuratorCameraArea [cameraAreaID,position,radius]"}, "addCuratorEditableObjects": {"version": "1.16", "tags": "", "description": "Register objects which can be edited by a curator.", "example": "MyCuratorModule addCuratorEditableObjects [[MyCar], true];", "docSyntax": "curatorObj addCuratorEditableObjects [objects, addCrew]", "syntax": "<objCurator> addCuratorEditableObjects [objects,addCrew]"}, "addCuratorEditingArea": {"version": "1.16", "tags": "", "description": "Adds or changes curator edit area (depends on if ID is already used).", "example": "myCurator addCuratorEditingArea [4, position player, 1000];", "docSyntax": "curatorObj addCuratorEditingArea [editAreaID, position, radius]", "syntax": "<objCurator> addCuratorEditingArea [editAreaID,position,radius]"}, "addCuratorPoints": {"version": "1.16", "tags": "", "description": "Adds or removes curator points. Points can be only in range from 0 to 1.", "example": "curatorModule addCuratorPoints 0.5;", "docSyntax": "curatorObj addCuratorPoints points", "syntax": "<objCurator> addCuratorPoints <scalar>"}, "allCurators": {"version": "1.16", "tags": "", "description": "Returns list of all curator logic units, not the units assigned to the logic.", "example": "_allCuratorLogics = allCurators;", "docSyntax": "allCurators", "syntax": "allCurators"}, "allowCuratorLogicIgnoreAreas": {"version": "1.16", "tags": "", "description": "Allows curator placing and working with modules outside of edit areas.", "example": "curatorModule allowCuratorLogicIgnoreAreas true", "docSyntax": "curatorObj allowCuratorLogicIgnoreAreas allow", "syntax": "<objCurator> allowCuratorLogicIgnoreAreas allow"}, "assignCurator": {"version": "1.16", "tags": "", "description": "Assign player as curator. Two players cannot act as one curator.", "example": "player assignCurator myCurator;", "docSyntax": "player assignCurator curatorObj", "syntax": "<objUnit> assignCurator <objCurator>"}, "BIS_fnc_addCuratorAreaFromTrigger": {"version": "1.16", "tags": "", "description": "Add curator editing / camera area based on triggers.", "example": "[BIS_curator, [trigger_1,trigger_2], [0,0,0], true, true, true] call BIS_fnc_addCuratorAreaFromTrigger;", "docSyntax": "[curatorLogic, triggers, checkedPosition, triggerType, editingArea, cameraArea] call BIS_fnc_addCuratorAreaFromTrigger", "syntax": "[curatorLogic,triggers,checkedPosition,triggerType,editingArea,cameraArea] call BIS_fnc_addCuratorAreaFromTrigger"}, "BIS_fnc_addCuratorChallenge": {"version": "1.16", "tags": "", "description": "/* Description: Add challenges for curator to complete Parameter(s): 0: OBJECT - curator 1 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges) 2 (Optional): NUMBER - number of added challenges (default: 3) 3 (Optional): CODE - condition for challenges to remain active {default: true} 4 (optional): CODE or [CODE,STRING] - code executed upon completing all challenges and reward description Arguments passed to the code are: 0: OBJECT - curator 1: NUMBER - number of previously completed challenges by given curator 2: STRING - parent task ID 5 (Optional): STRING - parent task ID Returns: STRING - ID of parent task under which all challenge tasks are */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_addCuratorIcon": {"version": "1.16", "tags": "", "description": "Add an icon displayed in curator interface.", "example": "[ curatorModule, [\"targetIcon.paa\", [1,1,1,1], position player, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"], false ] call BIS_fnc_addCuratorIcon;", "docSyntax": "[object, iconParams, map, 3D] call BIS_fnc_addCuratorIcon", "syntax": "[<object>,iconParams,<objMap>,3D] call BIS_fnc_addCuratorIcon"}, "BIS_fnc_completedCuratorChallengesCount": {"version": "1.16", "tags": "", "description": "Return number of completed curator challenges.", "example": "curatorModule call BIS_fnc_completedCuratorChallengesCount;", "docSyntax": "curator call BIS_fnc_completedCuratorChallengesCount", "syntax": "curator call BIS_fnc_completedCuratorChallengesCount"}, "BIS_fnc_curatorAttachObject": {"version": "1.16", "tags": "", "description": "Attach an object on another one under cursor.", "example": "[BIS_vehicle] call BIS_fnc_curatorAttachObject;", "docSyntax": "[object] call BIS_fnc_curatorAttachObject", "syntax": "[<object>] call BIS_fnc_curatorAttachObject"}, "BIS_fnc_curatorAttributes": {"version": "1.16", "tags": "", "description": "/* Description: Return attributes available for given entity Parameter(s): 0: OBJECT - curator 1: OBJECT or GROUp or ARRAY or STRING - checked entity Returns: ARRAY of STRINGs */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorAutomatic": {"version": "1.16", "tags": "", "description": "Spawn units based on curator settings. Used when curator role is not taken.", "example": "[curator_module, [west, independent, 0.1, 40, 30, 20, 10] call BIS_fnc_curatorAutomatic;", "docSyntax": "[curator, sides, cheatCoef, infantryProb, groundProb, airProb, marineProb] call BIS_fnc_curatorAutomatic", "syntax": "[curator,sides,cheatCoef,infantryProb,groundProb,airProb,marineProb] call BIS_fnc_curatorAutomatic"}, "BIS_fnc_curatorAutomaticPositions": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeDestroyVehicle": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeFindIntel": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeFireWeapon": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeGetInVehicle": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeIlluminate": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorChallengeSpawnLightning": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_curatorHint": {"version": "1.16", "tags": "", "description": "Show hint in curator interface.", "example": "[\"Title\", \"Some text\", 1337] call BIS_fnc_curatorHint;", "docSyntax": "[title, text, duration] call BIS_fnc_curatorHint", "syntax": "[title,<string>,duration] call BIS_fnc_curatorHint"}, "BIS_fnc_curatorObjectEdited": {"version": "1.16", "tags": "", "description": "Code executed when curator object is edited (i.e., moved or rotated). When a soldier or a vehicle is moved high above ground, create a parachute for them.", "example": "[ module_curator, someObject ] call BIS_fnc_curatorObjectEdited;", "docSyntax": "[module, object] call BIS_fnc_curatorObjectEdited", "syntax": "[module,<object>] call BIS_fnc_curatorObjectEdited"}, "BIS_fnc_curatorObjectPlaced": {"version": "1.16", "tags": "", "description": "Code executed when curator object is placed.", "example": "[ curatorModule, player ] call BIS_fnc_curatorObjectPlaced;", "docSyntax": "[module,object] call BIS_fnc_curatorObjectPlaced", "syntax": "[module,<object>] call BIS_fnc_curatorObjectPlaced"}, "BIS_fnc_curatorObjectRegistered": {"version": "1.16", "tags": "", "description": "Register \"curatorObjectRegistered\" handler. Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.", "example": "[curatorModule,{hint format [\"Curator:%1, Classes:%2\",_this # 0, _this # 1]}] call BIS_fnc_curatorObjectRegistered;", "docSyntax": "[curator, code] call BIS_fnc_curatorObjectRegistered", "syntax": "[curator,<code>] call BIS_fnc_curatorObjectRegistered"}, "BIS_fnc_curatorObjectRegisteredTable": {"version": "1.16", "tags": "", "description": "Register curator object costs from a table.", "example": "//\u00a0Nothing but the listed flare modules will show up in the curator's unit list [getAssignedCuratorLogic player, [\"ModuleFlareWhite_F\",0.02,\"ModuleFlareYellow_F\",0.02,\"ModuleFlareGreen_F\",0.02]] call BIS_fnc_curatorObjectRegisteredTable;", "docSyntax": "[curatorLogic, [className, cost, className, cost...]] call BIS_fnc_curatorObjectRegisteredTable", "syntax": "[curatorLogic,[className,cost,className,cost...]] call BIS_fnc_curatorObjectRegisteredTable"}, "BIS_fnc_curatorPinged": {"version": "1.16", "tags": "", "description": "Show effects when player pings curator. Icon and entity list highlighting is handled by engine", "example": "[ module_curator, player ] call BIS_fnc_curatorPinged;", "docSyntax": "[module, player] call BIS_fnc_curatorPinged", "syntax": "[module,<objUnit>] call BIS_fnc_curatorPinged"}, "BIS_fnc_curatorRespawn": {"version": "1.16", "tags": "", "description": "Restore unit for curators after respawn. When curator owner, it will transfer ownership to the new unit. When editable by curator, it will remove the dead unit and register the new one.", "example": "[BIS_newUnit,BIS_oldUnit] call BIS_fnc_curatorRespawn;", "docSyntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn", "syntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn"}, "BIS_fnc_curatorSayMessage": {"version": "1.16", "tags": "", "description": "Plays some radio message from CfgRadio locally.", "example": "[ player, \"mp_groundsupport_01_casrequested_BHQ_0\" ] call BIS_fnc_curatorSayMessage;", "docSyntax": "[speaker, sentence] call BIS_fnc_curatorSayMessage", "syntax": "[speaker,sentence] call BIS_fnc_curatorSayMessage"}, "BIS_fnc_curatorVisionModes": {"version": "1.16", "tags": "", "description": "Toggle curator vision mode.", "example": "_visionModes = [Curator] call BIS_fnc_curatorVisionModes;", "docSyntax": "[curator] call BIS_fnc_curatorVisionModes", "syntax": "[curator] call BIS_fnc_curatorVisionModes"}, "BIS_fnc_curatorWaypointPlaced": {"version": "1.16", "tags": "", "description": "Code executed when curator waypoint is placed.", "example": "[curatorModule, group player, 5] call BIS_fnc_curatorWaypointPlaced;", "docSyntax": "[object, waypointGroup, waypointID] call BIS_fnc_curatorWaypointPlaced", "syntax": "[<object>,waypointGroup,waypointID] call BIS_fnc_curatorWaypointPlaced"}, "BIS_fnc_drawCuratorDeaths": {"version": "1.16", "tags": "", "description": "Show skull unit for curator when the unit dies.", "example": "player call BIS_fnc_drawCuratorDeaths;", "docSyntax": "[unit] call BIS_fnc_drawCuratorDeaths", "syntax": "[<objUnit>] call BIS_fnc_drawCuratorDeaths"}, "BIS_fnc_drawCuratorLocations": {"version": "1.16", "tags": "", "description": "/* Description: Label every vilage, town and city in curator interface Parameter(s): 0: OBJECT - curator module Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_drawCuratorRespawnMarkers": {"version": "1.16", "tags": "", "description": "/* Description: Create a curator icon on every respawn marker Parameter(s): 0: OBJECT - curator module 1: ARRAY of SIDEs Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_exportCfgVehicles": {"version": "1.16", "tags": "", "description": "Export list of objects for Community Wiki (Assets).", "example": "[] call BIS_fnc_exportCfgVehicles;", "docSyntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles", "syntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles"}, "BIS_fnc_exportCuratorCostTable": {"version": "1.16", "tags": "", "description": "/* Description: Generate spreadsheet with object classes and copy it to clipboard. The table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable Parameter(s): 0 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation. 1 (Optional): STRING - format, can be \"ods\" or \"xls\" 2 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table 3 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic 4 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (default: {true}) 5 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (default: {\"\"}) Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_finishCuratorChallenge": {"version": "1.16", "tags": "", "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead. Number of challenges can be retrieved by", "example": "[BIS_curator,[\"DestroyVehicle\",BIS_curator],\"SUCCEEDED\"] call BIS_fnc_finishCuratorChallenge; _number = BIS_curator getVariable \"DestroyVehicle\";", "docSyntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge", "syntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge"}, "BIS_fnc_forceCuratorInterface": {"version": "1.16", "tags": "", "description": "Force curator interface, so user cannot exit it by pressing Zeus key.", "example": "[ true, true ] call BIS_fnc_forceCuratorInterface;", "docSyntax": "[mode, waitUntil] call BIS_fnc_forceCuratorInterface", "syntax": "[mode,waitUntil] call BIS_fnc_forceCuratorInterface"}, "BIS_fnc_formatCuratorChallengeObjects": {"version": "1.16", "tags": "", "description": "Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.", "example": "[\"class_1\",\"class_2\"] call BIS_fnc_formatCuratorChallengeObjects;", "docSyntax": "classes call BIS_fnc_formatCuratorChallengeObjects", "syntax": "classes call BIS_fnc_formatCuratorChallengeObjects"}, "BIS_fnc_initCuratorAttribute": {"version": "1.16", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_isCurator": {"version": "1.16", "tags": "", "description": "Returns if given object is curator logic. Despite the misleading name this does not check if a player has access to Zeus. It just check if the given object's simulation is of type \"curator\".", "example": "player call BIS_fnc_isCurator;", "docSyntax": "object call BIS_fnc_isCurator", "syntax": "<object> call BIS_fnc_isCurator"}, "BIS_fnc_isCuratorEditable": {"version": "1.16", "tags": "", "description": "Return true if given object is editable by player (when he's curator).", "example": "[object_1] call BIS_fnc_isCuratorEditable;", "docSyntax": "[object] call BIS_fnc_isCuratorEditable", "syntax": "[<object>] call BIS_fnc_isCuratorEditable"}, "BIS_fnc_isForcedCuratorInterface": {"version": "1.16", "tags": "", "description": "Return if curator interface is forced (user cannot leave it by pressing Zeus key).", "example": "_isForced = call BIS_fnc_isForcedCuratorInterface;", "docSyntax": "[] call BIS_fnc_isForcedCuratorInterface", "syntax": "[] call BIS_fnc_isForcedCuratorInterface"}, "BIS_fnc_listCuratorPlayers": {"version": "1.16", "tags": "", "description": "Returns list of playable units with access to curator.", "example": "call BIS_fnc_listCuratorPlayers;", "docSyntax": "[] call BIS_fnc_listCuratorPlayers", "syntax": "[] call BIS_fnc_listCuratorPlayers"}, "BIS_fnc_loop": {"version": "1.16", "tags": "", "description": "Loop stacked code/function with timing and conditional control. Code and conditions are executed in non-scheduled environment.", "example": "//\u00a0hints time every five seconds [\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;", "docSyntax": "[action, parameters] call BIS_fnc_loop", "syntax": "[action,parameters] call BIS_fnc_loop"}, "BIS_fnc_manageCuratorAddons": {"version": "1.16", "tags": "", "description": "Set which vision modes curator can access.", "example": "[BIS_curator,[\"A3_Air_F_Heli\"],{count allPlayers > 15},\"Helicopters unlocked!\"] call BIS_fnc_manageCuratorAddons;", "docSyntax": "[curators,classes,condition,text] call BIS_fnc_manageCuratorAddons", "syntax": "[curators,classes,condition,<string>] call BIS_fnc_manageCuratorAddons"}, "BIS_fnc_manageCuratorChallenges": {"version": "1.16", "tags": "", "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead.", "example": "[ BIS_curator, nil, 1, [ [{ hint \"Message\" }, \"Description\" ] ] ] call BIS_fnc_manageCuratorChallenges;", "docSyntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges", "syntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges"}, "BIS_fnc_mirrorCuratorSettings": {"version": "1.16", "tags": "", "description": "Mirrors settings from one curator to another.", "example": "[ [curator_1, curator_2], [curator_3, curator_4], [\"addons\", \"objects\", \"coefs\"] ] call BIS_fnc_mirrorCuratorSettings;", "docSyntax": "[from, to, modes, shareType] call BIS_fnc_mirrorCuratorSettings", "syntax": "[from,to,modes,shareType] call BIS_fnc_mirrorCuratorSettings"}, "BIS_fnc_moduleLightning": {"version": "1.16", "tags": "", "description": "Zeus lightning strike.", "example": "player addAction [ \"Eat that!\", { private _tempTarget = createSimpleObject [\"Land_HelipadEmpty_F\", getPosASL cursorTarget]; [_tempTarget, nil, true] spawn BIS_fnc_moduleLightning; cursorTarget setDamage 1; }, [], 1.5, true, true, \"\", \"!isNull cursorTarget\" ];", "docSyntax": "[target, nil, activate] call BIS_fnc_moduleLightning", "syntax": "[<object>,nil,activate] call BIS_fnc_moduleLightning"}, "BIS_fnc_registerCuratorObject": {"version": "1.16", "tags": "", "description": "Get individual cost of an object.", "example": "[\"someClass\", true, 5] call BIS_fnc_registerCuratorObject;", "docSyntax": "[class, status, cost] call BIS_fnc_registerCuratorObject", "syntax": "[class,status,cost] call BIS_fnc_registerCuratorObject"}, "BIS_fnc_removeCuratorIcon": {"version": "1.16", "tags": "", "description": "Remove icon displayed in curator interface.", "example": "[curatorModule, 5] call BIS_fnc_removeCuratorIcon;", "docSyntax": "[object, id] call BIS_fnc_removeCuratorIcon", "syntax": "[<object>,<scalar>] call BIS_fnc_removeCuratorIcon"}, "BIS_fnc_removeDestroyedCuratorEditableObjects": {"version": "1.16", "tags": "", "description": "Make destroyed curator objects non-editable.", "example": "[curatorModule, [\"Man\"]] call BIS_fnc_removeDestroyedCuratorEditableObjects;", "docSyntax": "[object, parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects", "syntax": "[<object>,parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects"}, "BIS_fnc_runLater": {"version": "1.16", "tags": "", "description": "Stack code/function that should be run later, after some time/frames or/and custom condition. Internally calls BIS_fnc_loop.", "example": "//\u00a0Hints current game time in the next frame after 5 seconds have passed [\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;", "docSyntax": "[id, code, timer, timerType, condition] call BIS_fnc_runLater", "syntax": "[<scalar>,<code>,timer,timerType,condition] call BIS_fnc_runLater"}, "BIS_fnc_setCuratorAttributes": {"version": "1.16", "tags": "", "description": "/* Description: Set which attributes are available for given entity or entity type. Parameter(s): 0: OBJECT - curator 1: STRING - general setting for all entities of the given type, can be \"object\", \"player\", \"group', \"waypoint\" or \"marker\" OBJECT - setting for specific object, overrides general settings GROUP - setting for specific group, overrides general settings 2: ARRAY of STRINGs - attributes object: Skill UnitPos Rank Damage Fuel Lock RespawnVehicle RespawnPosition Exec group: GroupID Behaviour Formation waypoint: Behaviour Formation marker: MarkerText MarkerColor Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_setCuratorCamera": {"version": "1.16", "tags": "", "description": "Move curator camera to a position and direction. Finished when animation ends.", "example": "[nil,player,5] spawn BIS_fnc_setCuratorCamera;", "docSyntax": "[camPos, targetPos, time] spawn BIS_fnc_setCuratorCamera", "syntax": "[camPos,targetPos,<scalar>] spawn BIS_fnc_setCuratorCamera"}, "BIS_fnc_setCuratorVisionModes": {"version": "1.16", "tags": "", "description": "Set which vision modes curator can access.", "example": "[BIS_curator,[-1,-2]] call BIS_fnc_setCuratorVisionModes;", "docSyntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes", "syntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes"}, "BIS_fnc_shakeCuratorCamera": {"version": "1.16", "tags": "", "description": "Shake curator camera.", "example": "[] spawn BIS_fnc_shakeCuratorCamera;", "docSyntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera", "syntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera"}, "BIS_fnc_showCuratorAttributes": {"version": "1.16", "tags": "", "description": "Show attributes window of an entity. When no attributes are available, no window is opened.", "example": "[BIS_vehicle] call BIS_fnc_showCuratorAttributes;", "docSyntax": "[target] call BIS_fnc_showCuratorAttributes", "syntax": "[<object>] call BIS_fnc_showCuratorAttributes"}, "BIS_fnc_showCuratorFeedbackMessage": {"version": "1.16", "tags": "", "description": "Show feedback message when illegal operation is attempted in curator interface.", "example": "[objNull, 404] call BIS_fnc_showCuratorFeedbackMessage;", "docSyntax": "[curator, messageInfo] call BIS_fnc_showCuratorFeedbackMessage", "syntax": "[curator,messageInfo] call BIS_fnc_showCuratorFeedbackMessage"}, "BIS_fnc_toggleCuratorVisionMode": {"version": "1.16", "tags": "", "description": "Toggle curator vision mode.", "example": "[Curator, -2] call BIS_fnc_toggleCuratorVisionMode;", "docSyntax": "[curator, mode] call BIS_fnc_toggleCuratorVisionMode", "syntax": "[curator,mode] call BIS_fnc_toggleCuratorVisionMode"}, "curatorAddons": {"version": "1.16", "tags": "", "description": "Returns list of addons allowed to given curator. The addon names are not guaranteed to be all lower case", "example": "private _addons = curatorAddons myCurator;", "docSyntax": "curatorAddons curatorObj", "syntax": "curatorAddons <objCurator>"}, "curatorCamera": {"version": "1.16", "tags": "", "description": "Returns curator camera object.", "example": "_camCurator = curatorCamera", "docSyntax": "curatorCamera", "syntax": "curatorCamera"}, "curatorCameraArea": {"version": "1.16", "tags": "", "description": "Returns all curator camera areas.", "example": "_camArea = curatorCameraArea myCurator; // [[8052,[4027.36,4024.89,0],250]]", "docSyntax": "curatorCameraArea curatorObj", "syntax": "curatorCameraArea <objCurator>"}, "curatorCameraAreaCeiling": {"version": "1.16", "tags": "", "description": "Returns ceiling height for curator camera.", "example": "private _height = curatorCameraAreaCeiling BIS_curatorUnit;", "docSyntax": "curatorCameraAreaCeiling curatorObj", "syntax": "curatorCameraAreaCeiling <objCurator>"}, "curatorCoef": {"version": "1.16", "tags": "", "description": "Returns current coeficient setting.", "example": "curatorModule curatorCoef \"Place\"", "docSyntax": "curatorObj curatorCoef action", "syntax": "<objCurator> curatorCoef action"}, "curatorEditableObjects": {"version": "1.16", "tags": "", "description": "Returns all editable objects which belong to a curator.", "example": "_objects = curatorEditableObjects myCurator;", "docSyntax": "curatorEditableObjects curatorObj", "syntax": "curatorEditableObjects <objCurator>"}, "curatorEditingArea": {"version": "1.16", "tags": "", "description": "Returns all curator editing areas.", "example": "_editingAreas = curatorEditingArea myCurator;", "docSyntax": "curatorEditingArea curator", "syntax": "curatorEditingArea curator"}, "curatorEditingAreaType": {"version": "1.16", "tags": "", "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).", "example": "_isBlacklist = curatorEditingAreaType _curator;", "docSyntax": "curatorEditingAreaType curator", "syntax": "curatorEditingAreaType curator"}, "curatorMouseOver": {"version": "1.16", "tags": "", "description": "Returns Curator Editable Object under curator mouse pointer.", "example": "_mouseOver = curatorMouseOver; //\u00a0Possible return value: [\"OBJECT\", 3594ab00# 164218: apc_wheeled_01_cannon_f.p3d]", "docSyntax": "curatorMouseOver", "syntax": "curatorMouseOver"}, "curatorPoints": {"version": "1.16", "tags": "", "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.", "example": "_points = curatorPoints myCurator;", "docSyntax": "curatorPoints curatorObj", "syntax": "curatorPoints <objCurator>"}, "curatorRegisteredObjects": {"version": "1.16", "tags": "", "description": "Returns array with all objects that has curator registered and their settings.", "example": "curatorRegisteredObjects _curatorModule;", "docSyntax": "curatorRegisteredObjects curator", "syntax": "curatorRegisteredObjects curator"}, "curatorSelected": {"version": "1.16", "tags": "", "description": "Returns list of all curator selected items.", "example": "selectedItems = curatorSelected;", "docSyntax": "curatorSelected", "syntax": "curatorSelected"}, "curatorWaypointCost": {"version": "1.16", "tags": "", "description": "Return current price for placing waypoints (curator specific).", "example": "var_wpcost = curatorWaypointCost bis_curator;", "docSyntax": "curatorWaypointCost curatorObj", "syntax": "curatorWaypointCost <objCurator>"}, "diag_captureFrameToFile": {"version": "1.16", "tags": "", "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and written to a log file in the same directory as the .rpt file.", "example": "diag_captureFrameToFile 1; //capture the first frame after command execution", "docSyntax": "diag_captureFrameToFile frame", "syntax": "diag_captureFrameToFile frame", "type": "diagnoseStatement"}, "forceWeatherChange": {"version": "1.16", "tags": "", "description": "Will force-apply previously set settings. This might cause lag.", "example": "0 setOvercast 1; 0 setRain 1; forceWeatherChange; Force immediate change overriding smooth transition", "docSyntax": "forceWeatherChange", "syntax": "forceWeatherChange"}, "getAssignedCuratorLogic": {"version": "1.16", "tags": "", "description": "Returns curator logic to which given player has access.", "example": "(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead, true];", "docSyntax": "getAssignedCuratorLogic player", "syntax": "getAssignedCuratorLogic <objUnit>"}, "getAssignedCuratorUnit": {"version": "1.16", "tags": "", "description": "Returns unit assigned to curator logic.", "example": "_curatorUnit = getAssignedCuratorUnit (allCurators select 0); _curatorUnit joinAs [createGroup civilian, 0];", "docSyntax": "getAssignedCuratorUnit curatorObj", "syntax": "getAssignedCuratorUnit <objCurator>"}, "getDLCAssetsUsage": {"version": "1.16", "tags": "", "description": "Returns an array of the DLC usage times.", "example": "_dlcAssetsUsageInfo = getDLCAssetsUsage;", "docSyntax": "getDLCAssetsUsage", "syntax": "getDLCAssetsUsage"}, "getDLCAssetsUsageByName": {"version": "1.16", "tags": "", "description": "Returns an array with the session and global time the asset has been used.", "example": "_dlcAssetUsage = getDLCAssetsUsageByName \"C_IDAP_Heli_Transport_02_F\";", "docSyntax": "getDLCAssetsUsageByName assetName", "syntax": "getDLCAssetsUsageByName assetName"}, "getDLCs": {"version": "1.16", "tags": "", "description": "Returns array of app IDs of DLCs.", "example": "_ownedDLCs = getDLCs 1;", "docSyntax": "getDLCs filter", "syntax": "getDLCs filter"}, "getTotalDLCUsageTime": {"version": "1.16", "tags": "", "description": "Returns total DLC usage time in this game session", "example": "_dlcTime = getTotalDLCUsageTime;", "docSyntax": "getTotalDLCUsageTime", "syntax": "getTotalDLCUsageTime"}, "isAutonomous": {"version": "1.16", "tags": "", "description": "Returns whether the UAV is in autonomous mode or not.", "example": "private _isAutonomous = isAutonomous uav;", "docSyntax": "isAutonomous uav", "syntax": "isAutonomous uav"}, "isEqualTo": {"version": "1.16", "tags": "", "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.", "example": "_arr1 = [1,[2,[3]]]; _arr2 = [1,[2,[3]]]; if (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}", "docSyntax": "val1 isEqualTo val2", "syntax": "val1 isEqualTo val2"}, "objectCurators": {"version": "1.16", "tags": "", "description": "Returns array with all curators which can edit given object.", "example": "_curatorsThatcanEdit = objectCurators BIS_Tank;", "docSyntax": "objectCurators obj", "syntax": "objectCurators <object>"}, "openCuratorInterface": {"version": "1.16", "tags": "", "description": "Force opens curator interface.", "example": "Open interface: openCuratorInterface;", "docSyntax": "openCuratorInterface", "syntax": "openCuratorInterface"}, "removeAllCuratorAddons": {"version": "1.16", "tags": "", "description": "Restrict access to all addons for given curator.", "example": "removeAllCuratorAddons myCurator;", "docSyntax": "removeAllCuratorAddons curatorObj", "syntax": "removeAllCuratorAddons <objCurator>"}, "removeAllCuratorCameraAreas": {"version": "1.16", "tags": "", "description": "Delete all curator camera areas.", "example": "removeAllCuratorCameraAreas myCurator;", "docSyntax": "removeAllCuratorCameraAreas curatorObj", "syntax": "removeAllCuratorCameraAreas <objCurator>"}, "removeAllCuratorEditingAreas": {"version": "1.16", "tags": "", "description": "Delete all curator edit areas.", "example": "removeAllCuratorEditingAreas myCurator;", "docSyntax": "removeAllCuratorEditingAreas curatorObj", "syntax": "removeAllCuratorEditingAreas <objCurator>"}, "removeCuratorAddons": {"version": "1.16", "tags": "", "description": "Restrict curator use of given addons.", "example": "curatorModule removeCuratorAddons [addon1, addon2];", "docSyntax": "curatorObj removeCuratorAddons addons", "syntax": "<objCurator> removeCuratorAddons addons"}, "removeCuratorCameraArea": {"version": "1.16", "tags": "", "description": "Removes curator camera area.", "example": "myCurator removeCuratorCameraArea 3;", "docSyntax": "curatorObj removeCuratorCameraArea cameraAreaID", "syntax": "<objCurator> removeCuratorCameraArea cameraAreaID"}, "removeCuratorEditableObjects": {"version": "1.16", "tags": "", "description": "Unregister objects which can be edited by a curator.", "example": "curatorModule removeCuratorEditableObjects [[cursorTarget], true]", "docSyntax": "curatorObj removeCuratorEditableObjects [[objects], removeCrew]", "syntax": "<objCurator> removeCuratorEditableObjects [[objects],removeCrew]"}, "removeCuratorEditingArea": {"version": "1.16", "tags": "", "description": "Removes editing area for given curator.", "example": "myCurator removeCuratorEditingArea 3;", "docSyntax": "curatorObj removeCuratorEditingArea editAreaID", "syntax": "<objCurator> removeCuratorEditingArea editAreaID"}, "setAutonomous": {"version": "1.16", "tags": "", "description": "Sets UAV autonomous mode.", "example": "uav setAutonomous true;", "docSyntax": "uav setAutonomous bool", "syntax": "uav setAutonomous <bool>"}, "setCuratorCameraAreaCeiling": {"version": "1.16", "tags": "", "description": "Sets maximal (ATL) height to which curator camera can move.", "example": "myCurator setCuratorCameraAreaCeiling 50;", "docSyntax": "curatorObj setCuratorCameraAreaCeiling height", "syntax": "<objCurator> setCuratorCameraAreaCeiling height"}, "setCuratorCoef": {"version": "1.16", "tags": "", "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).", "example": "curatorModule setCuratorCoef [\"Place\", 1];", "docSyntax": "curatorObj setCuratorCoef [action, coef]", "syntax": "<objCurator> setCuratorCoef [action,<scalar>]"}, "setCuratorEditingAreaType": {"version": "1.16", "tags": "", "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).", "example": "curatorModule setCuratorEditingAreaType true;", "docSyntax": "curatorObj setCuratorEditingAreaType bool", "syntax": "<objCurator> setCuratorEditingAreaType <bool>"}, "setCuratorWaypointCost": {"version": "1.16", "tags": "", "description": "Sets cost of waypoints (used for placing, editing and deleting).", "example": "myCurator setCuratorWaypointCost 0.1;", "docSyntax": "curatorObj setCuratorWaypointCost cost", "syntax": "<objCurator> setCuratorWaypointCost cost"}, "showCuratorCompass": {"version": "1.16", "tags": "", "description": "Hides or shows compass in curator interface.", "example": "showCuratorCompass true;", "docSyntax": "showCuratorCompass bool", "syntax": "showCuratorCompass <bool>"}, "shownCuratorCompass": {"version": "1.16", "tags": "", "description": "Returns true if compass is shown.", "example": "_isShown = shownCuratorCompass;", "docSyntax": "shownCuratorCompass", "syntax": "shownCuratorCompass"}, "shownUAVFeed": {"version": "1.16", "tags": "", "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed.", "example": "_bool = shownUAVFeed;", "docSyntax": "shownUAVFeed", "syntax": "shownUAVFeed"}, "showUAVFeed": {"version": "1.16", "tags": "", "description": "Shows/hides video feed transmitted from UAV in its custom info panel.", "example": "showUAVFeed true;", "docSyntax": "showUAVFeed show", "syntax": "showUAVFeed show"}, "unassignCurator": {"version": "1.16", "tags": "", "description": "Unassign curator (will destroy both sides of connection).", "example": "unassignCurator myCurator;", "docSyntax": "unassignCurator curatorObj", "syntax": "unassignCurator <objCurator>"}, "getStatValue": {"version": "1.18", "tags": "", "description": "Returns value of the given stat.", "example": "getStatValue \"ExpWarlockDown\"; //\u00a0Checks if the \"Warlock Down\" Achivement was already aquired", "docSyntax": "getStatValue name", "syntax": "getStatValue <string>"}, "logEntities": {"version": "1.18", "tags": "", "description": "Creates a log file containing the list of all game entities in scene.", "example": "logEntities;", "docSyntax": "logEntities", "syntax": "logEntities"}, "moveInAny": {"version": "1.18", "tags": "", "description": "Moves unit to the first available seat in a vehicle.", "example": "player moveInAny tank;", "docSyntax": "unit moveInAny vehicle", "syntax": "<objUnit> moveInAny <objVehicle>"}, "setStatValue": {"version": "1.18", "tags": "", "description": "Sets a value to a given stat.", "example": "setStatValue [\"ExpWarlockDown\", 1]; //\u00a0Unlocks the \"Warlock Down\" Steam achivement", "docSyntax": "setStatValue [name, value]", "syntax": "setStatValue [<string>,<scalar>]"}, "squadParams": {"version": "1.18", "tags": "", "description": "Returns data about squad of given unit loaded from squad.xml as well as about unit itself.", "example": "_info = squadParams player;", "docSyntax": "squadParams unit", "syntax": "squadParams <objUnit>"}, "BIS_fnc_advHintCall": {"version": "1.20", "tags": "", "description": "Advanced hint call, creates an hint by itself.", "example": "false call BIS_fnc_advHintCall;", "docSyntax": "fullTextcall call BIS_fnc_advHintCall", "syntax": "<string> call BIS_fnc_advHintCall", "returns": "void"}, "BIS_fnc_initVehicleKart": {"version": "1.20", "tags": "", "description": "Customise given kart and its driver.", "example": "[BIS_kart, [9,7], -1, -1] call BIS_fnc_initVehicleKart;", "docSyntax": "[kart,number,livery,raceTeam] call BIS_fnc_initVehicleKart", "syntax": "[kart,<scalar>,livery,raceTeam] call BIS_fnc_initVehicleKart"}, "BIS_fnc_moduleTimeTrial": {"version": "1.20", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_moduleTTCPClear": {"version": "1.20", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_moduleTTCPIn": {"version": "1.20", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_moduleTTCPOut": {"version": "1.20", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "lbSetPictureColorDisabled": {"version": "1.20", "tags": "", "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];", "docSyntax": "lbSetPictureColorDisabled [idc, index, color]", "syntax": "lbSetPictureColorDisabled [<scalar>,<scalar>,<scalar>]"}, "lbSetPictureColorSelected": {"version": "1.20", "tags": "", "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureColorSelected [idc, index, color]", "syntax": "lbSetPictureColorSelected [<scalar>,<scalar>,<scalar>]"}, "lbSetPictureRightColorDisabled": {"version": "1.20", "tags": "", "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureRightColorDisabled [101, 0, [1, 1, 1, 0.25]];", "docSyntax": "lbSetPictureRightColorDisabled [idc, index, color]", "syntax": "lbSetPictureRightColorDisabled [<scalar>,<scalar>,<scalar>]"}, "lbSetPictureRightColorSelected": {"version": "1.20", "tags": "", "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureRightColorSelected [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureRightColorSelected [idc, index, color]", "syntax": "lbSetPictureRightColorSelected [<scalar>,<scalar>,<scalar>]"}, "enableMimics": {"version": "1.22", "tags": "", "description": "Enables/disables mimics on a given unit.", "example": "cursorTarget enableMimics false;", "docSyntax": "unit enableMimics enabled", "syntax": "<objUnit> enableMimics <bool>"}, "everyContainer": {"version": "1.22", "tags": "", "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.", "example": "everyContainer cursorTarget; /* returns e.g [ [\"V_PlateCarrier1_rgr\",2bc06b00# 163955: dummyweapon.p3d], [\"U_B_CombatUniform_mcam\",2bc07900# 163954: dummyweapon.p3d] ] */", "docSyntax": "everyContainer object", "syntax": "everyContainer <object>"}, "forceAddUniform": {"version": "1.22", "tags": "", "description": "Create a new uniform and hard link it into slot (without any restrictions).", "example": "_unit forceAddUniform \"U_B_CombatUniform_mcam\";", "docSyntax": "unit forceAddUniform type", "syntax": "<objUnit> forceAddUniform type"}, "isUniformAllowed": {"version": "1.22", "tags": "", "description": "Check whether given uniform can be dressed by target soldier.", "example": "_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";", "docSyntax": "unit isUniformAllowed type", "syntax": "<objUnit> isUniformAllowed type"}, "lbSetPictureColor": {"version": "1.22", "tags": "", "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureColor [idc, index, color]", "syntax": "lbSetPictureColor [<scalar>,<scalar>,<scalar>]"}, "lbSetPictureRightColor": {"version": "1.22", "tags": "", "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color (RGBA). Color which consists from only zeros means disable this override.", "example": "lbSetPictureRightColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetPictureRightColor [idc, index, color]", "syntax": "lbSetPictureRightColor [<scalar>,<scalar>,<scalar>]"}, "magazinesAmmoCargo": {"version": "1.22", "tags": "", "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.", "example": "magazinesAmmoCargo vehicle player;", "docSyntax": "magazinesAmmoCargo vehicle", "syntax": "magazinesAmmoCargo <objVehicle>"}, "openYoutubeVideo": {"version": "1.22", "tags": "", "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.", "example": "//Open http://www.youtube.com/watch?v=UBIAbm7Rt78 _isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";", "docSyntax": "openYoutubeVideo youTubeUrl", "syntax": "openYoutubeVideo youTubeUrl"}, "removeWeaponAttachmentCargo": {"version": "1.22", "tags": "", "description": "Remove attachment linked to a weapon from the vehicle cargo space.", "example": "rearmTruckOne removeWeaponAttachmentCargo [weaponID, creatorID, \"attachment\"]", "docSyntax": "object removeWeaponAttachmentCargo [weaponID,creatorID,\"attachment\"]", "syntax": "<object> removeWeaponAttachmentCargo [weaponID,creatorID,\"attachment\"]"}, "removeWeaponCargo": {"version": "1.22", "tags": "", "description": "Remove weapon from the vehicle cargo space.", "example": "rearmTruckOne removeWeaponCargo [19, 1]", "docSyntax": "object removeWeaponCargo [weaponID,creatorID]", "syntax": "<object> removeWeaponCargo [weaponID,creatorID]"}, "vectorAdd": {"version": "1.22", "tags": "", "description": "Adds two 3D vectors. Replaces BIS_fnc_vectorAdd.", "example": "hint str (velocity unit1 vectorAdd velocity unit2);", "docSyntax": "vector1 vectorAdd vector2", "syntax": "vector1 vectorAdd vector2"}, "vectorCos": {"version": "1.22", "tags": "", "description": "Cosine of angle between two 3D vectors.", "example": "_cos = getPos player vectorCos [0,0,2];", "docSyntax": "vector1 vectorCos vector2", "syntax": "vector1 vectorCos vector2"}, "vectorCrossProduct": {"version": "1.22", "tags": "", "description": "Cross product of two 3D vectors.", "example": "_vector = [1,1,1] vectorCrossProduct [2,2,2];", "docSyntax": "vector1 vectorCrossProduct vector2", "syntax": "vector1 vectorCrossProduct vector2"}, "vectorDiff": {"version": "1.22", "tags": "", "description": "Subtracts one 3D vector from another. (vector1 - vector2)", "example": "hint str (velocity car vectorDiff velocity bike);", "docSyntax": "vector1 vectorDiff vector2", "syntax": "vector1 vectorDiff vector2"}, "vectorDistance": {"version": "1.22", "tags": "", "description": "Returns Euclidean distance between two points.", "example": "_euclideanDist = getPosASL player vectorDistance [0,0,0];", "docSyntax": "point1 vectorDistance point2", "syntax": "point1 vectorDistance point2"}, "vectorDistanceSqr": {"version": "1.22", "tags": "", "description": "Squared distance between two 3D vectors.", "example": "_distSqr = getPos player vectorDistanceSqr [0,0,2];", "docSyntax": "vector1 vectorDistanceSqr vector2", "syntax": "vector1 vectorDistanceSqr vector2"}, "vectorDotProduct": {"version": "1.22", "tags": "", "description": "Dot product of two 3D vectors.", "example": "_dot = [1,0,1] vectorDotProduct [0,0,2];", "docSyntax": "vector1 vectorDotProduct vector2", "syntax": "vector1 vectorDotProduct vector2"}, "vectorMagnitude": {"version": "1.22", "tags": "", "description": "Magnitude of a 3D vector.", "example": "_size = vectorMagnitude [0,3,4]; //\u00a0returns 5", "docSyntax": "vectorMagnitude vector", "syntax": "vectorMagnitude vector"}, "vectorMagnitudeSqr": {"version": "1.22", "tags": "", "description": "Squared magnitude of a 3D vector.", "example": "_sizeSqr = vectorMagnitudeSqr [0,3,4]; //\u00a0returns 25", "docSyntax": "vectorMagnitudeSqr vector", "syntax": "vectorMagnitudeSqr vector"}, "vectorMultiply": {"version": "1.22", "tags": "", "description": "Multiplies 3D vector by a scalar.", "example": "_newVector = [1,2,3] vectorMultiply 3; //\u00a0returns [3,6,9]", "docSyntax": "vector vectorMultiply scalar", "syntax": "vector vectorMultiply scalar"}, "visibleCompass": {"version": "1.22", "tags": "", "description": "Checks if the player has compass opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the direction.", "example": "if (visibleCompass) then {hint \"Compass is visible\"};", "docSyntax": "visibleCompass", "syntax": "visibleCompass"}, "visibleGPS": {"version": "1.22", "tags": "", "description": "Checks if the player has GPS receiver (minimap) opened and visible.", "example": "if (visibleGPS) then {hint \"GPS is visible\"};", "docSyntax": "visibleGPS", "syntax": "visibleGPS"}, "visibleWatch": {"version": "1.22", "tags": "", "description": "Checks if the player has watch opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the time.", "example": "if (visibleWatch) then {hint \"Watch is visible\"};", "docSyntax": "visibleWatch", "syntax": "visibleWatch"}, "weaponAccessoriesCargo": {"version": "1.22", "tags": "", "description": "Returns array with all items assigned to the given weapon in given cargo container.", "example": "-", "docSyntax": "container weaponAccessoriesCargo [weaponId, creatorId]", "syntax": "container weaponAccessoriesCargo [weaponId,creatorId]"}, "weaponsItemsCargo": {"version": "1.22", "tags": "", "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info. If the argument is a vehicle with weapons, vehicles cargo is searched, unlike with weaponsItems command, which will return vehicle's weapons instead.", "example": "weaponsItemsCargo vehicle player;", "docSyntax": "weaponsItemsCargo vehicle", "syntax": "weaponsItemsCargo <objVehicle>"}, "allMines": {"version": "1.24", "tags": "", "description": "Returns an array of all mines in the mission", "example": "allMines", "docSyntax": "allMines", "syntax": "allMines"}, "BIS_fnc_addVirtualBackpackCargo": {"version": "1.24", "tags": "", "description": "Add virtual backpacks to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualBackpackCargo;", "docSyntax": "[object,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo", "syntax": "[<object>,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo"}, "BIS_fnc_addVirtualItemCargo": {"version": "1.24", "tags": "", "description": "Add virtual items to an object (e.g., ammo box). Virtual items can be selected in the Arsenal. If parameters 4 and 5 are used this function can replace BIS_fnc_addVirtualWeaponCargo, BIS_fnc_addVirtualMagazineCargo and BIS_fnc_addVirtualBackpackCargo.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualItemCargo;", "docSyntax": "[object, itemClasses, addItemsGlobal, arsenal, mode, itemType] call BIS_fnc_addVirtualItemCargo", "syntax": "[<object>,itemClasses,addItemsGlobal,arsenal,mode,itemType] call BIS_fnc_addVirtualItemCargo"}, "BIS_fnc_addVirtualMagazineCargo": {"version": "1.24", "tags": "", "description": "Add virtual magazines to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualMagazineCargo;", "docSyntax": "[object,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo", "syntax": "[<object>,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo"}, "BIS_fnc_addVirtualWeaponCargo": {"version": "1.24", "tags": "", "description": "Add virtual weapons to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualWeaponCargo;", "docSyntax": "[object,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo", "syntax": "[<object>,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo"}, "BIS_fnc_animateTaskWaypoint": {"version": "1.24", "tags": "", "description": "Plays an animation that pushes the active task waypoint up and down.", "example": "[player] call BIS_fnc_animateTaskWaypoint;", "docSyntax": "param call BIS_fnc_animateTaskWaypoint", "syntax": "param call BIS_fnc_animateTaskWaypoint"}, "BIS_fnc_arsenal": {"version": "1.24", "tags": "", "description": "Function used for the Virtual Arsenal. The function features four different modes, each mode comes with its own parameters.", "example": "//\u00a0Opens Arsenal with all items [\"Open\", [true]] call BIS_fnc_arsenal;", "docSyntax": "[mode, params] call BIS_fnc_arsenal", "syntax": "[mode,<any>] call BIS_fnc_arsenal"}, "BIS_fnc_compatibleItems": {"version": "1.24", "tags": "", "description": "Return all compatible weapon attachments.", "example": "(currentWeapon player) call BIS_fnc_compatibleItems;", "docSyntax": "weapon call BIS_fnc_compatibleItems", "syntax": "<string> call BIS_fnc_compatibleItems"}, "BIS_fnc_getUnitInsignia": {"version": "1.24", "tags": "", "description": "Get a unit's uniform insignia class set with BIS_fnc_setUnitInsignia.", "example": "private _insigniaClass = [player] call BIS_fnc_getUnitInsignia", "docSyntax": "[target] call BIS_fnc_getUnitInsignia", "syntax": "[<object>] call BIS_fnc_getUnitInsignia"}, "BIS_fnc_getVirtualBackpackCargo": {"version": "1.24", "tags": "", "description": "Get virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualBackpackCargo;", "docSyntax": "object call BIS_fnc_getVirtualBackpackCargo", "syntax": "<object> call BIS_fnc_getVirtualBackpackCargo"}, "BIS_fnc_getVirtualItemCargo": {"version": "1.24", "tags": "", "description": "Get virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualItemCargo;", "docSyntax": "object call BIS_fnc_getVirtualItemCargo", "syntax": "<object> call BIS_fnc_getVirtualItemCargo"}, "BIS_fnc_getVirtualMagazineCargo": {"version": "1.24", "tags": "", "description": "Get virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualMagazineCargo;", "docSyntax": "object call BIS_fnc_getVirtualMagazineCargo", "syntax": "<object> call BIS_fnc_getVirtualMagazineCargo"}, "BIS_fnc_getVirtualWeaponCargo": {"version": "1.24", "tags": "", "description": "Get virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualWeaponCargo;", "docSyntax": "object call BIS_fnc_getVirtualWeaponCargo", "syntax": "<object> call BIS_fnc_getVirtualWeaponCargo"}, "BIS_fnc_removeVirtualBackpackCargo": {"version": "1.24", "tags": "", "description": "Remove virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualBackpackCargo;", "docSyntax": "[object,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo", "syntax": "[<object>,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo"}, "BIS_fnc_removeVirtualItemCargo": {"version": "1.24", "tags": "", "description": "Remove virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualItemCargo;", "docSyntax": "[object,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo", "syntax": "[<object>,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo"}, "BIS_fnc_removeVirtualMagazineCargo": {"version": "1.24", "tags": "", "description": "Remove virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualMagazineCargo;", "docSyntax": "[object,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo", "syntax": "[<object>,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo"}, "BIS_fnc_removeVirtualWeaponCargo": {"version": "1.24", "tags": "", "description": "Remove virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualWeaponCargo;", "docSyntax": "[object,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo", "syntax": "[<object>,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo"}, "BIS_fnc_setUnitInsignia": {"version": "1.24", "tags": "", "description": "Sets unit insignia (e.g., shoulder insignia on soldiers). See Arma 3: Unit Insignia for more details and a list of official insignias.", "example": "Place insignia: [player, \"111thID\"] call BIS_fnc_setUnitInsignia;", "docSyntax": "[target, className] call BIS_fnc_setUnitInsignia", "syntax": "[<object>,className] call BIS_fnc_setUnitInsignia"}, "BIS_fnc_VRCourseBallistics1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseBallistics2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseBallistics3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseBallistics4": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingActions1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingActions2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingActions3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingBehaviour1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingBehaviour2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingBehaviour3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingMovement1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingMovement2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingVehicles1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingVehicles2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseCommandingVehicles3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced4": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced5": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliAdvanced6": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliBasics1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliBasics2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliBasics3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliSlingload1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliWeapons1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliWeapons2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliWeapons3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseHeliWeapons4": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseLaunchers1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseLaunchers2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseLaunchers3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCoursePlaceables1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCoursePlaceables2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCoursePlaceables3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseTargetDesignation1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseTargetDesignation2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseTargetDesignation3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingA1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingA2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingA3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingB1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingB2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingB3": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingC1": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRCourseWeaponHandlingC2": {"version": "1.24", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_VRDrawBorder": {"version": "1.24", "tags": "", "description": "Visualizes area border (used primarily for VR missions).", "example": "[[0,0,0], 200] call BIS_fnc_VRDrawBorder;", "docSyntax": "[center, radius] call BIS_fnc_VRDrawBorder", "syntax": "[center,radius] call BIS_fnc_VRDrawBorder"}, "BIS_fnc_VREffectKilled": {"version": "1.24", "tags": "", "description": "Delete body of a virtual soldier after he's killed.", "example": "[ player ] call BIS_fnc_VREffectKilled;", "docSyntax": "[object, instant, delay] call BIS_fnc_VREffectKilled", "syntax": "[<object>,instant,<scalar>] call BIS_fnc_VREffectKilled"}, "BIS_fnc_VRHitpart": {"version": "1.24", "tags": "", "description": "Initialize hit effects on VR targets.", "example": "_delta = [someObject, 60] call BIS_fnc_VRHitpart;", "docSyntax": "[object,time] call BIS_fnc_VRHitpart", "syntax": "[<object>,<scalar>] call BIS_fnc_VRHitpart"}, "BIS_fnc_VRSpawnEffect": {"version": "1.24", "tags": "", "description": "VR (unit) spawn effect.", "example": "[ player, false, 5 ] call BIS_fnc_VRSpawnEffect;", "docSyntax": "[object, reverse, size] call BIS_fnc_VRSpawnEffect", "syntax": "[<object>,reverse,size] call BIS_fnc_VRSpawnEffect"}, "BIS_fnc_VRSpawnSelector": {"version": "1.24", "tags": "", "description": "Spawns the course selector (used primarily for VR missions).", "example": "[ [0,0,0], \"exit\" ] call BIS_fnc_VRSpawnSelector;", "docSyntax": "[center, type] call BIS_fnc_VRSpawnSelector", "syntax": "[center,type] call BIS_fnc_VRSpawnSelector"}, "configClasses": {"version": "1.24", "tags": "", "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. Slightly faster than configProperties, but doesn't account for config properties or inherited entries.", "example": "collect all CfgVehicles configs: _configs = \"true\" configClasses (configFile >> \"CfgVehicles\");", "docSyntax": "condition configClasses config", "syntax": "condition configClasses config"}, "detectedMines": {"version": "1.24", "tags": "", "description": "Returns an array of all mines detected by a given side", "example": "detectedMines west;", "docSyntax": "detectedMines side", "syntax": "detectedMines <objSide>"}, "disableUAVConnectability": {"version": "1.24", "tags": "", "description": "Disables unit's AV terminal(s) connecting to UAV.", "example": "myUnit disableUAVConnectability [myUav, true];", "docSyntax": "object disableUAVConnectability [uav, checkAllItems]", "syntax": "<object> disableUAVConnectability [uav,checkAllItems]"}, "enableUAVConnectability": {"version": "1.24", "tags": "", "description": "Enables unit's AV terminal(s) connecting to UAV.", "example": "unit enableUAVConnectability [uav, true];", "docSyntax": "object enableUAVConnectability [uav, checkAllItems]", "syntax": "<object> enableUAVConnectability [uav,checkAllItems]"}, "isAutotest": {"version": "1.24", "tags": "", "description": "Returns true if game was started with autotest parameter", "example": "_bool = isAutotest", "docSyntax": "isAutotest", "syntax": "isAutotest"}, "isUAVConnectable": {"version": "1.24", "tags": "", "description": "Returns true if UAV is connectable by AV terminal(s).", "example": "private _canConnect = myUnit isUAVConnectable [myUav, true];", "docSyntax": "object isUAVConnectable [uav, checkAllItems]", "syntax": "<object> isUAVConnectable [uav,checkAllItems]"}, "mineDetectedBy": {"version": "1.24", "tags": "", "description": "Returns true if mine has been detected by a given side", "example": "(allMines select 0) mineDetectedBy west;", "docSyntax": "mine mineDetectedBy faction", "syntax": "mine mineDetectedBy faction"}, "reverse": {"version": "1.24", "tags": "", "description": "Reverses given array by reference (modifies the original array, just like resize). The alternative syntax can be used to reverse a ANSI string. If Unicode support is desired, see forceUnicode.", "example": "_arr = [1,2,3]; reverse _arr; hint str _arr; //\u00a0[3,2,1]", "docSyntax": "reverse array", "syntax": "reverse <array>"}, "ctrlClassName": {"version": "1.26", "tags": "", "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display itself: _className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"", "example": "List class names of all controls present on display 46:_return = []\u00a0; { _return pushBack format [\"IDC: %1, className: %2\", ctrlIDC _x, ctrlClassName _x]; } forEach (allControls (findDisplay 46)); copyToClipboard (_return joinString endl);", "docSyntax": "ctrlClassName control", "syntax": "ctrlClassName <uiControl>"}, "ctrlCreate": {"version": "1.26", "tags": "", "description": "Creates a new control in the given display.", "example": "_display ctrlCreate [\"RscText\", 1234];", "docSyntax": "display ctrlCreate [class, idc, controlsGroup]", "syntax": "<uiDisplay> ctrlCreate [class,<scalar>,controlsGroup]"}, "ctrlDelete": {"version": "1.26", "tags": "", "description": "Deletes given control. The control has to be created either by script with ctrlCreate or to have deletable property in config set to true. Use ctrlShow false and ctrlEnable false to disable controls that cannot be deleted. Returns Boolean indicating whether the deletion was successful.", "example": "ctrlDelete ((findDisplay 20000) displayCtrl 20001);", "docSyntax": "ctrlDelete control", "syntax": "ctrlDelete <uiControl>"}, "getCargoIndex": {"version": "1.26", "tags": "", "description": "Returns index of the unit in cargo. -1 if not in cargo.", "example": "player moveInCargo heli; hint str (heli getCargoIndex player);", "docSyntax": "vehicle getCargoIndex unit", "syntax": "<objVehicle> getCargoIndex <objUnit>"}, "lockCameraTo": {"version": "1.26", "tags": "", "description": "Lock/Unlock stabilized camera to target. Works only on turrets which have optic mode selected with direction stabilization enabled.", "example": "uav lockCameraTo [vehicle, [0,0]];", "docSyntax": "vehicle lockCameraTo [target, turretPath, temporary]", "syntax": "<objVehicle> lockCameraTo [<object>,turretPath,temporary]"}, "pushBack": {"version": "1.26", "tags": "", "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)", "example": "_arr = [1,2,3]; _arr pushBack 4; hint str _arr; //[1,2,3,4]", "docSyntax": "array pushBack element", "syntax": "<array> pushBack element"}, "setTimeMultiplier": {"version": "1.26", "tags": "", "description": "Sets a time multiplier for in-game time. The command range is capped at 0.1 - 120 to avoid performance problems.", "example": "setTimeMultiplier 60;", "docSyntax": "setTimeMultiplier value", "syntax": "setTimeMultiplier <scalar>"}, "timeMultiplier": {"version": "1.26", "tags": "", "description": "Returns the value set with setTimeMultiplier.", "example": "_multiplier = timeMultiplier;", "docSyntax": "timeMultiplier", "syntax": "timeMultiplier"}, "vectorFromTo": {"version": "1.26", "tags": "", "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces normalised vector between given 2 points.", "example": "[1,2,3] vectorFromTo [4,5,6]; //\u00a0is the same as vectorNormalized ([4,5,6] vectorDiff [1,2,3]);", "docSyntax": "vector1 vectorFromTo vector2", "syntax": "vector1 vectorFromTo vector2"}, "vectorNormalized": {"version": "1.26", "tags": "", "description": "Returns normalized vector (unit vector, vectorMagnitude == 1) of given vector. If given vector is 0 result is a 0 vector as well.", "example": "vectorNormalized [12345,7890,38383]; //\u00a0[0.300481,0.192045,0.934254] vectorMagnitude [0.300481,0.192045,0.934254]; //", "docSyntax": "vectorNormalized vector", "syntax": "vectorNormalized vector"}, "addBackpackGlobal": {"version": "1.32", "tags": "", "description": "Adds a backpack to a unit (even non-local).", "example": "player addBackpackGlobal \"B_AssaultPack_khk\";", "docSyntax": "unit addBackpackGlobal backpack", "syntax": "<objUnit> addBackpackGlobal backpack"}, "addMagazineAmmoCargo": {"version": "1.32", "tags": "", "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.", "example": "_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];", "docSyntax": "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]", "syntax": "cargospace addMagazineAmmoCargo [<string>,quantity,ammocount]"}, "addToRemainsCollector": {"version": "1.32", "tags": "", "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext", "example": "addToRemainsCollector [unit1, unit2, vehicle1];", "docSyntax": "addToRemainsCollector remains", "syntax": "addToRemainsCollector remains"}, "addWeaponTurret": {"version": "1.32", "tags": "", "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.", "example": "_tank addWeaponTurret [\"LMG_M200\", [0,0]];", "docSyntax": "vehicle addWeaponTurret [weaponName, turretPath]", "syntax": "<objVehicle> addWeaponTurret [weaponName,turretPath]"}, "BIS_fnc_setMissionStatusSlot": {"version": "1.32", "tags": "", "description": "Set a slot for mission status with sectors, respawn tickets, etc.", "docSyntax": "[id, text, texture, color, fade, position, barHeight] call BIS_fnc_setMissionStatusSlot", "syntax": "[<scalar>,<string>,<string>,<scalar>,fade,position,barHeight] call BIS_fnc_setMissionStatusSlot"}, "BIS_fnc_showMissionStatus": {"version": "1.32", "tags": "", "description": "Show mission status with sectors, respawn tickets, etc.", "example": "call BIS_fnc_showMissionStatus;", "docSyntax": "[] call BIS_fnc_showMissionStatus", "syntax": "[] call BIS_fnc_showMissionStatus"}, "ctrlModel": {"version": "1.32", "tags": "", "description": "Returns model used in 3D-Dialog.", "example": "_model = ctrlModel _control3D;", "docSyntax": "ctrlModel control", "syntax": "ctrlModel <uiControl>"}, "ctrlModelDirAndUp": {"version": "1.32", "tags": "", "description": "Returns vectorDir and vectorUp of the model used in 3D-Dialogs.", "example": "_vectorDirAndUp = ctrlModelDirAndUp _control3D;", "docSyntax": "ctrlModelDirAndUp control", "syntax": "ctrlModelDirAndUp <uiControl>"}, "ctrlModelScale": {"version": "1.32", "tags": "", "description": "Returns 3D control model scale.", "example": "_currentScale = ctrlModelScale _ctrl3D;", "docSyntax": "ctrlModelScale control", "syntax": "ctrlModelScale <uiControl>"}, "ctrlSetModel": {"version": "1.32", "tags": "", "description": "Sets model for 3D-Dialogs.", "example": "_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";", "docSyntax": "control ctrlSetModel model", "syntax": "<uiControl> ctrlSetModel model"}, "ctrlSetModelDirAndUp": {"version": "1.32", "tags": "", "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.", "example": "_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation", "docSyntax": "control ctrlSetModelDirAndUp [dir, up]", "syntax": "<uiControl> ctrlSetModelDirAndUp [dir,up]"}, "ctrlSetModelScale": {"version": "1.32", "tags": "", "description": "Sets 3D control model scale", "example": "_ctrl3D ctrlSetModelScale 1.5;", "docSyntax": "control ctrlSetModelScale scale", "syntax": "<uiControl> ctrlSetModelScale <scalar>"}, "deleteAt": {"version": "1.32", "tags": "", "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find(see Example 2) or findIf(see Example 3) command", "example": "_arr = [1,2,3]; _rem = _arr deleteAt 1; hint str [_rem, _arr]; //[2,[1,3]]", "docSyntax": "array deleteAt index", "syntax": "<array> deleteAt <scalar>"}, "deleteRange": {"version": "1.32", "tags": "", "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).", "example": "_arr = [1,2,3,4,5,6]; _arr deleteRange [1,4]; hint str _arr; //[1,6]", "docSyntax": "array deleteRange [from, count]", "syntax": "<array> deleteRange [from,count]"}, "deleteVehicleCrew": {"version": "1.32", "tags": "", "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted. Since Arma 3 v2.06.147649 it is also possible to delete entire crew all in one sweep using alternative syntax.", "example": "_helicopter deleteVehicleCrew driver _helicopter;", "docSyntax": "vehicle deleteVehicleCrew unit", "syntax": "<objVehicle> deleteVehicleCrew <objUnit>"}, "getDirVisual": {"version": "1.32", "tags": "", "description": "Returns object's heading in the range from 0 to 360 in render time scope.", "example": "_dir = getDirVisual player;", "docSyntax": "getDirVisual object", "syntax": "getDirVisual <object>"}, "getHit": {"version": "1.32", "tags": "", "description": "Returns selection damage. Same as getHitPointDamage, only the argument is selection part instead of hit point.", "example": "player getHit \"head\";", "docSyntax": "vehicle getHit selection", "syntax": "<objVehicle> getHit selection"}, "getPosASLVisual": {"version": "1.32", "tags": "", "description": "Returns an object's rendered ASL position (z value above sea level) in render time scope.", "example": "private _playerRenderedPosASL = getPosASLVisual player;", "docSyntax": "getPosASLVisual object", "syntax": "getPosASLVisual <object>"}, "getPosATLVisual": {"version": "1.32", "tags": "", "description": "Returns an object's rendered ATL position (z value above ground) in render time scope.", "example": "_playerRenderedPosATL = getPosATLVisual player;", "docSyntax": "getPosATLVisual object", "syntax": "getPosATLVisual <object>"}, "getPosVisual": {"version": "1.32", "tags": "", "description": "Returns an object's AGLS position in render time scope. Alias of visiblePosition.", "example": "_playerRenderedPos = getPosVisual player;", "docSyntax": "getPosVisual object", "syntax": "getPosVisual <object>"}, "getPosWorld": {"version": "1.32", "tags": "", "description": "Returns the provided object's model centre position ([0,0,0]) in PositionASL, rather than the transformed boundingCenter or LandContact vertices.", "example": "_obj setPosWorld getPosWorld _obj;", "docSyntax": "getPosWorld object", "syntax": "getPosWorld <object>"}, "isCollisionLightOn": {"version": "1.32", "tags": "", "description": "Returns true if vehicle collision lights are on otherwise false.", "example": "_collisionLightOn = isCollisionLightOn heli;", "docSyntax": "isCollisionLightOn vehicle", "syntax": "isCollisionLightOn <objVehicle>"}, "isInRemainsCollector": {"version": "1.32", "tags": "", "description": "Checks if unit or vehicle is queued for disposal after death.", "example": "if (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};", "docSyntax": "isInRemainsCollector remain", "syntax": "isInRemainsCollector remain"}, "isLightOn": {"version": "1.32", "tags": "", "description": "Returns true if vehicle headlights are on otherwise false.", "example": "_headlightsOn = isLightOn vehicle player;", "docSyntax": "isLightOn vehicle", "syntax": "isLightOn <objVehicle>"}, "modelToWorldVisual": {"version": "1.32", "tags": "", "description": "Converts position from object model space to world space in render time scope. For ASL version see modelToWorldVisualWorld.", "example": "_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];", "docSyntax": "object modelToWorldVisual modelPos", "syntax": "<object> modelToWorldVisual modelPos"}, "removeBackpackGlobal": {"version": "1.32", "tags": "", "description": "Removes backpack from a unit. (even non-local)", "example": "removeBackpackGlobal player;", "docSyntax": "removeBackpackGlobal unit", "syntax": "removeBackpackGlobal <objUnit>"}, "removeFromRemainsCollector": {"version": "1.32", "tags": "", "description": "Removes vehicles/units from the garbage collector, so they do not get deleted automatically; added earlier with addToRemainsCollector.", "example": "removeFromRemainsCollector [unit1, unit2, vehicle1];", "docSyntax": "removeFromRemainsCollector remains", "syntax": "removeFromRemainsCollector remains"}, "removeWeaponTurret": {"version": "1.32", "tags": "", "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.", "example": "_tank removeWeaponTurret [\"LMG_M200\", [0,0]];", "docSyntax": "vehicle removeWeaponTurret [weaponName, turretPath]", "syntax": "<objVehicle> removeWeaponTurret [weaponName,turretPath]"}, "scriptNull": {"version": "1.32", "tags": "", "description": "A non-existing Script or script that has finished (scriptDone). To compare non-existent scripts use isNull or isEqualTo:", "example": "Wait until previous script is finished before starting a new one:[] spawn { _script = scriptNull; for \"_i\" from 1 to 10 do { waitUntil {isNull _script}; _script = _i spawn { hint format [\"script %1 started\", _this]; sleep 1; hint format [\"script %1 finished\", _this]; sleep 0.2; }; }; };", "docSyntax": "scriptNull", "syntax": "scriptNull"}, "setCollisionLight": {"version": "1.32", "tags": "", "description": "Switches collision lights of a vehicle on/off.", "example": "heli setCollisionLight true;", "docSyntax": "vehicle setCollisionLight set", "syntax": "<objVehicle> setCollisionLight set"}, "setPilotLight": {"version": "1.32", "tags": "", "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"LightOn\"/\"LightOff\"", "example": "car setPilotLight true;", "docSyntax": "vehicle setPilotLight set", "syntax": "<objVehicle> setPilotLight set"}, "setPosWorld": {"version": "1.32", "tags": "", "description": "Sets position of an object based on the model's centre position (see getPosWorld).", "example": "_obj setPosWorld getPosWorld _obj;", "docSyntax": "object setPosWorld position", "syntax": "<object> setPosWorld position"}, "turretLocal": {"version": "1.32", "tags": "", "description": "Checks if a turret is local.", "example": "_isLocal = vehicle player turretLocal [0];", "docSyntax": "vehicle turretLocal turretPath", "syntax": "<objVehicle> turretLocal turretPath"}, "vectorDirVisual": {"version": "1.32", "tags": "", "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope.", "example": "_dirVector = vectorDirVisual _unit;", "docSyntax": "vectorDirVisual objectName", "syntax": "vectorDirVisual objectName"}, "vectorUpVisual": {"version": "1.32", "tags": "", "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.", "example": "_vUp = vectorUpVisual vehicle player;", "docSyntax": "vectorUpVisual objectName", "syntax": "vectorUpVisual objectName"}, "worldToModelVisual": {"version": "1.32", "tags": "", "description": "Converts position from world space to object model space in render time scope.", "example": "_relPos = myObject worldToModelVisual [0,0,0];", "docSyntax": "object worldToModelVisual worldPosition", "syntax": "<object> worldToModelVisual worldPosition"}, "airDensityCurveRTD": {"version": "1.34", "tags": "", "description": "Returns array with air density data.", "example": "private _densityArray = airDensityCurveRTD;", "docSyntax": "airDensityCurveRTD", "syntax": "airDensityCurveRTD"}, "airDensityRTD": {"version": "1.34", "tags": "", "description": "Returns air density in given altitude.", "example": "_density = airDensityRTD 0; //\u00a0returns 1.22406", "docSyntax": "airDensityRTD altitude", "syntax": "airDensityRTD <scalar>"}, "allTurrets": {"version": "1.34", "tags": "", "description": "Returns array of available turret paths from vehicle object.", "example": "_turretPaths = allTurrets _mySlammerUP; //\u00a0[[0],[0,0]] _turretPaths = allTurrets [_mySlammerUP, true]; //\u00a0[[0],[0,0]] <- Commander turret is also an FFV turret _turretPaths = allTurrets [_mySlammerUP, false]; //\u00a0[[0]]", "docSyntax": "allTurrets vehicle", "syntax": "allTurrets <objVehicle>"}, "BIS_fnc_didJIP": {"version": "1.34", "tags": "", "description": "Return whether or not the local player joined the game while it was already in progress.", "example": "if ([] call BIS_fnc_didJIP) then { forceRespawn player };", "docSyntax": "s1= [] call BIS_fnc_didJIP", "syntax": "s1= [] call BIS_fnc_didJIP"}, "BIS_fnc_ffvUpdate": {"version": "1.34", "tags": "", "description": "Update Firing From Vehicle feature depending on condition defined in turret's config.", "example": "if (local _vehicle) then { _vehicle animate [\"Door_1\", 1]; _vehicle call BIS_fnc_ffvUpdate; };", "docSyntax": "vehicle call BIS_fnc_ffvUpdate", "syntax": "<objVehicle> call BIS_fnc_ffvUpdate"}, "BIS_fnc_moduleSlingload": {"version": "1.34", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSlingload", "syntax": "[] call BIS_fnc_moduleSlingload"}, "BIS_fnc_moduleSpawnAI": {"version": "1.34", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- DEBUG LOG FLAG --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleSpawnAI", "syntax": "[] call BIS_fnc_moduleSpawnAI"}, "BIS_fnc_moduleSpawnAIOptions": {"version": "1.34", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- TERMINATE ALL BUT 1ST MODULE --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleSpawnAIOptions", "syntax": "[] call BIS_fnc_moduleSpawnAIOptions"}, "BIS_fnc_moduleSpawnAIPoint": {"version": "1.34", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleSpawnAIPoint", "syntax": "[] call BIS_fnc_moduleSpawnAIPoint"}, "BIS_fnc_moduleSpawnAISectorTactic": {"version": "1.34", "tags": "", "description": "/*-------------------------------------------------------------------------------------------------- RUN ONCE --------------------------------------------------------------------------------------------------*/", "docSyntax": "[] call BIS_fnc_moduleSpawnAISectorTactic", "syntax": "[] call BIS_fnc_moduleSpawnAISectorTactic"}, "canSlingLoad": {"version": "1.34", "tags": "", "description": "Returns true if setSlingLoad is possible.", "example": "_canSling = veh1 canSlingLoad veh2;", "docSyntax": "heli canSlingLoad cargo", "syntax": "heli canSlingLoad <objVehicle>"}, "clearForcesRTD": {"version": "1.34", "tags": "", "description": "Removes all force generators from world.", "example": "clearForcesRTD;", "docSyntax": "clearForcesRTD", "syntax": "clearForcesRTD"}, "collectiveRTD": {"version": "1.34", "tags": "", "description": "Returns the current position of a helicopter's collective pitch control.", "example": "_collective = collectiveRTD vehicle player;", "docSyntax": "collectiveRTD helicopterRTD", "syntax": "collectiveRTD helicopterRTD"}, "difficultyEnabledRTD": {"version": "1.34", "tags": "", "description": "Returns true if Advanced Flight Model is enabled. Forcing of rotorlib simulation could be done with mission param forceRotorLibSimulation.", "example": "_rtdOn = difficultyEnabledRTD;", "docSyntax": "difficultyEnabledRTD", "syntax": "difficultyEnabledRTD"}, "enableAutoStartUpRTD": {"version": "1.34", "tags": "", "description": "Toggle availability of the automated helicopter start-up and shutdown sequences.", "example": "myHelicopterRTD enableAutoStartUpRTD true;", "docSyntax": "helicopterRTD enableAutoStartUpRTD enable", "syntax": "helicopterRTD enableAutoStartUpRTD <bool>"}, "enableAutoTrimRTD": {"version": "1.34", "tags": "", "description": "Toggle auto-trim for RTD helicopters.", "example": "myHelicopterRTD enableAutoTrimRTD true;", "docSyntax": "helicopterRTD enableAutoTrimRTD enable", "syntax": "helicopterRTD enableAutoTrimRTD <bool>"}, "enablePersonTurret": {"version": "1.34", "tags": "", "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.", "example": "heli enablePersonTurret [[1], true];", "docSyntax": "vehicle enablePersonTurret [turretPath, enable]", "syntax": "<objVehicle> enablePersonTurret [turretPath,<bool>]"}, "enableRopeAttach": {"version": "1.34", "tags": "", "description": "Enables or disables the ability to be attached to a rope end for the given entity.", "example": "vehicle player enableRopeAttach false;", "docSyntax": "entity enableRopeAttach enable", "syntax": "entity enableRopeAttach <bool>"}, "enableStressDamage": {"version": "1.34", "tags": "", "description": "Toggles stress damage in Advanced Flight Model, which otherwise could be manually toggles in game setting: Options > Game > Helicopter Flight Model > Advanced > Stress Damage.", "example": "if (difficultyEnabledRTD) then { enableStressDamage true };", "docSyntax": "enableStressDamage state", "syntax": "enableStressDamage state"}, "enginesIsOnRTD": {"version": "1.34", "tags": "", "description": "Returns which engines are producing some work.", "example": "_enginesTaru = enginesIsOnRTD _taru; //\u00a0returns [true, true]", "docSyntax": "enginesIsOnRTD RTD_helicopter", "syntax": "enginesIsOnRTD RTD_helicopter"}, "enginesPowerRTD": {"version": "1.34", "tags": "", "description": "Returns power produced by engines in Watts.", "example": "_array = enginesPowerRTD vehicle player;", "docSyntax": "enginesPowerRTD RTD_helicopter", "syntax": "enginesPowerRTD RTD_helicopter"}, "enginesRpmRTD": {"version": "1.34", "tags": "", "description": "Returns all engines RPM.", "example": "enginesRpmRTD RTD_helicopter params [\"_RPMEngine1\",\"_RPMEngine2\"];", "docSyntax": "enginesRpmRTD RTD_helicopter", "syntax": "enginesRpmRTD RTD_helicopter"}, "enginesTorqueRTD": {"version": "1.34", "tags": "", "description": "Torque produced by engines in N\u00b7m (Newton \u00d7 meter).", "example": "_UH80_E1 = (enginesTorqueRTD _UH80) select 0; //\u00a0engine 1 Torque _UH80_E2 = (enginesTorqueRTD _UH80) select 1; //\u00a0engine 2 Torque", "docSyntax": "enginesTorqueRTD RTD_helicopter", "syntax": "enginesTorqueRTD RTD_helicopter"}, "forceAtPositionRTD": {"version": "1.34", "tags": "", "description": "Adds force generator to world.", "example": "forceAtPositionRTD;", "docSyntax": "forceAtPositionRTD position", "syntax": "forceAtPositionRTD position"}, "forceGeneratorRTD": {"version": "1.34", "tags": "", "description": "Adds force generator to world.", "example": "forceGeneratorRTD 2;", "docSyntax": "forceGeneratorRTD index", "syntax": "forceGeneratorRTD <scalar>"}, "fullCrew": {"version": "1.34", "tags": "", "description": "Returns an array with all crew inside given vehicle, with or without empty seats.", "example": "_list = fullCrew vehicle player;", "docSyntax": "fullCrew vehicle", "syntax": "fullCrew <objVehicle>"}, "getSlingLoad": {"version": "1.34", "tags": "", "description": "Return object which is sling loaded by vehicle", "example": "_cargo = getSlingLoad heli1;", "docSyntax": "getSlingLoad vehicle", "syntax": "getSlingLoad <objVehicle>"}, "getTrimOffsetRTD": {"version": "1.34", "tags": "", "description": "Returns controls trim offset.", "example": "_array = getTrimOffsetRTD vehicle player;", "docSyntax": "getTrimOffsetRTD RTD_helicopter", "syntax": "getTrimOffsetRTD RTD_helicopter"}, "getWingsOrientationRTD": {"version": "1.34", "tags": "", "description": "Returns orientation of horizontal stabilizers.", "example": "_orientation = getWingsOrientationRTD myHelicopter;", "docSyntax": "getWingsOrientationRTD RTD_helicopter", "syntax": "getWingsOrientationRTD RTD_helicopter"}, "getWingsPositionRTD": {"version": "1.34", "tags": "", "description": "Returns position of stabilizers.", "example": "_position = getWingsPositionRTD myHelicopter;", "docSyntax": "getWingsPositionRTD RTD_helicopter", "syntax": "getWingsPositionRTD RTD_helicopter"}, "isObjectRTD": {"version": "1.34", "tags": "", "description": "Returns true if RTD model is loaded.", "example": "_heliRTD = isObjectRTD vehicle player;", "docSyntax": "isObjectRTD helicopter", "syntax": "isObjectRTD helicopter"}, "isStressDamageEnabled": {"version": "1.34", "tags": "", "description": "Returns true if stress damage is enabled in the game settings. A getter for enableStressDamage.", "example": "_settingEnabled = isStressDamageEnabled;", "docSyntax": "isStressDamageEnabled", "syntax": "isStressDamageEnabled"}, "magazineTurretAmmo": {"version": "1.34", "tags": "", "description": "Returns ammo count of given type from given turret", "example": "vehicle player magazineTurretAmmo [\"cls\", [0]]", "docSyntax": "vehicle magazineTurretAmmo [magazineClass, turretPath]", "syntax": "<objVehicle> magazineTurretAmmo [magazineClass,turretPath]"}, "numberOfEnginesRTD": {"version": "1.34", "tags": "", "description": "Returns the number of engines a helicopter has.", "example": "_engineCount = numberOfEnginesRTD vehicle player;", "docSyntax": "numberOfEnginesRTD helicopterRTD", "syntax": "numberOfEnginesRTD helicopterRTD"}, "ropeAttachedObjects": {"version": "1.34", "tags": "", "description": "Returns an array of all entities that are attached to the transport with ropes. This command is the opposite of ropeAttachedTo.", "example": "_cargoArray = ropeAttachedObjects heli1;", "docSyntax": "ropeAttachedObjects ropesOwner", "syntax": "ropeAttachedObjects ropesOwner"}, "ropeAttachedTo": {"version": "1.34", "tags": "", "description": "Returns the owner of the first rope - the transport to which other entities are attached with ropes. This command is the opposite of ropeAttachedObjects. To return all owners see ropesAttachedTo.", "example": "_heli = ropeAttachedTo veh1;", "docSyntax": "ropeAttachedTo cargo", "syntax": "ropeAttachedTo <objVehicle>"}, "ropeAttachEnabled": {"version": "1.34", "tags": "", "description": "Returns true if entity can be attached to a rope end.", "example": "ropeAttachEnabled veh1;", "docSyntax": "ropeAttachEnabled entity", "syntax": "ropeAttachEnabled entity"}, "ropeAttachTo": {"version": "1.34", "tags": "", "description": "Attaches entity to the rope end with optional offset. For detach operation use ropeDetach.", "example": "[veh1, [0,0,0], [0,0,-1]] ropeAttachTo (ropes heli1 select 0);", "docSyntax": "[entity, toPoint, ropeEndDownVector] ropeAttachTo rope", "syntax": "[entity,toPoint,ropeEndDownVector] ropeAttachTo rope"}, "ropeCreate": {"version": "1.34", "tags": "", "description": "Creates a rope.", "example": "myRope = ropeCreate [vehicle player, \"fastrope0\", 10, 10, true];", "docSyntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", "syntax": "ropeCreate [fromObject,fromPoint,toObject,toPoint,segments,length]"}, "ropeCut": {"version": "1.34", "tags": "", "description": "Cuts the given rope to the specified length. If some entity was attached to the end of the rope, it will be detached. The rope remains attached to its parent transport and if the length is set to 0 or even negative does not get destroyed. Use ropeDestroy to remove it completely.", "example": "ropeCut [ropes heli1 select 0, 5];", "docSyntax": "ropeCut [rope, length]", "syntax": "ropeCut [rope,length]"}, "ropeDestroy": {"version": "1.34", "tags": "", "description": "Destroys the given rope. If the rope is attached to a vehicle, it will be detached and then destroyed.", "example": "ropeDestroy myRope;", "docSyntax": "ropeDestroy rope", "syntax": "ropeDestroy rope"}, "ropeDetach": {"version": "1.34", "tags": "", "description": "Detaches attached object from rope (i.e. detaches rope end from attached to it entity). See ropeAttachTo for attach operation.", "example": "vehicle player ropeDetach myRope;", "docSyntax": "attachedObject ropeDetach rope", "syntax": "attachedObject ropeDetach rope"}, "ropeEndPosition": {"version": "1.34", "tags": "", "description": "Returns start and end positions for the given rope. If command fails, empty array [] is returned.", "example": "_ends = ropeEndPosition (ropes heli1 select 0); _start = _ends select 0; _end = _ends select 1;", "docSyntax": "ropeEndPosition rope", "syntax": "ropeEndPosition rope"}, "ropeLength": {"version": "1.34", "tags": "", "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind).", "example": "_length = ropeLength (ropes heli1 select 0);", "docSyntax": "ropeLength rope", "syntax": "ropeLength rope"}, "ropes": {"version": "1.34", "tags": "", "description": "Returns all ropes attached to a ropes owner transport in an Array, otherwise an empty array [] is returned.", "example": "hint str (ropes vehicle player);", "docSyntax": "ropes ropesOwner", "syntax": "ropes ropesOwner"}, "ropeUnwind": {"version": "1.34", "tags": "", "description": "Increases or decreases the rope length by the given amount. Use relative parameter for changing rope length +/- from current length.", "example": "ropeUnwind [ropes heli1 select 0, 3, 10]; //\u00a0set rope length to 10m at 3m/s", "docSyntax": "ropeUnwind [rope, speed, length, relative]", "syntax": "ropeUnwind [rope,<scalar>,length,relative]"}, "ropeUnwound": {"version": "1.34", "tags": "", "description": "Returns false if rope length changing animation is in progress. Returns true if animation is done.", "example": "waitUntil { ropeUnwound (ropes heli1 select 0) }; hint \"Unwinding Complete\";", "docSyntax": "ropeUnwound rope", "syntax": "ropeUnwound rope"}, "rotorsForcesRTD": {"version": "1.34", "tags": "", "description": "Returns force produced by rotors.", "example": "_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]", "docSyntax": "rotorsForcesRTD RTD_helicopter", "syntax": "rotorsForcesRTD RTD_helicopter"}, "rotorsRpmRTD": {"version": "1.34", "tags": "", "description": "Returns rotors RPM.", "example": "_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor _mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor", "docSyntax": "rotorsRpmRTD RTD_helicopter", "syntax": "rotorsRpmRTD RTD_helicopter"}, "serverCommandExecutable": {"version": "1.34", "tags": "", "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.", "example": "_canKick = serverCommandAvailable \"#kick\";", "docSyntax": "serverCommandExecutable command", "syntax": "serverCommandExecutable command"}, "setActualCollectiveRTD": {"version": "1.34", "tags": "", "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).", "example": "myHelicopterRTD setActualCollectiveRTD 0.7;", "docSyntax": "helicopterRTD setActualCollectiveRTD value", "syntax": "helicopterRTD setActualCollectiveRTD <scalar>"}, "setCustomWeightRTD": {"version": "1.34", "tags": "", "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.", "example": "myHelicopterRTD setCustomWeightRTD 120;", "docSyntax": "helicopterRTD setCustomWeightRTD weight", "syntax": "helicopterRTD setCustomWeightRTD weight"}, "setEngineRPMRTD": {"version": "1.34", "tags": "", "description": "Sets the RPM of given engines.", "example": "myHelicopter setEngineRpmRTD [1337, -1];", "docSyntax": "helicopter setEngineRpmRTD [rpm, engineIndex]", "syntax": "helicopter setEngineRpmRTD [rpm,engineIndex]"}, "setMagazineTurretAmmo": {"version": "1.34", "tags": "", "description": "Sets ammo count to given amount for given turret.", "docSyntax": "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]", "syntax": "<objVehicle> setMagazineTurretAmmo [magazineClass,ammoCount,turretPath]"}, "setRotorBrakeRTD": {"version": "1.34", "tags": "", "description": "Toggles a helicopter's rotor brake.", "example": "myHelicopterRTD setRotorBrakeRTD 1;", "docSyntax": "helicopterRTD setRotorBrakeRTD enable", "syntax": "helicopterRTD setRotorBrakeRTD <bool>"}, "setSlingLoad": {"version": "1.34", "tags": "", "description": "Creates a sling loading from a helicopter to an entity if possible. To unload cargo, pass objNull as second param.", "example": "_success = heli1 setSlingLoad veh1;", "docSyntax": "heli setSlingLoad cargo", "syntax": "heli setSlingLoad <objVehicle>"}, "setWantedRPMRTD": {"version": "1.34", "tags": "", "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!", "example": "vehicle player setWantedRPMRTD [2500, 30, 0];", "docSyntax": "helicopterRTD setWantedRPMRTD [value, time, engineIndex]", "syntax": "helicopterRTD setWantedRPMRTD [<scalar>,<scalar>,engineIndex]"}, "setWingForceScaleRTD": {"version": "1.34", "tags": "", "description": "Set effectivity of wings.", "docSyntax": "helicopterRTD setWingForceScaleRTD [leftHorizontal, rightHorizontal, vertical]", "syntax": "helicopterRTD setWingForceScaleRTD [leftHorizontal,rightHorizontal,vertical]"}, "slingLoadAssistantShown": {"version": "1.34", "tags": "", "description": "Returns true if Sling Load Assistant is open.", "example": "waitUntil { slingLoadAssistantShown }; hint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; //\u00a0scold user for unethical practices", "docSyntax": "slingLoadAssistantShown", "syntax": "slingLoadAssistantShown"}, "stopEngineRTD": {"version": "1.34", "tags": "", "description": "Instant engines stop.", "example": "stopEngineRTD myHeli", "docSyntax": "stopEngineRTD heli", "syntax": "stopEngineRTD heli"}, "weightRTD": {"version": "1.34", "tags": "", "description": "For this command to have any effect, the Advanced Flight Model (AFM) has to be enabled. AFM status can be checked with difficultyEnabledRTD.", "example": "_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]", "docSyntax": "weightRTD helicopter", "syntax": "weightRTD helicopter"}, "windRTD": {"version": "1.34", "tags": "", "description": "Returns wind strength and direction.", "example": "_wind = windRTD;", "docSyntax": "windRTD", "syntax": "windRTD"}, "wingsForcesRTD": {"version": "1.34", "tags": "", "description": "For this command to have any effect, the Advanced Flight Model (AFM) has to be enabled. AFM status can be checked with difficultyEnabledRTD.", "example": "_wingForce = wingsForcesRTD _rtdHelo", "docSyntax": "wingsForcesRTD RTD_helicopter", "syntax": "wingsForcesRTD RTD_helicopter"}, "BIS_fnc_configExtremes": {"version": "1.36", "tags": "", "description": "Scan config paths and return min and max values for each property.", "example": "private _paths = [configFile >> \"cfgWeapons\"] call BIS_fnc_returnChildren; [_paths, [\"maxRange\", \"reloadTime\"]] call BIS_fnc_configExtremes;", "docSyntax": "[paths, properties, propertyTypes, propertyDefaults] call BIS_fnc_configExtremes", "syntax": "[paths,properties,propertyTypes,propertyDefaults] call BIS_fnc_configExtremes"}, "BIS_fnc_openFieldManual": {"version": "1.36", "tags": "", "description": "Opens Field Manual in briefing (SP, MP Server, MP Client) and players's map or journal. Selects the topic and hint passed as parameters. Can apply a (search) filter if desired.", "example": "[\"Damage\", \"HitDamage\"] call BIS_fnc_openFieldManual;", "docSyntax": "[topic, hint, display, filter] call BIS_fnc_openFieldManual", "syntax": "[topic,hint,<uiDisplay>,filter] call BIS_fnc_openFieldManual"}, "configProperties": {"version": "1.36", "tags": "", "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entries.", "example": "_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];", "docSyntax": "configProperties [config, condition, inherit]", "syntax": "configProperties [config,condition,inherit]"}, "getObjectDLC": {"version": "1.36", "tags": "", "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.", "example": "_appID = getObjectDLC cursorTarget; if (!isNil \"_appID\") then { hint format [\"This object belongs to DLC with id: %1\", _appID]; } else { hint \"This object is vanilla\"; };", "docSyntax": "getObjectDLC obj", "syntax": "getObjectDLC <object>"}, "getPersonUsedDLCs": {"version": "1.36", "tags": "", "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.", "example": "_objects = getPersonUsedDLCs player;", "docSyntax": "getPersonUsedDLCs unit", "syntax": "getPersonUsedDLCs <objUnit>"}, "setUnloadInCombat": {"version": "1.36", "tags": "", "description": "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.", "example": "_veh setUnloadInCombat [true, false];", "docSyntax": "vehicle setUnloadInCombat [allowCargo, allowTurrets]", "syntax": "<objVehicle> setUnloadInCombat [allowCargo,allowTurrets]"}, "shownChat": {"version": "1.36", "tags": "", "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.", "example": "_bool = shownChat;", "docSyntax": "shownChat", "syntax": "shownChat"}, "addWeaponItem": {"version": "1.38", "tags": "", "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.", "example": "player addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];", "docSyntax": "unit addWeaponItem [weaponName, itemName, instant]", "syntax": "<objUnit> addWeaponItem [weaponName,itemName,instant]"}, "allControls": {"version": "1.38", "tags": "", "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from CT_CONTROLS_GROUPs.", "example": "_allCtrls = allControls findDisplay 46;", "docSyntax": "allControls display", "syntax": "allControls <uiDisplay>"}, "allDisplays": {"version": "1.38", "tags": "", "description": "Returns a list of all opened GUI displays.", "example": "private _allDisps = allDisplays;", "docSyntax": "allDisplays", "syntax": "allDisplays"}, "allVariables": {"version": "1.38", "tags": "", "description": "Returns a list of all variables from desired namespace. Namespaces supported:", "example": "_allVarsUINamespace = allVariables uiNamespace;", "docSyntax": "allVariables namespace", "syntax": "allVariables namespace"}, "configSourceMod": {"version": "1.38", "tags": "", "description": "Returns modDir of the mod that given config class was loaded from.", "example": "configSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); //\u00a0returns \"heli\"", "docSyntax": "configSourceMod config", "syntax": "configSourceMod config"}, "getObjectMaterials": {"version": "1.38", "tags": "", "description": "Gets all custom materials associated with the object.", "example": "_materials = getObjectMaterials car;", "docSyntax": "getObjectMaterials obj", "syntax": "getObjectMaterials <object>"}, "getObjectTextures": {"version": "1.38", "tags": "", "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.", "example": "_textures = getObjectTextures player;", "docSyntax": "getObjectTextures obj", "syntax": "getObjectTextures <object>"}, "removeSecondaryWeaponItem": {"version": "1.38", "tags": "", "description": "Removes given weapon item, including magazine, from the secondaryWeapon.", "example": "player removeSecondaryWeaponItem (secondaryWeaponItems player select 0);", "docSyntax": "unit removeSecondaryWeaponItem item", "syntax": "<objUnit> removeSecondaryWeaponItem <objItem>"}, "turretOwner": {"version": "1.38", "tags": "", "description": "Returns id of the owner of the turret. Server only. Returns 0 on non-server and SP. Since Arma 3 v2.07.148325 this command supports driver turret [-1]", "example": "_ownerId = vehicle player turretOwner [0];", "docSyntax": "vehicle turretOwner turretPath", "syntax": "<objVehicle> turretOwner turretPath"}, "append": {"version": "1.40", "tags": "", "description": "Appends array2 to the back of array1 modifying array1.", "example": "_arr = [1,2,3]; _arr append [4,5,6]; hint str _arr; //\u00a0[1,2,3,4,5,6]", "docSyntax": "array1 append array2", "syntax": "array1 append array2"}, "configSourceModList": {"version": "1.40", "tags": "", "description": "Returns an array of mods (CfgMods) in which the given config class is defined.", "example": "_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\"); hint str _mods; //\u00a0[\"A3\",\"curator\",\"heli\"]", "docSyntax": "configSourceModList config", "syntax": "configSourceModList config"}, "enableUAVWaypoints": {"version": "1.40", "tags": "", "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.", "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; //\u00a0returns false", "docSyntax": "uav enableUAVWaypoints enable", "syntax": "uav enableUAVWaypoints <bool>"}, "groupOwner": {"version": "1.40", "tags": "", "description": "Returns the machine network ID of the client to which the group is local. This command only works when called from the server. When called from a client, it always returns 0.", "example": "_clientID = groupOwner _someGroup;", "docSyntax": "groupOwner group", "syntax": "groupOwner <objGroup>"}, "setGroupOwner": {"version": "1.40", "tags": "", "description": "Changes the ownership of a group (and all its units) to a given client. The group leader must not be a player. This command only works when called from the server. Returns true if locality was changed. For agents use setOwner command.", "example": "_localityChanged = _someGroup setGroupOwner (owner _playerObject);", "docSyntax": "group setGroupOwner clientID", "syntax": "<objGroup> setGroupOwner clientID"}, "waypointsEnabledUAV": {"version": "1.40", "tags": "", "description": "Checks if the UAV has waypoints enabled.", "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; //\u00a0returns false", "docSyntax": "waypointsEnabledUAV uav", "syntax": "waypointsEnabledUAV uav"}, "BIS_fnc_DataTerminalAnimate": {"version": "1.42", "tags": "", "description": "Animate a Data Terminal (\"Land_DataTerminal_01_F\").", "example": "[myTerminal, 3] call BIS_fnc_dataTerminalAnimate;", "docSyntax": "[dataTerminal, step] call BIS_fnc_dataTerminalAnimate", "syntax": "[dataTerminal,step] call BIS_fnc_dataTerminalAnimate"}, "BIS_fnc_DataTerminalColor": {"version": "1.42", "tags": "", "description": "Set Data Terminal colors for its different steps. Steps are:", "example": "[myTerminal, \"purple\", \"red\", \"orange\"] call BIS_fnc_dataTerminalColor;", "docSyntax": "[dataTerminal, step1color, step2color, step3color] call BIS_fnc_dataTerminalColor", "syntax": "[dataTerminal,step1color,step2color,step3color] call BIS_fnc_dataTerminalColor"}, "BIS_fnc_disableRevive": {"version": "1.42", "tags": "", "description": "Disable revive on given unit.", "example": "[BIS_unit] call BIS_fnc_disableRevive;", "docSyntax": "[player] call BIS_fnc_disableRevive", "syntax": "[<objUnit>] call BIS_fnc_disableRevive"}, "BIS_fnc_dynamicGroups": {"version": "1.42", "tags": "", "description": "Function that adds dynamic groups to the mission as seen in End Game. Function needs to be initialized on server and client. Clients can then use action TeamSwitch (\"U\" by default) to access the Dynamic Groups interface.", "example": "[\"Initialize\"] call BIS_fnc_dynamicGroups;//Exec on Server", "docSyntax": "[mode, params] call BIS_fnc_dynamicGroups", "syntax": "[mode,<any>] call BIS_fnc_dynamicGroups"}, "BIS_fnc_garage": {"version": "1.42", "tags": "", "description": "Splendid\u2122 Virtual Arsenal Garage.", "example": "[] call BIS_fnc_garage;", "docSyntax": "[mode, params] call BIS_fnc_garage", "syntax": "[mode,<any>] call BIS_fnc_garage"}, "BIS_fnc_initVehicle": {"version": "1.42", "tags": "", "description": "This function changes the textures, animation sources and/or mass of a given vehicle.", "example": "result = [this, \"\", []] call BIS_fnc_initVehicle;", "docSyntax": "[vehicle, variant, animations, mass] call BIS_fnc_initVehicle", "syntax": "[<objVehicle>,variant,animations,mass] call BIS_fnc_initVehicle"}, "BIS_fnc_moduleHvtInit": {"version": "1.42", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleHvtInit", "syntax": "[] call BIS_fnc_moduleHvtInit"}, "BIS_fnc_moduleHvtObjective": {"version": "1.42", "tags": "", "description": "/*, _objects*/", "docSyntax": "[] call BIS_fnc_moduleHvtObjective", "syntax": "[] call BIS_fnc_moduleHvtObjective"}, "BIS_fnc_moduleHvtObjectives": {"version": "1.42", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleHvtObjectives", "syntax": "[] call BIS_fnc_moduleHvtObjectives"}, "BIS_fnc_moduleHvtObjectivesInstance": {"version": "1.42", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_moduleHvtObjectivesInstance", "syntax": "[] call BIS_fnc_moduleHvtObjectivesInstance"}, "BIS_fnc_reenableRevive": {"version": "1.42", "tags": "", "description": "Enable revive on given unit. Revive system needs to be initialized and running.", "example": "[BIS_unit] call BIS_fnc_reenableRevive;", "docSyntax": "[player] call BIS_fnc_reenableRevive", "syntax": "[<objUnit>] call BIS_fnc_reenableRevive"}, "BIS_fnc_reviveAllowed": {"version": "1.42", "tags": "", "description": "Returns true if unit is in general able to revive someone.", "example": "_canRevive = [medic,target] call BIS_fnc_reviveAllowed;", "docSyntax": "[medic, unit] call BIS_fnc_reviveAllowed", "syntax": "[medic,<objUnit>] call BIS_fnc_reviveAllowed"}, "BIS_fnc_reviveBleedOut": {"version": "1.42", "tags": "", "description": "Make a unit bleed out over time while incapacitated.", "example": "[BIS_unit] call BIS_fnc_reviveBleedOut;", "docSyntax": "[player] call BIS_fnc_reviveBleedOut", "syntax": "[<objUnit>] call BIS_fnc_reviveBleedOut"}, "BIS_fnc_reviveDamageReset": {"version": "1.42", "tags": "", "description": "Resets player's damage data and recieved damage.", "example": "[player] call BIS_fnc_reviveDamageReset;", "docSyntax": "[player] call BIS_fnc_reviveDamageReset", "syntax": "[<objUnit>] call BIS_fnc_reviveDamageReset"}, "BIS_fnc_reviveDebug": {"version": "1.42", "tags": "", "description": "Debug script for revive system.", "example": "[1] call BIS_fnc_reviveDebug;", "docSyntax": "[mode] call BIS_fnc_reviveDebug", "syntax": "[mode] call BIS_fnc_reviveDebug"}, "BIS_fnc_reviveEhDammaged": {"version": "1.42", "tags": "", "description": "/* unit: Object - Object the event handler is assigned to hitSelection: String - Name of the selection where the unit was damaged damage: Number - Resulting level of damage hitPartIndex: Number - hit index of the hit selection hitPoint: String - hit point Cfg name shooter: Object - shooter reference (to get instigator use getShotParents on projectile) projectile: Object - the projectile that caused damage */", "docSyntax": "[] call BIS_fnc_reviveEhDammaged", "syntax": "[] call BIS_fnc_reviveEhDammaged"}, "BIS_fnc_reviveEhHandleDamage": {"version": "1.42", "tags": "", "description": "Should be excuted by HandleDamage event handler. See example. Handles damage calculation.", "example": "BIS_unit addEventHandler [\"HandleDamage\", { _this call BIS_fnc_reviveEhHandleDamage; }];", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_reviveEhHandleHeal": {"version": "1.42", "tags": "", "description": "Handles healing of unit. Unit gets fully healed after 10 seconds if current damage is smaller than initial damage, e.g. a medic healed the unit.", "example": "[BIS_unit] call BIS_fnc_reviveEhHandleHeal;", "docSyntax": "[unit] call BIS_fnc_reviveEhHandleHeal", "syntax": "[<objUnit>] call BIS_fnc_reviveEhHandleHeal"}, "BIS_fnc_reviveEhKilled": {"version": "1.42", "tags": "", "description": "Should be called from Killed event handler. Handles what happens if unit dies if revive system is enabled.", "example": "BIS_unit addEventHandler [\"Killed\", { _this call BIS_fnc_reviveEhKilled; }];", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_reviveEhRespawn": {"version": "1.42", "tags": "", "description": "Sets unit's state to respawned. Should probably only be called on respawn event.", "example": "BIS_unit call BIS_fnc_reviveEhRespawn;", "docSyntax": "[unit] call BIS_fnc_reviveEhRespawn", "syntax": "[<objUnit>] call BIS_fnc_reviveEhRespawn"}, "BIS_fnc_reviveEnabled": {"version": "1.42", "tags": "", "description": "Returns is revive is enabled or not for the unit.", "example": "_reviveEnabled = [BIS_unit] call BIS_fnc_reviveEnabled;", "docSyntax": "[unit] call BIS_fnc_reviveEhRespawn", "syntax": "[<objUnit>] call BIS_fnc_reviveEhRespawn"}, "BIS_fnc_reviveGet3dIcons": {"version": "1.42", "tags": "", "description": "Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.", "example": "_structuredText = [BIS_unit] call BIS_fnc_reviveGet3dIcons;", "docSyntax": "[unit] call BIS_fnc_reviveGet3dIcons", "syntax": "[<objUnit>] call BIS_fnc_reviveGet3dIcons"}, "BIS_fnc_reviveGetActionIcon": {"version": "1.42", "tags": "", "description": "Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.", "example": "_structuredText = [BIS_unit] call BIS_fnc_reviveGetActionIcon;", "docSyntax": "[unit] call BIS_fnc_reviveGetActionIcon", "syntax": "[<objUnit>] call BIS_fnc_reviveGetActionIcon"}, "BIS_fnc_reviveIconControl": {"version": "1.42", "tags": "", "description": "Manage the adding, removing, and effects applied to 3D icons used for visualizing incapacitated units.", "docSyntax": "[mode, unitVar] call BIS_fnc_reviveIconControl", "syntax": "[mode,unitVar] call BIS_fnc_reviveIconControl"}, "BIS_fnc_reviveInit": {"version": "1.42", "tags": "", "description": "Initialize the Revive system on all machines.", "example": "call BIS_fnc_reviveInit;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_reviveIsValid": {"version": "1.42", "tags": "", "description": "Check if player can perform revive action on given unit.", "example": "[BIS_player] call BIS_fnc_reviveIsValid;", "docSyntax": "[unit] call BIS_fnc_reviveIsValid", "syntax": "[<objUnit>] call BIS_fnc_reviveIsValid"}, "BIS_fnc_reviveIsValidSecure": {"version": "1.42", "tags": "", "description": "Check if player can perform secure action on given unit.", "example": "[BIS_player] call BIS_fnc_reviveIsValidSecure;", "docSyntax": "[unit] call BIS_fnc_reviveIsValidSecure", "syntax": "[<objUnit>] call BIS_fnc_reviveIsValidSecure"}, "BIS_fnc_reviveOnBeingRevived": {"version": "1.42", "tags": "", "description": "Used to execute specific code locally on every client whenever \"being revived\" flag changes.", "example": "[nil, true, squadLeader] call BIS_fnc_reviveOnBeingRevived;", "docSyntax": "[nil, flagState, unit] call BIS_fnc_reviveOnBeingRevived", "syntax": "[nil,flagState,<objUnit>] call BIS_fnc_reviveOnBeingRevived"}, "BIS_fnc_reviveOnForcingRespawn": {"version": "1.42", "tags": "", "description": "/* Author: Jiri Wainar Description: Used to execute specific code localy on every client whenever 'forcing respawn' flag changes. Parameters: _this select 0: STRING - Variable that carries the 'being revived' flag over the network, defined by macro VAR_TRANSFER_FORCING_RESPAWN. _this select 1: BOOL - Flag state - true or false. _this select 2: OBJECT - Unit to set the flag for. Returns: True if successful, false if not. */", "docSyntax": "[] call BIS_fnc_reviveOnForcingRespawn", "syntax": "[] call BIS_fnc_reviveOnForcingRespawn"}, "BIS_fnc_reviveOnState": {"version": "1.42", "tags": "", "description": "/* Author: Jiri Wainar Description: Used to execute specific code localy on every client whenever unit's state changes. Parameters: _this select 0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE. _this select 1: SCALAR - State. _this select 2: OBJECT - Unit to set the status for. Returns: True if successful, false if not. States: #define STATE_RESPAWNED 0 #define STATE_REVIVED 1 #define STATE_INCAPACITATED 2 #define STATE_DEAD 3 */", "example": "{ [objNull, 1, _x] call BIS_fnc_reviveOnState; } forEach (curatorSelected select 0);", "docSyntax": "[] call BIS_fnc_reviveOnState", "syntax": "[] call BIS_fnc_reviveOnState"}, "BIS_fnc_reviveOnStateJIP": {"version": "1.42", "tags": "", "description": "/* Author: Jiri Wainar Description: Used to execute state specific code localy on client that is JIPping. Parameters: _this select 0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE. _this select 1: SCALAR - State. _this select 2: OBJECT - Unit to set the status for. Returns: True if successful, false if not. States: #define STATE_RESPAWNED 0 #define STATE_REVIVED 1 #define STATE_INCAPACITATED 2 #define STATE_DEAD 3 */", "docSyntax": "[] call BIS_fnc_reviveOnStateJIP", "syntax": "[] call BIS_fnc_reviveOnStateJIP"}, "BIS_fnc_reviveSecureUnit": {"version": "1.42", "tags": "", "description": "Make player secured (killed without execution penalties) by _source unit.", "example": "[player_1,player2] call BIS_fnc_reviveSecureUnit;", "docSyntax": "[unit, source] call BIS_fnc_reviveSecureUnit", "syntax": "[<objUnit>,source] call BIS_fnc_reviveSecureUnit"}, "channelEnabled": {"version": "1.42", "tags": "", "description": "Returns Array of Booleans in format [enabledChat, enabledVoN] for the given channel. For more information about enabling/disabling of chat channels see enableChannel.", "example": "_isGlobalChatEnabled = (channelEnabled 0) select 0; //\u00a0check if user can use text on global channel", "docSyntax": "channelEnabled channelID", "syntax": "channelEnabled channelID"}, "controlsGroupCtrl": {"version": "1.42", "tags": "", "description": "Returns a child control with specified idc from a controls group", "example": "_control = _controlsGroup controlsGroupCtrl 101;", "docSyntax": "ctrlgrp controlsGroupCtrl idc", "syntax": "ctrlgrp controlsGroupCtrl <scalar>"}, "currentChannel": {"version": "1.42", "tags": "", "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP).", "example": "_selected = currentChannel; //\u00a03 - for example for the Group", "docSyntax": "currentChannel", "syntax": "currentChannel"}, "enableChannel": {"version": "1.42", "tags": "", "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel.", "example": "0 enableChannel false; //\u00a0disable user ability to send voice and text on global channel", "docSyntax": "channelID enableChannel enable", "syntax": "channelID enableChannel <bool>"}, "getPlayerChannel": {"version": "1.42", "tags": "", "description": "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:", "example": "private _channelID = getPlayerChannel player;", "docSyntax": "getPlayerChannel player", "syntax": "getPlayerChannel <objUnit>"}, "getSuppression": {"version": "1.42", "tags": "", "description": "Gets the suppression value for the given unit. Returns varying Number between 0 and 1, or -1 if suppression is disabled (disableAI \"SUPPRESSION\") or the suppression value is not available. Suppression is not calculated for player entities and is always 0, unless it is set with setSuppression. In this case the return value is the set value. Before Arma 3 v1.92 this command could return nil.", "example": "getSuppression AI_unit_1;", "docSyntax": "getSuppression unit", "syntax": "getSuppression <objUnit>"}, "isTurnedOut": {"version": "1.42", "tags": "", "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.", "example": "_commanderOut = isTurnedOut (tank turretUnit [0,0]);", "docSyntax": "isTurnedOut unit", "syntax": "isTurnedOut <objUnit>"}, "isWeaponDeployed": {"version": "1.42", "tags": "", "description": "Returns true if weapon is currently deployed.", "example": "_dep = isWeaponDeployed player;", "docSyntax": "isWeaponDeployed unit", "syntax": "isWeaponDeployed <objUnit>"}, "isWeaponRested": {"version": "1.42", "tags": "", "description": "Returns true if weapon is currently rested.", "example": "_rest = isWeaponRested player;", "docSyntax": "isWeaponRested unit", "syntax": "isWeaponRested <objUnit>"}, "leaderboardRequestRowsFriends": {"version": "1.42", "tags": "", "description": "Requests given leaderboard to download friends rows from the given leaderboard", "example": "leaderboardRequestRowsFriends \"TT01\";", "docSyntax": "leaderboardRequestRowsFriends boardName", "syntax": "leaderboardRequestRowsFriends <string>"}, "leaderboardsRequestUploadScore": {"version": "1.42", "tags": "", "description": "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.", "example": "leaderboardsRequestUploadScore [\"TT01\", 1234, [5,6,7,8]]", "docSyntax": "leaderboardsRequestUploadScore [boardName, score, [details]]", "syntax": "leaderboardsRequestUploadScore [<string>,score,[details]]"}, "leaderboardsRequestUploadScoreKeepBest": {"version": "1.42", "tags": "", "description": "Starts async. operation to upload score to board with given name, value is only stored to board if it is better than one already in the board. The details array is optional. The board has to be initialized before the call.", "example": "leaderboardsRequestUploadScoreKeepBest [\"TT01\", 1234, [5,6,7,8]]", "docSyntax": "leaderboardsRequestUploadScoreKeepBest [boardName, score, details]", "syntax": "leaderboardsRequestUploadScoreKeepBest [<string>,score,details]"}, "leaderboardState": {"version": "1.42", "tags": "", "description": "returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async. operation ended with error; 3: Invalid board (bad board name, not initialized etc.).", "example": "leaderboardState [\"TT01\", 1234, [5,6,7,8]]", "docSyntax": "leaderboardState boardname", "syntax": "leaderboardState <string>"}, "setCurrentChannel": {"version": "1.42", "tags": "", "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure.", "example": "_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active", "docSyntax": "setCurrentChannel channelID", "syntax": "setCurrentChannel channelID"}, "setSuppression": {"version": "1.42", "tags": "", "description": "Sets the given suppression value for the given unit.", "example": "unit_1 setSuppression 1;", "docSyntax": "unit setSuppression value", "syntax": "<objUnit> setSuppression <scalar>"}, "diag_activeMissionFSMs": {"version": "1.44", "tags": "", "description": "Returns array with active Mission FSMs. To see number of all scripts currently in the scheduler use diag_activeScripts.", "example": "{systemChat str _x} forEach diag_activeMissionFSMs;", "docSyntax": "diag_activeMissionFSMs", "syntax": "diag_activeMissionFSMs", "type": "diagnoseStatement"}, "diag_activeSQFScripts": {"version": "1.44", "tags": "", "description": "Returns information about active SQF scripts. To see number of all scripts currently in the scheduler use diag_activeScripts.", "example": "[] spawn { hint str diag_activeSQFScripts; }; //\u00a0displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 1]]", "docSyntax": "diag_activeSQFScripts", "syntax": "diag_activeSQFScripts", "type": "diagnoseStatement"}, "diag_activeSQSScripts": {"version": "1.44", "tags": "", "description": "Returns array with active SQSs. To see number of all scripts currently in the scheduler use diag_activeScripts.", "example": "{systemChat str _x} forEach diag_activeSQSScripts;", "docSyntax": "diag_activeSQSScripts", "syntax": "diag_activeSQSScripts", "type": "diagnoseStatement"}, "sort": {"version": "1.44", "tags": "", "description": "Attempts to sort given array either in ascending (true) or descending (false) order.", "example": "_arr = [5.21725,1.30859,4,5.03028,1]; _arr sort true; hint str _arr; //[1,1.30859,4,5.03028,5.21725]", "docSyntax": "array sort order", "syntax": "<array> sort <scalar>"}, "lbSetSelectColor": {"version": "1.46", "tags": "", "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "example": "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetSelectColor [idc, index, color]", "syntax": "lbSetSelectColor [<scalar>,<scalar>,<scalar>]"}, "lbSetSelectColorRight": {"version": "1.46", "tags": "", "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "example": "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];", "docSyntax": "lbSetSelectColorRight [idc, index, color]", "syntax": "lbSetSelectColorRight [<scalar>,<scalar>,<scalar>]"}, "profileNameSteam": {"version": "1.46", "tags": "", "description": "Returns name of the current Steam profile. For currently chosen user profile name see profileName", "example": "_mySteamProfileName = profileNameSteam;", "docSyntax": "profileNameSteam", "syntax": "profileNameSteam"}, "allPlayers": {"version": "1.48", "tags": "", "description": "Returns a list of all units controlled by connected clients - human players including dead players, but also Headless Clients.", "example": "//\u00a0only gets human players private _headlessClients = entities \"HeadlessClient_F\"; private _humanPlayers = allPlayers - _headlessClients;", "docSyntax": "allPlayers", "syntax": "allPlayers"}, "arrayIntersect": {"version": "1.48", "tags": "", "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.", "example": "_arr1 = [1,2,3,4,5,2,3,4]; _arr2 = [4,5,6,1,2,3,5,6]; hint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]", "docSyntax": "array1 arrayIntersect array2", "syntax": "array1 arrayIntersect array2"}, "BIS_fnc_unitHeadgear": {"version": "1.48", "tags": "", "description": "Randomise headgear and facewear of a character.", "example": "[this] call BIS_fnc_unitHeadgear; //\u00a0headgear and face wear, same as [this, [], []]", "docSyntax": "[unit, headgear, facewear] call BIS_fnc_unitHeadgear", "syntax": "[<objUnit>,headgear,facewear] call BIS_fnc_unitHeadgear"}, "configHierarchy": {"version": "1.48", "tags": "", "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported.", "example": "_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\"); //\u00a0[bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]", "docSyntax": "configHierarchy configClass", "syntax": "configHierarchy <cfgClass>"}, "currentNamespace": {"version": "1.48", "tags": "", "description": "Returns current global namespace the script runs in. Could be one of the following:", "example": "if (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};", "docSyntax": "currentNamespace", "syntax": "currentNamespace"}, "currentThrowable": {"version": "1.48", "tags": "", "description": "Returns currently selected throwable, which will be launched if the user presses \"G\".", "example": "currentThrowable player; //\u00a0[\"SmokeShellGreen\", \"SmokeShellGreenMuzzle\", [1.00002e+007, 0]]", "docSyntax": "currentThrowable player", "syntax": "currentThrowable <objUnit>"}, "getObjectViewDistance": {"version": "1.48", "tags": "", "description": "Gets the values of rendering distances of objects and shadows.", "example": "_arr = getObjectViewDistance;", "docSyntax": "getObjectViewDistance", "syntax": "getObjectViewDistance"}, "isObjectHidden": {"version": "1.48", "tags": "", "description": "Checks visibility of a given object on the local machine.", "example": "_bobIsHidden = isObjectHidden bob;", "docSyntax": "isObjectHidden object", "syntax": "isObjectHidden <object>"}, "param": {"version": "1.48", "tags": "", "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.", "example": "[1, 2, 3] call { private _one = param [0, 1]; private _two = param [1, 2]; private _three = param [2, 3]; //\u00a0... };", "docSyntax": "param [index, defaultValue, expectedDataTypes, expectedArrayCount]", "syntax": "param [<scalar>,defaultValue,expectedDataTypes,expectedArrayCount]"}, "params": {"version": "1.48", "tags": "", "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.", "example": "[1, 2, 3] call { private [\"_one\", \"_two\", \"_three\"]; _one = _this select 0; _two = _this select 1; _three = _this select 2; //\u00a0... }; //\u00a0Same as above, only using params [1, 2, 3] call { params [\"_one\", \"_two\", \"_three\"]; //\u00a0... };", "docSyntax": "params [element1, element2,...elementN]", "syntax": "<any> [element1,element2,...elementN]"}, "roleDescription": {"version": "1.48", "tags": "", "description": "Returns unit description set in the editor and visible on role selection screen in multiplayer.", "example": "_playerRole = roleDescription player;", "docSyntax": "roleDescription unit", "syntax": "roleDescription <objUnit>"}, "serverName": {"version": "1.48", "tags": "", "description": "Returns name of the hosting server in MP, \"\" in SP.", "example": "hint format [\"Welcome to the %1 server!\", serverName];", "docSyntax": "serverName", "syntax": "serverName"}, "setGroupIdGlobal": {"version": "1.48", "tags": "", "description": "A global equivalent of setGroupId.", "example": "group player setGroupIdGlobal [\"PAPA BEAR\"]; hint groupId group player; //\u00a0\"PAPA BEAR\"", "docSyntax": "group setGroupIdGlobal [format, keyword1, ..., keywordN]", "syntax": "<objGroup> setGroupIdGlobal [format,keyword1,...,keywordN]"}, "weaponInertia": {"version": "1.48", "tags": "", "description": "Returns current rate of how much the weapon view is distorted because of quick aiming.", "example": "_inertia = weaponInertia player; //[-0.0126307,0.038023]", "docSyntax": "weaponInertia unit", "syntax": "weaponInertia <objUnit>"}, "worldSize": {"version": "1.48", "tags": "", "description": "Returns the engine calculated size (terrain side length) of the current world (BIS_fnc_mapSize may return the same value, but is just a simple look up in config).", "example": "private _size = worldSize;", "docSyntax": "worldSize", "syntax": "worldSize"}, "AGLToASL": {"version": "1.50", "tags": "", "description": "Converts position from PositionAGL to PositionASL.", "example": "_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);", "docSyntax": "AGLToASL posAGL", "syntax": "AGLToASL posAGL"}, "ASLToAGL": {"version": "1.50", "tags": "", "description": "Converts position from PositionASL to PositionAGL", "example": "_playerPosAGL = ASLToAGL getPosASL player;", "docSyntax": "ASLToAGL posASL", "syntax": "ASLToAGL posASL"}, "createDisplay": {"version": "1.50", "tags": "", "description": "Creates child display of given display and loads from \"resourceName\". The notable difference between createDisplay and createDialog is that with createDisplay the player would be able to move around while the display is shown.", "example": "findDisplay 46 createDisplay \"RscCredits\";", "docSyntax": "parent createDisplay resourceName", "syntax": "parent createDisplay resourceName", "returns": "uiDisplay"}, "didJIP": {"version": "1.50", "tags": "", "description": "Checks if the current client Joined In Progress.", "example": "clientDidJIP = didJIP;", "docSyntax": "didJIP", "syntax": "didJIP"}, "didJIPOwner": {"version": "1.50", "tags": "", "description": "Checks if the current owner of supplied Object Joined In Progress. Returns false on clients.", "example": "_ownerDidJip = didJIPOwner tank;", "docSyntax": "didJIPOwner object", "syntax": "didJIPOwner <object>"}, "distance2D": {"version": "1.50", "tags": "", "description": "Returns a 2D distance (distance projected to X,Y plane) in meters between Objects and/or Positions.", "example": "_meters = player distance2D heli;", "docSyntax": "from distance2D to", "syntax": "from distance2D to"}, "getAllHitPointsDamage": {"version": "1.50", "tags": "", "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:", "example": "getAllHitPointsDamage player; //[ //[\"hitface\",\"hitneck\",\"hithead\",\"hitpelvis\",\"hitabdomen\",\"hitdiaphragm\",\"hitchest\",\"hitbody\",\"hitarms\",\"hithands\",\"hitlegs\",\"incapacitated\"], //[\"face_hub\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"arms\",\"hands\",\"legs\",\"body\"], //[0,0,0,0,0,0,0,0,0,0,0,0] //]", "docSyntax": "getAllHitPointsDamage entity", "syntax": "getAllHitPointsDamage entity"}, "getHitIndex": {"version": "1.50", "tags": "", "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.", "example": "vehicle player getHitIndex 3;", "docSyntax": "vehicle getHitIndex hitPartIndex", "syntax": "<objVehicle> getHitIndex hitPartIndex"}, "getModelInfo": {"version": "1.50", "tags": "", "description": "Returns object's model info. Model path is suitable for use with createSimpleObject command. Since Arma 3 v2.08.148608 the command also returns placing point of the model in model coordinates. Placing point is always in format [0,0,z].", "example": "_modelInfo = getModelInfo player; //\u00a0[\"b_soldier_03.p3d\", \"a3\\characters_f\\blufor\\b_soldier_03.p3d\", true, [0,0,0]]", "docSyntax": "getModelInfo object", "syntax": "getModelInfo <object>"}, "getObjectType": {"version": "1.50", "tags": "", "description": "Returns object type as a number:", "example": "_objType = getObjectType player;", "docSyntax": "getObjectType object", "syntax": "getObjectType <object>"}, "joinString": {"version": "1.50", "tags": "", "description": "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.", "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "docSyntax": "array joinString separator", "syntax": "<array> joinString separator"}, "lineIntersectsSurfaces": {"version": "1.50", "tags": "", "description": "Returns a list of intersections with surfaces and ground from begPosASL to endPosASL. Doesn't return intersection with sea surface. Works underwater, unlike lineIntersects. Hardcoded max distance: 5000m.", "example": "_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];", "docSyntax": "lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]", "syntax": "lineIntersectsSurfaces [begPosASL,endPosASL,ignoreObj1,ignoreObj2,sortMode,maxResults,LOD1,LOD2,returnUnique]"}, "objectParent": {"version": "1.50", "tags": "", "description": "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.", "example": "_weaponholder = objectParent _mybackpack;", "docSyntax": "objectParent object", "syntax": "objectParent <object>"}, "remoteExec": {"version": "1.50", "tags": "", "description": "Remote async execution of given funtion on given machines. Function can contain delaying commands (i.e. sleep).", "example": "\"hello\" remoteExec [\"hint\"];", "docSyntax": "params remoteExec [functionName, targets, JIP]", "syntax": "<any> remoteExec [<string>, <scalar|object|array>, <bool>]"}, "remoteExecCall": {"version": "1.50", "tags": "", "description": "Remote async execution of given funtion on given machines. Function can not contain delaying commands (i.e. sleep).", "example": "\"hello\" remoteExecCall [\"hint\"];", "docSyntax": "params remoteExecCall [functionName, targets, JIP]", "syntax": "<any> remoteExecCall [<string>, <scalar|object|array>, <bool>]"}, "setHitIndex": {"version": "1.50", "tags": "", "description": "Sets the current level of damage for a specific Hit Point. All hit points can be obtained with getAllHitPointsDamage command.", "example": "vehicle player setHitIndex [1, 1];", "docSyntax": "vehicle setHitIndex [hitPartIndex, damage, useEffects, instigator]", "syntax": "<objVehicle> setHitIndex [hitPartIndex,<scalar>,useEffects,instigator]"}, "splitString": {"version": "1.50", "tags": "", "description": "An SQF version of C++ strtok. Splits given ANSI string str into an array of tokens according to given delimiters. In addition, if empty string \"\" is used for delimiters, str is split by each character. If Unicode support is desired, see forceUnicode.", "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "docSyntax": "str splitString delimiters", "syntax": "str splitString delimiters"}, "targetKnowledge": {"version": "1.50", "tags": "", "description": "Returns unit's knowledge about target.", "example": "private _allInfo = _soldierOne targetKnowledge _jeepOne; _allInfo params [\"_knownByGroup\", \"_knownByUnit\", \"_lastSeen\", \"_lastThreat\", \"_side\", \"_errorMargin\", \"_position\"];", "docSyntax": "unit targetKnowledge target", "syntax": "<objUnit> targetKnowledge <object>"}, "ctrlAngle": {"version": "1.52", "tags": "", "description": "Gets rotation info of an ST_PICTURE control.", "example": "ctrlAngle _control;", "docSyntax": "ctrlAngle control", "syntax": "ctrlAngle <uiControl>"}, "disableNVGEquipment": {"version": "1.52", "tags": "", "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.", "example": "myTank disableNVGEquipment true;", "docSyntax": "vehicle disableNVGEquipment state", "syntax": "<objVehicle> disableNVGEquipment state"}, "disableRemoteSensors": {"version": "1.52", "tags": "", "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time. If a group contains a single local entity then calculations will still be performed for the entire group.", "example": "disableRemoteSensors true;", "docSyntax": "disableRemoteSensors state", "syntax": "disableRemoteSensors state"}, "getRemoteSensorsDisabled": {"version": "1.52", "tags": "", "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.", "example": "_status = getRemoteSensorsDisabled;", "docSyntax": "getRemoteSensorsDisabled", "syntax": "getRemoteSensorsDisabled"}, "magazinesAllTurrets": {"version": "1.52", "tags": "", "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts. Since Arma 3 v2.08.148327 it is possible to exclude person turrets from returned results.", "example": "_mags = magazinesAllTurrets vehicle player;", "docSyntax": "magazinesAllTurrets vehicle", "syntax": "magazinesAllTurrets <objVehicle>"}, "shownHUD": {"version": "1.52", "tags": "", "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).", "example": "_hudStatus = shownHUD;", "docSyntax": "shownHUD", "syntax": "shownHUD"}, "allowSprint": {"version": "1.54", "tags": "", "description": "Force player to run/jog if set to false.", "example": "player allowSprint false;", "docSyntax": "unit allowSprint state", "syntax": "<objUnit> allowSprint state"}, "BIS_fnc_EGObjectiveVisualizer": {"version": "1.54", "tags": "", "description": "Part of the EG Spectator Mode.", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_EGObjectiveVisualizerDraw": {"version": "1.54", "tags": "", "description": "Part of the EG Spectator Mode.", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_EGSpectator": {"version": "1.54", "tags": "", "description": "Spectator instance.", "example": "[\"Initialize\", [player]] call BIS_fnc_EGSpectator;", "docSyntax": "[mode, [spectator, whitelistedSides, allowAi, allowFreeCamera, allow3PPCamera, showFocusInfo, showCameraButtons, showControlsHelper, showHeader, showLists]] call BIS_fnc_EGSpectator", "syntax": "[mode,[spectator,whitelistedSides,allowAi,allowFreeCamera,allow3PPCamera,showFocusInfo,showCameraButtons,showControlsHelper,showHeader,showLists]] call BIS_fnc_EGSpectator"}, "BIS_fnc_EGSpectatorCamera": {"version": "1.54", "tags": "", "description": "Part of the EG Spectator Mode.", "example": "-", "docSyntax": "-", "syntax": "-"}, "enableStamina": {"version": "1.54", "tags": "", "description": "Enable/disable stamina system", "example": "player enableStamina true;", "docSyntax": "unit enableStamina enabled", "syntax": "<objUnit> enableStamina <bool>"}, "flagSide": {"version": "1.54", "tags": "", "description": "Returns Side of the local instance of the flag. A getter for setFlagSide.", "example": "_flagSide = flagSide flag;", "docSyntax": "flagSide flag", "syntax": "flagSide <objFlag>"}, "flagTexture": {"version": "1.54", "tags": "", "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.", "example": "_flagTexture = flagTexture _flag1;", "docSyntax": "flagTexture flagCarrier", "syntax": "flagTexture flagCarrier"}, "getAnimAimPrecision": {"version": "1.54", "tags": "", "description": "Returns aim precision for current animation", "example": "getAnimAimPrecision player;", "docSyntax": "getAnimAimPrecision unit", "syntax": "getAnimAimPrecision <objUnit>"}, "getAnimSpeedCoef": {"version": "1.54", "tags": "", "description": "Get coefficient for animation speed.", "example": "getAnimSpeedCoef player;", "docSyntax": "getAnimSpeedCoef unit", "syntax": "getAnimSpeedCoef <objUnit>"}, "getCustomAimCoef": {"version": "1.54", "tags": "", "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.", "example": "_coef = getCustomAimCoef player", "docSyntax": "getCustomAimCoef unit", "syntax": "getCustomAimCoef <objUnit>"}, "getMousePosition": {"version": "1.54", "tags": "", "description": "Returns mouse position in UI coordinates.", "example": "getMousePosition params [\"_mouseX\", \"_mouseY\"];", "docSyntax": "getMousePosition", "syntax": "getMousePosition"}, "getStamina": {"version": "1.54", "tags": "", "description": "Get current stamina (~ seconds until depletion)", "example": "getStamina player;", "docSyntax": "getStamina unit", "syntax": "getStamina <objUnit>"}, "inPolygon": {"version": "1.54", "tags": "", "description": "Checks whether position is inside given polygon", "example": "_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];", "docSyntax": "position inPolygon polygon", "syntax": "<array> inPolygon <array>", "returns": "bool"}, "isAimPrecisionEnabled": {"version": "1.54", "tags": "", "description": "Returns true if procedural aiming precision affects weapon sway.", "example": "_isAffected = isAimPrecisionEnabled player;", "docSyntax": "isAimPrecisionEnabled unit", "syntax": "isAimPrecisionEnabled <objUnit>"}, "isEqualType": {"version": "1.54", "tags": "", "description": "Compares two values' types. A much faster alternative to typeName a == typeName b.", "example": "_var = [1,2,3]; _var isEqualType 0; //\u00a0false _var isEqualType []; //\u00a0true", "docSyntax": "val1 isEqualType val2", "syntax": "val1 isEqualType val2"}, "isEqualTypeAll": {"version": "1.54", "tags": "", "description": "Compares types of all elements of an array to the type of a single value.", "example": "_arr = [1,2,3,4,5,6,7,8,9,0]; _arr isEqualTypeAll \"\"; //\u00a0false _arr isEqualTypeAll 0; //\u00a0true", "docSyntax": "arr isEqualTypeAll val", "syntax": "arr isEqualTypeAll val"}, "isEqualTypeAny": {"version": "1.54", "tags": "", "description": "Compares type of given value to every type in the given array and if match is found, true is returned.", "example": "_var = [1, 2, 3]; _var isEqualTypeAny [0, \"\", objNull]; //false _var isEqualTypeAny [0, \"\", objNull, []]; //true", "docSyntax": "val isEqualTypeAny types", "syntax": "val isEqualTypeAny types"}, "isEqualTypeArray": {"version": "1.54", "tags": "", "description": "Compares types of all elements of one array to types of all elements of another array.", "example": "_arr = [1,true,\"three\"]; _arr isEqualTypeArray [0,objNull,\"\"]; // false _arr isEqualTypeArray [0,false,\"\"]; // true", "docSyntax": "arr1 isEqualTypeArray arr2", "syntax": "arr1 isEqualTypeArray arr2"}, "isEqualTypeParams": {"version": "1.54", "tags": "", "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:", "example": "//\u00a0These all return true [1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"]; [1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; [1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];", "docSyntax": "input isEqualTypeParams template", "syntax": "input isEqualTypeParams template"}, "isSprintAllowed": {"version": "1.54", "tags": "", "description": "Returns true if player is allowed to sprint", "example": "isSprintAllowed player;", "docSyntax": "isSprintAllowed unit", "syntax": "isSprintAllowed <objUnit>"}, "isStaminaEnabled": {"version": "1.54", "tags": "", "description": "Check if stamina depletion is enabled.", "example": "isStaminaEnabled player;", "docSyntax": "isStaminaEnabled unit", "syntax": "isStaminaEnabled <objUnit>"}, "nearestTerrainObjects": {"version": "1.54", "tags": "", "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). In contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.", "example": "nearestTerrainObjects [player, [\"Tree\", \"Bush\"], 200];", "docSyntax": "nearestTerrainObjects [position, types, radius, sort, 2Dmode]", "syntax": "nearestTerrainObjects [position,types,radius,sort,2Dmode]"}, "setAnimSpeedCoef": {"version": "1.54", "tags": "", "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).", "example": "player setAnimSpeedCoef 0.75;", "docSyntax": "unit setAnimSpeedCoef coef", "syntax": "<objUnit> setAnimSpeedCoef <scalar>"}, "setCustomAimCoef": {"version": "1.54", "tags": "", "description": "Set custom aim precision coefficient for weapon sway", "example": "player setCustomAimCoef 3;", "docSyntax": "unit setCustomAimCoef coef", "syntax": "<objUnit> setCustomAimCoef <scalar>"}, "setObjectMaterialGlobal": {"version": "1.54", "tags": "", "description": "Set the material of the given selection on all computers in a network session.", "example": "player setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "docSyntax": "obj setObjectMaterialGlobal [selection, material]", "syntax": "<object> setObjectMaterialGlobal [selection,material]"}, "setStamina": {"version": "1.54", "tags": "", "description": "Set units' stamina (seconds until depletion)", "example": "player setStamina 42;", "docSyntax": "unit setStamina stamina", "syntax": "<objUnit> setStamina stamina"}, "setStaminaScheme": {"version": "1.54", "tags": "", "description": "Sets the scheme used for the Stamina system.", "example": "setStaminaScheme \"Default\";", "docSyntax": "setStaminaScheme scheme", "syntax": "setStaminaScheme scheme"}, "add3DENConnection": {"version": "1.56", "tags": "", "description": "Connect entities together.", "example": "add3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];//\u00a0Set random start on marker \"marker_0\" for all selected objects.", "docSyntax": "add3DENConnection [type, from, to]", "syntax": "add3DENConnection [type,from,to]"}, "add3DENEventHandler": {"version": "1.56", "tags": "", "description": "Adds an Eden Editor Event Handler.", "example": "eh = add3DENEventHandler [\"onUndo\", {systemChat \"Zip...\"}];", "docSyntax": "add3DENEventHandler [type, code]", "syntax": "add3DENEventHandler [type,<code>]"}, "add3DENLayer": {"version": "1.56", "tags": "", "description": "Adds an editing layer in Eden Editor.", "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; _myLayerFort = _myLayer add3DENLayer \"Fortifications\"; _myLayerPatrol = _myLayer add3DENLayer \"Patrols\";", "docSyntax": "parentLayerID add3DENLayer name", "syntax": "parentLayerID add3DENLayer <string>"}, "all3DENEntities": {"version": "1.56", "tags": "", "description": "Returns an array of all currently placed Eden Editor entities.", "example": "systemChat str all3DENEntities;", "docSyntax": "all3DENEntities", "syntax": "all3DENEntities"}, "apply": {"version": "1.56", "tags": "", "description": "Applies the given code to each element of the given data structure and collects the results in an array.", "example": "_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x\u00a0% 2 == 0)}; //\u00a0[1,0,1,0,1,0,1,0,1,0]", "docSyntax": "array apply code", "syntax": "<array> apply <code>"}, "BIS_fnc_3den_init": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Adds needed event handlers.", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3den_onKeyDown": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Called when a button is pressed.", "example": "findDisplay 313 displayAddEventHandler [\"keyDown\", {_this call BIS_fnc_3den_onKeyDown}];", "docSyntax": "[display, button, shift, ctrl, alt] call BIS_fnc_3den_onKeyDown", "syntax": "[<uiDisplay>,button,shift,<uiControl>,alt] call BIS_fnc_3den_onKeyDown"}, "BIS_fnc_3den_onKeyUp": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Called when a button is released.", "example": "findDisplay 313 displayAddEventHandler [\"keyUp\", {_this call BIS_fnc_3den_onKeyUp}];", "docSyntax": "[display, button, shift, ctrl, alt] call BIS_fnc_3den_onKeyUp", "syntax": "[<uiDisplay>,button,shift,<uiControl>,alt] call BIS_fnc_3den_onKeyUp"}, "BIS_fnc_3den_onMissionLoad": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Executed when a new mission is loaded.", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3den_onMissionNew": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Executed when a new mission is created.", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3den_onMissionPreviewEnd": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system. Executed when preview ended.", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3den_onSelectionChange": {"version": "1.56", "tags": "", "description": "Used internally by the Arma 3 Key Frame Animation system.", "example": "-", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_3DENDiagCreateList": {"version": "1.56", "tags": "", "description": "Copies all in Eden Editor available objects to the clipboard.", "example": "call BIS_fnc_3DENDiagCreateList;", "docSyntax": "class call BIS_fnc_3DENDiagCreateList", "syntax": "class call BIS_fnc_3DENDiagCreateList"}, "BIS_fnc_3DENDiagFonts": {"version": "1.56", "tags": "", "description": "This display is opened when the function is called in Eden.", "example": "2 call BIS_fnc_3DENDiagFonts;", "docSyntax": "fontID call BIS_fnc_3DENDiagFonts", "syntax": "fontID call BIS_fnc_3DENDiagFonts"}, "BIS_fnc_3DENDiagMouseControl": {"version": "1.56", "tags": "", "description": "Creates a display which highlights currently pressed mouse buttons and CTRL, ALT or SHIFT key.", "example": "call BIS_fnc_3DENDiagMouseControl;", "docSyntax": "call BIS_fnc_3DENDiagMouseControl", "syntax": "call BIS_fnc_3DENDiagMouseControl"}, "BIS_fnc_3DENExportAttributes": {"version": "1.56", "tags": "", "description": "Copies all available attributes to the clipboard.", "example": "\"trigger\" call BIS_fnc_3DENExportAttributes;", "docSyntax": "class call BIS_fnc_3DENExportAttributes", "syntax": "class call BIS_fnc_3DENExportAttributes"}, "BIS_fnc_3DENExportOldSQM": {"version": "1.56", "tags": "", "description": "Export current mission (usually in Eden Editor) in 2D Editor format to the clipboard.", "example": "call BIS_fnc_3DENExportOldSQM; // execute in Debug Console", "docSyntax": "call BIS_fnc_3DENExportOldSQM", "syntax": "call BIS_fnc_3DENExportOldSQM"}, "BIS_fnc_3DENExportTerrainBuilder": {"version": "1.56", "tags": "", "description": "Gets all empty vehicles placed in the currently opened Eden mission and converts data into the format used by the Terrain Builder.", "example": "call BIS_fnc_3DENExportTerrainBuilder;", "docSyntax": "call BIS_fnc_3DENExportTerrainBuilder", "syntax": "call BIS_fnc_3DENExportTerrainBuilder"}, "BIS_fnc_3DENFlashlight": {"version": "1.56", "tags": "", "description": "Toggle or set Eden Editor flashlight (light source snapped to the camera).", "example": "_mode = 0 call BIS_fnc_3DENFlashlight;", "docSyntax": "mode call BIS_fnc_3DENFlashlight", "syntax": "mode call BIS_fnc_3DENFlashlight"}, "BIS_fnc_3DENMissionPreview": {"version": "1.56", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_3DENTutorial": {"version": "1.56", "tags": "", "description": "Show tutorial in Eden Editor.", "example": "[[\"Editing\", \"Connecting\"], 0, false] call BIS_fnc_3DENTutorial;", "docSyntax": "[path, index, oneStep, display] call BIS_fnc_3DENTutorial", "syntax": "[path,<scalar>,oneStep,<uiDisplay>] call BIS_fnc_3DENTutorial"}, "BIS_fnc_3DENVisionMode": {"version": "1.56", "tags": "", "description": "Toggle or set Eden Editor vision mode. Has to be executed while Eden interface is opened.", "example": "_mode = 0 call BIS_fnc_3DENVisionMode;", "docSyntax": "mode call BIS_fnc_3DENVisionMode", "syntax": "mode call BIS_fnc_3DENVisionMode"}, "BIS_fnc_camera_edenAttributesChanged": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Attributes change in EDEN for a camera Parameter(s): _this select 0: Object - The camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenAttributesChanged", "syntax": "[] call BIS_fnc_camera_edenAttributesChanged"}, "BIS_fnc_camera_edenConnectionChanged": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: 3DEN connections of a camera are changed Parameter(s): _this select 0: Object - The camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenConnectionChanged", "syntax": "[] call BIS_fnc_camera_edenConnectionChanged"}, "BIS_fnc_camera_edenDeleted": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Camera is deleted Parameter(s): _this select 0: Object - The destroyed camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenDeleted", "syntax": "[] call BIS_fnc_camera_edenDeleted"}, "BIS_fnc_camera_edenInit": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Camera is initialized in 3den Parameter(s): _this select 0: Object - The camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenInit", "syntax": "[] call BIS_fnc_camera_edenInit"}, "BIS_fnc_camera_edenIsSelected": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Whether this camera is selected in 3den Parameter(s): _this select 0: Object - The camera Returns: Bool - True if selected, false if not */", "docSyntax": "[] call BIS_fnc_camera_edenIsSelected", "syntax": "[] call BIS_fnc_camera_edenIsSelected"}, "BIS_fnc_camera_edenRegisteredToWorld": {"version": "1.56", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_camera_edenRegisteredToWorld", "syntax": "[] call BIS_fnc_camera_edenRegisteredToWorld"}, "BIS_fnc_camera_edenReset": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Resets camera in 3DEN Parameter(s): _this select 0: Object - The camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenReset", "syntax": "[] call BIS_fnc_camera_edenReset"}, "BIS_fnc_camera_edenSelectionChanged": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: The selection state of given camera changes Parameter(s): _this select 0: Object - The camera _this select 1: Bool - True if selected, false if not Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenSelectionChanged", "syntax": "[] call BIS_fnc_camera_edenSelectionChanged"}, "BIS_fnc_camera_edenUnregisteredFromWorld": {"version": "1.56", "tags": "", "description": "/* Author: Nelson Duarte <@Nelson_G_Duarte> Description: Attributes change in EDEN for a camera Parameter(s): _this select 0: Object - The camera Returns: Nothing */", "docSyntax": "[] call BIS_fnc_camera_edenUnregisteredFromWorld", "syntax": "[] call BIS_fnc_camera_edenUnregisteredFromWorld"}, "BIS_fnc_garage3DEN": {"version": "1.56", "tags": "", "description": "The code is identical to the one of BIS_fnc_garage, except that FNC_IS3DEN is set to 1. For more information about the garage, visit BIS_fnc_garage", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_initAmmoBox": {"version": "1.56", "tags": "", "description": "\u26a0", "example": "-", "docSyntax": "-", "syntax": "-"}, "BIS_fnc_sideIsEnemy": {"version": "1.56", "tags": "", "description": "Determines if side B is enemy to side A the way the game engine does it. The relationship table can be found here: Side relations.", "example": "_isEnemy = [west, east] call BIS_fnc_sideIsEnemy; //Checks if EAST is enemy to WEST.", "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsEnemy", "syntax": "[sideA,sideB] call BIS_fnc_sideIsEnemy"}, "BIS_fnc_sideIsFriendly": {"version": "1.56", "tags": "", "description": "Determines if side B is friendly to side A the way the game engine does it. The relationship table can be found here: Side relations.", "example": "_isFriendly = [west, east] call BIS_fnc_sideIsFriendly; //Checks if EAST is friendly to WEST.", "docSyntax": "[sideA, sideB] call BIS_fnc_sideIsFriendly", "syntax": "[sideA,sideB] call BIS_fnc_sideIsFriendly"}, "checkVisibility": {"version": "1.56", "tags": "", "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.", "example": "_cansee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];", "docSyntax": "[ignore, LOD, ignore2] checkVisibility [beg, end]", "syntax": "[ignore,LOD,ignore2] checkVisibility [beg,end]"}, "clear3DENAttribute": {"version": "1.56", "tags": "", "description": "Clears the value of the given entity's attribute in Eden Editor. An attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.", "example": "0 clear3DENAttribute \"name\";", "docSyntax": "entity clear3DENAttribute attribute", "syntax": "entity clear3DENAttribute attribute"}, "clear3DENInventory": {"version": "1.56", "tags": "", "description": "Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default.", "example": "clear3DENInventory get3DENSelected \"Object\";", "docSyntax": "clear3DENInventory entities", "syntax": "clear3DENInventory entities"}, "clientOwner": {"version": "1.56", "tags": "", "description": "Returns the machine network ID of the client executing the command.", "example": "private _myNetworkId = clientOwner;", "docSyntax": "clientOwner", "syntax": "clientOwner"}, "collect3DENHistory": {"version": "1.56", "tags": "", "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.", "example": "collect3DENHistory { _logic = create3DENEntity [\"Logic\", \"Logic\", position player]; add3DENConnection [\"Sync\", [_logic], player ]; }; //\u00a0Creates a logic and connects it to player in one history step.", "docSyntax": "collect3DENHistory code", "syntax": "collect3DENHistory <code>"}, "configNull": {"version": "1.56", "tags": "", "description": "A non-existing Config.", "example": "_config = missionNamespace getVariable [\"myConfig\", configNull];", "docSyntax": "configNull", "syntax": "configNull"}, "create3DENComposition": {"version": "1.56", "tags": "", "description": "Create new Composition. To create individual entities, use create3DENEntity.", "example": "myComposition = create3DENComposition [ configFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\", screenToWorld [0.5,0.5] ];", "docSyntax": "create3DENComposition [configPath, position]", "syntax": "create3DENComposition [configPath,position]"}, "create3DENEntity": {"version": "1.56", "tags": "", "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.", "example": "dude1 = create3DENEntity [\"Object\", \"B_Soldier_F\", screenToWorld [0.5, 0.5]];", "docSyntax": "create3DENEntity [mode, class, position, isEmpty]", "syntax": "create3DENEntity [mode,class,position,isEmpty]"}, "current3DENOperation": {"version": "1.56", "tags": "", "description": "Returns the currently performed editing operation in Eden Editor.", "example": "if (current3DENOperation == \"Move\") then {hint \"Moving\";};", "docSyntax": "current3DENOperation", "syntax": "current3DENOperation"}, "cursorObject": {"version": "1.56", "tags": "", "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.", "example": "hint str [getModelInfo cursorObject, typeOf cursorObject];", "docSyntax": "cursorObject", "syntax": "cursorObject", "returns": "object"}, "delete3DENEntities": {"version": "1.56", "tags": "", "description": "Delete given entities in Eden Editor.", "example": "delete3DENEntities (all3DENEntities select 0); //\u00a0Removes all objects", "docSyntax": "delete3DENEntities entities", "syntax": "delete3DENEntities entities"}, "do3DENAction": {"version": "1.56", "tags": "", "description": "Performs given Eden Editor action.", "example": "do3DENAction \"MissionSave\";", "docSyntax": "do3DENAction action", "syntax": "do3DENAction action"}, "edit3DENMissionAttributes": {"version": "1.56", "tags": "", "description": "Open a window with scenario attribute in given section.", "example": "edit3DENMissionAttributes \"Multiplayer\";", "docSyntax": "edit3DENMissionAttributes section", "syntax": "edit3DENMissionAttributes section"}, "exportJIPMessages": {"version": "1.56", "tags": "", "description": "Export list of JIP to a file.", "example": "exportJIPMessages \"myFileNameWithoutExtension\";", "docSyntax": "exportJIPMessages fileName", "syntax": "exportJIPMessages fileName"}, "get3DENActionState": {"version": "1.56", "tags": "", "description": "Returns state of given Eden Editor action.", "example": "if (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};", "docSyntax": "get3DENActionState action", "syntax": "get3DENActionState action"}, "get3DENAttribute": {"version": "1.56", "tags": "", "description": "Returns the value of the given entity's attribute in Eden Editor.", "example": "//\u00a0returns variable name of the object under cursor systemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\");", "docSyntax": "entity get3DENAttribute attribute", "syntax": "entity get3DENAttribute attribute"}, "get3DENCamera": {"version": "1.56", "tags": "", "description": "Returns the camera Object used by the Eden Editor.", "example": "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; get3DENCamera setVectorDirAndUp [ [ sin _y * cos _p,cos _y * cos _p,sin _p], [ [sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", "docSyntax": "get3DENCamera", "syntax": "get3DENCamera"}, "get3DENConnections": {"version": "1.56", "tags": "", "description": "Returns all connections currently present on an entity.", "example": "get3DENConnections _trigger; //\u00a0Can return [[\"WaypointActivation\",[B Alpha 4-5,0]]]", "docSyntax": "get3DENConnections entity", "syntax": "get3DENConnections entity"}, "get3DENEntity": {"version": "1.56", "tags": "", "description": "Returns Eden Entity based on its Eden ID.", "example": "myEntity = get3DENEntity 1;", "docSyntax": "get3DENEntity ID", "syntax": "get3DENEntity <scalar>"}, "get3DENEntityID": {"version": "1.56", "tags": "", "description": "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.", "example": "myID = get3DENEntityID player", "docSyntax": "get3DENEntityID entity", "syntax": "get3DENEntityID entity"}, "get3DENGrid": {"version": "1.56", "tags": "", "description": "Returns the grid increment for the given transformation type.", "example": "_currentIncrement = get3DENGrid \"t\";", "docSyntax": "get3DENGrid type", "syntax": "get3DENGrid type"}, "get3DENIconsVisible": {"version": "1.56", "tags": "", "description": "Gets visibility state of Eden Editor icons.", "example": "if (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};", "docSyntax": "get3DENIconsVisible", "syntax": "get3DENIconsVisible"}, "get3DENLayerEntities": {"version": "1.56", "tags": "", "description": "Return all entities and sub-layer in Eden Entity layer. In order to get all layer entities during a scenario use getMissionLayerEntities.", "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer; _entities = get3DENLayerEntities _myLayer;", "docSyntax": "get3DENLayerEntities layerID", "syntax": "get3DENLayerEntities layerID"}, "get3DENLinesVisible": {"version": "1.56", "tags": "", "description": "Get visibility state of Eden Editor lines.", "example": "if (get3DENLinesVisible select 0) then { hint \"Lines are visible in the map.\"; };", "docSyntax": "get3DENLinesVisible", "syntax": "get3DENLinesVisible"}, "get3DENMissionAttribute": {"version": "1.56", "tags": "", "description": "Return value of scenario attribute. For a list of all available mission attributes see Mission Attributes.", "example": "systemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");", "docSyntax": "section get3DENMissionAttribute class", "syntax": "section get3DENMissionAttribute class"}, "get3DENMouseOver": {"version": "1.56", "tags": "", "description": "Returns the Eden Entity the mouse is hovering over in Eden Editor.", "example": "systemChat str get3DENMouseOver; //\u00a0returns e.g [\"Object\", B Alpha 1-1:1]", "docSyntax": "get3DENMouseOver", "syntax": "get3DENMouseOver"}, "get3DENSelected": {"version": "1.56", "tags": "", "description": "Returns an array of all selected Eden Editor Entities of the given type.", "example": "get3DENSelected \"\"; /* [ [B Alpha 2-1:1], // objects [B Alpha 2-1], // groups [164494: <no shape>], // triggers [<No center> Charlie 1-2:4], // logic [[B Alpha 2-1,0]], // waypoints [\"Hotel_Whiskey\"] // markers ] */", "docSyntax": "get3DENSelected type", "syntax": "get3DENSelected type"}, "getClientStateNumber": {"version": "1.56", "tags": "", "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "example": "_state = getClientStateNumber;", "docSyntax": "getClientStateNumber", "syntax": "getClientStateNumber"}, "getMissionConfig": {"version": "1.56", "tags": "", "description": "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:", "example": "_header = getMissionConfig \"Header\" Returns scenario header config. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _header = missionConfigFile >> \"Header\"; // Old approach", "docSyntax": "getMissionConfig attribute", "syntax": "getMissionConfig attribute"}, "getMissionConfigValue": {"version": "1.56", "tags": "", "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:", "example": "_respawnDelay = getMissionConfigValue [\"respawnDelay\",0] Returns respawn delay value. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach", "docSyntax": "getMissionConfigValue attribute", "syntax": "getMissionConfigValue attribute"}, "getMissionLayerEntities": {"version": "1.56", "tags": "", "description": "Returns all entities within the specific Eden Editor layer and its sub-layers. To be used when the scenario is running, not in the editor workspace. Useful to disable/enable whole parts of the scenario if layers are used during mission design.", "example": "private _base = getMissionLayerEntities \"Base\";", "docSyntax": "getMissionLayerEntities layerName", "syntax": "getMissionLayerEntities layerName"}, "getPlayerScores": {"version": "1.56", "tags": "", "description": "In MP: Returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score).", "example": "getPlayerScores BIS_player1;", "docSyntax": "getPlayerScores unitName", "syntax": "getPlayerScores <objUnit>"}, "getRelDir": {"version": "1.56", "tags": "", "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo. Taking the current direction of the object into account.", "example": "_reldir = player getRelDir tank;", "docSyntax": "object getRelDir position", "syntax": "<object> getRelDir position"}, "getRelPos": {"version": "1.56", "tags": "", "description": "Returns position that is given distance and relative direction away from original object.", "example": "Find position 100 metres away at player's 3 o'clock:_relpos = player getRelPos [100, 90];", "docSyntax": "object getRelPos [distance, direction]", "syntax": "<object> getRelPos [<scalar>,direction]"}, "is3DEN": {"version": "1.56", "tags": "", "description": "Returns true if the Eden Editor is currently being used.", "example": "if is3DEN then {systemChat \"Welcome to Eden Editor!\"};", "docSyntax": "is3DEN", "syntax": "is3DEN"}, "is3DENMultiplayer": {"version": "1.56", "tags": "", "description": "Returns true if the Eden Editor is in multiplayer mode.", "example": "if is3DENMultiplayer then {systemChat \"You are hosting a test server!\"};", "docSyntax": "is3DENMultiplayer", "syntax": "is3DENMultiplayer"}, "isFilePatchingEnabled": {"version": "1.56", "tags": "", "description": "Returns true if file patching is enabled otherwise false", "example": "_state = isFilePatchingEnabled;", "docSyntax": "isFilePatchingEnabled", "syntax": "isFilePatchingEnabled"}, "leaderboardDeInit": {"version": "1.56", "tags": "", "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.", "example": "leaderboardDeInit \"TT01\"", "docSyntax": "leaderboardDeInit boardName", "syntax": "leaderboardDeInit <string>"}, "leaderboardGetRows": {"version": "1.56", "tags": "", "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!", "example": "leaderboardGetRows \"TT01\"", "docSyntax": "leaderboardGetRows boardName", "syntax": "leaderboardGetRows <string>"}, "leaderboardInit": {"version": "1.56", "tags": "", "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.", "example": "leaderboardInit \"TT01\"", "docSyntax": "leaderboardInit boardName", "syntax": "leaderboardInit <string>"}, "lockIdentity": {"version": "1.56", "tags": "", "description": "Locks the identity of a person. This will disable default identity.", "example": "_success = lockIdentity player;", "docSyntax": "lockIdentity unit", "syntax": "lockIdentity <objUnit>"}, "logNetwork": {"version": "1.56", "tags": "", "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the Arma 3 root folder.", "example": "_handle = logNetwork [\"myLog.txt\", [\"\"]];", "docSyntax": "logNetwork logFile", "syntax": "logNetwork logFile"}, "logNetworkTerminate": {"version": "1.56", "tags": "", "description": "Terminates a network log file started with logNetwork with the given handle", "example": "logNetworkTerminate _someHandle;", "docSyntax": "logNetworkTerminate handle", "syntax": "logNetworkTerminate handle"}, "menuAction": {"version": "1.56", "tags": "", "description": "Returns action stored in item on given path in CT_MENU_STRIP control.", "example": "menuAction [120, [1, 0]];", "docSyntax": "menuAction [idc, path]", "syntax": "menuAction [<scalar>,path]"}, "menuAdd": {"version": "1.56", "tags": "", "description": "Adds new submenu entry into item on given path.", "example": "findDisplay 313 displayCtrl 120 menuAdd [[], \"Custom Tools\"]; //\u00a0Add new entry at the top level to the menu strip in Eden Editor", "docSyntax": "menuAdd [idc, path, text]", "syntax": "menuAdd [<scalar>,path,<string>]"}, "menuChecked": {"version": "1.56", "tags": "", "description": "Returns if item on given path is checked or not.", "example": "_isChecked = findDisplay 313 displayCtrl 120 menuChecked [0,1];", "docSyntax": "menuChecked [idc, path]", "syntax": "menuChecked [<scalar>,path]"}, "menuClear": {"version": "1.56", "tags": "", "description": "Removes all entries from given menu strip.", "example": "menuClear (findDisplay 313 displayCtrl 120); //\u00a0Removes all entries from Eden Editor. Restart the editor to reset the menu.", "docSyntax": "menuClear idc", "syntax": "menuClear <scalar>"}, "menuCollapse": {"version": "1.56", "tags": "", "description": "Collapses item on given path and all its children.", "example": "findDisplay 313 displayCtrl 120 menuCollapse [0];", "docSyntax": "menuCollapse [idc, path]", "syntax": "menuCollapse [<scalar>,path]"}, "menuData": {"version": "1.56", "tags": "", "description": "Returns data stored in menu entry on given path.", "example": "//\u00a0Create an entry which will return its data once clicked private _ctrlMenuStrip = findDisplay 313 displayCtrl 120; private _indexMain = _ctrlMenuStrip menuAdd [[], \"Custom Tools\"]; private _indexData = _ctrlMenuStrip menuAdd [[_indexMain],\"This entry will print its data to system chat when clicked\"]; _ctrlMenuStrip menuSetData [[_indexMain,_indexData], \"[objNull,'Some String',true]\"]; _ctrlMenuStrip menuSetAction [[_indexMain,_indexData], \"systemChat (findDisplay 313 displayCtrl 120 menuData (menuHover (findDisplay 313 displayCtrl 120)));\"];", "docSyntax": "menuData [idc, path]", "syntax": "menuData [<scalar>,path]"}, "menuDelete": {"version": "1.56", "tags": "", "description": "Deletes menu entry on given path.", "example": "(findDisplay 313 displayCtrl 120) menuDelete [1]; //\u00a0Removes second entry from Eden Editor menu strip. Restart Eden Editor to reset the menu.", "docSyntax": "menuDelete [idc,path]", "syntax": "menuDelete [<scalar>,path]"}, "menuEnable": {"version": "1.56", "tags": "", "description": "Enables or disables menu entry on given path.", "example": "findDisplay 313 displayCtrl 120 menuEnable [0];", "docSyntax": "menuEnable [idc, path, enable]", "syntax": "menuEnable [<scalar>,path,<bool>]"}, "menuEnabled": {"version": "1.56", "tags": "", "description": "Returns if menu entry on given path is enabled or not.", "example": "_isEnabled = findDisplay 313 displayCtrl 120 menuEnabled [0];", "docSyntax": "menuEnabled [idc, path]", "syntax": "menuEnabled [<scalar>,path]"}, "menuExpand": {"version": "1.56", "tags": "", "description": "Expands given menu entry on given path and all its parents so entry is visible.", "example": "findDisplay 313 displayCtrl 120 menuExpand [0, 1];", "docSyntax": "menuExpand [idc, path]", "syntax": "menuExpand [<scalar>,path]"}, "menuHover": {"version": "1.56", "tags": "", "description": "Returns path to menu entry mouse is currently hovering over.", "example": "_path = menuHover (findDisplay 313 displayCtrl 120);", "docSyntax": "menuHover idc", "syntax": "menuHover <scalar>"}, "menuPicture": {"version": "1.56", "tags": "", "description": "Returns picture set into item on given path.", "example": "_picturePath = (findDisplay 313 displayCtrl 120) menuPicture [0, 1];", "docSyntax": "menuPicture [idc, path]", "syntax": "menuPicture [<scalar>,path]"}, "menuSetAction": {"version": "1.56", "tags": "", "description": "Sets new action into menu entry on given path.", "example": "findDisplay 313 displayCtrl 120 menuSetAction [[0, 1], \"systemChat 'Hello World!'\"];", "docSyntax": "menuSetAction [idc, path, action]", "syntax": "menuSetAction [<scalar>,path,action]"}, "menuSetCheck": {"version": "1.56", "tags": "", "description": "Sets item on given path to be checked or not. By default menu strip entries are not checkable. Once this command was executed, an entry can become checked and unchecked. If an entry is checked is indicated by a tick to the left of the entry's text. Setting an entry to be checkable will overwrite set picture with menuSetPicture.", "example": "findDisplay 313 displayCtrl 120 menuSetCheck [[0,1], true];", "docSyntax": "menuSetCheck [idc, path, checked]", "syntax": "menuSetCheck [<scalar>,path,checked]"}, "menuSetData": {"version": "1.56", "tags": "", "description": "Sets data into menu entry on given path.", "example": "findDisplay 313 displayCtrl 120 menuSetData [[0, 1], \"[true, player, 'Hello World!', 1337]\"];", "docSyntax": "menuSetData [idc, path, data]", "syntax": "menuSetData [<scalar>,path,data]"}, "menuSetPicture": {"version": "1.56", "tags": "", "description": "Sets new picture into menu entry on given path. The picture will be replaced by a tick if the entry was set to checkable with menuSetCheck.", "example": "findDisplay 313 displayCtrl 120 menuSetPicture [[0, 1], \"\\a3\\modules_f\\data\\iconunlock_ca.paa\"];", "docSyntax": "menuSetPicture [idc, path, picture]", "syntax": "menuSetPicture [<scalar>,path,picture]"}, "menuSetValue": {"version": "1.56", "tags": "", "description": "Sets new value into menu entry on given path.", "example": "findDisplay 313 displayCtrl 120 menuSetValue [[0, 1], 1337];", "docSyntax": "menuSetValue [idc, path, value]", "syntax": "menuSetValue [<scalar>,path,<scalar>]"}, "menuShortcut": {"version": "1.56", "tags": "", "description": "Returns shortcut related to menu entry on given path. Returns the shortcut in form of a bitflag. To get the shortcut text use menuShortcutText command.", "example": "findDisplay 313 displayCtrl 120 menuShortcut [0, 1];", "docSyntax": "menuShortcut [idc, path]", "syntax": "menuShortcut [<scalar>,path]"}, "menuShortcutText": {"version": "1.56", "tags": "", "description": "Returns a string containing shortcut text for menu item on the given path.", "example": "findDisplay 313 displayCtrl 120 menuShortcutText [1, 8]; //\u00a0Returns \"#\"", "docSyntax": "menuShortcutText [idc, path]", "syntax": "menuShortcutText [<scalar>,path]"}, "menuSize": {"version": "1.56", "tags": "", "description": "Returns how many sub entries is in item on given path.", "example": "findDisplay 313 displayCtrl 120 menuSize [];", "docSyntax": "menuSize [idc, path]", "syntax": "menuSize [<scalar>,path]"}, "menuSort": {"version": "1.56", "tags": "", "description": "Sorts subentries of item on given path by their text.", "example": "findDisplay 313 displayCtrl 120 menuSort [[],true];", "docSyntax": "menuSort [idc, path, AtoZ]", "syntax": "menuSort [<scalar>,path,AtoZ]"}, "menuText": {"version": "1.56", "tags": "", "description": "Returns current text set in menu entry on given path.", "example": "_ctrlMenuStrip menuText [1];", "docSyntax": "menuText [idc, path]", "syntax": "menuText [<scalar>,path]"}, "menuURL": {"version": "1.56", "tags": "", "description": "Returns current URL set in entry on given path.", "example": "findDisplay 313 displayCtrl 120 menuURL [7, 0]; //\u00a0Returns \"https://community.bistudio.com/wiki/Eden_Editor\"", "docSyntax": "menuURL [idc, path]", "syntax": "menuURL [<scalar>,path]"}, "menuValue": {"version": "1.56", "tags": "", "description": "Returns current value set in menu entry on given path.", "docSyntax": "menuValue [idc, path]", "syntax": "menuValue [<scalar>,path]"}, "missionVersion": {"version": "1.56", "tags": "", "description": "Returns the version of the current mission.", "example": "_version = missionVersion;", "docSyntax": "missionVersion", "syntax": "missionVersion"}, "move3DENCamera": {"version": "1.56", "tags": "", "description": "Moves the Eden Editor camera.", "example": "move3DENCamera [getPos player, true];", "docSyntax": "move3DENCamera [position, useOffset]", "syntax": "move3DENCamera [position,useOffset]"}, "ppEffectEnabled": {"version": "1.56", "tags": "", "description": "Checks whether given post process effect is enabled", "example": "_enabled = ppEffectEnabled _hndl;", "docSyntax": "ppEffectEnabled effect", "syntax": "ppEffectEnabled effect"}, "pushBackUnique": {"version": "1.56", "tags": "", "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.", "example": "_arr = [1,2,3]; _index = _arr pushBackUnique 3; hint str [_index, _arr]; //\u00a0[-1,[1,2,3]]", "docSyntax": "array pushBackUnique element", "syntax": "<array> pushBackUnique element"}, "remove3DENConnection": {"version": "1.56", "tags": "", "description": "Removes connection between entities.", "example": "remove3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];//\u00a0Remove random start on marker \"marker_0\" from all selected objects.", "docSyntax": "remove3DENConnection [type, from, to]", "syntax": "remove3DENConnection [type,from,to]"}, "remove3DENEventHandler": {"version": "1.56", "tags": "", "description": "Removes Eden Editor event handler of given type and ID.", "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}]; remove3DENEventHandler [\"onUndo\",eh];", "docSyntax": "remove3DENEventHandler [type,id]", "syntax": "remove3DENEventHandler [type,<scalar>]"}, "remove3DENLayer": {"version": "1.56", "tags": "", "description": "Remove Eden Editor editing layer.", "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; remove3DENLayer _myLayer\u00a0;", "docSyntax": "remove3DENLayer layerID", "syntax": "remove3DENLayer layerID"}, "removeAll3DENEventHandlers": {"version": "1.56", "tags": "", "description": "Removes all Eden Editor event handlers of given type.", "example": "removeAll3DENEventHandlers \"onUndo\";", "docSyntax": "removeAll3DENEventHandlers type", "syntax": "removeAll3DENEventHandlers type"}, "save3DENInventory": {"version": "1.56", "tags": "", "description": "Saves the current state of entities' inventory to the Mission.sqm.", "example": "save3DENInventory [_soldier1, _solider2];", "docSyntax": "save3DENInventory entities", "syntax": "save3DENInventory entities"}, "selectRandom": {"version": "1.56", "tags": "", "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom", "example": "_randomElement = selectRandom [1,2,3,4,5];", "docSyntax": "selectRandom array", "syntax": "selectRandom <array>"}, "set3DENAttribute": {"version": "1.56", "tags": "", "description": "Sets one of entity attributes. For the list of all attributes with their properties see Setting Attributes.", "example": "player set3DENAttribute [\"allowDamage\", false]; //\u00a0Mark player as invincible", "docSyntax": "entity set3DENAttribute [class, value]", "syntax": "entity set3DENAttribute [class,<scalar>]"}, "set3DENAttributes": {"version": "1.56", "tags": "", "description": "Set entity attributes. An attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.", "example": "//\u00a0Set all selected objects as playable set3DENAttributes [[get3DENSelected \"Object\",\"ControlMP\",true]];", "docSyntax": "set3DENAttributes [[entities1, class1, value1], [entities2, class2, value2], ...]", "syntax": "set3DENAttributes [[entities1,class1,value1],[entities2,class2,value2],...]"}, "set3DENGrid": {"version": "1.56", "tags": "", "description": "Sets the grid increment for the given transformation type.", "example": "set3DENGrid [\"t\",100]; //\u00a0100m movement increment", "docSyntax": "set3DENGrid [type, value]", "syntax": "set3DENGrid [type,<scalar>]"}, "set3DENIconsVisible": {"version": "1.56", "tags": "", "description": "Toggle visibility of Eden Editor icons.", "example": "set3DENIconsVisible [false, false ]; Hide all icons", "docSyntax": "set3DENIconsVisible [showMap, showScene]", "syntax": "set3DENIconsVisible [showMap,showScene]"}, "set3DENLayer": {"version": "1.56", "tags": "", "description": "Set layer for Eden Entity.", "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer;", "docSyntax": "entity set3DENLayer layerID", "syntax": "entity set3DENLayer layerID"}, "set3DENLinesVisible": {"version": "1.56", "tags": "", "description": "Toggle visibility of Eden Editor lines.", "example": "set3DENLinesVisible [false, false];//\u00a0Hide all lines", "docSyntax": "set3DENLinesVisible [showMap, showScene]", "syntax": "set3DENLinesVisible [showMap,showScene]"}, "set3DENMissionAttribute": {"version": "1.56", "tags": "", "description": "Set scenario attribute. An attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.", "example": "\"Multiplayer\" set3DENMissionAttribute [\"respawn\", 3]; //\u00a0Set respawn type to 3", "docSyntax": "section set3DENMissionAttribute [class, value]", "syntax": "section set3DENMissionAttribute [class,<scalar>]"}, "set3DENMissionAttributes": {"version": "1.56", "tags": "", "description": "Set scenario attributes. An attribute is identified by its property (data when it is an engine-driven attribute) value in config. For the list of all attributes with their properties, see Mission Attributes.", "example": "//\u00a0set respawn type to 3 and respawn delay to 10 seconds set3DENMissionAttributes [[\"Multiplayer\", \"respawn\", 3], [\"Multiplayer\", \"respawnDelay\", 10]];", "docSyntax": "set3DENMissionAttributes [[section1, class1, value1], ...]", "syntax": "set3DENMissionAttributes [[section1,class1,value1],...]"}, "set3DENModelsVisible": {"version": "1.56", "tags": "", "description": "Enables or disables lines visibility in 3DEN", "example": "set3DENModelsVisible [true, true];", "docSyntax": "set3DENModelsVisible [map, scene]", "syntax": "set3DENModelsVisible [<objMap>,scene]"}, "set3DENObjectType": {"version": "1.56", "tags": "", "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType.", "example": "[get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\"; //\u00a0turns object under cursor into a blufor crewman", "docSyntax": "objects set3DENObjectType classname", "syntax": "objects set3DENObjectType classname"}, "set3DENSelected": {"version": "1.56", "tags": "", "description": "Changes selection in Eden Editor to what is inside entities array.", "example": "set3DENSelected [0,5,3,6,7,12];", "docSyntax": "set3DENSelected entities", "syntax": "set3DENSelected entities"}, "tvSetText": {"version": "1.56", "tags": "", "description": "Sets string text to item on given path. IDC means id of parent Tree View.", "example": "tvSetText [101, [0], \"Test data\"];", "docSyntax": "tvSetText [idc, path, text]", "syntax": "tvSetText [<scalar>,path,<string>]"}, "allCutLayers": {"version": "1.58", "tags": "", "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so:", "example": "private _allLayers = allCutLayers;", "docSyntax": "allCutLayers", "syntax": "allCutLayers"}, "animateSource": {"version": "1.58", "tags": "", "description": "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by the source property. AnimationSources can animate multiple animate Animations. AnimationSource is defined in CfgVehicles' AnimationSources (see Arma 3: createVehicle/vehicles).", "example": "house animateSource [\"Door_1_source\", 1, true];", "docSyntax": "object animateSource [source, phase, speed]", "syntax": "<object> animateSource [source,phase,<scalar>]"}, "animationNames": {"version": "1.58", "tags": "", "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.", "example": "_names = animationNames static_AT; Returns: [\"MainTurret\", \"MainGun\", \"MainTurret_destructX\", \"MainTurret_destructY\", \"MainTurret_destructZ\", \"MainGun_destructX\", \"MainGun_destructY\", \"MainGun_destructZ\", \"magazine_destruct\", \"ammo_belt_destruct\", \"bolt_destruct\", \"charging_handle_destruct\", \"damagehideVez_destruct\", \"damagehideHlaven_destruct\", \"damagehideRecoil_destruct\", \"Turret_shake\", \"Turret_shake_aside\", \"Magazine_hide\", \"Ammo_belt_hide\", \"muzzleFlash\", \"AddAutonomous_unhide\", \"bullet001_reload_hide\", \"bullet002_reload_hide\", \"bullet003_reload_hide\", \"bullet004_reload_hide\", \"bullet005_reload_hide\", \"bullet006_reload_hide\", \"bullet007_reload_hide\", \"bullet008_reload_hide\"]", "docSyntax": "animationNames object", "syntax": "animationNames <object>"}, "animationSourcePhase": {"version": "1.58", "tags": "", "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see Example 2)", "example": "_phase = house animationSourcePhase \"Door_1_source\";", "docSyntax": "object animationSourcePhase source", "syntax": "<object> animationSourcePhase source"}, "BIS_fnc_3DENEntityMenu": {"version": "1.58", "tags": "", "description": "Excutes actions available in the entity menu (context menu).", "example": "[\"reset\"] call BIS_fnc_3DENEntityMenu;", "docSyntax": "[mode] call BIS_fnc_3DENEntityMenu", "syntax": "[mode] call BIS_fnc_3DENEntityMenu"}, "BIS_fnc_3DENGrid": {"version": "1.58", "tags": "", "description": "Handles action when grid button is pressed in the toolbar in Eden Editor.", "example": "-", "docSyntax": "[mode, input] call BIS_fnc_3DENGrid", "syntax": "[mode,input] call BIS_fnc_3DENGrid"}, "BIS_fnc_3DENIntel": {"version": "1.58", "tags": "", "description": "Is used to set the weather settings in Eden Editor. Internal use only.", "example": "-", "docSyntax": "[controlGroup, value] call BIS_fnc_3DENIntel", "syntax": "[controlGroup,<scalar>] call BIS_fnc_3DENIntel"}, "BIS_fnc_3DENListLocations": {"version": "1.58", "tags": "", "description": "Used in the locations display in Eden Editor. Internal use only.", "example": "[\"init\"] call BIS_fnc_3DENListLocations;", "docSyntax": "[mode] call BIS_fnc_3DENListLocations", "syntax": "[mode] call BIS_fnc_3DENListLocations"}, "BIS_fnc_3DENModuleDescription": {"version": "1.58", "tags": "", "description": "Used to display module description in the attribute window.", "example": "-", "docSyntax": "[ctrl,cfg] call BIS_fnc_3DENModuleDescription", "syntax": "[<uiControl>,cfg] call BIS_fnc_3DENModuleDescription"}, "BIS_fnc_3DENNotification": {"version": "1.58", "tags": "", "description": "Shows notification in the Eden Editor.", "example": "[\"This is an animated notification\", 0] call BIS_fnc_3DENNotification;", "docSyntax": "[text, type, duration, animate] call BIS_fnc_3DENNotification", "syntax": "[<string>,type,duration,animate] call BIS_fnc_3DENNotification"}, "BIS_fnc_3DENShowMessage": {"version": "1.58", "tags": "", "description": "Shows a pop-up message. In order to skip any optional parameter in between other parameters, send nil as parameter.", "example": "[\"Message\",\"Title of the Message\"] call BIS_fnc_3DENShowMessage;", "docSyntax": "[text, title, buttonOK, buttonCancel, icon, parentDisplay] call BIS_fnc_3DENShowMessage", "syntax": "[<string>,title,buttonOK,buttonCancel,icon,parentDisplay] call BIS_fnc_3DENShowMessage"}, "BIS_fnc_3DENToolbar": {"version": "1.58", "tags": "", "description": "Interacts with the Eden Editor toolbar", "example": "\"ToggleFlashlight\" call BIS_fnc_3DENToolbar;", "docSyntax": "[mode] call BIS_fnc_3DENToolbar", "syntax": "[mode] call BIS_fnc_3DENToolbar"}, "BIS_fnc_diagObjectPerformance": {"version": "1.58", "tags": "", "description": "/* Benchmarks objects vs. simple objects performance and exports the data into .csv sheet. Output format: classname,simulation,fpsClean,fpsObjects,fpsSimpleObjects Example: bis_scriptHandle = [] spawn BIS_fnc_diagObjectPerformance; */", "docSyntax": "[] call BIS_fnc_diagObjectPerformance", "syntax": "[] call BIS_fnc_diagObjectPerformance", "type": "diagnoseFunction"}, "BIS_fnc_getArea": {"version": "1.58", "tags": "", "description": "Extracts area information from trigger, marker, location or array", "example": "_area = [player, 100] call BIS_fnc_getArea;", "docSyntax": "param call BIS_fnc_getArea", "syntax": "param call BIS_fnc_getArea"}, "BIS_fnc_groupFromNetId": {"version": "1.58", "tags": "", "description": "Extends MP-only groupFromNetId functionality to SP", "example": "_grp = \"0:3\" call BIS_fnc_groupFromNetId;", "docSyntax": "netId call BIS_fnc_groupFromNetId", "syntax": "netId call BIS_fnc_groupFromNetId"}, "BIS_fnc_initSliderValue": {"version": "1.58", "tags": "", "description": "Initialises a slider attribute control within the Eden Editor. Can also be used outside of Eden Editor.", "example": "[_this controlsGroupCtrl 100, _this controlsGroupCtrl 101, \"m\", 50] call BIS_fnc_initSliderValue;", "docSyntax": "[ctrlSlider, ctrlEdit, unit, default] call BIS_fnc_initSliderValue", "syntax": "[ctrlSlider,ctrlEdit,<objUnit>,default] call BIS_fnc_initSliderValue"}, "BIS_fnc_netId": {"version": "1.58", "tags": "", "description": "Extends MP-only netId functionality to SP", "example": "_objNetId = player call BIS_fnc_netId; // \"0:2\"", "docSyntax": "objOrGrp call BIS_fnc_netId", "syntax": "objOrGrp call BIS_fnc_netId"}, "BIS_fnc_objectFromNetId": {"version": "1.58", "tags": "", "description": "Extends MP-only objectFromNetId functionality to SP", "example": "_obj = \"0:2\" call BIS_fnc_objectFromNetId;", "docSyntax": "netId call BIS_fnc_objectFromNetId", "syntax": "netId call BIS_fnc_objectFromNetId"}, "BIS_fnc_sunriseSunsetTime": {"version": "1.58", "tags": "", "description": "Calculate sunrise and sunset time.", "example": "_sunriseSunsetTime = date call BIS_fnc_sunriseSunsetTime; //\u00a0get sunrise/sunset time for the current date", "docSyntax": "date call BIS_fnc_sunriseSunsetTime", "syntax": "date call BIS_fnc_sunriseSunsetTime"}, "BIS_fnc_taskSetAlwaysVisible": {"version": "1.58", "tags": "", "description": "Flags task to be or not to be always visible.", "example": "[\"BIS_Task_01\",true] call BIS_fnc_taskSetAlwaysVisible;", "docSyntax": "[taskID,alwaysVisible] call BIS_fnc_taskSetAlwaysVisible", "syntax": "[taskID,alwaysVisible] call BIS_fnc_taskSetAlwaysVisible"}, "BIS_fnc_taskSetType": {"version": "1.58", "tags": "", "description": "Sets task type to given task.", "example": "[\"BIS_Task_01\",\"attack\"] call BIS_fnc_taskSetType;", "docSyntax": "[taskID,type] call BIS_fnc_taskSetType", "syntax": "[taskID,type] call BIS_fnc_taskSetType"}, "BIS_fnc_taskType": {"version": "1.58", "tags": "", "description": "Returns type of given task.", "example": "[\"BIS_Task_01\"] call BIS_fnc_taskType;", "docSyntax": "taskID call BIS_fnc_taskType", "syntax": "taskID call BIS_fnc_taskType"}, "BIS_fnc_taskTypeIcon": {"version": "1.58", "tags": "", "description": "Returns path to the icon texture associated with given task type.", "example": "[\"attack\",configFile >> \"CfgTaskTypes\" >> \"Run\" >> \"icon\"] call BIS_fnc_taskTypeIcon;", "docSyntax": "[type, default] call BIS_fnc_taskTypeIcon", "syntax": "[type,default] call BIS_fnc_taskTypeIcon"}, "canSuspend": {"version": "1.58", "tags": "", "description": "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.", "example": "onEachFrame { systemChat str canSuspend; // false [] spawn { hint str canSuspend }; // true onEachFrame {}; };", "docSyntax": "canSuspend", "syntax": "canSuspend"}, "configSourceAddonList": {"version": "1.58", "tags": "", "description": "Returns an array of addons (CfgPatches) in which the given config class is defined.", "example": "_addons = configSourceAddonList (configFile >> \"CfgVehicles\" >> \"Man\"); //\u00a0returns [\"A3_Data_F\", \"A3_Characters_F\", \"A3_Data_F_Curator\", \"A3_Air_F_Heli\"]", "docSyntax": "configSourceAddonList config", "syntax": "configSourceAddonList config"}, "createSimpleObject": {"version": "1.58", "tags": "", "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.", "example": "_pos = player getRelPos [10, 0]; _tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos]; _tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0]))); _tank hideSelection [\"zasleh\", true]; _tank hideSelection [\"zasleh2\", true]; _tank hideSelection [\"clan\", true]; _tank animate [\"Wheel_podkoloL3\", 0.5, true]; _tank animate [\"Wheel_podkoloL6\", 0.5, true];", "docSyntax": "createSimpleObject [shapeName, positionWorld, local]", "syntax": "createSimpleObject [shapeName,positionWorld,local]"}, "ctrlParentControlsGroup": {"version": "1.58", "tags": "", "description": "Returns the parent control of a given child control. If the control is not part of a CT_CONTROLS_GROUP control then controlNull is returned. To return parent Display of the control use ctrlParent.", "example": "_ctrlCombo = _ctrl controlsGroupCtrl 100; //\u00a0control ctrlParentControlsGroup _ctrlCombo; //\u00a0parent control group (_ctrl)", "docSyntax": "ctrlParentControlsGroup ctrl", "syntax": "ctrlParentControlsGroup <uiControl>"}, "diag_codePerformance": {"version": "1.58", "tags": "", "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance.", "example": "private _result = diag_codePerformance [{ private _a = 123; }, 0, 10000];", "docSyntax": "diag_codePerformance [code, arguments, cycles]", "syntax": "diag_codePerformance [<code>,arguments,cycles]", "type": "diagnoseStatement"}, "difficultyOption": {"version": "1.58", "tags": "", "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in ArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran). This command replaces difficultyEnabled as many options have multiple values and former command only provided Boolean return.", "example": "hint str (difficultyOption \"friendlyTags\");", "docSyntax": "difficultyOption optionName", "syntax": "difficultyOption optionName"}, "displayParent": {"version": "1.58", "tags": "", "description": "Returns parent display of the given display.", "example": "_display = displayParent findDisplay 49; // Display #46", "docSyntax": "displayParent display", "syntax": "displayParent <uiDisplay>"}, "drawPolygon": {"version": "1.58", "tags": "", "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw* commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.", "example": "test_polygon = []; for \"_i\" from 1 to 12 do { test_polygon pushBack (player getPos [10 + random 100, 360/_i]); }; findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { params [\"_control\"]; _control drawPolygon [test_polygon, [0,0,1,1]]; }];", "docSyntax": "map drawPolygon [polygon, color]", "syntax": "<objMap> drawPolygon [polygon,<scalar>]"}, "getCameraViewDirection": {"version": "1.58", "tags": "", "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]", "example": "Draw AI eye direction (green), weapon direction (red) and camera direction (blue) in 3D: bob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"]; bob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"]; onEachFrame { _beg = ASLToAGL eyePos bob; _endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100)); drawLine3D [ _beg, _endE, [0,1,0,1]]; _endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100)); drawLine3D [_beg, _endW, [1,0,0,1]]; _endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100)); drawLine3D [_beg, _endV, [0,0,1,1]]; };", "docSyntax": "getCameraViewDirection unit", "syntax": "getCameraViewDirection <objUnit>"}, "getUnitLoadout": {"version": "1.58", "tags": "", "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "example": "getUnitLoadout player;", "docSyntax": "getUnitLoadout unit", "syntax": "getUnitLoadout <objUnit>"}, "getUnitTrait": {"version": "1.58", "tags": "", "description": "Gets the current value of a trait of the given unit.", "example": "player getUnitTrait \"Medic\";", "docSyntax": "unit getUnitTrait skillName", "syntax": "<objUnit> getUnitTrait <string>"}, "hideSelection": {"version": "1.58", "tags": "", "description": "Hides or enables the given selection for the simple object", "example": "_simpleObject hideSelection [\"some_selection\", true];", "docSyntax": "object hideSelection [selection, hidden]", "syntax": "<object> hideSelection [selection,hidden]"}, "inArea": {"version": "1.58", "tags": "", "description": "Checks whether given position or object is inside given area. Use inAreaArray to check multiple positions/objects within area.", "example": "_playerIsInside = player inArea _myTrigger;", "docSyntax": "position inArea area", "syntax": "position inArea area"}, "moonPhase": {"version": "1.58", "tags": "", "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.", "example": "_currentMoonPhase = moonPhase date;", "docSyntax": "moonPhase date", "syntax": "moonPhase date"}, "roadAt": {"version": "1.58", "tags": "", "description": "Returns a road segment containing given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.", "example": "_road = roadAt ASLToAGL getPosASL player;", "docSyntax": "roadAt position", "syntax": "roadAt position"}, "selectionNames": {"version": "1.58", "tags": "", "description": "Returns the list of model selections. When using default syntax, the named selections are returned from the first LOD only (LOD index 0). Alternative syntax allows to select LOD by name or by LOD resolution.", "example": "_house= \"Land_i_House_Small_02_V3_F\" createVehicle _pos; selectionNames _house; //\u00a0[\"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\",\"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\",\"glass_4_hide\",\"glass_4_unhide\"]", "docSyntax": "selectionNames object", "syntax": "selectionNames <object>"}, "setSimpleTaskAlwaysVisible": {"version": "1.58", "tags": "", "description": "Sets task's visibility.", "example": "currentTask player setSimpleTaskAlwaysVisible true;", "docSyntax": "taskID setSimpleTaskAlwaysVisible state", "syntax": "taskID setSimpleTaskAlwaysVisible state"}, "setSimpleTaskCustomData": {"version": "1.58", "tags": "", "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.", "example": "_task setSimpleTaskCustomData [\"\\A3\\Ui_f\\data\\IGUI\\Cfg\\simpleTasks\\letters\\h_ca.paa\", \"This is the tooltip\", \"This is the description\"];", "docSyntax": "task setSimpleTaskCustomData [IconPath, tooltip, description]", "syntax": "<objTask> setSimpleTaskCustomData [IconPath,tooltip,description]"}, "setSimpleTaskType": {"version": "1.58", "tags": "", "description": "Attach type to the simple task. See Default Task Types.", "example": "(currentTask player) setSimpleTaskType \"attack\";", "docSyntax": "task setSimpleTaskType taskType", "syntax": "<objTask> setSimpleTaskType taskType"}, "setTaskMarkerOffset": {"version": "1.58", "tags": "", "description": "Sets the task marker position in model space.", "example": "player setTaskMarkerOffset [0,0.5,1];", "docSyntax": "obj setTaskState position", "syntax": "<object> setTaskState position"}, "setUnitLoadout": {"version": "1.58", "tags": "", "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "example": "player_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2", "docSyntax": "unit setUnitLoadout loadout", "syntax": "<objUnit> setUnitLoadout loadout"}, "setUnitTrait": {"version": "1.58", "tags": "", "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.", "example": "player setUnitTrait [\"Medic\", true];", "docSyntax": "unit setUnitTrait [skillName, value, isCustom]", "syntax": "<objUnit> setUnitTrait [<string>,<scalar>,isCustom]"}, "setWaypointForceBehaviour": {"version": "1.58", "tags": "", "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.", "example": "[grp, 2] setWaypointForceBehaviour true;", "docSyntax": "waypoint setWaypointForceBehaviour state", "syntax": "waypoint setWaypointForceBehaviour state"}, "sideAmbientLife": {"version": "1.58", "tags": "", "description": "Returns side of ambient life, for example ambient life placed in Eden Editor.", "example": "_sideAmbientLife = sideAmbientLife;", "docSyntax": "sideAmbientLife", "syntax": "sideAmbientLife"}, "sideEmpty": {"version": "1.58", "tags": "", "description": "Returns empty side, for example static buildings in Eden Editor.", "example": "_sideEmpty = sideEmpty;", "docSyntax": "sideEmpty", "syntax": "sideEmpty"}, "taskAlwaysVisible": {"version": "1.58", "tags": "", "description": "Returns true if the task is flagged to be always visible or false if not.", "example": "_isAlwaysVisible = taskAlwaysVisible (currentTask player);", "docSyntax": "taskAlwaysVisible task", "syntax": "taskAlwaysVisible <objTask>"}, "taskCustomData": {"version": "1.58", "tags": "", "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.", "example": "_data = taskCustomData \"someTask\";", "docSyntax": "taskCustomData task", "syntax": "taskCustomData <objTask>"}, "taskMarkerOffset": {"version": "1.58", "tags": "", "description": "Returns model space position for the task marker", "example": "_offset = taskMarkerOffset player;", "docSyntax": "taskMarkerOffset unit", "syntax": "taskMarkerOffset <objUnit>"}, "taskType": {"version": "1.58", "tags": "", "description": "Returns the type of the given task. A new task returns \"Default\" for the type.", "example": "_type = taskType (currentTask player);", "docSyntax": "taskType task", "syntax": "taskType <objTask>"}, "waypointForceBehaviour": {"version": "1.58", "tags": "", "description": "Returns true if the waypoint behavior is forced.", "example": "_isForced = waypointForceBehaviour [groupOne, 1];", "docSyntax": "waypointForceBehaviour waypoint", "syntax": "waypointForceBehaviour waypoint"}, "BIS_fnc_addRespawnInventory": {"version": "1.60", "tags": "", "description": "Add a respawn inventory for respawn menu.", "example": "[west, \"WEST1\"] call BIS_fnc_addRespawnInventory;", "docSyntax": "[target, inventoryParams] call BIS_fnc_addRespawnInventory", "syntax": "[<object>,inventoryParams] call BIS_fnc_addRespawnInventory"}, "BIS_fnc_exportEditorPreviews": {"version": "1.60", "tags": "", "description": "Export screenshots of objects for Eden Editor and Community Wiki to <Arma 3 Profile>\\Screenshots\\EditorPreviews directory. See Arma 3 assets.", "example": "//\u00a0All objects [] spawn BIS_fnc_exportEditorPreviews;", "docSyntax": "[duration, type, sides, mods, addons, classes] spawn BIS_fnc_exportEditorPreviews", "syntax": "[duration,type,sides,mods,addons,classes] spawn BIS_fnc_exportEditorPreviews"}, "BIS_fnc_getRespawnInventories": {"version": "1.60", "tags": "", "description": "Return respawn inventories available for the given target.", "example": "private _respawnInfo = [player] call BIS_fnc_getRespawnInventories;", "docSyntax": "[target, showDisabled, returnAllInfo] call BIS_fnc_getRespawnInventories", "syntax": "[<object>,showDisabled,returnAllInfo] call BIS_fnc_getRespawnInventories"}, "BIS_fnc_removeRespawnInventory": {"version": "1.60", "tags": "", "description": "Remove a respawn inventory added by BIS_fnc_addRespawnInventory.", "example": "[west, 1] call BIS_fnc_removeRespawnInventory;", "docSyntax": "[target, id] call BIS_fnc_removeRespawnInventory", "syntax": "[<object>,<scalar>] call BIS_fnc_removeRespawnInventory"}, "BIS_fnc_setRespawnInventory": {"version": "1.60", "tags": "", "description": "Set respawn loadouts.", "example": "[player, [\"B_T_Recon_TL_F\"]] call BIS_fnc_setRespawnInventory;", "docSyntax": "[target, inventory] call BIS_fnc_setRespawnInventory", "syntax": "[<object>,inventory] call BIS_fnc_setRespawnInventory"}, "BIS_fnc_showRespawnMenuDisableItem": {"version": "1.60", "tags": "", "description": "Disables respawn loadout, role or position for Arma 3: Respawn.", "example": "[ \"disable\", uiNamespace getVariable \"BIS_RscRespawnControlsMap_ctrlLocList\", 2, \"Restricted for this part of mission!\", myRespawnModule call BIS_fnc_objectVar ] call BIS_fnc_showRespawnMenuDisableItem;", "docSyntax": "[mode, uiControl, listboxItem, message, respawnReference] call BIS_fnc_showRespawnMenuDisableItem", "syntax": "[mode,uiControl,listboxItem,message,respawnReference] call BIS_fnc_showRespawnMenuDisableItem"}, "commandSuppressiveFire": {"version": "1.60", "tags": "", "description": "Orders the given unit or a group of units to suppress the given position or target (with radio messages, see doSuppressiveFire if you don't want messages).", "example": "_soldier commandSuppressiveFire [1869.508,5760.962,0.000]", "docSyntax": "unit commandSuppressiveFire target", "syntax": "<objUnit> commandSuppressiveFire <object>"}, "doSuppressiveFire": {"version": "1.60", "tags": "", "description": "Orders the given unit or a group of units to suppress the given position or target (without radio messages, see commandSuppressiveFire is you need messages).", "example": "_soldier doSuppressiveFire [1869.508,5760.962,0.000]", "docSyntax": "unit doSuppressiveFire target", "syntax": "<objUnit> doSuppressiveFire <object>"}, "getTerrainGrid": {"version": "1.60", "tags": "", "description": "A getter for setTerrainGrid, returns the current terrain grid.", "example": "_terrainGrid = getTerrainGrid;", "docSyntax": "getTerrainGrid", "syntax": "getTerrainGrid"}, "pixelGrid": {"version": "1.60", "tags": "", "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.", "example": "_gridHeight = pixelH * pixelGrid;", "docSyntax": "pixelGrid", "syntax": "pixelGrid"}, "pixelH": {"version": "1.60", "tags": "", "description": "Returns the height of one pixel for current resolution.", "example": "_pixelHeight = pixelH;", "docSyntax": "pixelH", "syntax": "pixelH"}, "pixelW": {"version": "1.60", "tags": "", "description": "Returns width of one pixel for current resolution.", "example": "_pixelWidth = pixelW;", "docSyntax": "pixelW", "syntax": "pixelW"}, "screenshot": {"version": "1.60", "tags": "", "description": "Captures a screenshot and stores it to given filename.", "example": "screenshot \"\";", "docSyntax": "screenshot filename", "syntax": "screenshot filename"}, "shownScoretable": {"version": "1.60", "tags": "", "description": "Returns the state of the score table set with showScoretable command.", "example": "_state = shownScoretable;", "docSyntax": "shownScoretable", "syntax": "shownScoretable"}, "showScoretable": {"version": "1.60", "tags": "", "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be closed manually, when it is force closed, it cannot be opened manually.", "example": "showScoretable 1;", "docSyntax": "showScoretable force", "syntax": "showScoretable force"}, "useAISteeringComponent": {"version": "1.60", "tags": "", "description": "Enable the new AI driving, used to test the old and new AI driving.", "example": "useAISteeringComponent true;", "docSyntax": "useAISteeringComponent state", "syntax": "useAISteeringComponent state"}, "userInputDisabled": {"version": "1.60", "tags": "", "description": "Returns true if user input is disabled", "example": "Toggles user inputdisableUserInput !userInputDisabled;", "docSyntax": "userInputDisabled", "syntax": "userInputDisabled"}, "addOwnedMine": {"version": "1.62", "tags": "", "description": "Sets ownership over a remotely detonatable mine to the unit.", "example": "player addOwnedMine _superMine;", "docSyntax": "unit addOwnedMine mine", "syntax": "<objUnit> addOwnedMine mine"}, "addPlayerScores": {"version": "1.62", "tags": "", "description": "MP server only: Adds player score.", "example": "player addPlayerScores [0, 1, 0, 0, 1];", "docSyntax": "unit addPlayerScores values", "syntax": "<objUnit> addPlayerScores values"}, "BIS_fnc_adjustSimpleObject": {"version": "1.62", "tags": "", "description": "Adjust simple object vertical position, animations and selection according to provided data.", "example": "[myCar, [\"B_MyCar_F\", \"path\\to\\file.p3d\"]] call BIS_fnc_adjustSimpleObject;", "docSyntax": "[object, [class, model, reversed, verticalOffset, animAdjustments, selectionToHide]] call BIS_fnc_adjustSimpleObject", "syntax": "[<object>,[class,model,reversed,verticalOffset,animAdjustments,selectionToHide]] call BIS_fnc_adjustSimpleObject"}, "BIS_fnc_createSimpleObject": {"version": "1.62", "tags": "", "description": "Creates non-simulated framerate and network performance friendly object - a Simple Object - and applies different adjustments to fake non-existing physX and engine interactions. The adjustments need either to be stored in the object config or provided as the function input, otherwise they need to be done manually.", "example": "[\"B_Boat_Armed_01_minigun_F\", getPosWorld player, getDir player] call BIS_fnc_createSimpleObject;", "docSyntax": "[input, position, direction, followTerrain, forceSuperSimpleObject] call BIS_fnc_createSimpleObject", "syntax": "[input,position,direction,followTerrain,forceSuperSimpleObject] call BIS_fnc_createSimpleObject"}, "BIS_fnc_EXP_camp_addTickets": {"version": "1.62", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_EXP_camp_addTickets", "syntax": "[] call BIS_fnc_EXP_camp_addTickets"}, "BIS_fnc_EXP_camp_balanceGroup": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Balances a group depending on the amount of connected players Parameters: _group: The group to balance _minCount: The minimal count of units group must end up with _bExcludeVehicleRoles: Whether to exclude units in important vehicle roles (driver, gunner, commander) Returns: Nothing */", "docSyntax": "[] call BIS_fnc_EXP_camp_balanceGroup", "syntax": "[] call BIS_fnc_EXP_camp_balanceGroup"}, "BIS_fnc_EXP_camp_checkpoint": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Set's a mission checkpoint, in single-player an auto save happens, in multiplayer a new respawn position is added Parameters: _target: The target namespace _position: The desired position _name: The name of the position Returns: Added respawn position identifier */", "docSyntax": "[] call BIS_fnc_EXP_camp_checkpoint", "syntax": "[] call BIS_fnc_EXP_camp_checkpoint"}, "BIS_fnc_EXP_camp_dynamicAISkill": {"version": "1.62", "tags": "", "description": "Changes AI skill based on player count, responding to player connected / player disconnected events. This function does exactly the same as BIS_fnc_EXP_camp_setSkill execept that it automatically executes when a player joins or disconnects.", "example": "[ true, [ [WEST,0.1,0.2,0.7,0.6 ], [EAST,0.1,0.2,0.7,0.6 ] ] ] call BIS_fnc_EXP_camp_dynamicAISkill;", "docSyntax": "[mode,affectedSides] call BIS_fnc_EXP_camp_dynamicAISkill", "syntax": "[mode,affectedSides] call BIS_fnc_EXP_camp_dynamicAISkill"}, "BIS_fnc_EXP_camp_getCinematicMode": {"version": "1.62", "tags": "", "description": "Returns whether or not player is in cinematic mode.", "example": "call BIS_fnc_EXP_camp_getCinematicMode;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EXP_camp_getPlayersGroup": {"version": "1.62", "tags": "", "description": "Returns group that players belong to in coop campaign scenario.", "example": "_group = call BIS_fnc_EXP_camp_getPlayersGroup;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EXP_camp_guidedProjectile": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Spawns object of given class and makes it travel, hooming towards the target To be used with CfgAmmo type of entity, but can be used with virtually any kind of object Parameters: _startPos: ARRAY The initial position of the projectile (ASL) _class: STRING or OBJECT The class name of the object to spawn or an object entity already existing _target: OBJECT The target object the projectile will be hooming towards to _speed: SCALAR The speed the object should assume _destroyTarget: BOOL Whether to force destruction of the target object on detonation _localOffset: ARRAY The model space position offset that projectile should be hooming towards to _minDistanceToTarget: SCALAR The minimal distance projectile needs to be from target position to enter ballistic mode _function STRING The function to execute on the created object with params [<object>] _isGlobalFunction BOOL Whether the executed function should be executed on all connected machine, false to execute only on the server Returns: NOTHING */", "docSyntax": "[] call BIS_fnc_EXP_camp_guidedProjectile", "syntax": "[] call BIS_fnc_EXP_camp_guidedProjectile"}, "BIS_fnc_EXP_camp_hasMissionStarted": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Returns whether the mission has actually started (see Manager) Parameters: Nothing Returns: True if mission was started, false if not */", "docSyntax": "[] call BIS_fnc_EXP_camp_hasMissionStarted", "syntax": "[] call BIS_fnc_EXP_camp_hasMissionStarted"}, "BIS_fnc_EXP_camp_IFF": {"version": "1.62", "tags": "", "description": "Simple handling of the Support Team's scripted IFF.", "example": "[[player]] call BIS_fnc_EXP_camp_IFF;", "docSyntax": "[units] call BIS_fnc_EXP_camp_IFF", "syntax": "[units] call BIS_fnc_EXP_camp_IFF"}, "BIS_fnc_EXP_camp_initCharacter": {"version": "1.62", "tags": "", "description": "Assigns correct appearance and loadout of story characters based upon their vehicle classnames.", "example": "[BIS_unit,\"NIGHT\"] call BIS_fnc_EXP_camp_initCharacter;", "docSyntax": "[unit, mode] call BIS_fnc_EXP_camp_initCharacter", "syntax": "[<objUnit>,mode] call BIS_fnc_EXP_camp_initCharacter"}, "BIS_fnc_EXP_camp_initClasses": {"version": "1.62", "tags": "", "description": "Initializes the classes players can choose from before spawning.", "example": "[\"NIGHT\"] call BIS_fnc_EXP_camp_initClasses;", "docSyntax": "[mode] call BIS_fnc_EXP_camp_initClasses", "syntax": "[mode] call BIS_fnc_EXP_camp_initClasses"}, "BIS_fnc_EXP_camp_initDifficulty": {"version": "1.62", "tags": "", "description": "Initializes difficulty settings in Apex Protocol campaign.", "example": "call BIS_fnc_EXP_camp_initDifficulty;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EXP_camp_lobby": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby.sqf Campaign Lobby: Core Function Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby", "syntax": "[] call BIS_fnc_EXP_camp_lobby"}, "BIS_fnc_EXP_camp_lobby_clearVars": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_clearVars.sqf Campaign Lobby: Clear variables Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_clearVars", "syntax": "[] call BIS_fnc_EXP_camp_lobby_clearVars"}, "BIS_fnc_EXP_camp_lobby_ctrlSetColor": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_ctrlSetColor.sqf Campaign Lobby: Updates controls with defined colors Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_ctrlSetColor", "syntax": "[] call BIS_fnc_EXP_camp_lobby_ctrlSetColor"}, "BIS_fnc_EXP_camp_lobby_findHost": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_findHost.sqf Campaign Lobby: Find host Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_findHost", "syntax": "[] call BIS_fnc_EXP_camp_lobby_findHost"}, "BIS_fnc_EXP_camp_lobby_getHostSettings": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 08-08-2016 fn_EXP_camp_lobby_getHostSettings.sqf Campaign Lobby: Grabs the host settings for respawn and revive Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_getHostSettings", "syntax": "[] call BIS_fnc_EXP_camp_lobby_getHostSettings"}, "BIS_fnc_EXP_camp_lobby_getPlayerSquadName": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_getPlayerSquadName.sqf Campaign Lobby: Return the player squad name Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_getPlayerSquadName", "syntax": "[] call BIS_fnc_EXP_camp_lobby_getPlayerSquadName"}, "BIS_fnc_EXP_camp_lobby_go": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_go.sqf Campaign Lobby: Run Mission Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_go", "syntax": "[] call BIS_fnc_EXP_camp_lobby_go"}, "BIS_fnc_EXP_camp_lobby_intro": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_intro.sqf Campaign Lobby: On Load Function (Does nothing) Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_intro", "syntax": "[] call BIS_fnc_EXP_camp_lobby_intro"}, "BIS_fnc_EXP_camp_lobby_launch": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_launch.sqf Campaign Lobby: Launch Function Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_launch", "syntax": "[] call BIS_fnc_EXP_camp_lobby_launch"}, "BIS_fnc_EXP_camp_lobby_loop": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_loop.sqf Campaign Lobby: Update UI Loop Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_loop", "syntax": "[] call BIS_fnc_EXP_camp_lobby_loop"}, "BIS_fnc_EXP_camp_lobby_missionCountdown": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_missionCountdown.sqf Campaign Lobby: Countdown to run mission Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_missionCountdown", "syntax": "[] call BIS_fnc_EXP_camp_lobby_missionCountdown"}, "BIS_fnc_EXP_camp_lobby_onLoad": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_onLoad.sqf Campaign Lobby: On Load Function (Does nothing) Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_onLoad", "syntax": "[] call BIS_fnc_EXP_camp_lobby_onLoad"}, "BIS_fnc_EXP_camp_lobby_onUnLoad": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_onUnLoad.sqf Campaign Lobby: On display unload function - clear variables and close as necessary Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_onUnLoad", "syntax": "[] call BIS_fnc_EXP_camp_lobby_onUnLoad"}, "BIS_fnc_EXP_camp_lobby_playMissionVideo": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_playMissionVideo.sqf Campaign Lobby: Creates the control and plays mission video Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_playMissionVideo", "syntax": "[] call BIS_fnc_EXP_camp_lobby_playMissionVideo"}, "BIS_fnc_EXP_camp_lobby_serverPing": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_serverPing.sqf Campaign Lobby: Updates player status Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_serverPing", "syntax": "[] call BIS_fnc_EXP_camp_lobby_serverPing"}, "BIS_fnc_EXP_camp_lobby_serverUpdate": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_serverUpdate.sqf Campaign Lobby: Server update function (runs on \"host\" machine for dedicated servers) Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_serverUpdate", "syntax": "[] call BIS_fnc_EXP_camp_lobby_serverUpdate"}, "BIS_fnc_EXP_camp_lobby_structuredText": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_structuredText.sqf Campaign Lobby: Formats structured text Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_structuredText", "syntax": "[] call BIS_fnc_EXP_camp_lobby_structuredText"}, "BIS_fnc_EXP_camp_lobby_UIMilitaryManager": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 15-08-2016 fn_EXP_camp_lobby_UIMilitaryManager.sqf Campaign Lobby: Updates military efficiency based on mission settings Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMilitaryManager", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMilitaryManager"}, "BIS_fnc_EXP_camp_lobby_UIMissionCountdown": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_missionCountdown.sqf Campaign Lobby: Countdown to run mission Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionCountdown", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionCountdown"}, "BIS_fnc_EXP_camp_lobby_UIMissionManager": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_UIMissionManager.sqf Campaign Lobby: Handles UI behaviour of tree mission options Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionManager", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIMissionManager"}, "BIS_fnc_EXP_camp_lobby_UIOverlayManager": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_updateIntel.sqf Campaign Lobby: Updates the mission overview and intel from tree interactions Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIOverlayManager", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIOverlayManager"}, "BIS_fnc_EXP_camp_lobby_UIProgressManager": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_UIProgressManager.sqf Campaign Lobby: Handles Progress button UI behaviour Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UIProgressManager", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UIProgressManager"}, "BIS_fnc_EXP_camp_lobby_UISettingsManager": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 08-08-2016 fn_EXP_camp_lobby_UISettingsManager.sqf Campaign Lobby: Handles the mission settings for Respawn and Revive Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_UISettingsManager", "syntax": "[] call BIS_fnc_EXP_camp_lobby_UISettingsManager"}, "BIS_fnc_EXP_camp_lobby_updateHostSettings": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 08-08-2016 fn_EXP_camp_lobby_updateHostSettings.sqf Campaign Lobby: Updates all clients with the latest host settings Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateHostSettings", "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateHostSettings"}, "BIS_fnc_EXP_camp_lobby_updateIntel": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_updateIntel.sqf Campaign Lobby: Updates the mission overview and intel from tree interactions Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateIntel", "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateIntel"}, "BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 15-08-2016 fn_EXP_camp_lobby_updateMilitaryEfficiency.sqf Campaign Lobby: Updates military efficiency radial bar Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency", "syntax": "[] call BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency"}, "BIS_fnc_EXP_camp_lobby_updatePlayers": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_updatePlayers.sqf Campaign Lobby: Updates UI based on player status changes Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayers", "syntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayers"}, "BIS_fnc_EXP_camp_lobby_updatePlayerStatus": {"version": "1.62", "tags": "", "description": "/* PROJECT: R&D AUTHOR: Endstar DATE: 18-04-2016 fn_EXP_camp_lobby_updatePlayerStatus.sqf Campaign Lobby: Updates player status Params 0: Return 0: */", "docSyntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayerStatus", "syntax": "[] call BIS_fnc_EXP_camp_lobby_updatePlayerStatus"}, "BIS_fnc_EXP_camp_manager": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Handles match start synchronization between server and clients The following states are valid: - Waiting : State is set when joining the mission - Intro : State is set when mission intro starts - Loadout : State is set when mission loadout selection starts - Started : State is set when mission gameplay starts Parameters: _introVideos: The videos directory to play, empty array leads to skipping intro videos completely _introVideosSubtitles: The subtitles files to execute for intro videos _minWaitDelay: The time to wait after waiting has been completed _minLoadoutDelay: The time to wait after loadout has been completed _maxWaitDelay: The maximum time to wait for all players during the waiting, if reached, mission is forced onto next state _maxLoadoutDelay: The maximum time to wait for all players during the loadout, mission is forced onto next state _bWantsLoadoutSelection: Whether or not to go into loadout selection, if false this is skipped _bNoCinematics: Whether to force no cinematics, these need to be handled manually then Returns: Nothing */", "docSyntax": "[] call BIS_fnc_EXP_camp_manager", "syntax": "[] call BIS_fnc_EXP_camp_manager"}, "BIS_fnc_EXP_camp_manager_getState": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Get's the mission state, can be one of \"Waiting\", \"Intro\", \"Loadout\" or \"Started\" Parameters: Nothing Returns: The mission state */", "docSyntax": "[] call BIS_fnc_EXP_camp_manager_getState", "syntax": "[] call BIS_fnc_EXP_camp_manager_getState"}, "BIS_fnc_EXP_camp_manager_onPlayerRegistered": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: A player is registered for given state Parameters: _who: The player to be registered _listId: The state corresponding list, and where given player will be added to Returns: Nothing */", "docSyntax": "[] call BIS_fnc_EXP_camp_manager_onPlayerRegistered", "syntax": "[] call BIS_fnc_EXP_camp_manager_onPlayerRegistered"}, "BIS_fnc_EXP_camp_manager_setState": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Set's the state of the mission Parameters: _state: The new mission state to set Returns: Nothing */", "docSyntax": "[] call BIS_fnc_EXP_camp_manager_setState", "syntax": "[] call BIS_fnc_EXP_camp_manager_setState"}, "BIS_fnc_EXP_camp_manager_triggerEvent": {"version": "1.62", "tags": "", "description": "/* Author: Nelson Duarte Description: Triggers corresponding event for given mission state Parameters: _state: The mission state Returns: Nothing */", "docSyntax": "[] call BIS_fnc_EXP_camp_manager_triggerEvent", "syntax": "[] call BIS_fnc_EXP_camp_manager_triggerEvent"}, "BIS_fnc_EXP_camp_playerChecklist": {"version": "1.62", "tags": "", "description": "Display a checklist of players that don't meet the given condition, thus preventing mission progress.", "example": "[{count allPlayers == 4}] call BIS_fnc_EXP_camp_playerChecklist;", "docSyntax": "[conditionProceed, conditionPlayer, code] call BIS_fnc_EXP_camp_playerChecklist", "syntax": "[conditionProceed,conditionPlayer,<code>] call BIS_fnc_EXP_camp_playerChecklist"}, "BIS_fnc_EXP_camp_playSubtitles": {"version": "1.62", "tags": "", "description": "Displays the given subtitles at the correctly defined moments. Each array added to the parameters represents one subtitle.", "example": "[ [\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go! Crossroad, out.\", 0] ] spawn BIS_fnc_EXP_camp_playSubtitles; //\u00a0Shows a subtitle immediately", "docSyntax": "[subtitleDetail1, subtitleDetail2, ...] spawn BIS_fnc_EXP_camp_playSubtitles", "syntax": "[subtitleDetail1,subtitleDetail2,...] spawn BIS_fnc_EXP_camp_playSubtitles"}, "BIS_fnc_EXP_camp_playTimelineVideo": {"version": "1.62", "tags": "", "description": "Plays a video with BIS_fnc_EXP_camp_setCinematicMode enabled.", "example": "\"someVideoPath\" call BIS_fnc_EXP_camp_playTimelineVideo;", "docSyntax": "[videoPath] call BIS_fnc_EXP_camp_playTimelineVideo", "syntax": "[videoPath] call BIS_fnc_EXP_camp_playTimelineVideo"}, "BIS_fnc_EXP_camp_replaceVehicles": {"version": "1.62", "tags": "", "description": "Replaces textures of \"I_G_Offroad_01_armed_F\" and \"I_G_Quadbike_01_F\" randomly.", "example": "call BIS_fnc_EXP_camp_replaceVehicles;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_EXP_camp_setCinematicMode": {"version": "1.62", "tags": "", "description": "Set's cinematic mode, with cinematic mode enabled the sounds are muted and screen is black.", "example": "[true,3,3] call BIS_fnc_EXP_camp_setCinematicMode;", "docSyntax": "[mode,fadeBlack,fadeSound] call BIS_fnc_EXP_camp_setCinematicMode", "syntax": "[mode,fadeBlack,fadeSound] call BIS_fnc_EXP_camp_setCinematicMode"}, "BIS_fnc_EXP_camp_setSkill": {"version": "1.62", "tags": "", "description": "Sets skill for an entire AI side. The skill will be calculated using a lerp function. Function will take player as multiplier.", "example": "[WEST,0.1,0.2,0.7,0.6] call BIS_fnc_EXP_camp_setSkill;", "docSyntax": "[side,skillMin,skillAimMin,skillMax,skillAimMax] call BIS_fnc_EXP_camp_setSkill", "syntax": "[<objSide>,skillMin,skillAimMin,skillMax,skillAimMax] call BIS_fnc_EXP_camp_setSkill"}, "BIS_fnc_EXP_camp_SITREP": {"version": "1.62", "tags": "", "description": "Displays multiple lines of text in given order.", "example": "[[\"line1\", 4, 5], [\"line2\", 3, 5, 8]] spawn BIS_fnc_EXP_camp_SITREP;", "docSyntax": "[line_1, line_2, line_n] spawn BIS_fnc_EXP_camp_SITREP", "syntax": "[line_1,line_2,line_n] spawn BIS_fnc_EXP_camp_SITREP"}, "BIS_fnc_holdActionAdd": {"version": "1.62", "tags": "", "description": "Adds an action to an object which requires the user to hold a key to perform the action.", "example": "[ player, \"Kill\", \"\", \"\", \"true\", \"true\", { hint \"Started!\" }, { systemChat str (_this select 3) }, { player setDamage 1 }, { hint \"Afraid of death?\" }, [], 10, nil, true, false ] call BIS_fnc_holdActionAdd;", "docSyntax": "[target, title, idleIcon, progressIcon, conditionShow, conditionProgress, codeStart, codeProgress, codeCompleted, codeInterrupted, arguments, duration, priority, removeCompleted, showUnconscious, showWindow] call BIS_fnc_holdActionAdd", "syntax": "[<object>,title,idleIcon,progressIcon,conditionShow,conditionProgress,codeStart,codeProgress,codeCompleted,codeInterrupted,arguments,duration,priority,removeCompleted,showUnconscious,showWindow] call BIS_fnc_holdActionAdd"}, "BIS_fnc_holdActionRemove": {"version": "1.62", "tags": "", "description": "Removes a hold action. This does exactly the same as removeAction.", "example": "[ player,10 ] call BIS_fnc_holdActionRemove;", "docSyntax": "[target,ID] call BIS_fnc_holdActionRemove", "syntax": "[<object>,<scalar>] call BIS_fnc_holdActionRemove"}, "BIS_fnc_isThrowable": {"version": "1.62", "tags": "", "description": "Returns true if given magazine is throwable", "example": "_isThrowable = \"SmokeShellGreen\" call BIS_fnc_isThrowable;", "docSyntax": "magazine call BIS_fnc_isThrowable", "syntax": "<string> call BIS_fnc_isThrowable"}, "BIS_fnc_replaceWithSimpleObject": {"version": "1.62", "tags": "", "description": "Replaces a normal object with a Simple Object. Object must not contain any crew and must be placed on the ground.", "example": "[tank] call BIS_fnc_replaceWithSimpleObject;", "docSyntax": "[object] call BIS_fnc_replaceWithSimpleObject", "syntax": "[<object>] call BIS_fnc_replaceWithSimpleObject"}, "BIS_fnc_simpleObjectData": {"version": "1.62", "tags": "", "description": "Get complete data needed for simple object creation.", "example": "[\"B_Boat_Armed_01_minigun_F\"] call BIS_fnc_simpleObjectData;", "docSyntax": "[classname] call BIS_fnc_simpleObjectData", "syntax": "[classname] call BIS_fnc_simpleObjectData"}, "canVehicleCargo": {"version": "1.62", "tags": "", "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle", "example": "Blackfish with no vehicle cargo loaded _result = blackfish canVehicleCargo offroad; //[true, true]", "docSyntax": "vehicle canVehicleCargo cargo", "syntax": "<objVehicle> canVehicleCargo <objVehicle>"}, "createMPCampaignDisplay": {"version": "1.62", "tags": "", "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; for example, configFile\u00a0>>\u00a0\"CfgMissions\"\u00a0>>\u00a0\"MPMissions\"\u00a0>>\u00a0\"Apex\"", "example": "findDisplay 46 createMPCampaignDisplay \"Apex\";", "docSyntax": "display createMPCampaignDisplay class", "syntax": "<uiDisplay> createMPCampaignDisplay class"}, "ctrlSetAngle": {"version": "1.62", "tags": "", "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Only requires ctrlCommit when fourth parameter is set to false. Procedural textures filled controls do not rotate.", "example": "_control ctrlSetAngle [25, 0.5, 0.5];", "docSyntax": "control ctrlSetAngle [angle, centerX, centerY, now]", "syntax": "<uiControl> ctrlSetAngle [angle,centerX,centerY,now]"}, "ctrlSetFontHeightSecondary": {"version": "1.62", "tags": "", "description": "Sets the font size of the secondary text of given control.", "example": "_control ctrlSetFontHeightSecondary 0.05;", "docSyntax": "ctrl ctrlSetFontHeightSecondary value", "syntax": "<uiControl> ctrlSetFontHeightSecondary <scalar>"}, "ctrlSetFontSecondary": {"version": "1.62", "tags": "", "description": "Sets the font size of the secondary text of given control.", "example": "_control ctrlSetFontSecondary \"TahomaB\";", "docSyntax": "ctrl ctrlSetFontSecondary fontClass", "syntax": "<uiControl> ctrlSetFontSecondary fontClass"}, "enableAimPrecision": {"version": "1.62", "tags": "", "description": "Set whether animation's aim precision affects weapon sway.", "example": "player enableAimPrecision false;", "docSyntax": "unit enableAimPrecision enable", "syntax": "<objUnit> enableAimPrecision <bool>"}, "enableVehicleCargo": {"version": "1.62", "tags": "", "description": "Enable/disable option to transport other vehicles (if configured) or be transported.", "example": "vehicle enableVehicleCargo true;", "docSyntax": "vehicle enableVehicleCargo enable", "syntax": "<objVehicle> enableVehicleCargo <bool>"}, "flyInHeightASL": {"version": "1.62", "tags": "", "description": "Sets the minimal ASL height. Final height is flyInHeight max flyInHeightASL - the higher altitude has priority.", "example": "cobraOne flyInHeightASL [200, 100, 400];", "docSyntax": "aircraft flyInHeightASL [standardAltitude, combatAltitude, stealthAltitude]", "syntax": "aircraft flyInHeightASL [standardAltitude,combatAltitude,stealthAltitude]"}, "forcedMap": {"version": "1.62", "tags": "", "description": "Returns if map was forced by using forceMap command or openMap command with force option", "example": "_forceMapForced = forcedMap select 0; _openMapForced = forcedMap select 1;", "docSyntax": "forcedMap", "syntax": "forcedMap"}, "getAimingCoef": {"version": "1.62", "tags": "", "description": "Get current aiming coefficient (higher ~ less precise, default is 1)", "example": "_coef = getAimingCoef player", "docSyntax": "getAimingCoef unit", "syntax": "getAimingCoef <objUnit>"}, "getAllOwnedMines": {"version": "1.62", "tags": "", "description": "Gets all mine objects this unit has ownership over.", "example": "_mines = getAllOwnedMines player;", "docSyntax": "getAllOwnedMines unit", "syntax": "getAllOwnedMines <objUnit>"}, "getContainerMaxLoad": {"version": "1.62", "tags": "", "description": "Returns max load value of given uniform, vest or backpack container. For other types of containers, use maxLoad command", "example": "_maxLoadUniform = getContainerMaxLoad uniform player; _maxLoadVest = getContainerMaxLoad vest player; _maxLoadBackpack = getContainerMaxLoad backpack player;", "docSyntax": "getContainerMaxLoad containerClass", "syntax": "getContainerMaxLoad containerClass"}, "getMissionDLCs": {"version": "1.62", "tags": "", "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and does not detect units created by scripts!", "example": "_usedDLCs = getMissionDLCs;", "docSyntax": "getMissionDLCs", "syntax": "getMissionDLCs"}, "getShotParents": {"version": "1.62", "tags": "", "description": "Returns shot information for the given projectile. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.", "example": "_shotParents = getShotParents myProjectile;", "docSyntax": "getShotParents projectile", "syntax": "getShotParents projectile"}, "getVehicleCargo": {"version": "1.62", "tags": "", "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.", "example": "_vehicleCargo = getVehicleCargo blackfish; // returns [] if empty", "docSyntax": "getVehicleCargo storingVehicle", "syntax": "getVehicleCargo storingVehicle"}, "getWeaponSway": {"version": "1.62", "tags": "", "description": "Returns current size of weapon sway of a given unit, in radians.", "example": "_sway = getWeaponSway player;", "docSyntax": "getWeaponSway unit", "syntax": "getWeaponSway <objUnit>"}, "isVehicleCargo": {"version": "1.62", "tags": "", "description": "Despite a misleading name, returns the vehicle that is transporting given vehicle in cargo. If the given vehicle is not in vehicle cargo, objNull is returned.", "example": "Blackfish with given variable name blackfish, with a vehicle inside called quad _transportingVehicle = isVehicleCargo quad; //returns blackfish", "docSyntax": "isVehicleCargo cargo", "syntax": "isVehicleCargo <objVehicle>"}, "missionDifficulty": {"version": "1.62", "tags": "", "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it is used one from player's options.", "example": "_number = missionDifficulty;", "docSyntax": "missionDifficulty", "syntax": "missionDifficulty"}, "modParams": {"version": "1.62", "tags": "", "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options are:", "example": "_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];", "docSyntax": "modParams [modClass, options]", "syntax": "modParams [modClass,options]"}, "openDLCPage": {"version": "1.62", "tags": "", "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)", "example": "openDLCPage 288520", "docSyntax": "openDLCPage dlcID", "syntax": "openDLCPage dlcID"}, "pixelGridBase": {"version": "1.62", "tags": "", "description": "Returns grid size based on screen resolution.", "example": "_gridBaseHeight = pixelH * pixelGridBase;", "docSyntax": "pixelGridBase", "syntax": "pixelGridBase"}, "pixelGridNoUIScale": {"version": "1.62", "tags": "", "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids. As mentioned in the name of this command, the user interface scale is ignored.", "example": "_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;", "docSyntax": "pixelGridNoUIScale", "syntax": "pixelGridNoUIScale"}, "removeAllOwnedMines": {"version": "1.62", "tags": "", "description": "Removes ownership of all owned mines/explosive devices of the given unit", "example": "removeAllOwnedMines player;", "docSyntax": "removeAllOwnedMines unit", "syntax": "removeAllOwnedMines <objUnit>"}, "removeOwnedMine": {"version": "1.62", "tags": "", "description": "Removes ownership over a remotely detonatable mine from the unit.", "example": "player removeOwnedMine SuperMine;", "docSyntax": "unit removeOwnedMine mine", "syntax": "<objUnit> removeOwnedMine mine"}, "setVehicleCargo": {"version": "1.62", "tags": "", "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded. Can also be used to unload a specific loaded vehicle or all loaded vehicles.", "example": "Blackfish with no vehicle cargo loaded _success = blackfish setVehicleCargo offroad; //\u00a0true", "docSyntax": "vehicle setVehicleCargo cargo", "syntax": "<objVehicle> setVehicleCargo <objVehicle>"}, "tvSetPictureColorDisabled": {"version": "1.62", "tags": "", "description": "Sets the color of left picture of a tree item defined by path when item is disabled", "example": "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureColorDisabled [path, color]", "syntax": "<uiControl> tvSetPictureColorDisabled [path,<scalar>]"}, "tvSetPictureColorSelected": {"version": "1.62", "tags": "", "description": "Sets the color of the left picture of a tree item defined by path when item is selected", "example": "_control tvSetPictureColorSelected [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureColorSelected [path, color]", "syntax": "<uiControl> tvSetPictureColorSelected [path,<scalar>]"}, "tvSetPictureRight": {"version": "1.62", "tags": "", "description": "Sets right picture on the tree view item defined by path.", "example": "tvSetPictureRight [101, [0], \"picture\"];", "docSyntax": "tvSetPictureRight [idc, path, name]", "syntax": "tvSetPictureRight [<scalar>,path,<string>]"}, "tvSetPictureRightColor": {"version": "1.62", "tags": "", "description": "Sets color of the right picture on the tree view item defined by path", "example": "tvSetPictureRightColor [101, [0], [1,0,1,1]];", "docSyntax": "tvSetPictureRightColor [idc, path, color]", "syntax": "tvSetPictureRightColor [<scalar>,path,<scalar>]"}, "tvSetPictureRightColorDisabled": {"version": "1.62", "tags": "", "description": "Sets the color of the right picture of a tree item defined by path when item is disabled", "example": "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureRightColorDisabled [path, color]", "syntax": "<uiControl> tvSetPictureRightColorDisabled [path,<scalar>]"}, "tvSetPictureRightColorSelected": {"version": "1.62", "tags": "", "description": "Sets the color of the right picture of a tree item defined by path when item is selected", "example": "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]", "docSyntax": "control tvSetPictureRightColorSelected [path, color]", "syntax": "<uiControl> tvSetPictureRightColorSelected [path,<scalar>]"}, "vehicleCargoEnabled": {"version": "1.62", "tags": "", "description": "Check if the vehicle has enabled transporting other vehicles or not.", "example": "Blackfish (Vehicle Transport) with given variable name blackfish _canTransportVehicles = vehicleCargoEnabled blackfish; //returns true", "docSyntax": "vehicleCargoEnabled vehicle", "syntax": "vehicleCargoEnabled <objVehicle>"}, "actionIDs": {"version": "1.64", "tags": "", "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.", "example": "_actions = actionIDs player;", "docSyntax": "actionIDs entity", "syntax": "actionIDs entity"}, "actionParams": {"version": "1.64", "tags": "", "description": "Returns Array with params for given user action id (similar to addAction param array).", "example": "_params = player actionParams 0;", "docSyntax": "entity actionParams id", "syntax": "entity actionParams <scalar>"}, "BIS_fnc_switchLamp": {"version": "1.64", "tags": "", "description": "Switch streetlamp on/off.", "example": "//\u00a0switches all lamps off in a radius of 200m private _lampsIn200m = nearestObjects [player, [\"Lamps_base_F\", \"PowerLines_base_F\", \"PowerLines_Small_base_F\"], 200]; { [_x, false] call BIS_fnc_switchLamp; } forEach _lampsIn200m;", "docSyntax": "[object, state] call BIS_fnc_switchLamp", "syntax": "[<object>,state] call BIS_fnc_switchLamp"}, "diag_activeScripts": {"version": "1.64", "tags": "", "description": "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]", "example": "hint str diag_activeScripts; //[0,0,0,1]", "docSyntax": "diag_activeScripts", "syntax": "diag_activeScripts", "type": "diagnoseStatement"}, "enableAudioFeature": {"version": "1.64", "tags": "", "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\".", "example": "prevState = enableAudioFeature [\"lowpass\", true];", "docSyntax": "enableAudioFeature [feature, enable]", "syntax": "enableAudioFeature [feature,<bool>]"}, "forceFollowRoad": {"version": "1.64", "tags": "", "description": "Forces the vehicle to stay on road.", "example": "car forceFollowRoad true;", "docSyntax": "vehicle forceFollowRoad state", "syntax": "<objVehicle> forceFollowRoad state"}, "getAllEnvSoundControllers": {"version": "1.64", "tags": "", "description": "Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds.", "example": "getAllEnvSoundControllers position player; /* returns e.g [ [\"rain\",0], [\"night\",0], [\"windy\",0.161588], ... ] */", "docSyntax": "getAllEnvSoundControllers position", "syntax": "getAllEnvSoundControllers position"}, "getAllSoundControllers": {"version": "1.64", "tags": "", "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.", "example": "getAllSoundControllers vehicle player; /* returns e.g [ [\"rpm\",0], [\"randomizer\",0.874332], [\"speed\",0], [\"thrust\",0], ... ] */", "docSyntax": "getAllSoundControllers vehicle", "syntax": "getAllSoundControllers <objVehicle>"}, "getEnvSoundController": {"version": "1.64", "tags": "", "description": "Returns value of the specified controller, see getAllEnvSoundControllers", "example": "position player getEnvSoundController \"trees\"; //0.3333", "docSyntax": "position getEnvSoundController controller", "syntax": "position getEnvSoundController controller"}, "getPilotCameraDirection": {"version": "1.64", "tags": "", "description": "Returns model space vector of the object airplane or helicopter pilotCamera .", "example": "_pilotCamVector = getPilotCameraDirection vehicle player", "docSyntax": "getPilotCameraDirection object", "syntax": "getPilotCameraDirection <object>"}, "getPilotCameraPosition": {"version": "1.64", "tags": "", "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .", "example": "_pilotCamPos = getPilotCameraPosition vehicle player", "docSyntax": "getPilotCameraPosition object", "syntax": "getPilotCameraPosition <object>"}, "getPilotCameraRotation": {"version": "1.64", "tags": "", "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "example": "_pilotCamRot = getPilotCameraRotation vehicle player", "docSyntax": "getPilotCameraRotation object", "syntax": "getPilotCameraRotation <object>"}, "getPilotCameraTarget": {"version": "1.64", "tags": "", "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.", "example": "getPilotCameraTarget params [\"_pilotCamTracking\", \"_pilotCamTargetPos\", \"_pilotCamTarget\"];", "docSyntax": "getPilotCameraTarget object", "syntax": "getPilotCameraTarget <object>"}, "getSoundController": {"version": "1.64", "tags": "", "description": "Returns value of the given sound controller.", "example": "vehicle player getSoundController \"rpm\"; //600", "docSyntax": "vehicle getSoundController controller", "syntax": "<objVehicle> getSoundController controller"}, "getSoundControllerResult": {"version": "1.64", "tags": "", "description": "Returns the calculated value of simple expression defined in config. Config could be any config entry, even mission config entry. It is more important that the vehicle is a transport and not any object. If the expression contains sound controllers, the controller values will be taken from the given vehicle.", "example": "_result = (vehicle player) getSoundControllerResult (configFile >> \"cfgVehicles\" >> typeOf (vehicle player) >> \"sounds\" >> \"idle_ext\" >> \"volume\");", "docSyntax": "vehicle getSoundControllerResult config", "syntax": "<objVehicle> getSoundControllerResult config"}, "hasPilotCamera": {"version": "1.64", "tags": "", "description": "Returns true if the object airplane or helicopter has a pilotCamera.", "example": "hasPilotCamera vehicle player", "docSyntax": "hasPilotCamera object", "syntax": "hasPilotCamera <object>"}, "setPilotCameraDirection": {"version": "1.64", "tags": "", "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).", "example": "vehicle player setPilotCameraDirection [0,1,0] //re-centers the camera", "docSyntax": "object setPilotCameraDirection Vector3D", "syntax": "<object> setPilotCameraDirection Vector3D"}, "setPilotCameraRotation": {"version": "1.64", "tags": "", "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "example": "vehicle player setPilotCameraRotation [rad 90, rad 45]", "docSyntax": "object setPilotCameraRotation rotation", "syntax": "<object> setPilotCameraRotation <array>"}, "setPilotCameraTarget": {"version": "1.64", "tags": "", "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. To track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type. Using objNull will unlock the camera", "example": "_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];", "docSyntax": "object setPilotCameraTarget target", "syntax": "<object> setPilotCameraTarget <object>"}, "unitAimPosition": {"version": "1.64", "tags": "", "description": "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.", "example": "unitAimPosition player;", "docSyntax": "unitAimPosition unit", "syntax": "unitAimPosition <objUnit>"}, "unitAimPositionVisual": {"version": "1.64", "tags": "", "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.", "example": "unitAimPositionVisual player;", "docSyntax": "unitAimPositionVisual unit", "syntax": "unitAimPositionVisual <objUnit>"}, "unitIsUAV": {"version": "1.64", "tags": "", "description": "Returns whether or not the given object is an UAV, UGV (drone). Command will also return true for empty drones. Corresponding to transport parameter isUAV.", "example": "_isUAV = unitIsUAV _vehicle;", "docSyntax": "unitIsUAV object", "syntax": "unitIsUAV <object>"}, "useAIOperMapObstructionTest": {"version": "1.64", "tags": "", "description": "Toggle secondary obstruction test on road paths.", "example": "useAIOperMapObstructionTest true;", "docSyntax": "useAIOperMapObstructionTest state", "syntax": "useAIOperMapObstructionTest state"}, "visibleScoretable": {"version": "1.64", "tags": "", "description": "Checks whether the score table is visible.", "example": "_visible = visibleScoretable;", "docSyntax": "visibleScoretable", "syntax": "visibleScoretable"}, "BIS_fnc_attachToRelative": {"version": "1.66", "tags": "", "description": "Attaches object 1 to object 2, while preserving object 1 initial position and orientation against object 2", "example": "[tank, car] call BIS_fnc_attachToRelative;", "docSyntax": "[object1, object2, visual] call BIS_fnc_attachToRelative", "syntax": "[object1,object2,visual] call BIS_fnc_attachToRelative"}, "BIS_fnc_vectorDirAndUpRelative": {"version": "1.66", "tags": "", "description": "Returns vectorDirAndUp of object 1 relative to object 2", "example": "_vectorDirAndUp = [tank, car] call BIS_fnc_vectorDirAndUpRelative;", "docSyntax": "[object1, object2, visual] call BIS_fnc_vectorDirAndUpRelative", "syntax": "[object1,object2,visual] call BIS_fnc_vectorDirAndUpRelative"}, "BIS_fnc_weaponDirectionRelative": {"version": "1.66", "tags": "", "description": "Returns relative direction vector of given weapon for the given vehicle", "example": "_relweapondir = [tank, \"cannon_105mm\"] call BIS_fnc_weaponDirectionRelative;", "docSyntax": "[vehicle, weapon visual] call BIS_fnc_weaponDirectionRelative", "syntax": "[<objVehicle>,<string> visual] call BIS_fnc_weaponDirectionRelative"}, "inAreaArray": {"version": "1.66", "tags": "", "description": "Returns given list of Objects and/or Positions that are in the given area, area defined by a trigger, marker, location or array.", "example": "vehicles inAreaArray myTrigger;", "docSyntax": "positions inAreaArray area", "syntax": "positions inAreaArray area"}, "isMultiplayerSolo": {"version": "1.66", "tags": "", "description": "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).", "example": "_state = isMultiplayerSolo;", "docSyntax": "isMultiplayerSolo", "syntax": "isMultiplayerSolo"}, "isRemoteExecuted": {"version": "1.66", "tags": "", "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP", "example": "_remoteExecuted = isRemoteExecuted;", "docSyntax": "isRemoteExecuted", "syntax": "isRemoteExecuted"}, "selectMax": {"version": "1.66", "tags": "", "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0.", "example": "_max = selectMax [1,2,3,4,5]; //5", "docSyntax": "selectMax array", "syntax": "selectMax <array>"}, "selectMin": {"version": "1.66", "tags": "", "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0.", "example": "_min = selectMin [1,2,3,4,5]; //1", "docSyntax": "selectMin array", "syntax": "selectMin <array>"}, "setShotParents": {"version": "1.66", "tags": "", "description": "Sets vehicle and instigator pair for the given projectile.", "example": "myProjectile setShotParents [vehicle bob, bob];", "docSyntax": "projectile setShotParents [vehicle, instigator]", "syntax": "projectile setShotParents [<objVehicle>,instigator]"}, "toFixed": {"version": "1.66", "tags": "", "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()", "example": "123 toFixed 2; //\u00a0\"123.00\"", "docSyntax": "number toFixed decimals", "syntax": "<scalar> toFixed decimals"}, "BIS_fnc_drawArrow": {"version": "1.74", "tags": "", "description": "Draws a static arrow (outline or color filled) on map. See Example 4 for arrow removal.", "example": "Draw a semi-transparent, blue arrow with default geometry:myArrow1 = [_pos1, _pos2, [0,0,1,0.5]] call BIS_fnc_drawArrow;", "docSyntax": "[from, to, color, pars, fill, map] call BIS_fnc_drawArrow", "syntax": "[from,to,<scalar>,pars,fill,<objMap>] call BIS_fnc_drawArrow"}, "BIS_fnc_fire": {"version": "1.74", "tags": "", "description": "Makes a unit or a vehicle fire given muzzle. Make sure that there is some ammo to fire, and, in case of a unit, the weapon with given muzzle is already selected. It can be used to fire pretty much any muzzle on unit or vehicle from anywhere. Available weapons could usually be found with weapons, weaponsTurret and allTurrets commands.", "example": "marshall = \"B_APC_Wheeled_01_cannon_F\" createVehicle position player; createVehicleCrew marshall; [marshall, \"HE\"] call BIS_fnc_fire; //\u00a0fires HE muzzle of the main cannon [marshall, \"AP\"] call BIS_fnc_fire; //\u00a0fires AP muzzle of the main cannon [marshall, \"autocannon_40mm_CTWS\"] call BIS_fnc_fire; //\u00a0fires HE muzzle, because it is default [marshall, \"LMG_M200_body\"] call BIS_fnc_fire; //\u00a0fires machine gun [marshall, \"SmokeLauncher\"] call BIS_fnc_fire; //\u00a0fires smoke launcher [marshall, \"TruckHorn\"] call BIS_fnc_fire; //\u00a0beeps the horn", "docSyntax": "[entity, muzzle, turret] call BIS_fnc_fire", "syntax": "[entity,muzzle,turret] call BIS_fnc_fire"}, "getCustomSoundController": {"version": "1.86", "tags": "", "description": "Returns current value set to the controller (see setCustomSoundController)", "example": "getCustomSoundController [vehicle player, \"CustomSoundController1\"];", "docSyntax": "getCustomSoundController [vehicle, controller]", "syntax": "getCustomSoundController [<objVehicle>,controller]"}, "getCustomSoundControllerCount": {"version": "1.86", "tags": "", "description": "Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)", "example": "getCustomSoundControllerCount vehicle player;", "docSyntax": "getCustomSoundControllerCount vehicle", "syntax": "getCustomSoundControllerCount <objVehicle>"}, "setCustomSoundController": {"version": "1.86", "tags": "", "description": "Sets value of the specified custom sound controller to be used in simple expressions in config. Returns true if value was set to the controller, false if command fails, for example if vehicle is not a transport or controller name is not recognised.", "example": "Change value of CustomSoundController1 to 12setCustomSoundController [vehicle player, \"CustomSoundController1\", 12];", "docSyntax": "setCustomSoundController [vehicle, controller, value]", "syntax": "setCustomSoundController [<objVehicle>,controller,<scalar>]"}, "bezierInterpolation": {"version": "1.92", "tags": "", "description": "Gets interpolated value based on B\u00e9zier curve with given control points (progress value is 0...1 for a curve that starts at pos0 and finishes at posN)", "example": "Quick demonstration that spawns some spheres around player object:for \"_i\" from 0 to 1 step 0.05 do { createVehicle [\"Sign_Sphere10cm_F\",(_i bezierInterpolation [ player modelToWorld [0,0,0], player modelToWorld [0,2,2], player modelToWorld [2,0,2], player modelToWorld [0,0,4] ]),[],0,\"CAN_COLLIDE\"]; };", "docSyntax": "progress bezierInterpolation [pos0, pos1,... posN]", "syntax": "progress bezierInterpolation [pos0,pos1,... posN]"}, "BIS_fnc_mapGridSize": {"version": "1.92", "tags": "", "description": "Returns the size of map grid square at current zoom level.", "example": "_gridSize = [] call BIS_fnc_mapGridSize;", "docSyntax": "[map] call BIS_fnc_mapGridSize", "syntax": "[<objMap>] call BIS_fnc_mapGridSize"}, "BIS_fnc_markerToString": {"version": "1.92", "tags": "", "description": "Converts existing marker to String, for example: \"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\"", "example": "\"marker1\" call BIS_fnc_markerToString", "docSyntax": "markerName call BIS_fnc_markerToString", "syntax": "<string> call BIS_fnc_markerToString"}, "BIS_fnc_stringToMarker": {"version": "1.92", "tags": "", "description": "Converts serialized data from BIS_fnc_markerToString into a global map marker", "example": "\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\" call BIS_fnc_stringToMarker", "docSyntax": "data call BIS_fnc_stringToMarker", "syntax": "data call BIS_fnc_stringToMarker"}, "BIS_fnc_stringToMarkerLocal": {"version": "1.92", "tags": "", "description": "Converts serialized data from BIS_fnc_markerToString into a local map marker", "example": "\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\" call BIS_fnc_stringToMarkerLocal", "docSyntax": "data call BIS_fnc_stringToMarkerLocal", "syntax": "data call BIS_fnc_stringToMarkerLocal"}, "ctrlSetPositionH": {"version": "1.92", "tags": "", "description": "Sets the height of a 2D control. ctrlCommit is required to complete the operation.", "example": "_ctrl ctrlSetPositionH 0.5; _ctrl ctrlCommit 1;", "docSyntax": "control ctrlSetPositionH h", "syntax": "<uiControl> ctrlSetPositionH h"}, "ctrlSetPositionW": {"version": "1.92", "tags": "", "description": "Sets the width of a 2D control. ctrlCommit is required to complete the operation.", "example": "_ctrl ctrlSetPositionW 0.5; _ctrl ctrlCommit 1;", "docSyntax": "control ctrlSetPositionW w", "syntax": "<uiControl> ctrlSetPositionW w"}, "ctrlSetPositionX": {"version": "1.92", "tags": "", "description": "Sets horizontal position (x) of the 2D control. ctrlCommit is required to complete the operation.", "example": "_ctrl ctrlSetPositionX 0.5; _ctrl ctrlCommit 1;", "docSyntax": "control ctrlSetPositionX x", "syntax": "<uiControl> ctrlSetPositionX x"}, "ctrlSetPositionY": {"version": "1.92", "tags": "", "description": "Sets vertical position (y) of a 2D control. ctrlCommit is required to complete the operation.", "example": "_ctrl ctrlSetPositionY 0.5; _ctrl ctrlCommit 1;", "docSyntax": "control ctrlSetPositionY y", "syntax": "<uiControl> ctrlSetPositionY y"}, "customWaypointPosition": {"version": "1.92", "tags": "", "description": "Returns player's custom waypoint (LShift + LMB) Position or an empty array [] if no custom waypoint exists.", "example": "customWaypointPosition", "docSyntax": "customWaypointPosition", "syntax": "customWaypointPosition"}, "decayGraphValues": {"version": "1.92", "tags": "", "description": "Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound.", "example": "decayGraphValues [[1,2,3,4,5], [1,4,9,16,25], 0.3]; //\u00a0returns [1,2,3,4.8,7.5]", "docSyntax": "decayGraphValues [lowerBoundValues, graphValues, coef]", "syntax": "decayGraphValues [lowerBoundValues,graphValues,<scalar>]"}, "getGraphValues": {"version": "1.92", "tags": "", "description": "Generate graph y - coordinates of all input values within specific x and y range.", "example": "private _minX = 0; private _maxX = 10; private _minY = 0; private _maxY = 100; private _count = 11; private _random = 0; getGraphValues [ [_minX, _maxX, _minY, _maxY, _count, _random], 0, 5, 1, 10, 2, 100, 3, 50, 4, 30, 5, 100, 6, 10, 7, 50, 8, 75, 9, 100, 10, 100 ]; /* returns [[0.05, 0.1, 1, 0.5, 0.3, 1, 0.1, 0.5, 0.75, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]] supposedly [array of 1-based Y values, array of X values] */", "docSyntax": "getGraphValues [[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2, ... xn, yn]", "syntax": "getGraphValues [[graphMinX,graphMaxX,graphMinY,graphMaxY,valueCount,randomOffset],x1,y1,x2,y2,... xn,yn]"}, "matrixMultiply": {"version": "1.92", "tags": "", "description": "Returns resulting matrix from the multiplication of two matrices. First matrix must be of the size n \u2715 k, while the second must be of the size k \u2715 m, i.e columns matrix1 == rows matrix2. The resulting matrix will be of the size n \u2715 m. If the shapes do not match, empty array [] will be returned.", "example": "[ [2], [2] ] matrixMultiply [ [3] ] /* returns [ [6], [6] ] */", "docSyntax": "matrix1 matrixMultiply matrix2", "syntax": "matrix1 matrixMultiply matrix2"}, "matrixTranspose": {"version": "1.92", "tags": "", "description": "Matrix transposition", "example": "matrixTranspose [ [1,2,3], [3,1,2], [2,3,1] ]; /* returns [ [1,3,2], [2,1,3], [3,2,1] ] */", "docSyntax": "matrixTranspose matrix", "syntax": "matrixTranspose matrix"}, "missileTarget": {"version": "1.92", "tags": "", "description": "Returns a guided missile's target.", "example": "missileTarget missile1;", "docSyntax": "missileTarget munition", "syntax": "missileTarget munition"}, "missileTargetPos": {"version": "1.92", "tags": "", "description": "Returns a guided missile's target position.", "example": "_pos = missileTargetPos missile1;", "docSyntax": "missileTargetPos munition", "syntax": "missileTargetPos munition"}, "setBehaviourStrong": {"version": "1.92", "tags": "", "description": "Sets individual unit behaviour on every unit in a group and additionally tries to force this behaviour to the unit's group. Alternatively see setCombatBehaviour.", "example": "_group1 setBehaviourStrong \"SAFE\";", "docSyntax": "groupName setBehaviourStrong behaviour", "syntax": "groupName setBehaviourStrong behaviour"}, "setMissileTarget": {"version": "1.92", "tags": "", "description": "Sets a guided missile target. Doesn't work for all types of missiles. If target is dead, target is ignored. The target has to be inside configured missile targeting cone for command to work.", "example": "missile1 setMissileTarget tank1;", "docSyntax": "munition setMissileTarget target", "syntax": "munition setMissileTarget <object>"}, "setMissileTargetPos": {"version": "1.92", "tags": "", "description": "Sets a guided munition target position. The munition must have manualControl config to use this command. The target position has to be inside configured missile targeting cone for command to work.", "example": "missile1 setMissileTargetPos unitAimPosition tank1;", "docSyntax": "munition setMissileTargetPos position", "syntax": "munition setMissileTargetPos position"}, "triggerAmmo": {"version": "1.92", "tags": "", "description": "Triggers a munition such as shells, bullets, missiles, rockets and bombs (shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket) as if it did hit. If ammo uses submunition, then creation of submunition will be triggered.", "example": "triggerAmmo bomb1", "docSyntax": "triggerAmmo munition", "syntax": "triggerAmmo munition"}, "vectorLinearConversion": {"version": "1.92", "tags": "", "description": "Interpolates vector between the given vectorFrom and vectorTo value according to the given range value.", "example": "vectorLinearConversion [0, 1, 0.5, [0,0,0], [25,50,100], false]; //\u00a0[12.5,25,50]", "docSyntax": "vectorLinearConversion [rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]", "syntax": "vectorLinearConversion [rangeFrom,rangeTo,rangeValue,vectorFrom,vectorTo,clip]"}, "BIS_fnc_turretConfig": {"version": "1.94", "tags": "", "description": "Returns vehicle turret config for the turret given by the turret path.", "example": "getNumber ([\"B_APC_Wheeled_01_cannon_F\", [0,0]] call BIS_fnc_turretConfig >> \"hasGunner\") > 0;", "docSyntax": "[vehicle, turret] call BIS_fnc_turretConfig", "syntax": "[<objVehicle>,turret] call BIS_fnc_turretConfig"}, "BIS_fnc_vehicleCrewTurrets": {"version": "1.94", "tags": "", "description": "Returns vehicle crew turrets, which will be filled with crew if createVehicleCrew command is executed on the vehicle. If vehicle class is passed as param, all vehicle crew turrets are returned.", "example": "\"B_APC_Wheeled_01_cannon_F\" call BIS_fnc_vehicleCrewTurrets;", "docSyntax": "vehicle call BIS_fnc_vehicleCrewTurrets", "syntax": "<objVehicle> call BIS_fnc_vehicleCrewTurrets"}, "lnbSetTooltip": {"version": "1.94", "tags": "", "description": "Sets tooltip on the item with the given row and column of CT_LISTNBOX.", "example": "lnbSetTooltip [1234, [1,0], \"tip\"];", "docSyntax": "lnbSetTooltip [idc, [row, column], text]", "syntax": "lnbSetTooltip [<scalar>,[<scalar>,<scalar>],<string>]"}, "addWeaponWithAttachmentsCargo": {"version": "1.94", "tags": "", "description": "Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.", "example": "cursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];", "docSyntax": "container addWeaponWithAttachmentsCargo [weaponConfiguration, weaponsCount]", "syntax": "container addWeaponWithAttachmentsCargo [weaponConfiguration,weaponsCount]"}, "addWeaponWithAttachmentsCargoGlobal": {"version": "1.94", "tags": "", "description": "Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.", "example": "cursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];", "docSyntax": "container addWeaponWithAttachmentsCargoGlobal [weaponConfiguration, weaponsCount]", "syntax": "container addWeaponWithAttachmentsCargoGlobal [weaponConfiguration,weaponsCount]"}, "BIN_fnc_addButtonEvents": {"version": "1.94", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addDangerZone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addEntitiesToArea": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addFaradayCage": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addIDWMapMeasurementPoint": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Adds measurement point to IDWMap Parameter(s): ARRAY (Optional) - position in format [x,y] or [x,y,z] in which case z is ignored. Default: position player Returns: NUMBER 0 ... 1 - strength at given coordinates -1 - point is out of bounds -999 - error Example: call BIN_fnc_addIDWMapMeasurementPoint [x,y] call BIN_fnc_addIDWMapMeasurementPoint [x,y,z] call BIN_fnc_addIDWMapMeasurementPoint */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addObjectsToArea": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Adds given array of objects to area, ovewriting previous objects data stored for the area in extension Parameter(s): 0: STRING - area name 1: ARRAY - array of objects to add Returns: NUMBER - number of objects added Example: [\"myArea\", [obj1,ob2,...]] call BIN_fnc_addObjectsToArea */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addRecordedSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addRotation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addSiteEntities": {"version": "1.94", "tags": "", "description": "/* Description: Register entities to a site, so they can be despawned with the rest when player leaves the area. Parameter(s): 0: OBJECT - site logic. The site must be spawned for the function to work. 1: ARRAY - entities to be added. Types can be mixed, the system will sort them out itself. Returns: BOOL - true if added */ #define ADD(ID)\\ (_entities select ID) pushback _x;\\ (_entityIDs select ID) pushback -1;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addTranslation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_addTravelPoint": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_allIDWMapMeasurementPoints": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Retrieves user measurements data with strengths Parameter(s): NONE Returns: ARRAY - user measurements in format [x,y,strength] or empty array [] on error Example: call BIN_fnc_getAllMeasurementPoints */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_allowAntennaReveal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_allowedAntennaReveal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_animateSmooth": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_assignAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_assignedAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_attachChemlight": {"version": "1.94", "tags": "", "description": "#define VAR_LIGHT \"BIN_fnc_attachChemlight_light\" #define VAR_KILLED \"BIN_fnc_attachChemlight_killed\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bakeAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_behaviorInit": {"version": "1.94", "tags": "", "description": "#define HISTORY_CAPACITY 5 #define HIT_DELAY 5 #define SIZE_COEF 3", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezier": {"version": "1.94", "tags": "", "description": "/* Description: Calculate bezier curve Parameter(s): 0: ARRAY - list of control points in format [x,y,z], can be any number of them 1: NUMBER - progress in range 0 to 1 Returns: ARRAY - position curve in format [x,y,z] */ #define NEW #ifdef NEW", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezierAverage": {"version": "1.94", "tags": "", "description": "#define STEPS 101", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezierBoundingBox": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezierEditor": {"version": "1.94", "tags": "", "description": "#define POINT_W (0.03) #define POINT_H (POINT_W / 0.75) #define RESOLUTION 50 #define MAX_POINTS 16 #define GRIDS 10 #define REFRESH ([_ctrlParent] call (_ctrlArea getvariable \"fnc_draw\")) #define POINTS (_ctrlArea getvariable \"points\") #define LINES (_ctrlArea getvariable \"lines\") #define CURVE (_ctrlArea getvariable \"curve\") #define BUTTONS (_ctrlArea getvariable \"buttons\") #define HOVER (_ctrlArea getvariable \"hover\") #define SELECTED (_ctrlArea getvariable \"selected\") #define SET_HOVER(CTRL) _ctrlArea setvariable [\"hover\",CTRL]; CTRL ctrlsettextcolor COLOR_SELECTED #define SET_SELECTED(CTRL) _ctrlArea setvariable [\"selected\",CTRL] #define COLOR_BACKGROUND [0.4,0.4,0.4,1] #define COLOR [0,0,0,1] #define COLOR_SELECTED [1,1,1,1] #define COLOR_CURVE [1,0,0,1] #define COLOR_LINE [0,0,0,0.2] #define COLOR_TIMELINE [1,1,1,1] #define COLOR_GRID [1,1,1,0.3] #define POINT_POS [\\ (_posX - POINT_W / 2) max 0 min ((ctrlposition _ctrlArea select 2) - POINT_W),\\ (_posY - POINT_H / 2) max 0 min ((ctrlposition _ctrlArea select 3) - POINT_H),\\ POINT_W,\\ POINT_H\\ ]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezierNormalize": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_bezierVelocity": {"version": "1.94", "tags": "", "description": "/* Description: Calculate bezier curve velocity Parameter(s): 0: ARRAY - list of control points in format [x,y,z], can be any number of them 1: NUMBER - progress in range 0 to 1 Returns: ARRAY - velocity vector in format [x,y,z] */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_breatheInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_calculateLinkBudget": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_calculateSpectrumAnalyzerValues": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_callButtonEvent": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_cargoPlatform_01_adjust": {"version": "1.94", "tags": "", "description": "Adjust Military Cargo Platform legs length in Eden Editor.", "example": "platform call BIN_fnc_cargoPlatform_01_adjust;", "docSyntax": "[object] call BIN_fnc_cargoPlatform_01_adjust", "syntax": "[<object>] call BIN_fnc_cargoPlatform_01_adjust"}, "BIN_fnc_cargoPlatform_01_destruction": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_CargoPlatform_01_destruction Apply texture & materials of parent object to ruins. Function is attached to killed event handler. */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_cargoPlatform_01_update": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_cargoPlatform_01_update Update cargo platform position */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNCharacterAdd": {"version": "1.94", "tags": "", "description": "/* Description: Enables CBRN systems on a specific character entity. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - character entity to enable CBRN systems on Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNContaminantAdd": {"version": "1.94", "tags": "", "description": "/* Description: Registers a CBRN contaminant. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - trigger representing a CBRN contaminated area OBJECT - entity representing an active CBRN contaminant Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNContaminantRemove": {"version": "1.94", "tags": "", "description": "/* Description: Unregisters a CBRN contaminant. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - trigger representing a CBRN contaminated area Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNGearActivate": {"version": "1.94", "tags": "", "description": "/* Description: Activates a specific piece of CBRN gear for a character entity. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - character entity to activate CBRN gear for 1: STRING - CBRN gear class name to activate Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNGearDeactivate": {"version": "1.94", "tags": "", "description": "/* Description: Deactivates a specific piece of CBRN gear for a character entity. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - character entity to deactivate CBRN gear for 1: STRING - CBRN gear class name to deactivate Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNGearUpdate": {"version": "1.94", "tags": "", "description": "/* Description: Processes CBRN gear updates on a specific character entity. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - character entity to process CBRN gear for 1: STRING - CBRN gear class name to process Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_CBRNHoseInit": {"version": "1.94", "tags": "", "description": "Initializes CBRN Hose for given unit.", "example": "player call BIN_fnc_CBRNHoseInit;", "docSyntax": "[unit] call BIN_fnc_CBRNHoseInit;", "syntax": "[<objUnit>] call BIN_fnc_CBRNHoseInit;"}, "BIN_fnc_CBRNInContaminant": {"version": "1.94", "tags": "", "description": "/* Description: Returns whether or not a character entity is within a CBRN contaminated area. NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): 0: OBJECT - character entity to test for Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_circleSmokeMissile": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_circleSmokeMissile */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_clearIDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Clears IDWMap on the main map Parameter(s): NONE Returns: BOOL - true if EH existed and was removed Example: call BIN_fnc_clearIDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_clearTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Clears TXScan drawing Parameter(s): 0: STRING - scan name, \"\" - all scans Returns: BOOL - false if error occured Example: \"MyScan\" call BIN_fnc_clearTXScan \"\" call BIN_fnc_clearTXScan - all scans */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_colorHSLtoRGB": {"version": "1.94", "tags": "", "description": "Converts HSL colour format to RGB.", "example": "private _rgb = [0, 100, 50] call BIN_fnc_colorHSLtoRGB;", "docSyntax": "[hue, saturation, lightness] call BIN_fnc_colorHSLtoRGB", "syntax": "[hue,saturation,lightness] call BIN_fnc_colorHSLtoRGB"}, "BIN_fnc_crearAllData": {"version": "1.94", "tags": "", "description": "This function contains no code.", "example": "[] call BIN_fnc_crearAllData;", "docSyntax": "[] call BIN_fnc_crearAllData", "syntax": "[] call BIN_fnc_crearAllData"}, "BIN_fnc_createScriptedSoundSource": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_createScriptedSoundSourceVehicle": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_createTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Creates a scan with the name defined as class in CfgTXScans or from given params. If name doesn't exists in config and params are not provided, default scan is created which could be tweaked later Parameter(s): 0: STRING - \"\" create every scan from config or 0: STRING - scan name 1: ARRAY (Optional) - TX position 2: NUMBER (Optional) - scan angle 3: NUMBER (Optional) - scan precision 4: ARRAY (Optional) - scan polygon Returns: BOOL - false on error Examples: \"MyScan\" call BIN_fnc_createTXScan \"\" call BIN_fnc_createTXScan - creates every scan from config [\"MyScan\", [1,2,3], 20, 0.1] call BIN_fnc_createTXScan - creates every scan from config */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_cropTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Crops given scan Parameter(s): 0: STRING - scan name 1: NUMBER - crop rectangle center X 2: NUMBER - crop rectangle center Y 3: NUMBER - crop rectangle center W 4: NUMBER - crop rectangle center H Returns: ARRAY - crop rectangle corners Example: [\"MyScan\", 100, 100, 1000, 500] call BIN_fnc_cropTXScan */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_curatorInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_debugDraw": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_debugDrawMapInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_debugQuests": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_debugText": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerAnim": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerAnim */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerAnimLarge": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerAnimLarge */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerAnimStop": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerAnimStop Delete all sound sources attachted to decon shower in case it is destroyed or deleted */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerCollision": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerCollision */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerDelete": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerDelete Delete all sound sources attachted to decon shower in case it is destroyed or deleted */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deconShowerMove": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_deconShowerMove */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteDangerZone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteDiaryRecord": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteFaradayCage": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteLoopedRadioSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteSpectrumAnalyzer": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteTravelPoint": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_deleteTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Deletes scan with given name from extension and the map Parameter(s): 0: STRING - TXScan name Returns: BOOL - false on error Example: \"MyScan\" call BIN_fnc_deleteTXScan */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_diag_addAllSpectrumAnalyzers": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_drawAllAreaObjectsBounds": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Draws all area objects bounds Parameter(s): 0: STRING - area name Returns: NUMBER - event handler id Example: \"MyArea\" call BIN_fnc_diag_drawAllAreaObjectsBounds */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_getAllAreaEntities": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_getAllAreaObjects": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns stored area objects for diagnostics Parameter(s): 0: STRING - area name 1: NUMBER - multipart number Returns: ARRAY of arays in format [[posX,posY,posMinZ,posMaxZ,radius],...] Example: \"MyArea\" call BIN_fnc_diag_getAllAreaObjects */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_IDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Adds user action menu to the player with different IDWMap diag options Parameter(s): 0: STRING - command 1: BOOL (Optional) - extended option Returns: NOTHING Example: call BIN_fnc_diag_IDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_logAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_revealAllAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_showLinkBudgetMap": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_diag_TXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Adds user action menu to the player with different TXScan diag options Parameter(s): 0: STRING - command Returns: NOTHING Example: call BIN_fnc_diag_TXScan */", "docSyntax": "Syntax needed", "syntax": "Syntax needed", "type": "diagnoseFunction"}, "BIN_fnc_distanceToAreaBorder": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_dockModule": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawIconFixed": {"version": "1.94", "tags": "", "description": "/* Description: Set fixed size marker to be drawn in main map Parameter(s): 0: STRING - unique marker ID 1: ARRAY - marker parameters in format used by drawIcon command BOOL - delete the marker Returns: BOOL - true if successful */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawIDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Draws IDWMap on the main map Parameter(s): NONE Returns: BOOL - true on success Example: call BIN_fnc_drawIDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawMap": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawProbeMap": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawSpectrum": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawTooltip": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_drawTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Draws TXScan with given name Parameter(s): STRING - scan name or \"\" to draw all scans Returns: BOOL - true on success Example: \"MyScan\" call BIN_fnc_drawTXScan \"\" call BIN_fnc_drawTXScan - draw all scans */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_droneDestructionFX": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_droneDestructionFX */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_droneModuleDestruction": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_droneModuleDestruction Alien Module destruction */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_editMoveProperties": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_empVehicle": {"version": "1.94", "tags": "", "description": "/* Description: Sets EMP parameters to a vehicle. Destroys lights and optionally prevents vehicle from starting Parameter(s): 0: OBJECT - Vehicle that will get destroyed electronics 1: (Optional): BOOL - Sets engine destroyed - true = engine destroyed, false = engine operating (default: true) 2: (Optional): BOOL - Handle AI in EMP vehicle - true = AI will exit vehicle and not enter new vehicles, false = AI will remain in vehicle (default: true) Note that the player has to be defined as bin_player for the voice lines to be spoken Examples: [bin_vehicle,true,true] call BIN_fnc_empVehicle; //Destroys lights and prevents vehicle from starting, AI will exit vehicle after it has stopped [bin_vehicle,false,false] call BIN_fnc_empVehicle; //Destroys lights, but engine can still start and vehicle can be driven, AI will remain in vehicle */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_enableSaving": {"version": "1.94", "tags": "", "description": "Sets a variable used in Arma 3 Contact which handels saving.", "example": "[true,true] call BIN_fnc_enableSaving;", "docSyntax": "[enableSaving, saveGame] call BIN_fnc_enableSaving", "syntax": "[enableSaving,saveGame] call BIN_fnc_enableSaving"}, "BIN_fnc_eulerToVector": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitDiary": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitGroup": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitPersistentObjects": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitQuests": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitSites": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_exitTasks": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_findNearestGrid": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_findPath": {"version": "1.94", "tags": "", "description": "/* Description: A* search algorithm. Uses hard-coded Manhattan distance to measure distance. Parameter(s): 0: ARRAY of ARRAYs in format: 0: NUMBER - node cost 1: ARRAY - array of neighbor indexes 2: ARRAY - XYZ position of the node, used to measure distance from end pos 1: NUMBER - index of starting point 2: NUMBER - index of ending point Returns: ARRAY of NUMBERs - indexes of nodes which are traversed on the way to the ending point */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_findSafePositions": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_findSafePositions */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_findTargetWeight": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_findTargetWeight */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_frequencyToString": {"version": "1.94", "tags": "", "description": "/* Description: Returns frequency as a string Parameter(s): 0: NUMBER - frequency in MHz, returned value is in format \"<value> <unit>\" ARRAY in format [NUMBER,NUMBER] - frequency range in MHz, returned value is in format \"<value1> <unit1> - <value2> <unit2>\" 1: NUMBER - order offset. When 0, frequency 1000 will return \"1 GHz\". When -1, returned value will be \"1000 MHz\" 2: BOOL - true if input values are in Hz, false if in MHz (standard across the game) Returns: STRING */ #define UNITS [\\ localize \"STR_A3_C_fnc_frequencyToString_Hz0\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz1\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz2\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz3\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz4\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz5\",\\ localize \"STR_A3_C_fnc_frequencyToString_Hz6\"\\ ] // ^0 ^3 ^6 ^9 ^12 ^15 ^18 //#define UNITS [\"Hz\",\"kHz\",\"MHz\",\"GHz\",\"THz\",\"PHz\",\"EHz\"]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAISquadID": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAISquadPosition": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAllAISquads": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAllAreas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAllTXScans": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns array of names of all TXScans stored in extension Parameter(s): NONE Returns: ARRAY - scan names Example: call BIN_fnc_getAllTXScans */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaAngle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaCanReveal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaFrequency": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaFrequencyClass": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaGain": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaName": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaObject": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaPower": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaRevealValue": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennas": {"version": "1.94", "tags": "", "description": "/* Description: Get all antennas, transmitters and receivers alike Parameter(s): 0: BOOL - true to ignore player's antennas (default: false) Returns: ARRAY of STRINGs - antenna IDs */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaScanPolygon": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaScans": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaScanSignals": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaSensitivity": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaSignalHistory": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getAntennaType": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getBehaviorCoef": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_getBehaviorCoef Get behavior coefficients Examples: [bin_drone,\"gravityCannon\"] call BIN_fnc_getBehaviorCoef - returns coefficients for gravity cannon behavior */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getCharacterSounds": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getCurrentSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getEntityBoundingBarrel": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getFollowingSignals": {"version": "1.94", "tags": "", "description": "/* Description: Get signals which follow after given one. Parameter(s): 0: STRING - signal class Returns: ARRAY of STRINGs (including input signal when it is not a link) */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getFormattedControl": {"version": "1.94", "tags": "", "description": "/* Description: Return a formatted string of a mapped control (same style as the Field Manual and Hints) Parameter(s): 0: STRING - name of the control action 1 (Optional): SCALAR - 0-based index of the mapped control Returns: STRING - formatted control */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getGridCollisions": {"version": "1.94", "tags": "", "description": "#define BUSH_WIDTH 2 #define BUSH_HEIGHT 2 #define TREE_TRUNK_WIDTH 0.5 #define TREE_TRUNK_HEIGHT 4 #define GET_POS\\ private _pos = _x modelToWorld (boundingcenter _x vectormultiply -1); #define GET_BBOX\\ private _bbox = boundingboxreal _x;\\ private _bboxX = abs ((_bbox select 0 select 0) - (_bbox select 1 select 0)) / 2 + _cellSizeXHalf*0;\\ private _bboxY = abs ((_bbox select 0 select 1) - (_bbox select 1 select 1)) / 2 + _cellSizeYHalf*0;\\ private _bboxZ = abs ((_bbox select 0 select 2) - (_bbox select 1 select 2)) / 2 + _cellSizeZHalf*0; //_bboxZ = (abs (_bbox select 0 select 2) + abs (_bbox select 1 select 2)) + _cellSizeZHalf*0; #define GET_BBOX_FIXED(SIZE)\\ private _bboxX = SIZE + _cellSizeXHalf;\\ private _bboxY = SIZE + _cellSizeYHalf;\\ private _bboxZ = SIZE + _cellSizeZHalf;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getGridMap": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getGridPath": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getGroupSeed": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getIDWMapDrawColorSet": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Gets stored draw colors Parameter(s): NONE Returns: ARRAY - draw colors or [] on error Example: call BIN_fnc_getIDWMapDrawColorSet */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getIDWMapDrawPatternIndex": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Gets stored draw pattern index Parameter(s): NONE Returns: NUMBER - draw pattern index (0..3) or -1 on error Example: call BIN_fnc_getIDWMapDrawPatternIndex */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getIDWMapParams": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns currently set IDWMap params Parameter(s): NONE Returns: ARRAY in format: [[mapMinX, mapMinY, mapMaxX, mapMaxY], idwCellSize, idwSpreadRadius, idwSpreadPower, curvePointsInterval, curvePointSpreadRadius] or [] on error Example: call BIN_fnc_getIDWMapParams */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getIDWMapSaveData": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns array with IDWMap data which is used for saving/loading Parameter(s): NONE Returns: ARRAY - save data Example: call BIN_fnc_getIDWMapSaveData */ #define MAPDRAWPATTERNINDEX_DEFAULT 0 #define MAPDRAWCOLORSET_DEFAULT [[0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7]] #define MAPDRAWIDC_DEFAULT 51 // if the data was not yet set", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getIDWMapStaticDataLayers": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Gets static data from extension Parameter(s): NONE Returns: ARRAY in format: [ [[x,y,strengh],[x,y,strengh],...], // data layer 0 [[x,y,strengh],[x,y,strengh],...], // data layer 1 ... [[x,y,strengh],[x,y,strengh],...] // data layer N ] or [] - on error Example: call BIN_fnc_getIDWMapStaticDataLayers */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getLinkBudget": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getLinkDir": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getLinkedAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getLinkStrength": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getObjectAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getObjectBoundingBarrel": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns bounding barrel of the given object Parameter(s): 0: OBJECT - object to measure Returns: ARRAY in format [radius, height, offset]. Offset is negative if object Z position is higher than the lower bound Example: myObj call BIN_fnc_getObjectBoundingBarrel */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getPatrolRoutes": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getRadioConversation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getRecordedSignals": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getRoleIcon": {"version": "1.94", "tags": "", "description": "/* Description: Get soldier's role icon (e.g., sniper, machine-gunner, etc.) Parameter(s): 0: OBJECT Returns: STRING - image path */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getRotation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getSignalAge": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getSignalTypeClass": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getSignalTypes": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getSiteLayerEntities": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTerrainObjects": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns terrain objects of the given type for the given area dimensions Parameter(s): 0: ARRAY - area details in Area format (see BIS_fnc_getArea) 1: ARRAY - types of terrain objects, for example [\"HOUSE\", \"TREE\"] Returns: ARRAY of objects Example: [\"myArea\", [player, 100], [\"HOUSE\", \"TREE\"]] call BIN_fnc_getTerrainObjects */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanAngle": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns TXScan angle Parameter(s): 0: STRING - scan name Returns: NUMBER - set cone angle or -1 on error Example: \"MyScan\" call BIN_fnc_getTXScanAngle */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanDrawData": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns draw data for given TXScan Parameter(s): 0: STRING - scan name Returns: ARRAY in format [iconData, polygonData, triangleData, rectangleData, isDefaultPolygon] where: iconData: ARRAY - position in format [x,y,0] polygonData: ARRAY - array of polygon vertices, where each vertex is in format [x,y,0] triangleData: ARRAY - array of triangle vrtices, where each vertex is in format [x,y,0] rectangleData: ARRAY - bounding rectangle in format [center, a, b, angle] isDefaultPolygon: BOOL - if a scan polygon has not yet been calculated, this will be true Example: \"myScan\" call BIN_fnc_getTXScanDrawData */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanPolygon": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns current intersection polygon for given scan Parameter(s): 0: STRING - TXScan name Returns: ARRAY - polygon points or [] on error Example: \"MyScan\" call BIN_fnc_getTXScanPolygon */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanPolygonDetails": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns estimated area and perimeter of the given scan polygon Parameter(s): 0: STRING - TXScan name Returns: ARRAY in format [area, perimeter] Example: \"MyScan\" call BIN_fnc_getTXScanPolygonDetails */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanPosition": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Gets stored TXScan transmitter position Parameter(s): 0: STRING - scan name Returns: ARRAY - set transmitter position or [] on error Example: \"MyScan\" call BIN_fnc_setTXScanPosition */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanPrecision": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns stored TXScan precision Parameter(s): 0: STRING - scan name Returns: NUMBER - set cone precision or -1 on error Example: \"MyScan\" call BIN_fnc_getTXScanPrecision */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanSaveData": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns array with given TXScan data which is used for saving/loading Parameter(s): 0: STRING - TXScan name or \"\" to return all saved scan names Returns: ARRAY - save data for given scan name or if argument was \"\" ARRAY in format [allscannames, activeareaboundaries] Example: \"MyScan\" call BIN_fnc_getTXScanSaveData \"\" call BIN_fnc_getTXScanSaveData */ #define SAVEVAR_NAME \"BIN_fnc_TXScan_saveData\" #define IDD_DEFAULT 12 #define IDC_DEFAULT 51", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_getTXScanWorldBounds": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns currently set boundaries of active area Parameter(s): NONE Returns: ARRAY in format: [minX, minY, maxX, maxY] or [] on error Example: call BIN_fnc_getTXScanWorldBounds */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_gravityBurst": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_gravityCannon_01_ai": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_gravityCannon_01_AI */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_grenadeThrowback": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_grenadeThrowback */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_hackAIDrone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_handDrawBezier": {"version": "1.94", "tags": "", "description": "/* Description: Show hand-drawn bezier curve in the map Parameter(s): 0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it. 1: ARRAY - control points of bezier curve 2: ARRAY - color in [r,g,b,a] format 3: STRING - fill texture BOOL - true for default pen-blue color, false for the same, but faded Optional: 4: NUMBER or ARRAY: thickness 5: ARRAY - random thickness offset in format [min,mid,max] 6: NUMBER - number od drawing steps Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_handDrawEllipse": {"version": "1.94", "tags": "", "description": "/* Description: Show hand-drawn ellipse in the map Parameter(s): 0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it. 1: ARRAY - center position 2: NUMBER - semi-major axis 3: NUMBER - semi-minor axis 4: NUMBER - angle 5: ARRAY - color in [r,g,b,a] format 6: STRING - fill texture BOOL - true for default pen-blue color, false for the same, but faded Optional: 7: NUMBER - radius coef 8: NUMBER - length coef 9: NUMBER or ARRAY: thickness 10: ARRAY - radius curve 11: BOOL - true if clockwise 12: NUMBER - starting angle 13: ARRAY - random thickness offset in format [min,mid,max] 14: NUMBER - number od drawing steps Returns: NOTHING Examples: //--- Show an ellipse on player's position [\"test1\",position player,300,400,15] call BIN_fnc_handDrawEllipse; //--- Show the same ellipse, but faded [\"test1\",position player,300,400,15,nil,false] call BIN_fnc_handDrawEllipse; */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_hasAntennaSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_inDangerZone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAcctime": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initActors": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAI": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAIBase": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAIDrone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAISquad": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initAntennas": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initConstants": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initCutLayers": {"version": "1.94", "tags": "", "description": "//--- Register RSC layers in the correct order (they are not serialized)", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initDiary": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initDroneModule": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_initDroneModule */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initGroup": {"version": "1.94", "tags": "", "description": "#define DEBUG #define GROUP (units player - [player]) #define DAMAGE_COEF 0.25 #define DIS_LIMIT_SOFT 400 #define DIS_LIMIT_HARD 600", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initHub": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initInspectableDiaryRecord": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initInventory": {"version": "1.94", "tags": "", "description": "//--- Ignored in missions without special description.ext property", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initLocations": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initMiniUGV": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initMothershipLights": {"version": "1.94", "tags": "", "description": "/* Description: Enable scripted ET Mothership lights on baked memory points Created lights can be retrieved via getVariable \"BIN_lights\" on the Mothership Parameter(s): 0: OBJECT - Mothership Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initPersistentObjects": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initProbeMap": {"version": "1.94", "tags": "", "description": "//--- Debug", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initPuzzle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initQuests": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initRevive": {"version": "1.94", "tags": "", "description": "#define BLEED_TIME 160 #define BLINK_DELAY_MAX 20 #define BLINK_TIME 0.75", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initSideColors": {"version": "1.94", "tags": "", "description": "#define FORMAT \"Map_%1_%2\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initSites": {"version": "1.94", "tags": "", "description": "#define DEBUG #define AREA_BUFFER +200 #define DEF_RADIUS 500 #define DEF_RADIUS_OUT 550 #define AREA_DEF [position _logic,DEF_RADIUS_OUT,DEF_RADIUS_OUT,0,false]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initTasks": {"version": "1.94", "tags": "", "description": "//--- Obsolete, replace dby BIN_fnc_initQuests", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initTurret": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initUAV": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_initUGV": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_inList": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_inRadioConversation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_inRadioConversationWith": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAIBase": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntennaBaked": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntennaBroadcasting": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntennaJammed": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntennaRevealed": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isAntennaSelected": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isExtensionError": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns true and displays description of the error from extension if there was an error. When extension returns negative number (usually -1), it is considered an indication of some sort of error, in which case string output should contain the description of the error. Parameter(s): Extension (arg version) output in format [<string>, <number>, <number>] Returns: BOOL - true if error */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isNull": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isPaused": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isPausedInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isPuzzleReset": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isPuzzleTerminated": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isRadioHandshake": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_isRadioSilence": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_joinAISquad": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_lightBurst": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_list": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_loadIDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Loads IDWMap data from global variable 'BIN_fnc_IDWMap_saveData' into extension Parameter(s): NONE Returns: BOOL - true on success Example: call BIN_fnc_loadIDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_loadTXScanState": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Loads TXScan data from global saved variables into extension Parameter(s): NONE Returns: BOOL - true on success Example: call BIN_fnc_loadTXScanState */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_markDangerZone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_markFreeAreaPositions": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Returns array of booleans in place of passed positions, where true is free and false is possible collision Parameter(s): 0: STRING - area name 1: ARRAY - bounding barrel in format [radius, height, offset] 2: ARRAY - arrays of positions Returns: ARRAY of booleans Example: [\"myArea\", [10,5,0], [[123,123,123],[456,456,456],...]] call BIN_fnc_markFreeAreaPositions */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_matrixMultiply": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_matrixTranspose": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_matterballDestruction": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_matterBallDestruction Alien Module destruction */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_matterballEffects": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_matterBallEffects Alien Matter Ball decaying effects a: reyhard */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_matterCollectionFX": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_matterCollectionFX */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_missileDeflection": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_missileSwarm": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_missileSwarm */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleCBRN": {"version": "1.94", "tags": "", "description": "/* Description: Enables CBRN systems in a scenario (not MP-compatible!). NOTE: Module / function set not robust nor completed - not recommended for usage at this stage! Parameter(s): Returns: BOOL */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleChargeSequence": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleDangerZone": {"version": "1.94", "tags": "", "description": "#define AREA_BUFFER +50", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleFaradayCage": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleGravityAnomaly": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleMovementGrid": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_modulePointOfInterest": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleSimpleObject": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moduleTravel": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveAI": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveAIReinforcements": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveModule": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveObject": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveTo": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveToModelSpace": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_moveToOnArc": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_moveToOnArc */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_onPuzzleCompleted": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_onPuzzleProgress": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_onPuzzleReset": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_onPuzzleStepCompleted": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_onPuzzleTerminated": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_persistentVariables": {"version": "1.94", "tags": "", "description": "//#define SAVE_IN_PROFILE #define SAVE_IN_CAMPAIGN #define PREFIX \"BIN_\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_playAlternatingSound": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_playMission": {"version": "1.94", "tags": "", "description": "//--- Disabled, campaign is now configured as traditional campaign", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_playPatrolAnim": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_playPatrolAnimDone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_postInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_preInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_preInitEM": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_preInitIDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Should be called from preInit, contains saving/loading functions as well as default initisalization Parameter(s): 0: STRING - preInit pass through Returns: NOTHING Example: // from preinit script call BIN_fnc_preInitIDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_preInitTXScan": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Should be called from preInit, contains saving/loading functions as well as default initisalization Parameter(s): 0: STRING - \"preInit\" Returns: NOTHING Example: // from preinit script call BIN_fnc_preInitTXScan */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeAnim": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeAnim Example usage: [probe,1] call BIN_fnc_probeAnim - expand probe core [probe,0] call BIN_fnc_probeAnim - retract probe core */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeCoreDelete": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeCoreEffects": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeCoreEffects [probeCore] call BIN_fnc_probeCoreEffects */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeCoreInit": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeCoreLegsDestroyed": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeCoreLegsDestroyed */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeCoreUpdate": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeDelete": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeDelete */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeHitpoint": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeHitpoint Spawns particle effects & sound Function is connected to probe hitpoint and can be also manually triggered via calling following code: * [cursorObject,1,true] call BIN_fnc_probeHitpoint - destroy hitpoint with index 1 */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_probeVeinHitpoint": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probeVeinHitpoint Animate vein & spawn sound Input: Dammaged EH */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_ProbingArm_fired": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probingArm_fired */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_ProbingBeam_fired": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_probingBeam_fired */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_ProbingBeam_sendData": {"version": "1.94", "tags": "", "description": "/* BIS_fnc_ProbingBeam_sendData */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_prototypeCannon_01_ai": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_prototypeCannon_01_player": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_prototypeCannon_01_slaved": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_puzzle_mole": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_puzzle_outlier": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_reactRadio": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_reactRadio_Base": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_reactRadio_Player": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_reactRadio_Squad": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_recordSignal": {"version": "1.94", "tags": "", "description": "/* Description: Add signal to the library. Parameter(s): 0: STRING - antenna ID (its currently transmitted signal will be used) or signal class from CfgContact >> Signals Returns: BOOL - true if added */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_resetPuzzle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_revealAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_revealFrequency": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_saveIDWMap": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Saves IDWMap data into global variable 'BIN_fnc_IDWMap_saveData' so that it can be serialised and then loaded from game save when needed Parameter(s): NONE Returns: BOOL - true on success Example: call BIN_fnc_saveIDWMap */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_saveTXScanState": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Saves TXScan data into global variables so that it can be serialised and then loaded from game save when needed Parameter(s): NONE Returns: BOOL - true on success Example: call BIN_fnc_saveTXScanState */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_savingEnabled": {"version": "1.94", "tags": "", "description": "Returns the value of missionNamespace getVariable [\"bin_enableSaving\", true]", "example": "call BIN_fnc_savingEnabled == (missionNamespace getVariable [\"bin_enableSaving\", true]); //\u00a0true", "docSyntax": "call BIN_fnc_savingEnabled", "syntax": "call BIN_fnc_savingEnabled"}, "BIN_fnc_scan": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_scanObject": {"version": "1.94", "tags": "", "description": "#define VAR_END \"BIN_fnc_scanObject_end\" #define END_NONE 0 #define END_RETURN 1 #define END_DROP 2 #define CURVE_POS [[0,0,0],[0.5,0,0],[0.5,1,0],[1,1,0]] #define CURVE_ROT [[0,0,0],[0,1,0],[0.75,1,0]]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_scanTX": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Intersects current scan polygon (or map square if no scan exists) with triangle originated from RX position and returns the triangle Parameter(s): 0: STRING - scan name 1: ARRAY (Optional) - RX position. Default: position player Returns: ARRAY - triangle used for intersection Example: [\"MyScan\", position player] call BIN_fnc_scanTX */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_selectDiaryCategory": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_selectDiaryRecord": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_selectDiaryTask": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_sendPing": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_sendRadioSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAISquadID": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaAngle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaCanReveal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaClass": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaFrequency": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaFrequencyFromList": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaGain": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaName": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaObject": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaPower": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaRevealValue": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaScans": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaSensitivity": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setAntennaType": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setBehavior": {"version": "1.94", "tags": "", "description": "#define DEBUG #define HISTORY_CAPACITY 5 #define TERMINATE_DEFAULT 1 #define TERMINATE_INTERRUPT 2 #define BEHAVIOR_PATH \"a3\\Functions_F_Contact\\Behavior\\Drone\\\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setBehaviorCoef": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_setBehaviorCoef Set behavior coefficients Examples: [bin_drone,\"gravityCannon\",0] call BIN_fnc_setBehaviorCoef */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setBreathe": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setCurrentSignal": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setCustomSoundController": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_setCustomSoundController a: reyhard */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setDiaryRecord": {"version": "1.94", "tags": "", "description": "#define DEFAULT_TEXT \"~\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setDroneModuleParams": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_setDroneModuleParams */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setDroneModuleTarget": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_setDroneModuleTarget */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setGravityPulse": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setIDWMapDrawColorSet": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets map draw color set Parameter(s): ARRAY - array of colors from 1 to 11 Returns: BOOL - true on success Example: // set 3 color drawing on the fly [[0,0,0.514,0.7],[0.843,1,0.153,0.7],[0.522,0,0,0.7]] call BIN_fnc_setIDWMapDrawColorSet; // set from config [] call BIN_fnc_setIDWMapDrawColorSet; */ #define MAPDRAWCOLORSET_DEFAULT [[0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7]]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setIDWMapDrawPatternIndex": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets map draw pattern Parameter(s): NUMBER - pattern: 0 - triangles, 1 - diamonds, 2 - squares, 3 - diamonds overlapped Returns: BOOL - true on success Example: // set on the fly 3 call BIN_fnc_setIDWMapDrawPatternIndex; OR [3] call BIN_fnc_setIDWMapDrawPatternIndex; // set from config call BIN_fnc_setIDWMapDrawPatternIndex; OR [] call BIN_fnc_setIDWMapDrawPatternIndex; */ #define MAPDRAWPATTERNINDEX_DEFAULT 0", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setIDWMapParams": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Resets extension data, sets IDWMap params from argument, from config or default *** This function must be called before any data is added to the IDWMap *** Parameter(s): 0: ARRAY - (Optional) areaParams in format: 0: NUMBER - minMapX 1: NUMBER - minMapY 2: NUMBER - maxMapX 3: NUMBER - maxMapY Default: [0, 0, worldSize, worldSize] 1: NUMBER (Optional) - idwCellSize. Default: 20 2: NUMBER (Optional) - idwSpreadRadius. Default: 200 3: NUMBER (Optional) - idwSpreadPower. Default: 2.0 4: NUMBER (Optional) - curvePointsInterval. Default: 20 5: NUMBER (Optional) - curvePointSpreadRadius. Default: idwSpreadRadius Returns: BOOL - true on success Example: call BIN_fnc_setIDWMapParams */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setIDWMapStaticDataLayers": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets static data for extension use from argument or config \"CfgIDWMap\" Parameter(s): ARRAY (optional) - static data in format: [ [[x,y,strengh],[x,y,strengh],...], // data layer 0 [[x,y,strengh],[x,y,strengh],...], // data layer 1 ... [[x,y,strengh],[x,y,strengh],...] // data layer N ] Returns: BOOL - true on success Example: call BIN_fnc_setIDWMapStaticDataLayers */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setModuleSpeed": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setMoveProperties": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setObjectGrid": {"version": "1.94", "tags": "", "description": "#define DEBUG #define COST_DISABLED 1000", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setPlayerSelectedBand": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setPointOfInterest": {"version": "1.94", "tags": "", "description": "/* Description: Add point of interest shown in the map Parameter(s): 0: STRING - unique ID of the point 1: BOOL - true if the point is completed (shown faded in the map) NUMBER - status, can be: -1: dormant, will be activated when player gets close 0: shown, but not completed +1: completed 2: ARRAY - position 3: ARRAY - area in format [width,height,angle,isRectangle] 4: STRING - type, can be \"Unknown\" or \"Warning\" (default: \"Unknown\") 5: STRING - color, can be \"Black\", \"Blue\" or \"Red\" (default: \"Black\") or 0: OBJECT - \"Point of interest\" module Returns: STRING - ID of the point Examples: //--- Activate existing module _myID = myModule call BIN_fnc_setPointOfInterest; //--- Mark POI as completed [_myID,true] call BIN_fnc_setPointOfInterest; //--- Set custom POI [\"myID\",false,position myObject,[50,50,0,false],\"Warning\",\"Red\"] call BIN_fnc_setPointOfInterest; //--- Set custom POI using default type and color [\"myID\",false,position myObject,[50,50,0,false]] call BIN_fnc_setPointOfInterest; */ #define VAR \"bin_POIs\" #define TASK_PRIORITY 2 #define REVEAL_DISTANCE 100 #define POS_DEFAULT [] #define AREA_DEFAULT [] #define TYPE_DEFAULT \"\" #define COLOR_DEFAULT \"\" #define STATUS_DEFAULT 0", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setRadioConversation": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setRadioHandshake": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setRadioSilence": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setRagdoll": {"version": "1.94", "tags": "", "description": "/* Input: 0: _unit [object] - Name of unit (works only with man type units) 1: _force [vector] - Amount of force that will be applied to colliding object 2: _position [string] (optional) - Name of selection from which it will try to calculate center point (default: spine1) Usage: [player,[0,100,0]] call BIN_fnc_setRagdoll - */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setSite": {"version": "1.94", "tags": "", "description": "#define DEBUG #define ALPHA_ON 1.0 #define ALPHA_OFF 0.4 #define DRAW(SHOW)\\ _color = [[1,0,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,1],[1,0,1,1],[0,1,1,1],[1,0.5,0,1]] select ((_logic getvariable [\"#index\",0])\u00a0% 7);\\ if\u00a0!(SHOW) then {_color set [3,0.4];};\\ _drawIcon = [\"\\a3\\Ui_f\\data\\Map\\LocationTypes\\borderCrossing_CA.paa\",_color,position _logic,0.75,0.75,0,_class,2,0.04,\"RobotoCondensed\",\"right\"];\\ [\"bin_diagSites\",_class,\"icon\",[_drawIcon]] call BIN_fnc_debugDraw;\\ _isRectangle = false;\\ _drawArea = if (SHOW) then {\\ _areaOut = _logic getvariable [\"areaOut\",[position _logic,0,0,0,false]];\\ _isRectangle = _areaOut select 4;\\ [_areaOut select 0,_areaOut select 1,_areaOut select 2,_areaOut select 3,_color,\"\"]\\ } else {\\ _areaIn = _logic getvariable [\"areaIn\",[position _logic,0,0,0,false]];\\ _isRectangle = _areaIn select 4;\\ [_areaIn select 0,_areaIn select 1,_areaIn select 2,_areaIn select 3,_color,\"\"]\\ };\\ [\"bin_diagSites\",_class,if (_isRectangle) then {\"rectangle\"} else {\"ellipse\"},[_drawArea]] call BIN_fnc_debugDraw; #define VAR_IGNORE \"$i\" #define VAR_KILL \"$k\" #define VAR_VISITED \"$v\" #define VAR_SPAWNED \"#spawned\"", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setSpectrumAnalyzer": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTargetWeight": {"version": "1.94", "tags": "", "description": "/* BIN_fnc_setTargetWeight Set target priroty which is used later by BIN_fnc_findTargetWeight function to find target. Input: 0: _input - Unit, vehicle, group or side. 1: _value - scalar above 0 - weight which is later used by selectRandomWeighted script command. Values equal or less than 0 are excluded from target selection Examples: [west,0] call BIN_fnc_setTargetWeight - all units from side \"west\" will be ignored by targeting system [player,10] call BIN_fnc_setTargetWeight - Increase player chance of being targeted by drone weapons [bis_car,0] call BIN_fnc_setTargetWeight - Vehicle & it is crew will be ignored by targeting system */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTXScanAngle": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets TXScan angle Parameter(s): 0: STRING - scan name 1: NUMBER - cone angle Returns: BOOL - true on success Example: [\"MyScan\", 45] call BIN_fnc_setTXScanAngle */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTXScanPolygon": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Pre-sets intersection polygon for given scan. Can only be done with newly created scans since once the first scan is made, the polygon cannot be overwritten Parameter(s): 0: STRING - TXScan name 1: ARRAY - polygon points Returns: BOOL - false on error Example: [\"MyScan\",[p1,p2,p3...]] call BIN_fnc_setTXScanPolygon */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTXScanPosition": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets TXScan transmitter position Parameter(s): 0: STRING - scan name 1: ARRAY - transmitter position Returns: BOOL - true on success Example: [\"MyScan\", position player] call BIN_fnc_setTXScanPosition */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTXScanPrecision": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets TXScan precision Parameter(s): 0: STRING - scan name 1: NUMBER - cone precision Returns: BOOL - true on success Example: [\"MyScan\", 0.1] call BIN_fnc_setTXScanPrecision */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_setTXScanWorldBounds": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Sets map bounds in which scans could be carried out. Default [0,0,worldSize,worldSize] Parameter(s): 0: NUMBER - minX 1: NUMBER - minY 2: NUMBER - maxX 3: NUMBER - maxY or [] to use config values or default Returns: BOOL - true on success Example: [0,0,worldSize,worldSize] call BIN_fnc_setTXScanWorldBounds [] call BIN_fnc_setTXScanWorldBounds */ // get user params", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showAntennaIcon": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showAntennaIcons": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showCurrentTask": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showHorizontalCompass": {"version": "1.94", "tags": "", "description": "/* Description: Show or hide horizontal compass Parameter(s): 0: BOOL - true to show, false to hide Returns: NOTHING */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showMapOptions": {"version": "1.94", "tags": "", "description": "/* Description: Select which maps will be available Parameter(s): 0: NUMBER - mode, can be: 0 - all options available (default) 1 - probe map not available 2 - no options available (i.e., only main map is shown) Returns: NOTHING */ #define VAR \"BIN_fnc_showMapOptions_mode\" //--- Spawn to prevent disableSerialization affecting the script from which the function is called", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showPlayerSpectrumAnalyzer": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showSimpleNotification": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showSpectrumAnalyzer": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showSpectrumAnalyzerGUI": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showSpectrumAnalyzerMuzzle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showSpectrumAnalyzerPiP": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_showVision": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_skip": {"version": "1.94", "tags": "", "description": "//#define TIME_SKIP 1.4 // Apex #define TIME_SKIP 0.5", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_soundDrone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_switchMap": {"version": "1.94", "tags": "", "description": "//disableserialization;", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_taskActive": {"version": "1.94", "tags": "", "description": "/* Description: Return if task is active, i.e., added to player, but not yet completed. Only in this state can player assign it. Parameter(s): 0: STRING - task ID Returns: BOOL Example: if (\"q_schnobble\" call BIN_fnc_taskActive) then {hint \"ACTIVE!\";}; */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_taskAdded": {"version": "1.94", "tags": "", "description": "/* Description: Return if task was added to player. Includes both finished and unfinished tasks. Parameter(s): 0: STRING - task ID Returns: BOOL Example: if (\"q_schnobble\" call BIN_fnc_taskAdded) then {hint \"ADDED!\";}; */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_terminatePuzzle": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_translationDone": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_travelToPoint": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_tvSaveExpanded": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateEM": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateGravityPulse": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateIDWMapDrawData": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Retrieves draw data for IDWMap and stores it in 'IDWMapDrawData' variable on map control for use in 'Draw' event handler. Should be called in scheduled environment to spread the load. Parameter(s): NONE Returns: BOOL - true on success if called from scheduled NOTHING - if called from unscheduled Example: call BIN_fnc_updateIDWMapDrawData */", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updatePlayerAntenna": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updatePlayerInput": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updatePlayerSpectrumAnalyzer": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updatePlayerSpectrumAnalyzerSounds": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateSignalDurations": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateSpectrumAnalyzerInput": {"version": "1.94", "tags": "", "description": "\ud83c\udfd7", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_updateTXScanDrawData": {"version": "1.94", "tags": "", "description": "/* Killzone_Kid Description: Retrieves draw data for TXScan and updates drawing Parameter(s): 0: STRING - scan name, \"\" - all scans Returns: BOOL - true on success Example: \"myScan\" call BIN_fnc_updateTXScanDrawData \"\" call BIN_fnc_updateTXScanDrawData - all scans */ #define COLOR_DEFAULT [0,0,0,0.5], #define TEXTURE_DEFAULT \"\\A3\\ui_f\\data\\map\\markerbrushes\\fdiagonal_ca.paa\" #define ICON_DEFAULT [\"#(rgb,1,1,1)color(1,1,1,1)\",[0,0,0,0],[0,0,0],0,0,0]", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_vectorToEuler": {"version": "1.94", "tags": "", "description": "//#define NEW", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_wpAddScript": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_wpDroneMove": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_wpMoveFast": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIN_fnc_wpPatrol": {"version": "1.94", "tags": "", "description": "This content is exclusive to the Arma 3 Contact Expansion.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_hasItem": {"version": "1.94", "tags": "", "description": "Returns true if object contains given item in inventory / cargo storage.", "example": "[player, \"ItemMap\"] call BIS_fnc_hasItem;", "docSyntax": "[object, item, searchCrew] call BIS_fnc_hasItem", "syntax": "[<object>,<objItem>,searchCrew] call BIS_fnc_hasItem"}, "calculatePath": {"version": "1.94", "tags": "", "description": "Spawns an agent that will execute an AI path calculation and fire the \"PathCalculated\" event handler. The vehicle type to simulate could be one of the following presets:", "example": "calculatePath [\"car\", \"safe\", [2150.67,5778.19,0], [2184.11,5802.28,0]]", "docSyntax": "calculatePath [type, behaviour, from, to]", "syntax": "calculatePath [type,behaviour,from,to]"}, "getAudioOptionVolumes": {"version": "1.94", "tags": "", "description": "Returns profile audio volumes in format [effects, music, radio, von].", "example": "_volumeSettings = getAudioOptionVolumes;", "docSyntax": "getAudioOptionVolumes", "syntax": "getAudioOptionVolumes"}, "getSubtitleOptions": {"version": "1.94", "tags": "", "description": "Returns subtitles settings.", "example": "_subtitleSettings = getSubtitleOptions;", "docSyntax": "getSubtitleOptions", "syntax": "getSubtitleOptions"}, "BIS_fnc_3DENMissionStats": {"version": "1.96", "tags": "", "description": "This functions does nothing.", "example": "-", "docSyntax": "call BIS_fnc_3DENMissionStats", "syntax": "call BIS_fnc_3DENMissionStats"}, "BIS_fnc_compatibleMagazines": {"version": "1.96", "tags": "", "description": "Gets all compatible magazines for selected weapons. Function looks both for magazines listed in magazines array and compatible magazineWells.", "example": "[\"arifle_mx_f\"] call BIS_fnc_compatibleMagazines;", "docSyntax": "[weapon, returnHidden] call BIS_fnc_compatibleMagazines", "syntax": "[<string>,returnHidden] call BIS_fnc_compatibleMagazines"}, "BIS_fnc_parseNumberSafe": {"version": "1.96", "tags": "", "description": "Converts expression into a number. Can also convert array of expressions into an array of numbers. If expression does not return a number, 0 is returned.", "example": "[safeZoneX,safeZoneWAbs,configFile] call BIS_fnc_parseNumberSafe; //\u00a0Returns [-0.452381,1.90476,0]", "docSyntax": "[input] call BIS_fnc_parseNumberSafe", "syntax": "[input] call BIS_fnc_parseNumberSafe"}, "BIS_fnc_respawnBackpack": {"version": "1.96", "tags": "", "description": "Handles respawn camps functionality. Whoever \"assembles\" a camp from backpack it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby players will receive the respawn position as well.", "example": "-", "docSyntax": "[] call BIS_fnc_respawnBackpack", "syntax": "[] call BIS_fnc_respawnBackpack"}, "BIS_fnc_setCustomSoundController": {"version": "1.96", "tags": "", "description": "/* BIS_fnc_setCustomSoundController a: reyhard */", "docSyntax": "call BIS_fnc_setCustomSoundController", "syntax": "call BIS_fnc_setCustomSoundController"}, "BIS_fnc_spawnOrdered": {"version": "1.96", "tags": "", "description": "Spawns given function and executes it in the order it was called in case multiple calls are made. If mutex name is not specified, function name is used.", "example": "myFnc = { diag_log [_this, canSuspend] }; for \"_i\" from 0 to 1000 do { [_i, \"myFnc\"] call BIS_fnc_spawnOrdered };", "docSyntax": "[params, functionName, mutexName] call BIS_fnc_spawnOrdered", "syntax": "[<any>,functionName,mutexName] call BIS_fnc_spawnOrdered"}, "BIS_fnc_WLArsenalFilter": {"version": "1.96", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_WLArsenalFilter", "syntax": "[] call BIS_fnc_WLArsenalFilter"}, "BIS_fnc_WLParseAssetList": {"version": "1.96", "tags": "", "description": "N/A", "docSyntax": "[] call BIS_fnc_WLParseAssetList", "syntax": "[] call BIS_fnc_WLParseAssetList"}, "BIS_fnc_WLSyncedTime": {"version": "1.96", "tags": "", "description": "/* WARLORDS-SPECIFIC FUNCTION Author: Josef Zem\u00e1nek Description: Returns time synced between server and clients */", "docSyntax": "[] call BIS_fnc_WLSyncedTime", "syntax": "[] call BIS_fnc_WLSyncedTime"}, "currentPilot": {"version": "1.96", "tags": "", "description": "Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned. If you need current pilot of a UAV or UGV, see UAVControl command.", "example": "_pilot = currentPilot vehicle player;", "docSyntax": "currentPilot vehicle", "syntax": "currentPilot <objVehicle>"}, "diag_deltaTime": {"version": "1.96", "tags": "", "description": "Returns the duration of the previous frame in seconds", "example": "_frameTime = diag_deltaTime;", "docSyntax": "diag_deltaTime", "syntax": "diag_deltaTime", "type": "diagnoseStatement"}, "getDiverState": {"version": "1.96", "tags": "", "description": "Returns true when object is in diver state i.e. when unit would put diving goggles on.", "example": "private _gogglesOn = getDiverState player;", "docSyntax": "getDiverState unit", "syntax": "getDiverState <objUnit>"}, "getMissionPath": {"version": "1.96", "tags": "", "description": "Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as playSound3D, drawIcon3D, createSimpleObject, etc. Any leading \"\\\" in the filename will be stripped as the mission root includes one already.", "example": "//\u00a0would return e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\icons\\myIcon.paa\" private _path = getMissionPath \"icons\\myIcon.paa\"; private _path = getMissionPath \"\\icons\\myIcon.paa\"; //\u00a0leading \\ is also fine", "docSyntax": "getMissionPath filename", "syntax": "getMissionPath filename"}, "getObjectFOV": {"version": "1.96", "tags": "", "description": "Returns Field of View of the given object in radians. Static objects return default value, which is 1. FOV of objNull is 0. Object FOV is indirectly connected with optics magnification or player view zoom, the narrower the angle the greater the zoom.", "example": "_objFOV = getObjectFOV player;", "docSyntax": "getObjectFOV object", "syntax": "getObjectFOV <object>"}, "getPosWorldVisual": {"version": "1.96", "tags": "", "description": "Returns the provided object's, model centre position in render version in format PositionASL, rather than transformed boundingCenter or LandContact vertices.", "example": "_obj setPosWorld getPosWorldVisual _obj;", "docSyntax": "getPosWorldVisual object", "syntax": "getPosWorldVisual <object>"}, "isActionMenuVisible": {"version": "1.96", "tags": "", "description": "Returns true if scroll menu is visible.", "example": "if (isActionMenuVisible) then { hint \"Scroll menu is opened\" };", "docSyntax": "isActionMenuVisible", "syntax": "isActionMenuVisible"}, "isGameFocused": {"version": "1.96", "tags": "", "description": "Returns the state of game focus changed by pressing ALT + TAB or similar action.", "example": "if (!isGameFocused) then { endMission \"End\" };", "docSyntax": "isGameFocused", "syntax": "isGameFocused"}, "isGamePaused": {"version": "1.96", "tags": "", "description": "Returns the state of game simulation. Simulation can get paused by pressing ALT + TAB or a system dialog opening (e.g. ESC menu). Simulation will not get paused if -noPause startup parameter is used.", "example": "onEachFrame { if (isGamePaused) exitWith {}; //\u00a0...do stuff };", "docSyntax": "isGamePaused", "syntax": "isGamePaused"}, "removeDiaryRecord": {"version": "1.96", "tags": "", "description": "Remove a log record.", "example": "private _diaryRecord = player createDiaryRecord [\"diary\", [\"Subject\", \"Text\"]]; //\u00a0... player removeDiaryRecord [\"Diary\", _diaryRecord];", "docSyntax": "unit removeDiaryRecord [subject, diaryRecord]", "syntax": "<objUnit> removeDiaryRecord [<string>,diaryRecord]"}, "removeDiarySubject": {"version": "1.96", "tags": "", "description": "Removes a page and all its subjects from the Diary.", "example": "player removeDiarySubject \"myPage\";", "docSyntax": "player removeDiarySubject diaryPage", "syntax": "<objUnit> removeDiarySubject diaryPage"}, "setDiaryRecordText": {"version": "1.96", "tags": "", "description": "Set text of a log record.", "example": "player setDiaryRecordText [[\"diary\", _diaryRec], [\"Kill all enemies.\"]]", "docSyntax": "unit setDiaryRecordText [[subject, diaryRecord], [title, text]]", "syntax": "<objUnit> setDiaryRecordText [[<string>,diaryRecord],[title,<string>]]"}, "setEffectiveCommander": {"version": "1.96", "tags": "", "description": "Sets effectiveCommander of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver. Every time a person gets in or out of a vehicle, effective commander eligibility is recalculated by the engine based on the current crew. Use this command to force desired effective commander. In multiplayer, execute globally.", "example": "vehicle player setEffectiveCommander player;", "docSyntax": "vehicle setEffectiveCommander person", "syntax": "<objVehicle> setEffectiveCommander <objUnit>"}, "toLowerANSI": {"version": "1.96", "tags": "", "description": "ISO-8859-1", "example": "hint toLowerANSI \"AaBb1\"; // returns \"aabb1\"", "docSyntax": "toLowerANSI string", "syntax": "toLowerANSI <string>"}, "toUpperANSI": {"version": "1.96", "tags": "", "description": "ISO-8859-1", "example": "hint toUpperANSI \"AaBb1\"; // returns \"AABB1\"", "docSyntax": "toUpperANSI string", "syntax": "toUpperANSI <string>"}, "allActiveTitleEffects": {"version": "1.98", "tags": "", "description": "Returns a list of all layers that have currently active title effect. Numbers equal to or greater than 0 represent cut layers, where as -1 represents title layer (see Title Effect Type). Named layers are represented by their respective index.", "example": "cutText [\"Hello World!\" ,\"PLAIN\", 2]; hint str allActiveTitleEffects; // [0]", "docSyntax": "allActiveTitleEffects", "syntax": "allActiveTitleEffects"}, "BIS_fnc_drawBoundingBox": {"version": "1.98", "tags": "", "description": "Draws bounding box around given objects.", "example": "[[BIS_building], [1,0,1,1], true] call BIS_fnc_drawBoundingBox;", "docSyntax": "[objects, color, draw] call BIS_fnc_drawBoundingBox", "syntax": "[objects,<scalar>,draw] call BIS_fnc_drawBoundingBox"}, "BIS_fnc_escortAI": {"version": "1.98", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_escortAIHoldAction": {"version": "1.98", "tags": "", "description": "N/A", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_addLoadedEH": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_allInfectedDeadCode": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_AS ShowStaticText": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_BuildSectorsData": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_camera": {"version": "1.98", "tags": "", "description": "This article is a Stub. You can help BI Community Wiki by expanding it.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_conversation": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_createConversation": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_credits": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_Epicentrum": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_EXEC": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_HandleMapControls": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_infectedGroupHandle": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_init": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_medicineDeliveredCode": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_medicineRanOutCode": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_Module initSmallValueSilder": {"version": "1.98", "tags": "", "description": "Initialize slider with edit box showing its value supporting small decimal numbers.", "example": "[_ctrlSlider,_ctrlEdit,\"m\",500] call BIS_fnc_OM_Module_initSmallValueSilder;//Set default value only.", "docSyntax": "[ctrlSlider, ctrlEdit, unit, defaultValue] call BIS_fnc_OM_Module_initSmallValueSilder", "syntax": "[ctrlSlider,ctrlEdit,<objUnit>,defaultValue] call BIS_fnc_OM_Module_initSmallValueSilder"}, "BIS_fnc_OM_moduleActionQueue": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleAwareness": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint checkAngleToObject": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint checkDistanceFromObject": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint handleStates": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint intersect": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint navigateVehicleToCheck": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleCheckpoint playAnim": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleDepot": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleEconomy": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleFastTravel": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleMarket": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_ModuleQuest defend": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_ModuleQuest destroyObject": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleRadio": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleRandomConversation": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleReputation": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleRestPoint": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_moduleSmartMarkers": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_ModuleSyndikatAgent": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_ModuleSyndikatTeam": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_pause": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_addCall": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_addContact": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_core": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_customSectionInit": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_customSectionShow": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_customSectionWeatherShow": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_getDiaryListIndexByName": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_incomingCall": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_menuHandler": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_menuInit": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_removeCall": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_SMS": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_phone_SMSSend": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_saveGame": {"version": "1.98", "tags": "", "description": "Saves the game - simply calls saveGame.", "example": "call BIS_fnc_OM_saveGame;", "docSyntax": "call BIS_fnc_OM_saveGame", "syntax": "call BIS_fnc_OM_saveGame"}, "BIS_fnc_OM_savingEnabled": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_SectorGetSectors": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_sellEquipment": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_SentryDrone": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_skip": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_warnCriticalCode": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OM_warnMildCode": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMSetForecastLimit": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMWeatherManagerCore": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMWeatherManagerMain": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMWeatherManagerRain": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMWeatherReport": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_OMWeatherUICalc": {"version": "1.98", "tags": "", "description": "This function is used by the Arma 3 Apex: Old Man content. It might only work properly inside this scenario.", "docSyntax": "Syntax needed", "syntax": "Syntax needed"}, "BIS_fnc_transformVectorDirAndUp": {"version": "1.98", "tags": "", "description": "Rotates both vectorDir and vectorUp on 3 axes: z (yaw), x (pitch) and y (roll). Positive angle direction is according to the right hand rule.", "example": "_vDirUp = [[vectorDirVisual uav, vectorUpVisual uav], 0, 0, 90] call BIS_fnc_transformVectorDirAndUp;", "docSyntax": "[vectorDirAndUp, yaw, pitch, roll] call BIS_fnc_transformVectorDirAndUp", "syntax": "[vectorDirAndUp,yaw,pitch,roll] call BIS_fnc_transformVectorDirAndUp"}, "getTextWidth": {"version": "1.98", "tags": "", "description": "Returns estimated width of the text based on font type and size. Similar to ctrlTextWidth but does not require a control and can be used to estimate text width for any control including buttons. Result does not include left and right margins (hardcoded at 0.008 each).", "example": "_textWidth = \"Hello World\" getTextWidth [\"PuristaMedium\", 0.03];", "docSyntax": "text getTextWidth [font, size]", "syntax": "<string> getTextWidth [font,size]"}, "setTriggerInterval": {"version": "1.98", "tags": "", "description": "Sets the interval in seconds for trigger condition check.", "example": "_trigger setTriggerInterval 5;", "docSyntax": "trigger setTriggerInterval interval", "syntax": "<objTrigger> setTriggerInterval interval"}, "triggerInterval": {"version": "1.98", "tags": "", "description": "Returns trigger condition check frequency in seconds.", "example": "_interval = triggerInterval someTrigger;", "docSyntax": "triggerInterval trigger", "syntax": "triggerInterval <objTrigger>"}, "vehicleMoveInfo": {"version": "1.98", "tags": "", "description": "Returns current vehicle move/turn info (a getter for sendSimpleCommand) in format [moveInfo, turnInfo]. Possible values:", "example": "onEachFrame { hintSilent str vehicleMoveInfo vehicle player };", "docSyntax": "vehicleMoveInfo vehicle", "syntax": "vehicleMoveInfo <objVehicle>"}, "addonFiles": {"version": "2.00", "tags": "", "description": "Returns a list of files present in the addon.", "example": "addonFiles [\"a3\\3den\\\", \".paa\"]; /* [ \"a3\\3den\\data\\attributes\\formation\\ech_left_ca.paa\", \"a3\\3den\\data\\attributes\\formation\\stag_column_ca.paa\", \"a3\\3den\\data\\attributes\\stance\\down_ca.paa\", \"a3\\3den\\data\\cfg3den\\layer\\icondisabled_ca.paa\", \"a3\\3den\\data\\controlsgroups\\diagmousecontrol\\mouse_ca.paa\", ... ] */", "docSyntax": "addonFiles [pboPrefix, fileExtension]", "syntax": "addonFiles [pboPrefix,fileExtension]"}, "allAddonsInfo": {"version": "2.00", "tags": "", "description": "Returns the list of all loaded addons.", "example": "allAddonsInfo /* [ [\"bin\\\",\"146398\",false], [\"core\\\",\"129618\",false], [\"Languagecore_F\\\",\"148726\",false], [\"a3\\air_f_enoch\\\",\"145904\",false], [\"a3\\anims_f_enoch\\\",\"146917\",false], [\"a3\\armor_f_enoch\\\",\"145904\",false], ... ] */", "docSyntax": "allAddonsInfo", "syntax": "allAddonsInfo"}, "configOf": {"version": "2.00", "tags": "", "description": "Returns config path of the provided object.", "example": "configOf player; //\u00a0returns bin\\config.bin/CfgVehicles/B_W_Soldier_TL_F", "docSyntax": "configOf object", "syntax": "configOf <object>"}, "connectToServer": {"version": "2.00", "tags": "", "description": "Connects the client to the provided server.", "example": "connectToServer [\"192.168.0.2\", 2302, \"test\"];", "docSyntax": "connectToServer [ip, port, password]", "syntax": "connectToServer [ip,port,password]"}, "ctrlMousePosition": {"version": "2.00", "tags": "", "description": "Returns position of the mouse on the screen relative to UI Control in UI coordinates. Also works within CT_CONTROLS_GROUPs. In that case, returned position is relative to the position of the group.", "example": "_mousePos = ctrlMousePosition _ctrl;", "docSyntax": "ctrlMousePosition control", "syntax": "ctrlMousePosition <uiControl>"}, "ctrlScrollValues": {"version": "2.00", "tags": "", "description": "Returns scroll values for current scrollbars in range 0...1 (-1 if not applicable) for the following controls:", "example": "_scrollvalues = ctrlScrollValues _ctrl;", "docSyntax": "ctrlScrollValues control", "syntax": "ctrlScrollValues <uiControl>"}, "ctrlSetScrollValues": {"version": "2.00", "tags": "", "description": "Sets scroll values for current scrollbars in range 0...1 for the following controls:", "example": "_ctrlGrp ctrlSetScrollValues [-1, 0.5];", "docSyntax": "control ctrlSetScrollValues [vScrollValue, hScrollValue]", "syntax": "<uiControl> ctrlSetScrollValues [vScrollValue,hScrollValue]"}, "ctrlSetTextSelection": {"version": "2.00", "tags": "", "description": "Selects length characters of edit control from the start position and places cursor at the end of selection.", "example": "_control ctrlSetTextSelection [5, 10]", "docSyntax": "control ctrlSetTextSelection [start, length]", "syntax": "<uiControl> ctrlSetTextSelection [start,length]"}, "ctrlTextSelection": {"version": "2.00", "tags": "", "description": "Returns edit control text selection in format [start, length, selectedText].", "example": "Selection is made from left to right:ctrlTextSelection _control; //[0, 11, \"Hello World\"]", "docSyntax": "ctrlTextSelection control", "syntax": "ctrlTextSelection <uiControl>"}, "diag_allMissionEventHandlers": {"version": "2.00", "tags": "", "description": "Returns an array with all mission event handlers.", "example": "diag_allMissionEventHandlers; /* returns: [ \"Ended\",0, \"SelectedActionPerformed\",0, \"SelectedRotorLibActionPerformed\",0, \"SelectedActionChanged\",0, \"SelectedRotorLibActionChanged\",0, \"ControlsShifted\",0, \"Draw3D\",1, \"Loaded\",0, \"HandleDisconnect\",0, \"EntityRespawned\",0, \"EntityKilled\",0, \"MapSingleClick\",0, \"HCGroupSelectionChanged\",0, \"CommandModeChanged\",0, \"PlayerConnected\",0, \"PlayerDisconnected\",0, \"TeamSwitch\",0, \"GroupIconClick\",0, \"GroupIconOverEnter\",0, \"GroupIconOverLeave\",0, \"EachFrame\",0, \"PreloadStarted\",0, \"PreloadFinished\",0, \"Map\",0, \"PlayerViewChanged\",0, \"BuildingChanged\",0, \"MPEnded\",0, \"HandleAccTime\",0, \"ExtensionCallback\",0 ] */", "docSyntax": "diag_allMissionEventHandlers", "syntax": "diag_allMissionEventHandlers", "type": "diagnoseStatement"}, "diaryRecordNull": {"version": "2.00", "tags": "", "description": "A non-existent Diary Record. To compare non-existent objects use isNull or isEqualTo:", "example": "isNull diaryRecordNull; //\u00a0true", "docSyntax": "diaryRecordNull", "syntax": "diaryRecordNull"}, "elevatePeriscope": {"version": "2.00", "tags": "", "description": "Elevates periscope of a vehicle. Vehicles in Arma 3 which are compatible with this tech are Strider, remote laser designators, the robot arm on Eddie, etc. Please note that SDV submarine has a different periscope, which is just an animated selection and could be raised and lowered with animate command.", "example": "_eddie elevatePeriscope [[0], 0.75, 0.1];", "docSyntax": "vehicle elevatePeriscope [turret, elevation, speed, blockuser]", "syntax": "<objVehicle> elevatePeriscope [turret,elevation,<scalar>,blockuser]"}, "getAllUnitTraits": {"version": "2.00", "tags": "", "description": "Returns unit traits, native or set by setUnitTrait.", "example": "/* can return: [ [\"Medic\", false], [\"Engineer\", false], [\"ExplosiveSpecialist\", false], [\"UavHacker\", false], [\"CamouflageCoef\", 1], [\"AudibleCoef\", 1], [\"LoadCoef\", 1], [\"test\", \"custom\"] ] */ private _playerTraits = getAllUnitTraits player;", "docSyntax": "getAllUnitTraits unit", "syntax": "getAllUnitTraits <objUnit>"}, "getAssetDLCInfo": {"version": "2.00", "tags": "", "description": "Returns DLC information about given object or model.", "example": "getAssetDLCInfo player;", "docSyntax": "getAssetDLCInfo asset", "syntax": "getAssetDLCInfo asset"}, "getAttackTarget": {"version": "2.00", "tags": "", "description": "Returns the target given unit is engaging.", "example": "_theEnemyWhoHesEngaging = getAttackTarget unit;", "docSyntax": "getAttackTarget unit", "syntax": "getAttackTarget <objUnit>"}, "getLighting": {"version": "2.00", "tags": "", "description": "Gets general environment's light settings.", "example": "getLighting; //\u00a0Returns [[0.646753,0.781818,1],28526.2,[-0.0167152,0.211598,-0.977214],0]", "docSyntax": "getLighting", "syntax": "getLighting"}, "getLightingAt": {"version": "2.00", "tags": "", "description": "Gets provided object's lighting information.", "example": "getLightingAt player; //\u00a0returns [[1,1,1], 0.5, [0,0,0], 0]", "docSyntax": "getLightingAt obj", "syntax": "getLightingAt <object>"}, "getLoadedModsInfo": {"version": "2.00", "tags": "", "description": "Returns information about all loaded modifications.", "example": "_loadedMods = getLoadedModsInfo; /* [ [\"dummy\",\"dummy\",false,false,\"NOT FOUND\",\"\",\"\",\"0\"], [\"CUP Units DEV Version r710 (r710-r710 UNITSSVN) (12|Jun|2020)\",\"@[DEV] CUP Units\",false,false,\"GAME DIR\",\"f3fb8a4c62443ac799c7c0e00f645b1f32cf1376\",\"c96577b4\",0], [\"CUP Weapons DEV Version r1486 (r1481-r1486 WEAPONSSVN) (12|Jun|2020)\",\"@[DEV] CUP Weapons\",false,false,\"GAME DIR\",\"6dbd7c052ce2ae68803e10f6a3653d0b046881d8\",\"bb1c4965\",0], [\"Community Base Addons v3.15.1\",\"@CBA_A3\",false,false,\"GAME DIR\",\"33eef5c0ed583d1222319460b184090513193287\",\"131bbb64\",0], [\"Arma 3 Contact (Platform)\",\"enoch\",true,true,\"GAME DIR\",\"4298e892077aec33be6b68730a974400a3c3a636\",\"43e900ae\",\"1021790\"], [\"Arma 3 Tanks\",\"tank\",true,true,\"GAME DIR\",\"c47d45d7ce1261e0a0d1c4ed9517611eae6ebf9f\",\"1aec74ec\",\"798390\"], [\"Arma 3 Tac-Ops\",\"tacops\",true,true,\"GAME DIR\",\"808cc67221feadc288c856395cac28b908966eee\",\"441362c6\",\"744950\"], [\"Arma 3 Laws of War\",\"orange\",true,true,\"GAME DIR\",\"aa86785568206ae1e7becaa09eb673ee645d971f\",\"4729aa84\",\"571710\"], [\"Arma 3 Malden\",\"argo\",true,true,\"GAME DIR\",\"db6d4d06a3ad28207da665e8c34bbd8adf191019\",\"61001811\",\"639600\"], [\"Arma 3 Jets\",\"jets\",true,true,\"GAME DIR\",\"8e8e1f9275e37cc90c0f2a8a6901dd2a3e81a29a\",\"fc8366ee\",\"601670\"], [\"Arma 3 Apex\",\"expansion\",true,true,\"GAME DIR\",\"48f32952612dbb6ca972790c17c9920797073233\",\"fc4aed7f\",\"395180\"], [\"Arma 3 Marksmen\",\"mark\",true,true,\"GAME DIR\",\"85c7f2284f8b0271bfafecd96c49230ce0515861\",\"534e5baa\",\"332350\"], [\"Arma 3 Helicopters\",\"heli\",true,true,\"GAME DIR\",\"dae29688657dbc9057f9eb83179a3ad21d3a689d\",\"e7165098\",\"304380\"], [\"Arma 3 Karts\",\"kart\",true,true,\"GAME DIR\",\"eae9e0b218e7a8e8e906477ee1a5e8e3d5298f18\",\"8240ae3f\",\"288520\"], [\"Arma 3 Zeus\",\"curator\",true,true,\"GAME DIR\",\"2310c5c95a558253c7286d93f5a2a810fbf9b620\",\"8af0db5d\",\"275700\"], [\"Arma 3\",\"A3\",true,true,\"NOT FOUND\",\"\",\"\",\"0\"] ] */", "docSyntax": "getLoadedModsInfo", "syntax": "getLoadedModsInfo"}, "getPlayerVoNVolume": {"version": "2.00", "tags": "", "description": "Gets provided player's Voice over Network (VoN) volume.", "example": "private _volume = getPlayerVoNVolume (units player select 1);", "docSyntax": "getPlayerVoNVolume unit", "syntax": "getPlayerVoNVolume <objUnit>"}, "getRoadInfo": {"version": "2.00", "tags": "", "description": "Returns road info in format [mapType, width, isPedestrian, texture, textureEnd, material, begPos, endPos, isBridge]", "example": "getRoadInfo _road", "docSyntax": "getRoadInfo road", "syntax": "getRoadInfo road"}, "getSteamFriendsServers": {"version": "2.00", "tags": "", "description": "Returns servers information of Steam friends currently playing the game.", "example": "getSteamFriendsServers; //\u00a0returns e.g [[\"127.42.33.8:2302\", \"MyFriend\"], [\"127.84.66.16:4604\", \"My Best Friend\"]]", "docSyntax": "getSteamFriendsServers", "syntax": "getSteamFriendsServers"}, "getVehicleTIPars": {"version": "2.00", "tags": "", "description": "Returns TI parameters of a vehicle.", "example": "getVehicleTIPars _veh;", "docSyntax": "getVehicleTIPars vehicle", "syntax": "getVehicleTIPars <objVehicle>"}, "is3DENPreview": {"version": "2.00", "tags": "", "description": "Returns true if the Eden Editor is currently in mission preview mode, single player or multiplayer. (see also is3DEN, is3DENMultiplayer)", "example": "if is3DENPreview then {systemChat \"Welcome to Eden Editor Preview!\"};", "docSyntax": "is3DENPreview", "syntax": "is3DENPreview"}, "isFinal": {"version": "2.00", "tags": "", "description": "Checks if code or a variable was compiled final with compileFinal.", "example": "myCode = compileFinal \"a = a + 1\"; if (isFinal myCode) then {systemChat \"Code is compiled final.\"};", "docSyntax": "isFinal variable", "syntax": "isFinal variable"}, "localNamespace": {"version": "2.00", "tags": "", "description": "Returns local Namespace attached to the mission. Has the same lifetime as missionNamespace but variables cannot be broadcasted out of or into this namespace in multiplayer and will not be serialized when game is saved. UI variables can be safely stored in this namespace. Use allVariables command to save the variables elsewhere if required.", "example": "localNamespace setVariable [\"abc\", 123]", "docSyntax": "localNamespace", "syntax": "localNamespace"}, "lockedInventory": {"version": "2.00", "tags": "", "description": "Get a vehicle's inventory lock state. Can also be used on a unit's backback (see lockInventory).", "example": "_isInventoryLocked = lockedInventory vehicle player;", "docSyntax": "lockedInventory vehicle", "syntax": "lockedInventory <objVehicle>"}, "lockInventory": {"version": "2.00", "tags": "", "description": "Lock or unlock a vehicle's inventory access. This command can also lock backpack a unit is wearing to prevent access by a third party. If you set it true (locked), the inventory won't be accessed via hotkey or action menu.", "example": "vehicle player lockInventory true;", "docSyntax": "vehicle lockInventory lock", "syntax": "<objVehicle> lockInventory lock"}, "namedProperties": {"version": "2.00", "tags": "", "description": "Returns a list of named properties on Geometry LOD.", "example": "_properties = namedProperties _object; // [[\"sbsource\",\"shadowvolume\"],[\"prefershadowvolume\",\"1\"],[\"reversed\",\"1\"],[\"buoyancy\",\"1\"]]", "docSyntax": "namedProperties object", "syntax": "namedProperties <object>"}, "periscopeElevation": {"version": "2.00", "tags": "", "description": "Returns current periscope elevation value, see also elevatePeriscope.", "example": "_eddie periscopeElevation [0];", "docSyntax": "vehicle periscopeElevation turretPath", "syntax": "<objVehicle> periscopeElevation turretPath"}, "radioChannelInfo": {"version": "2.00", "tags": "", "description": "Obtains custom radio channel's details, set by radioChannelCreate.", "example": "private _channelID = radioChannelCreate [[1, 0, 0.5, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false]; radioChannelInfo _channelID; //\u00a0returns [[1,0,0.5,0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false, true]", "docSyntax": "radioChannelInfo customChannelID", "syntax": "radioChannelInfo customChannelID"}, "setPlayerVoNVolume": {"version": "2.00", "tags": "", "description": "Sets provided player's Voice over Network (VoN) volume.", "example": "_loudPlayer setPlayerVoNVolume 0.5;", "docSyntax": "unit setPlayerVoNVolume volume", "syntax": "<objUnit> setPlayerVoNVolume volume"}, "setWaypointLoiterAltitude": {"version": "2.00", "tags": "", "description": "Assignes loiter altitude to waypoint", "example": "[_grp, 2] setWaypointLoiterAltitude 100", "docSyntax": "waypoint setWaypointLoiterAltitude loiterAltitude", "syntax": "waypoint setWaypointLoiterAltitude loiterAltitude"}, "surfaceTexture": {"version": "2.00", "tags": "", "description": "Same as surfaceType, but returns texture path to ground texture as string.", "example": "_tex = surfaceTexture getPos player;", "docSyntax": "surfaceTexture position", "syntax": "surfaceTexture position"}, "systemTime": {"version": "2.00", "tags": "", "description": "Returns system time.", "example": "_currentTime = systemTime;", "docSyntax": "systemTime", "syntax": "systemTime"}, "systemTimeUTC": {"version": "2.00", "tags": "", "description": "Returns systemTime according to Universal Time Coordinated time scale.", "example": "private _UKTime = systemTimeUTC;", "docSyntax": "systemTimeUTC", "syntax": "systemTimeUTC"}, "unitTurret": {"version": "2.00", "tags": "", "description": "Returns the turret path the given vehicle's gunner is in. [-1] is returned if gunner is driver. When unit is not in any of vehicle's turret, empty array [] is returned. To get unit in turret see turretUnit", "example": "_vehicle unitTurret _gunner;", "docSyntax": "vehicle unitTurret gunner", "syntax": "<objVehicle> unitTurret gunner"}, "waypointLoiterAltitude": {"version": "2.00", "tags": "", "description": "Gets the waypoint loiter altitude. Waypoint uses format Waypoint.", "example": "private _loiterAlt = waypointLoiterAltitude [groupOne, 1];", "docSyntax": "waypointLoiterAltitude waypoint", "syntax": "waypointLoiterAltitude waypoint"}, "addBinocularItem": {"version": "2.02", "tags": "", "description": "Adds weapon item, including magazine, directly to the binocular weapon. This is used for infantry weapons.", "example": "player addBinocularItem \"Laserbatteries\";", "docSyntax": "unit addBinocularItem item", "syntax": "<objUnit> addBinocularItem <objItem>"}, "binocularItems": {"version": "2.02", "tags": "", "description": "Returns array with all items assigned to the binocular weapon except magazines. Use binocularMagazine command for the latter. This command is used for infantry weapons only.", "example": "binocularItems player;", "docSyntax": "binocularItems unit", "syntax": "binocularItems <objUnit>"}, "binocularMagazine": {"version": "2.02", "tags": "", "description": "Collects all loaded magazines from all binocular muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.", "example": "hint str binocularMagazine player; //\u00a0[\"Laserbatteries\"]", "docSyntax": "binocularMagazine unit", "syntax": "binocularMagazine <objUnit>"}, "break": {"version": "2.02", "tags": "", "description": "Skips all loop interations.", "example": "for \"_i\" from 0 to 3 do { if (_i == 2) then { break }; systemChat str _i; };//\u00a0prints 0, 1 and then exit", "docSyntax": "break", "syntax": "break"}, "breakWith": {"version": "2.02", "tags": "", "description": "Skips all loop iterations and immediately returns the given value.", "example": "This loop will stop once _i reaches 5; the output will be \"0\", \"1\", \"2\", \"3\", \"4\" and finally \"END\". systemChat call { for \"_i\" from 0 to 10 do { if (_i == 5) then { breakWith \"END\"; }; systemChat str _i; }; };", "docSyntax": "breakWith return", "syntax": "breakWith return"}, "compileScript": {"version": "2.02", "tags": "", "description": "This command is an alias for compile(Final) (prefixHeader + preprocessFileLineNumbers path). See description of preprocessFileLineNumbers for more details.", "example": "compileScript [\"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\"]; //\u00a0has the same functionality as compile preprocessFileLineNumbers \"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\";", "docSyntax": "compileScript [path, final, prefixHeader]", "syntax": "compileScript [path,final,prefixHeader]"}, "continue": {"version": "2.02", "tags": "", "description": "Skips current loop iteration and continues with the next one.", "example": "for \"_i\" from 0 to 3 do { if (_i == 2) then { continue }; systemChat str _i; }; //\u00a0prints 0, 1, 3", "docSyntax": "continue", "syntax": "continue"}, "continueWith": {"version": "2.02", "tags": "", "description": "Skips the current loop iteration, continues with the next one and returns the given value.", "example": "The result of this code will be [2, \"TEST\", 4]. [1, 2, 3] apply { if (_x == 2) then { continueWith \"TEST\"; } else { _x + 1 }; };", "docSyntax": "continueWith return", "syntax": "continueWith return"}, "createHashMap": {"version": "2.02", "tags": "", "description": "Creates a new empty HashMap.", "example": "private _myHashMap = createHashMap;", "docSyntax": "createHashMap", "syntax": "createHashMap"}, "createHashMapFromArray": {"version": "2.02", "tags": "", "description": "Creates a new HashMap and initializes it from a key-value pair array", "example": "createHashMapFromArray [[\"a\",1], [\"b\",2], [\"c\",3]];", "docSyntax": "createHashMapFromArray [[key1, value1], [key2, value2]]", "syntax": "createHashMapFromArray [[key1,value1],[key2,value2]]"}, "ctrlFontHeight": {"version": "2.02", "tags": "", "description": "Returns control's font size, usually sizeEx value (see ctrlSetFontHeight).", "example": "ctrlFontHeight _control;", "docSyntax": "ctrlFontHeight control", "syntax": "ctrlFontHeight <uiControl>"}, "ctrlSetMousePosition": {"version": "2.02", "tags": "", "description": "Similar to setMousePosition but relative to the given control.", "example": "_control ctrlSetMousePosition [0.5, 0.5];", "docSyntax": "control ctrlSetMousePosition [x, y]", "syntax": "<uiControl> ctrlSetMousePosition [x,y]"}, "ctrlSetURL": {"version": "2.02", "tags": "", "description": "Sets URL property of the given control subject to allowedHTMLLoadURIs[] whitelisting in CfgCommands config. Supported controls are:", "example": "_control ctrlSetURL \"http://arma3.com/\"; // note the forward slash / at the end", "docSyntax": "control ctrlSetURL URL", "syntax": "<uiControl> ctrlSetURL URL"}, "ctrlStyle": {"version": "2.02", "tags": "", "description": "Returns the provided control's style. See Arma: GUI Configuration - Control Styles.", "example": "private _ctrlStyle = ctrlStyle _myControl; private _bitFlags = _ctrlStyle call BIS_fnc_bitflagsToArray; if (2 in _bitFlags) then { hint \"This control has centered text!\"; };", "docSyntax": "ctrlStyle control", "syntax": "ctrlStyle <uiControl>"}, "ctrlTextColor": {"version": "2.02", "tags": "", "description": "Returns control's text color in Color (RGBA) format (see ctrlSetTextColor).", "example": "ctrlTextColor _control", "docSyntax": "ctrlTextColor control", "syntax": "ctrlTextColor <uiControl>"}, "ctrlTooltip": {"version": "2.02", "tags": "", "description": "Returns the tooltip property of a button control. Getter for ctrlSetTooltip.", "example": "ctrlTooltip _control;", "docSyntax": "ctrlTooltip control", "syntax": "ctrlTooltip <uiControl>"}, "ctrlURL": {"version": "2.02", "tags": "", "description": "Returns the URL property of a button control. Getter for ctrlSetURL.", "example": "ctrlURL _control; //\u00a0e.g. \"http://arma3.com/\"", "docSyntax": "ctrlURL control", "syntax": "ctrlURL <uiControl>"}, "diag_exportConfig": {"version": "2.02", "tags": "", "description": "Exports given config into file of given path.", "example": "diag_exportConfig [\"O:/config.cpp\", configFile]; //\u00a0exports an All-in-One config", "docSyntax": "diag_exportConfig [path, config]", "syntax": "diag_exportConfig [path,config]", "type": "diagnoseStatement"}, "diag_exportTerrainSVG": {"version": "2.02", "tags": "", "description": "Highly detailed map of Stratis", "example": "diag_exportTerrainSVG [\"C:\\Users\\USERNAME\\Desktop\\Stratis_Map.svg\", true, true, true, true, true, false]; //\u00a0Replace USERNAME with your username!", "docSyntax": "diag_exportTerrainSVG [filePath, drawLocationNames, drawGrid, drawCountlines, drawTreeObjects, drawMountainHeightpoints, simpleRoads]", "syntax": "diag_exportTerrainSVG [filePath,drawLocationNames,drawGrid,drawCountlines,drawTreeObjects,drawMountainHeightpoints,simpleRoads]", "type": "diagnoseStatement"}, "diag_scope": {"version": "2.02", "tags": "", "description": "Returns script scope depth. When script is directly executed by the engine or a new script is added to the scheduler, the scope depth is 0. The examples of such execution are event handlers, spawn, etc. isNil Code will also create a parent scope. Any use of call and such will stack execution creating child scopes and increasing scope depth.", "example": "[] spawn { systemChat str diag_scope; // 0 call { call { systemChat str diag_scope; // 2 isNil { systemChat str diag_scope; // 0 call { systemChat str diag_scope; // 1 }; }; }; }; };", "docSyntax": "diag_scope", "syntax": "diag_scope", "type": "diagnoseStatement"}, "fileExists": {"version": "2.02", "tags": "", "description": "Checks if file on given path exists. Uses same path resolve code as loadFile.", "example": "fileExists \"\\a3\\mySuperPath\\bestFileEver.paa\"; // returns false", "docSyntax": "fileExists path", "syntax": "fileExists path"}, "flatten": {"version": "2.02", "tags": "", "description": "Flattens an array.", "example": "flatten [1, [2], [[3]], [[[4]]]]; //\u00a0returns [1, 2, 3, 4]", "docSyntax": "flatten array", "syntax": "flatten <array>"}, "forceCadetDifficulty": {"version": "2.02", "tags": "", "description": "Forces showCadetHints and showCadetWP global Cadet Arma 3 difficulty, returns previous settings.", "example": "private _previousSettings = forceCadetDifficulty [true, false];", "docSyntax": "forceCadetDifficulty [showCadetHints, showCadetWP]", "syntax": "forceCadetDifficulty [showCadetHints,showCadetWP]"}, "forceUnicode": {"version": "2.02", "tags": "", "description": "Sets the Unicode flag which forces some of the string manipulation commands to switch to Unicode. The Unicode flag is always set right after forceUnicode command execution, but is reset depending on the command mode:", "example": "copyToClipboard \"\u0434\"; //\u00a0Copies \"\u00d0\u00b4\" to clipboard forceUnicode 1; copyToClipboard \"\u0434\"; //\u00a0Copies \"\u0434\" to clipboard", "docSyntax": "forceUnicode mode", "syntax": "forceUnicode mode"}, "get": {"version": "2.02", "tags": "", "description": "Retrieves a value out of a HashMap after looking it up by its key.", "example": "private _myValue = _myHashMap get \"a\";", "docSyntax": "hashMap get key", "syntax": "hashMap get key"}, "getAllPylonsInfo": {"version": "2.02", "tags": "", "description": "Return an array with the vehicle's all pylons info.", "example": "getAllPylonsInfo vehicle player; /* Executed on an Mi-48 Kajman: [ [1,\"PylonLeft1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000646\"], [2,\"PylonLeft2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000648\"], [3,\"PylonRight2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000649\"], [4,\"PylonRight1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000650\"] ] */", "docSyntax": "getAllPylonsInfo vehicle", "syntax": "getAllPylonsInfo <objVehicle>"}, "getObjectScale": {"version": "2.02", "tags": "", "description": "Returns the render scale of the object relative to the original model.", "example": "_scale = getObjectScale _object;", "docSyntax": "getObjectScale object", "syntax": "getObjectScale <object>"}, "getOrDefault": {"version": "2.02", "tags": "", "description": "Retrieves a value out of a HashMap after looking it up by its key. When the HashMap doesn't contain the key, the default value is returned", "example": "private _myValue = _myHashMap getOrDefault [\"a\", \"Not Found!\"];", "docSyntax": "hashMap getOrDefault [key, defaultValue, setDefault]", "syntax": "hashMap getOrDefault [key,defaultValue,setDefault]"}, "getPlayerID": {"version": "2.02", "tags": "", "description": "Returns user DirectPlay ID, which can be used with getUserInfo, and is found in allMapMarkers results and in some mission event handlers such as PlayerConnected.", "example": "getPlayerID player;", "docSyntax": "getPlayerID unit", "syntax": "getPlayerID <objUnit>"}, "getTextRaw": {"version": "2.02", "tags": "", "description": "Returns raw text from config entry. If entry is subject to localization, the translation key is returned. To obtain the localized text, see getText.", "example": "_text = getTextRaw (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); //\u00a0\"$STR_ACTION_GETIN_DRIVER\" _key = _text select [1]; //\u00a0\"STR_ACTION_GETIN_DRIVER\" _localized = localize _key; //\u00a0\"Get in %1 as Driver\" _localized == getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); //\u00a0true", "docSyntax": "getTextRaw config", "syntax": "getTextRaw config"}, "HashMap": {"version": "2.02", "tags": ""}, "import": {"version": "2.02", "tags": ""}, "insert": {"version": "2.02", "tags": "", "description": "Inserts multiple values into Array/String/HashMap.", "example": "\"Test\" insert [0, \"Radio\"]; //\u00a0Returns \"RadioTest\"", "docSyntax": "array insert [index, [value1, value2, ...], onlyIfUnique]", "syntax": "<array> insert [<scalar>,[value1,value2,...],onlyIfUnique]"}, "isNotEqualTo": {"version": "2.02", "tags": "", "description": "Performs strict comparison between var1 and var2 and returns false if equal, otherwise true.", "example": "_true = 0 isNotEqualTo 1;", "docSyntax": "val1 isNotEqualTo val2", "syntax": "val1 isNotEqualTo val2"}, "keys": {"version": "2.02", "tags": "", "description": "Retrieves a list of all keys in a HashMap.", "example": "keys _myHashMap;", "docSyntax": "keys hashMap", "syntax": "keys hashMap"}, "markerChannel": {"version": "2.02", "tags": "", "description": "Returns the channel that a marker belongs to.", "example": "markerChannel \"marker_1\";", "docSyntax": "markerChannel marker", "syntax": "markerChannel marker"}, "markerPolyline": {"version": "2.02", "tags": "", "description": "Returns a polyline marker's path data.", "example": "markerPolyline \"_USER_DEFINED #0/0/1\"; //\u00a0Returns your first polyline's data in Singleplayer", "docSyntax": "markerPolyline marker", "syntax": "markerPolyline marker"}, "menuSetShortcut": {"version": "2.02", "tags": "", "description": "Sets shortcut of given menu strip entry.", "example": "_ctrlMenuStrip menuSetShortcut [[0,0],2048 + 0x16]; //\u00a0ALT + U", "docSyntax": "menuSetShortcut [idc, path, shortcut]", "syntax": "menuSetShortcut [<scalar>,path,shortcut]"}, "menuSetText": {"version": "2.02", "tags": "", "description": "Sets text of given menu strip entry.", "example": "_ctrlMenuStrip menuSetText [[0,0,1], \"Hello World!\"];", "docSyntax": "menuSetText [idc, path, text]", "syntax": "menuSetText [<scalar>,path,<string>]"}, "menuSetURL": {"version": "2.02", "tags": "", "description": "Sets weblink (URL) of given menu strip entry, subject to allowedHTMLLoadURIs[] whitelisting in CfgCommands config.", "example": "_ctrlMenuStrip menuSetURL [[0,0,1], \"https://arma3.com/\"];", "docSyntax": "menuSetURL [idc, path, link]", "syntax": "menuSetURL [<scalar>,path,link]"}, "merge": {"version": "2.02", "tags": "", "description": "Merges two HashMaps.", "example": "_hashMap merge _otherHashMap;", "docSyntax": "hashMap1 merge hashMap2", "syntax": "hashMap1 merge hashMap2"}, "missionNameSource": {"version": "2.02", "tags": "", "description": "Return workshop-compatible currently loaded mission file (path to mission.pbo, relative to game exe).", "example": "hint format [\"You are playing mission \"\"%1\"\"\", missionNameSource];", "docSyntax": "missionNameSource", "syntax": "missionNameSource"}, "removeAllBinocularItems": {"version": "2.02", "tags": "", "description": "Removes all items from binocular weapon, except magazine.", "example": "removeAllBinocularItems player;", "docSyntax": "removeAllBinocularItems unit", "syntax": "removeAllBinocularItems <objUnit>"}, "removeAllSecondaryWeaponItems": {"version": "2.02", "tags": "", "description": "Removes all items from secondaryWeapon, except magazine.", "example": "removeAllSecondaryWeaponItems player;", "docSyntax": "removeAllSecondaryWeaponItems unit", "syntax": "removeAllSecondaryWeaponItems <objUnit>"}, "removeBinocularItem": {"version": "2.02", "tags": "", "description": "Removes given weapon item, including magazine, from the binocular weapon.", "example": "player removeBinocularItem \"Laserbatteries\";", "docSyntax": "unit removeBinocularItem item", "syntax": "<objUnit> removeBinocularItem <objItem>"}, "setMarkerPolyline": {"version": "2.02", "tags": "", "description": "Sets a polyline marker's path.", "example": "Changes \"marker_1\" into a polyline and draws a sine curve on your position\"marker_1\" setMarkerShape \"polyline\"; private _return = []\u00a0; for \"_i\" from 0 to 100 step 0.1 do { _return pushBack (_i + getPosASL player#0); _return pushBack ((sin (_i*10))*10 + getPosASL player#1); }\u00a0; \"marker_1\" setMarkerPolyline _return;", "docSyntax": "marker setMarkerPolyline path", "syntax": "marker setMarkerPolyline path"}, "setMarkerPolylineLocal": {"version": "2.02", "tags": "", "description": "Sets a polyline marker's path. Works only on the computer that executes this command.", "example": "Changes \"marker_1\" into a polyline and draws a sine curve on your position\"marker_1\" setMarkerShape \"polyline\"; private _return = []\u00a0; for \"_i\" from 0 to 100 step 0.1 do { _return pushBack (_i + getPos player#0); _return pushBack ((sin (_i*10))*10 + getPos player#1); }\u00a0; \"marker_1\" setMarkerPolylineLocal _return;", "docSyntax": "marker setMarkerPolylineLocal path", "syntax": "marker setMarkerPolylineLocal path"}, "setObjectScale": {"version": "2.02", "tags": "", "description": "Scales an attached object or a Simple Object's model.", "example": "_mrap attachTo [player,[0,0,0]]; _mrap setObjectScale 0.1;", "docSyntax": "object setObjectScale scale", "syntax": "<object> setObjectScale <scalar>"}, "setUnitCombatMode": {"version": "2.02", "tags": "", "description": "Sets unit's combat mode (engagement rules). For AI group combat mode see setCombatMode. Mode may be one of the following:", "example": "_unit setUnitCombatMode \"YELLOW\"", "docSyntax": "unit setUnitCombatMode mode", "syntax": "<objUnit> setUnitCombatMode mode"}, "trim": {"version": "2.02", "tags": "", "description": "Trims a string.", "example": "trim \" hello, how are you? \"; //\u00a0returns \"hello, how are you?\"", "docSyntax": "trim stringValue", "syntax": "trim stringValue"}, "tvIsSelected": {"version": "2.02", "tags": "", "description": "Returns true if given treeview item is selected.", "example": "_control tvIsSelected [0];", "docSyntax": "control tvIsSelected path", "syntax": "<uiControl> tvIsSelected path"}, "tvSelection": {"version": "2.02", "tags": "", "description": "Returns array of paths to selected items.", "example": "_selection = tvSelection _ctrlTV;", "docSyntax": "tvSelection control", "syntax": "tvSelection <uiControl>"}, "tvSetSelected": {"version": "2.02", "tags": "", "description": "Sets the selection state of given treeview item in multi-select control.", "example": "_control tvSetSelected [[0], true];", "docSyntax": "control tvSetSelected [path, selected]", "syntax": "<uiControl> tvSetSelected [path,selected]"}, "tvSortAll": {"version": "2.02", "tags": "", "description": "Sorts all children, including trees deriving from given path. Text of Tree View entries is used for sorting.", "example": "control tvSortAll [[], false]; //\u00a0Sorts the complete Tree View", "docSyntax": "control tvSortAll [path, reversed]", "syntax": "<uiControl> tvSortAll [path,reversed]"}, "tvSortByValueAll": {"version": "2.02", "tags": "", "description": "Sorts all children, including trees deriving from given path. Value of Tree View entries is used for sorting.", "example": "control tvSortByValueAll [[], false]; //\u00a0Sorts the complete Tree View", "docSyntax": "control tvSortByValueAll [path, reversed]", "syntax": "<uiControl> tvSortByValueAll [path,reversed]"}, "unitCombatMode": {"version": "2.02", "tags": "", "description": "Gets individual unit's combat mode. For more information see setUnitCombatMode.", "example": "unitCombatMode _unit", "docSyntax": "unitCombatMode unit", "syntax": "unitCombatMode <objUnit>"}, "allDiarySubjects": {"version": "2.04", "tags": "", "description": "Returns array with all Diary subjects available to the given person. See Diary for the explanation on the available subjects and their structure.", "example": "allDiarySubjects player;", "docSyntax": "allDiarySubjects person", "syntax": "allDiarySubjects <objUnit>"}, "apertureParams": {"version": "2.04", "tags": "", "description": "Returns current aperture parameters.", "example": "private _apertureParams = apertureParams;", "docSyntax": "apertureParams", "syntax": "apertureParams"}, "combatBehaviour": {"version": "2.04", "tags": "", "description": "Returns combat behaviour of unit or group. To set unit or group behaviour see setCombatBehaviour. The behaviour is one of:", "example": "unit1 setCombatBehaviour \"CARELESS\"; combatBehaviour unit1; //\"CARELESS\"", "docSyntax": "combatBehaviour unit", "syntax": "combatBehaviour <objUnit>"}, "diag_dumpTerrainSynth": {"version": "2.04", "tags": "", "description": "Returns OutsideTerrain's current world's values.", "example": "private _terrainSynth = diag_dumpTerrainSynth;", "docSyntax": "diag_dumpTerrainSynth", "syntax": "diag_dumpTerrainSynth", "type": "diagnoseStatement"}, "diag_getTerrainGrid": {"version": "2.04", "tags": "", "description": "Returns terrain cell size (size of each grid cell in the Heightmap) as scalar", "example": "private _terrainGrid = diag_getTerrainGrid;", "docSyntax": "diag_getTerrainGrid", "syntax": "diag_getTerrainGrid", "type": "diagnoseStatement"}, "diag_getTerrainHeight": {"version": "2.04", "tags": "", "description": "Returns terrain height at the specified location.", "example": "private _h = diag_getTerrainHeight position player;", "docSyntax": "diag_getTerrainHeight positionWorld", "syntax": "diag_getTerrainHeight positionWorld", "type": "diagnoseStatement"}, "diag_getTerrainSegmentOffset": {"version": "2.04", "tags": "", "description": "Returns the terrain segment. It is basically the same as: _worldPos params [\"_x\", \"_y\"]; [floor(_x/diag_getTerrainGrid), floor(_y/diag_getTerrainGrid)];", "example": "private _segmentOffset = diag_getTerrainSegmentOffset getPosWorld player;", "docSyntax": "diag_getTerrainSegmentOffset PositionWorld", "syntax": "diag_getTerrainSegmentOffset PositionWorld", "type": "diagnoseStatement"}, "diag_localized": {"version": "2.04", "tags": "", "description": "Returns array with all localized keys from the given stringtable or the array of all stringtables names if empty string \"\" is given. Common stringtables are: \"Global\", \"Mission\", \"Campaign\".", "example": "private _randomKey = selectRandom diag_localized \"Global\"; hint format [\"Key: %1\\nValue: %2\", _randomKey, localize _randomKey];", "docSyntax": "diag_localized stringtable", "syntax": "diag_localized stringtable", "type": "diagnoseStatement"}, "environmentVolume": {"version": "2.04", "tags": "", "description": "Returns the current environment volume (set by fadeEnvironment)", "example": "hint str environmentVolume;", "docSyntax": "environmentVolume", "syntax": "environmentVolume"}, "fadeEnvironment": {"version": "2.04", "tags": "", "description": "Changes the master environment volume smoothly within the given time and is different from enableEnvironment global mute option. The default volume is 1.", "example": "5 fadeEnvironment 0.1;", "docSyntax": "time fadeEnvironment volume", "syntax": "<scalar> fadeEnvironment volume"}, "focusedCtrl": {"version": "2.04", "tags": "", "description": "Returns currently focused control.", "example": "_focused = focusedCtrl findDisplay 12;", "docSyntax": "focusedCtrl display", "syntax": "focusedCtrl <uiDisplay>"}, "markerShadow": {"version": "2.04", "tags": "", "description": "Returns if the marker is drawn with shadow enabled.", "example": "_shadowEnabled = markerShadow _myMarker;", "docSyntax": "markerShadow marker", "syntax": "markerShadow marker"}, "openGPS": {"version": "2.04", "tags": "", "description": "Opens or closes minimap if player has \"ItemGPS\" linked in inventory and \"MinimapDisplayComponent\" is not disabled with enableInfoPanelComponent. Returns true on success. If more than one minimap is open (see infoPanels, infoPanel) each call to the command will close only 1 minimap. Visibility of minimap can be checked with visibleGPS command.", "example": "player linkItem \"ItemGPS\"; private _success = openGPS true;", "docSyntax": "openGPS open", "syntax": "openGPS open"}, "ropeSegments": {"version": "2.04", "tags": "", "description": "Returns provided rope's segments", "example": "private _segments = ropeSegments _myRope;", "docSyntax": "ropeSegments rope", "syntax": "ropeSegments rope"}, "setCombatBehaviour": {"version": "2.04", "tags": "", "description": "Sets an individual unit behaviour (main syntax) or a whole group behaviour (alternative syntax). To retrieve unit or group behaviour see combatBehaviour. The behaviour is one of:", "example": "unit1 setCombatBehaviour \"SAFE\";", "docSyntax": "unit setCombatBehaviour behaviour", "syntax": "<objUnit> setCombatBehaviour behaviour"}, "setDiarySubjectPicture": {"version": "2.04", "tags": "", "description": "Sets a picture to be displayed on the right of the Diary subject. The picture can also be set during custom Diary subject creation, but this command also allows to change icon for the fixed subjects, like \"Tasks\", \"Diary\", \"Units\", \"Players\" and \"Statistics\".", "example": "player setDiarySubjectPicture [\"Diary\", \"\\A3\\ui_f\\data\\map\\markers\\nato\\o_mech_inf.paa\"];", "docSyntax": "unit setDiarySubjectPicture [subject, picture]", "syntax": "<objUnit> setDiarySubjectPicture [<string>,picture]"}, "setMarkerShadow": {"version": "2.04", "tags": "", "description": "Sets the shadow property of given marker.", "example": "_myMarker setMarkerShadow true; //\u00a0Enable shadow", "docSyntax": "marker setMarkerShadow shadowState", "syntax": "marker setMarkerShadow shadowState"}, "setMarkerShadowLocal": {"version": "2.04", "tags": "", "description": "Sets the shadow property of given marker.", "example": "_myMarker setMarkerShadowLocal true; //\u00a0Enable shadow", "docSyntax": "marker setMarkerShadowLocal shadowState", "syntax": "marker setMarkerShadowLocal shadowState"}, "setWeaponZeroing": {"version": "2.04", "tags": "", "description": "Sets zeroing of given weapon and muzzle for given unit or vehicle.", "example": "player setWeaponZeroing [\"arifle_MX_GL_F\", \"GL_3GL_F\", 8]; //\u00a0Set zeroing for underbarrel grenade launcher to 400 m", "docSyntax": "object setWeaponZeroing [weaponClass, muzzleClass, zeroingIndex]", "syntax": "<object> setWeaponZeroing [weaponClass,muzzleClass,zeroingIndex]"}, "speechVolume": {"version": "2.04", "tags": "", "description": "Returns the current speech volume (set by fadeSpeech)", "example": "hint str speechVolume;", "docSyntax": "speechVolume", "syntax": "speechVolume"}, "taskName": {"version": "2.04", "tags": "", "description": "Returns the name of the given task.", "example": "private _taskName = taskName _mytask;", "docSyntax": "taskName task", "syntax": "<string> <objTask>"}, "values": {"version": "2.04", "tags": "", "description": "Returns all values stored in the given HashMap. The order of the returned Array corresponds to the order of the Array returned by the keys command.", "example": "private _values = values _myHashMap;", "docSyntax": "values hashmap", "syntax": "values hashmap"}, "addUserActionEventHandler": {"version": "2.06", "tags": "", "description": "Adds a user action event handler to the current mission and returns its event handler index.", "example": "private _ehId = addUserActionEventHandler [\"ReloadMagazine\", \"Activate\", { systemChat \"reloading!\"; }];", "docSyntax": "addUserActionEventHandler [keyName, event, expression]", "syntax": "addUserActionEventHandler [keyName,event,expression]"}, "allLODs": {"version": "2.06", "tags": "", "description": "Returns the list of object or model LODs.", "example": "allLODs player; /* [ [0,\"1\",1,91], [1,\"2\",2,91], [2,\"3\",3,84], [3,\"4\",4,43], [4,\"5\",5,34], [5,\"VIEW_PILOT\",1100,89], [6,\"shadow(0)\",10000,80], [7,\"shadow(10)\",10010,33], [8,\"geometry\",1e+013,42], [9,\"memory\",1e+015,55], [10,\"landContact\",2e+015,0], [11,\"hitpoints\",5e+015,33], [12,\"geometryView\",6e+015,19], [13,\"geometryFire\",7e+015,57], [14,\"shadow(1000)\",11000,80], [15,\"shadow(1010)\",11010,33] ] */", "docSyntax": "allLODs objectOrModel", "syntax": "allLODs objectOrModel"}, "allUsers": {"version": "2.06", "tags": "", "description": "Returns a list of player ids of all the users on an MP server.", "example": "Execute on server: private _allUserIDs = allUsers;", "docSyntax": "allUsers", "syntax": "allUsers"}, "ambientTemperature": {"version": "2.06", "tags": "", "description": "Returns ambient temperature on the current terrain in Celsius in format: [airTemperature, blackSurfaceTemperature, whiteSurfaceTemperature]", "example": "private _airTemp = ambientTemperature select 0;", "docSyntax": "ambientTemperature", "syntax": "ambientTemperature"}, "canDeployWeapon": {"version": "2.06", "tags": "", "description": "Returns true if player's weapon can be deployed.", "example": "Execute on server: private _canDeploy = canDeployWeapon player;", "docSyntax": "canDeployWeapon unit", "syntax": "canDeployWeapon <objUnit>"}, "conversationDisabled": {"version": "2.06", "tags": "", "description": "A getter for disableConversation.", "example": "_isConversationDisabled = conversationDisabled soldier1;", "docSyntax": "conversationDisabled unit", "syntax": "conversationDisabled <objUnit>"}, "ctrlBackgroundColor": {"version": "2.06", "tags": "", "description": "Returns control's background color.", "example": "ctrlBackgroundColor _control", "docSyntax": "ctrlBackgroundColor control", "syntax": "ctrlBackgroundColor <uiControl>"}, "ctrlForegroundColor": {"version": "2.06", "tags": "", "description": "Returns control's foreground color.", "example": "ctrlForegroundColor _control", "docSyntax": "ctrlForegroundColor control", "syntax": "ctrlForegroundColor <uiControl>"}, "ctrlMapSetPosition": {"version": "2.06", "tags": "", "description": "Sets position and size of the given map control and recalculates control center. The effect is immediate and no ctrlCommit is necessary, unlike with ctrlSetPosition command.", "example": "_map ctrlMapSetPosition [0,0,1,1];", "docSyntax": "map ctrlMapSetPosition [x, y, w, h]", "syntax": "<objMap> ctrlMapSetPosition [x,y,w,h]"}, "ctrlSetTooltipMaxWidth": {"version": "2.06", "tags": "", "description": "Set maximum width of a control's tooltip.", "example": "private _previousMaxWidth = _myControl ctrlSetTooltipMaxWidth SafeZoneW/2;", "docSyntax": "ctrl ctrlSetTooltipMaxWidth width", "syntax": "<uiControl> ctrlSetTooltipMaxWidth width"}, "diag_setTerrainHeight": {"version": "2.06", "tags": "", "description": "Changes the terrain height of the cell in which given position lies. This command is only available with Arma 3: Diagnostics Exe.", "example": "private _fnc_flattenTerrain = { params [\"_start\", \"_a\", \"_b\", \"_h\"]; for \"_xStep\" from 0 to _a do { for \"_yStep\" from 0 to _b do { _start vectorAdd [_xStep, _yStep, 0] diag_setTerrainHeight _h; }; }; }; [position player, 50, 50, 150] spawn _fnc_flattenTerrain;", "docSyntax": "position diag_setTerrainHeight height", "syntax": "position diag_setTerrainHeight height", "type": "diagnoseStatement"}, "diag_stacktrace": {"version": "2.06", "tags": "", "description": "Returns an array containing the function name, line number, scope name and all local variables in form of a hashmap.", "example": "private _testvar = 1; private _testother = 2; call { _testvar = 3; if (_testvar == 3) then { _myVariable = 4; hint str diag_stacktrace; }; }; /* [ [\"\", 3, \"\", [[\"_this\", []], [\"_testother\", 2], [\"_testvar\", 3]]], [\"\", 6, \"\", []], [\"\", 8, \"\", [[\"_myvariable\", 4]]] ] */", "docSyntax": "diag_stacktrace", "syntax": "diag_stacktrace", "type": "diagnoseStatement"}, "directionStabilizationEnabled": {"version": "2.06", "tags": "", "description": "Get state of direction stabilization. This command returns true if the current optic mode of the selected turret has direction stabilization configured in config (directionStabilized) and if it is also not disabled by enableDirectionStabilization.", "example": "uav directionStabilizationEnabled [0];", "docSyntax": "vehicle directionStabilizationEnabled turretPath", "syntax": "<objVehicle> directionStabilizationEnabled turretPath"}, "displayChild": {"version": "2.06", "tags": "", "description": "Returns child display of the given display.", "example": "_display = displayChild findDisplay 313; // Display #46", "docSyntax": "displayChild display", "syntax": "displayChild <uiDisplay>"}, "enableDirectionStabilization": {"version": "2.06", "tags": "", "description": "Enables / disables direction stabilization of turrets. This command only has an effect if the current optic mode of the selected turret has directionStabilized configured in config.", "example": "uav enableDirectionStabilization [false, [0]]; //\u00a0Disable direction stabilization for the first turret", "docSyntax": "vehicle enableDirectionStabilization [enabled, turretPath]", "syntax": "<objVehicle> enableDirectionStabilization [<bool>,turretPath]"}, "gestureState": {"version": "2.06", "tags": "", "description": "Returns the name of a unit's current gesture. Seems to be forced to lower case in Arma 3.", "example": "_state = gestureState player;", "docSyntax": "gestureState unitName", "syntax": "gestureState <objUnit>"}, "getCruiseControl": {"version": "2.06", "tags": "", "description": "Returns cruise control settings set with setCruiseControl command.", "example": "getCruiseControl vehicle player params [\"_speedLimit\", \"_cruiseControlActive\"];", "docSyntax": "getCruiseControl vehicle", "syntax": "getCruiseControl <objVehicle>"}, "getDebriefingText": {"version": "2.06", "tags": "", "description": "A getter for setDebriefingText. Returns array in format: [text, title] (if old syntax of setDebriefingText was used)) or [text, title, subtitle, picture, background]] (if alt syntax of setDebriefingText was used) or an empty array [] if setDebriefingText was not used.", "example": "_debriefingTexts = getDebriefingText \"endDeath\";", "docSyntax": "getDebriefingText end", "syntax": "getDebriefingText end"}, "getSensorTargets": {"version": "2.06", "tags": "", "description": "Returns vehicle sensors' potential targets.", "example": "private _radarTargets = getSensorTargets vehicle player; /* returns e.g [ [O Alpha 1-3:1, \"air\", \"unknown\", [\"ir\", \"activeradar\", \"visual\"]], [17750112040# 163957: apc_tracked_01_aa_f.p3d, \"ground\", \"unknown\", [\"datalink\"]] ] */", "docSyntax": "getSensorTargets vehicle", "syntax": "getSensorTargets <objVehicle>"}, "getSensorThreats": {"version": "2.06", "tags": "", "description": "Returns vehicle sensors' threats.", "example": "private _dangers = getSensorThreats vehicle player; /* returns e.g [ [164230: titan_missile_atl_fly.p3d, \"missile\", \"visual\"], [164233: titan_missile_atl_fly.p3d, \"threatmissile\", \"radar\"] ] */", "docSyntax": "getSensorThreats vehicle", "syntax": "getSensorThreats <objVehicle>"}, "getTextureInfo": {"version": "2.06", "tags": "", "description": "Return texture information - resolution in pixels and average colour. Multiply the pixel values by pixelW and pixelH to get screen coordinates.", "example": "getTextureInfo \"a3\\characters_f\\blufor\\data\\clothing1_co.paa\"; //\u00a0[2048, 2048, [0.458824, 0.427451, 0.34902, 1]]", "docSyntax": "getTextureInfo texture", "syntax": "getTextureInfo <string>"}, "getUserInfo": {"version": "2.06", "tags": "", "description": "Returns extended information about given server user.", "example": "private _randomUserInfo = getUserInfo selectRandom allUsers;", "docSyntax": "getUserInfo playerID", "syntax": "getUserInfo playerID"}, "hashValue": {"version": "2.06", "tags": "", "description": "Processes provided value's hash, and encodes it using Base64. The hash algorithm is FNV-1A 64bit.", "example": "private _valueHash = hashValue \"Hello There\";", "docSyntax": "hashValue value", "syntax": "hashValue <scalar>"}, "lbSortBy": {"version": "2.06", "tags": "", "description": "Sorts given ListBox by either lbText, lbValue or lbData in normal or reversed order, using case-sensitive or case-insensitive comparison. This command supports UNICODE characters. When sorting by \"VALUE\", the rows with the same lbValue will additionally be sorted by lbText in the order specified by `reversedOrder` flag, text specified by `useTextRight` flag and case-sensitivity specified by `caseSensitive` flag.", "example": "with uiNamespace do { private _lb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListBox\", -1]; _lb ctrlSetPosition [0,0,1,1]; _lb ctrlCommit 0; lbClear _lb; { _lb lbAdd (_x select 0); _lb lbSetValue [_forEachIndex, _x select 1]; } forEach [[\"\u0412\",1], [\"\u042f\",0], [\"\u0411\",1], [\"\u042e\",0], [\"\u0410\",1]]; _lb lbSortBy [\"VALUE\", false, false]; };", "docSyntax": "controlOrIDC lbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]", "syntax": "controlOrIDC lbSortBy [sortByType,reversedOrder,caseSensitive,useTextRight,unicodeOff]"}, "lbTooltip": {"version": "2.06", "tags": "", "description": "Returns tooltip for ListBox, ComboBox and Toolbox", "example": "lbTooltip [1, 1];", "docSyntax": "lbTooltip [idc, index]", "syntax": "lbTooltip [<scalar>,<scalar>]"}, "lnbSortBy": {"version": "2.06", "tags": "", "description": "Sorts given multi-column ListNBox in the given column by either lnbText, lnbValue or lnbData in normal or reversed order, using case-sensitive or case-insensitive comparison. Unlike the older lnbSortXXX commands, this command supports UNICODE characters out of the box.", "example": "with uiNamespace do { private _column = 1; private _lnb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListNBox\", -1]; _lnb ctrlSetPosition [0,0,1,1]; _lnb ctrlCommit 0; lnbClear _lnb; { _lnb lnbAddRow [format [\"Row %1\", _forEachIndex], _x select 0]; _lnb lnbSetValue [[_forEachIndex, _column], _x select 1]; } forEach [[\"\u0412\",1], [\"\u042f\",0], [\"\u0411\",1], [\"\u042e\",0], [\"\u0410\",1]]; [_lnb, _column] lnbSortBy [\"VALUE\", true, false]; };", "docSyntax": "[controlOrIDC, column] lnbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]", "syntax": "[controlOrIDC,<scalar>] lnbSortBy [sortByType,reversedOrder,caseSensitive,useTextRight,unicodeOff]"}, "missionEnd": {"version": "2.06", "tags": "", "description": "Returns mission end type and how it was ended or an empty array [] is mission was not ended.", "example": "private _misssionEnd = missionEnd;", "docSyntax": "missionEnd", "syntax": "missionEnd"}, "radioEnabled": {"version": "2.06", "tags": "", "description": "A getter for enableRadio.", "example": "_isRadioEnabled = radioEnabled;", "docSyntax": "radioEnabled", "syntax": "radioEnabled"}, "regexFind": {"version": "2.06", "tags": "", "description": "Searches in a string with a regular expression.", "example": "\"wooKie boOkie cookie\" regexFind [\".ookie/gio\"]; //\u00a0[[[\"wooKie\", 0]], [[\"boOkie\", 7]], [[\"cookie\", 14]]]", "docSyntax": "haystack regexFind [pattern, startOffset]", "syntax": "haystack regexFind [pattern,startOffset]"}, "regexMatch": {"version": "2.06", "tags": "", "description": "Returns whether the haystack matches the pattern.", "example": "\"I'm a coOkIe clicker\" regexMatch \".*cookie.*\"; //\u00a0true", "docSyntax": "haystack regexMatch pattern", "syntax": "haystack regexMatch pattern"}, "regexReplace": {"version": "2.06", "tags": "", "description": "Searches given haystack with given pattern and replaces all matches with given replaceString.", "example": "\"wookie boOkie cookie\" regexReplace [\".oo/gio\", \"[$']\"]; //\u00a0\"[kie boOkie cookie]kie [kie cookie]kie [kie]kie\"", "docSyntax": "haystack regexReplace [pattern, replace string]", "syntax": "haystack regexReplace [pattern,replace <string>]"}, "removeAllUserActionEventHandlers": {"version": "2.06", "tags": "", "description": "Removes all UserAction event handlers of the given type which were added by addUserActionEventHandler.", "example": "removeAllMissionEventHandlers [\"Reload\", \"Activate\"];", "docSyntax": "removeAllUserActionEventHandlers [keyName, eventType]", "syntax": "removeAllUserActionEventHandlers [keyName,eventType]"}, "removeUserActionEventHandler": {"version": "2.06", "tags": "", "description": "Removes a UserAction event handler. For a list of available UserAction event handlers, see: Arma 3: Mission Event Handlers.", "example": "removeUserActionEventHandler [\"Reload\", \"Activate\", _reloadUAEH];", "docSyntax": "removeUserActionEventHandler [keyName, event, index]", "syntax": "removeUserActionEventHandler [keyName,event,<scalar>]"}, "selectionVectorDirAndUp": {"version": "2.06", "tags": "", "description": "Searches for selection in the object model's LOD level, and returns the Direction and Up vectors in model space.", "docSyntax": "object selectionVectorDirAndUp [selectionName, LOD]", "syntax": "<object> selectionVectorDirAndUp [selectionName,LOD]"}, "sentencesEnabled": {"version": "2.06", "tags": "", "description": "A getter for enableSentences.", "example": "_areSentencesEnabled = sentencesEnabled;", "docSyntax": "sentencesEnabled", "syntax": "sentencesEnabled"}, "serverNamespace": {"version": "2.06", "tags": "", "description": "Returns server's namespace. This namespace is only available on the server for the server's uptime duration (same as uiNamespace). Server event handlers, which are available in server config, all use this namespace.", "example": "private _serverVars = allVariables serverNamespace;", "docSyntax": "serverNamespace", "syntax": "serverNamespace"}, "setCruiseControl": {"version": "2.06", "tags": "", "description": "Limits or sets local player-controlled vehicle's speed through cruise control.", "example": "vehicle player setCruiseControl [50, true]; //\u00a0sets cruise control to 50 km/h", "docSyntax": "vehicle setCruiseControl [speed, autoThrust]", "syntax": "<objVehicle> setCruiseControl [<scalar>,autoThrust]"}, "setLightConePars": {"version": "2.06", "tags": "", "description": "Sets the lightpoint (directional light #lightreflector)'s cone params.", "example": "_light setLightConePars [90, 45, 1];", "docSyntax": "lightReflector setLightConePars [outerAngle, innerAngle, fadeCoef]", "syntax": "lightReflector setLightConePars [outerAngle,innerAngle,fadeCoef]"}, "setLightIR": {"version": "2.06", "tags": "", "description": "Sets lightpoint in infrared range.", "example": "myLight setLightIR true; //\u00a0Visible with NVG only!", "docSyntax": "light setLightIR value", "syntax": "light setLightIR <scalar>"}, "setLightVolumeShape": {"version": "2.06", "tags": "", "description": "Sets the lightpoint (directional light #lightreflector)'s volume shape.", "example": "_light setLightVolumeShape [\"a3\\data_f\\VolumeLightFlashlight.p3d\", [1, 1, 1]];", "docSyntax": "lightReflector setLightVolumeShape [shapePath, scale]", "syntax": "lightReflector setLightVolumeShape [shapePath,<scalar>]"}, "setTowParent": {"version": "2.06", "tags": "", "description": "Allows towedVehicle to be towed by towingVehicle. This loosens the vehicle brakes of the towedVehicle and turned its steering wheels toward the towingVehicle. Supposed to be used together with a rope connecting both vehicles.", "example": "{ moveOut _x; } forEach crew _towedVehicle; //\u00a0Make sure nobody is in the towed vehicle _towedVehicle lock true; _towedVehicle setTowParent _bobcat;", "docSyntax": "towedVehicle setTowParent towingVehicle", "syntax": "towedVehicle setTowParent towingVehicle"}, "shownSubtitles": {"version": "2.06", "tags": "", "description": "A getter for showSubtitles.", "example": "_setToShow = shownSubtitles;", "docSyntax": "shownSubtitles", "syntax": "shownSubtitles"}, "uniqueUnitItems": {"version": "2.06", "tags": "", "description": "Returns hashmap of all items in units inventory as [classname, count] pairs.", "example": "private _unitUniqueItems = uniqueUnitItems [player, 0, 2, 2, 2, true]; if (_unitUniqueItems getOrDefault [\"FirstAidKit\", 0] > 5) then { hint \"I'm rich of FAK to give!\"; };", "docSyntax": "uniqueUnitItems unit", "syntax": "uniqueUnitItems <objUnit>"}, "weaponReloadingTime": {"version": "2.06", "tags": "", "description": "Returns current ammo round reloading phase. For a magazine reloading phase see weaponState command.", "docSyntax": "vehicle weaponReloadingTime [gunner, muzzleName]", "syntax": "<objVehicle> weaponReloadingTime [gunner,muzzleName]"}, "allEnv3DSoundSources": {"version": "2.08", "tags": "", "description": "Returns all environmental 3D sound sources (Objects) like trees and houses in camera vicinity.", "example": "_sources = allEnv3DSoundSources;", "docSyntax": "allEnv3DSoundSources", "syntax": "allEnv3DSoundSources"}, "awake": {"version": "2.08", "tags": "", "description": "Wakes up sleeping PhysX object or puts a PhysX object to sleep.", "example": "_object awake false;", "docSyntax": "object awake awake", "syntax": "<object> awake awake"}, "brakesDisabled": {"version": "2.08", "tags": "", "description": "Returns the status of autobrake (see disableBrakes)", "example": "_autobrakeDisabled = disableBrakes mycar;", "docSyntax": "brakesDisabled transport", "syntax": "brakesDisabled transport"}, "collisionDisabledWith": {"version": "2.08", "tags": "", "description": "Returns the object, given object has collision disabled with and whether or not returned object has also collision disabled with given object.", "example": "_collisionInfo = collisionDisabledWith _tank;", "docSyntax": "collisionDisabledWith object1", "syntax": "collisionDisabledWith object1"}, "ctrlMapPosition": {"version": "2.08", "tags": "", "description": "A getter for ctrlMapSetPosition. Returns map position in format [x, y, w, h]. If map is inside a Controls Group, the x and y position is relative to the Controls Group top left corner.", "example": "ctrlMapPosition _map;", "docSyntax": "ctrlMapPosition map", "syntax": "ctrlMapPosition <objMap>"}, "disableBrakes": {"version": "2.08", "tags": "", "description": "Disables autobrake, which is engaged when vehicle is stationary and stops wheels from rotating freely when vehicle is pushed.", "example": "mycar disableBrakes true;", "docSyntax": "transport disableBrakes disable", "syntax": "transport disableBrakes disable"}, "drawLaser": {"version": "2.08", "tags": "", "description": "Draws a laserbeam and a lightpoint at the impact location of the laser.", "example": "Give the player a laser eye: addMissionEventHandler [\"Draw3D\", { drawLaser [ eyePos player vectorAdd [0, 0, 0.1], getCameraViewDirection player, [1000, 0, 0], //\u00a0Bright red [], 5, 20, -1, false ]; }];", "docSyntax": "drawLaser [position, direction, beamColor, dotColor, dotSize, beamThickness, beamMaxLength, isIR]", "syntax": "drawLaser [position,direction,beamColor,dotColor,dotSize,beamThickness,beamMaxLength,isIR]"}, "getAllEnv3DSoundControllers": {"version": "2.08", "tags": "", "description": "Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds.", "example": "getAllEnv3DSoundControllers _thatTreeOverThere; /* returns e.g [ [\"rain\",0], [\"night\",0], [\"wind\",0.161588], ... ] */", "docSyntax": "getAllEnv3DSoundControllers object", "syntax": "getAllEnv3DSoundControllers <object>"}, "getConnectedUAVUnit": {"version": "2.08", "tags": "", "description": "Returns UAV/UGV AI unit, which player is controlling. To return UAV vehicle, see getConnectedUAV", "example": "getConnectedUAVUnit player;", "docSyntax": "getConnectedUAVUnit person", "syntax": "getConnectedUAVUnit <objUnit>"}, "getEnv3DSoundController": {"version": "2.08", "tags": "", "description": "Returns value of the specified 3D controller, see getAllEnv3DSoundControllers", "example": "_thatTreeOverThere getEnv3DSoundController \"rainDrops\"; //1", "docSyntax": "object getEnv3DSoundController controller", "syntax": "<object> getEnv3DSoundController controller"}, "getPiPViewDistance": {"version": "2.08", "tags": "", "description": "Get the set PiP (Picture-in-Picture) view distance (that can be set by setPiPViewDistance).", "example": "private _pipViewDistance = getPiPViewDistance;", "docSyntax": "getPiPViewDistance", "syntax": "getPiPViewDistance"}, "inputController": {"version": "2.08", "tags": "", "description": "Returns the state of controller inputs. The controller is a standard XBOX controller which is selected with Windows XBOX controller scheme. The input could be:", "example": "State of the fire trigger:onEachFrame { hintSilent str inputController 13 };", "docSyntax": "inputController input", "syntax": "inputController input"}, "inputMouse": {"version": "2.08", "tags": "", "description": "Returns the state of mouse button action, alone or in combination with key presses. For more information on codes and combos see Arma_3:_Modded_Keybinding and DIK_KeyCodes but here are some examples of how codes could be hand constructed:", "example": "State of the RMB:onEachFrame { hintSilent str inputMouse 1 };", "docSyntax": "inputMouse button", "syntax": "inputMouse button"}, "isAllowedCrewInImmobile": {"version": "2.08", "tags": "", "description": "Whether or not units can be in a vehicle with broken tracks/wheels.", "example": "_allowed = isAllowedCrewInImmobile _tank;", "docSyntax": "isAllowedCrewInImmobile vehicle", "syntax": "isAllowedCrewInImmobile <objVehicle>"}, "isAwake": {"version": "2.08", "tags": "", "description": "Returns resting state of a PhysX object. If object of class Man is used for the argument, the command returns false if ragdoll simulation is active and true if there is no ragdoll simulation. Destroyed and null objects return false.", "example": "_isAwake = isAwake _object;", "docSyntax": "isAwake object", "syntax": "isAwake <object>"}, "isSaving": {"version": "2.08", "tags": "", "description": "Returns the status of autosave request, made when saveGame command is executed. When request is made, the command immediately returns true. The engine then handles the saving and when it is done, the command returns false.", "example": "[] spawn { saveGame; waitUntil {\u00a0!isSaving }; systemChat \"Game Saving Is Done!\"; };", "docSyntax": "isSaving", "syntax": "isSaving"}, "lockedCameraTo": {"version": "2.08", "tags": "", "description": "Return the turret lock target.", "example": "vehicle player lockedCameraTo [];", "docSyntax": "vehicle lockedCameraTo turretPath", "syntax": "<objVehicle> lockedCameraTo turretPath"}, "maxLoad": {"version": "2.08", "tags": "", "description": "Returns maximum load limit for a unit, uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders.", "example": "_maxLoad = maxLoad _yaMum;", "docSyntax": "maxLoad container", "syntax": "maxLoad container"}, "pose": {"version": "2.08", "tags": "", "description": "Returns the pose of the given unit. It can be one of:", "example": "if (pose player == \"SurfaceSwimming\") then {hint \"How's water?\"};", "docSyntax": "pose unit", "syntax": "pose <objUnit>"}, "rainParams": {"version": "2.08", "tags": "", "description": "Returns currently set RainParticles params, custom or default.", "example": "_rainParams = rainParams;", "docSyntax": "rainParams", "syntax": "rainParams"}, "setHumidity": {"version": "2.08", "tags": "", "description": "Sets surface humidity. Affects how footsteps sound (dry / wet). humidity is increasing when raining and decreasing when not raining. Exception is if the rain is set with 'snow' flag, then humidity is not updated.", "example": "setHumidity 1;", "docSyntax": "setHumidity humidity", "syntax": "setHumidity humidity"}, "setMaxLoad": {"version": "2.08", "tags": "", "description": "Sets maximum load limit for a uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders. In MP this command should be executed on the server and will persist on given container for JIP", "example": "_yaMum setMaxLoad _maxLoad;", "docSyntax": "container setMaxLoad maxLoadValue", "syntax": "container setMaxLoad maxLoadValue"}, "setPiPViewDistance": {"version": "2.08", "tags": "", "description": "Set the PiP (Picture-in-Picture) view distance. This has no impact if PiP is disabled (see isPiPEnabled).", "example": "setPiPViewDistance 100;", "docSyntax": "setPiPViewDistance distance", "syntax": "setPiPViewDistance <scalar>"}}